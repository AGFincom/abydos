# -*- coding: utf-8 -*-

from __future__ import unicode_literals
import unittest
from abydos.phonetic import *

class DoubleMetaphoneTestCase(unittest.TestCase):
    """These test cases are copied from
    https://github.com/oubiwann/metaphone/blob/master/metaphone/tests/test_metaphone.py
    and
    http://swoodbridge.com/DoubleMetaPhone/surnames.txt
    """
    def test_single_result(self):
        result = double_metaphone(u"aubrey")
        self.assertEquals(result, ('APR', ''))
        
    def test_double_result(self):
        result = double_metaphone(u"richard")
        self.assertEquals(result, ('RXRT', 'RKRT'))

    def test_general_word_list(self):
        result = double_metaphone('Jose')
        self.assertEquals(result, ('HS', ''))
        result = double_metaphone('cambrillo')
        self.assertEquals(result, ('KMPRL', 'KMPR'))
        result = double_metaphone('otto')
        self.assertEquals(result, ('AT', ''))
        result = double_metaphone('aubrey')
        self.assertEquals(result, ('APR', ''))
        result = double_metaphone('maurice')
        self.assertEquals(result, ('MRS', ''))
        result = double_metaphone('auto')
        self.assertEquals(result, ('AT', ''))
        result = double_metaphone('maisey')
        self.assertEquals(result, ('MS', ''))
        result = double_metaphone('catherine')
        self.assertEquals(result, ('K0RN', 'KTRN'))
        result = double_metaphone('geoff')
        self.assertEquals(result, ('JF', 'KF'))
        result = double_metaphone('Chile')
        self.assertEquals(result, ('XL', ''))
        result = double_metaphone('katherine')
        self.assertEquals(result, ('K0RN', 'KTRN'))
        result = double_metaphone('steven')
        self.assertEquals(result, ('STFN', ''))
        result = double_metaphone('zhang')
        self.assertEquals(result, ('JNK', ''))
        result = double_metaphone('bob')
        self.assertEquals(result, ('PP', ''))
        result = double_metaphone('ray')
        self.assertEquals(result, ('R', ''))
        result = double_metaphone('Tux')
        self.assertEquals(result, ('TKS', ''))
        result = double_metaphone('bryan')
        self.assertEquals(result, ('PRN', ''))
        result = double_metaphone('bryce')
        self.assertEquals(result, ('PRS', ''))
        result = double_metaphone('Rapelje')
        self.assertEquals(result, ('RPL', ''))
        result = double_metaphone('richard')
        self.assertEquals(result, ('RXRT', 'RKRT'))
        result = double_metaphone('solilijs')
        self.assertEquals(result, ('SLLS', ''))
        result = double_metaphone('Dallas')
        self.assertEquals(result, ('TLS', ''))
        result = double_metaphone('Schwein')
        self.assertEquals(result, ('XN', 'XFN'))
        result = double_metaphone('dave')
        self.assertEquals(result, ('TF', ''))
        result = double_metaphone('eric')
        self.assertEquals(result, ('ARK', ''))
        result = double_metaphone('Parachute')
        self.assertEquals(result, ('PRKT', ''))
        result = double_metaphone('brian')
        self.assertEquals(result, ('PRN', ''))
        result = double_metaphone('randy')
        self.assertEquals(result, ('RNT', ''))
        result = double_metaphone('Through')
        self.assertEquals(result, ('0R', 'TR'))
        result = double_metaphone('Nowhere')
        self.assertEquals(result, ('NR', ''))
        result = double_metaphone('heidi')
        self.assertEquals(result, ('HT', ''))
        result = double_metaphone('Arnow')
        self.assertEquals(result, ('ARN', 'ARNF'))
        result = double_metaphone('Thumbail')
        self.assertEquals(result, ('0MPL', 'TMPL'))

    def test_homophones(self):
        self.assertEqual(
            double_metaphone(u"tolled"),
            double_metaphone(u"told"))
        self.assertEqual(
            double_metaphone(u"katherine"),
            double_metaphone(u"catherine"))
        self.assertEqual(
            double_metaphone(u"brian"),
            double_metaphone(u"bryan"))

    def test_similar_names(self):
        result = double_metaphone("Bartoš")
        self.assertEquals(result, ('PRT', ''))
        result = double_metaphone(u"Bartosz")
        self.assertEquals(result, ('PRTS', 'PRTX'))
        result = double_metaphone(u"Bartosch")
        self.assertEquals(result, ('PRTX', ''))
        result = double_metaphone(u"Bartos")
        self.assertEquals(result, ('PRTS', ''))

        result = set(double_metaphone(u"Jablonski")).intersection(
            double_metaphone(u"Yablonsky"))
        self.assertEquals(list(result), ['APLNSK'])
        result = set(double_metaphone(u"Smith")).intersection(
            double_metaphone(u"Schmidt"))
        self.assertEquals(list(result), ['XMT'])

    def test_non_english_unicode(self):
        result = double_metaphone("andestādītu")
        self.assertEquals(result, ('ANTSTTT', ''))

    def test_c_cedilla(self):
        result = double_metaphone("français")
        self.assertEquals(result, ('FRNS', 'FRNSS'))
        result = double_metaphone("garçon")
        self.assertEquals(result, ('KRSN', ''))
        result = double_metaphone("leçon")
        self.assertEquals(result, ('LSN', ''))

    def test_various_german(self):
        result = double_metaphone("ach")
        self.assertEquals(result, ("AK", ""))
        result = double_metaphone("bacher")
        self.assertEquals(result, ("PKR", ""))
        result = double_metaphone("macher")
        self.assertEquals(result, ("MKR", ""))

    def test_various_italian(self):
        result = double_metaphone("bacci")
        self.assertEquals(result, ("PX", ""))
        result = double_metaphone("bertucci")
        self.assertEquals(result, ("PRTX", ""))
        result = double_metaphone("bellocchio")
        self.assertEquals(result, ("PLX", ""))
        result = double_metaphone("bacchus")
        self.assertEquals(result, ("PKS", ""))
        result = double_metaphone("focaccia")
        self.assertEquals(result, ("FKX", ""))
        result = double_metaphone("chianti")
        self.assertEquals(result, ("KNT", ""))
        result = double_metaphone("tagliaro")
        self.assertEquals(result, ("TKLR", "TLR"))
        result = double_metaphone("biaggi")
        self.assertEquals(result, ("PJ", "PK"))

    def test_various_spanish(self):
        result = double_metaphone("bajador")
        self.assertEquals(result, ("PJTR", "PHTR"))
        result = double_metaphone("cabrillo")
        self.assertEquals(result, ("KPRL", "KPR"))
        result = double_metaphone("gallegos")
        self.assertEquals(result, ("KLKS", "KKS"))
        result = double_metaphone("San Jacinto")
        self.assertEquals(result, ("SNHSNT", ""))

    def test_various_french(self):
        result = double_metaphone("rogier")
        self.assertEquals(result, ("RJ", "RJR"))
        result = double_metaphone("breaux")
        self.assertEquals(result, ("PR", ""))

    def test_various_slavic(self):
        result = double_metaphone("Wewski")
        self.assertEquals(result, ("ASK", "FFSK"))

    def test_various_chinese(self):
        result = double_metaphone("zhao")
        self.assertEquals(result, ("J", ""))

    def test_dutch_origin(self):
        result = double_metaphone("school")
        self.assertEquals(result, ("SKL", ""))
        result = double_metaphone("schooner")
        self.assertEquals(result, ("SKNR", ""))
        result = double_metaphone("schermerhorn")
        self.assertEquals(result, ("XRMRRN", "SKRMRRN"))
        result = double_metaphone("schenker")
        self.assertEquals(result, ("XNKR", "SKNKR"))

    def test_ch_words(self):
        result = double_metaphone("Charac")
        self.assertEquals(result, ("KRK", ""))
        result = double_metaphone("Charis")
        self.assertEquals(result, ("KRS", ""))
        result = double_metaphone("chord")
        self.assertEquals(result, ("KRT", ""))
        result = double_metaphone("Chym")
        self.assertEquals(result, ("KM", ""))
        result = double_metaphone("Chia")
        self.assertEquals(result, ("K", ""))
        result = double_metaphone("chem")
        self.assertEquals(result, ("KM", ""))
        result = double_metaphone("chore")
        self.assertEquals(result, ("XR", ""))
        result = double_metaphone("orchestra")
        self.assertEquals(result, ("ARKSTR", ""))
        result = double_metaphone("architect")
        self.assertEquals(result, ("ARKTKT", ""))
        result = double_metaphone("orchid")
        self.assertEquals(result, ("ARKT", ""))

    def test_cc_words(self):
        result = double_metaphone("accident")
        self.assertEquals(result, ("AKSTNT", ""))
        result = double_metaphone("accede")
        self.assertEquals(result, ("AKST", ""))
        result = double_metaphone("succeed")
        self.assertEquals(result, ("SKST", ""))

    def test_mc_words(self):
        result = double_metaphone("mac caffrey")
        self.assertEquals(result, ("MKFR", ""))
        result = double_metaphone("mac gregor")
        self.assertEquals(result, ("MKRKR", ""))
        result = double_metaphone("mc crae")
        self.assertEquals(result, ("MKR", ""))
        result = double_metaphone("mcclain")
        self.assertEquals(result, ("MKLN", ""))

    def test_gh_words(self):
        result = double_metaphone("laugh")
        self.assertEquals(result, ("LF", ""))
        result = double_metaphone("cough")
        self.assertEquals(result, ("KF", ""))
        result = double_metaphone("rough")
        self.assertEquals(result, ("RF", ""))

    def test_g3_words(self):
        result = double_metaphone("gya")
        self.assertEquals(result, ("K", "J"))
        result = double_metaphone("ges")
        self.assertEquals(result, ("KS", "JS"))
        result = double_metaphone("gep")
        self.assertEquals(result, ("KP", "JP"))
        result = double_metaphone("geb")
        self.assertEquals(result, ("KP", "JP"))
        result = double_metaphone("gel")
        self.assertEquals(result, ("KL", "JL"))
        result = double_metaphone("gey")
        self.assertEquals(result, ("K", "J"))
        result = double_metaphone("gib")
        self.assertEquals(result, ("KP", "JP"))
        result = double_metaphone("gil")
        self.assertEquals(result, ("KL", "JL"))
        result = double_metaphone("gin")
        self.assertEquals(result, ("KN", "JN"))
        result = double_metaphone("gie")
        self.assertEquals(result, ("K", "J"))
        result = double_metaphone("gei")
        self.assertEquals(result, ("K", "J"))
        result = double_metaphone("ger")
        self.assertEquals(result, ("KR", "JR"))
        result = double_metaphone("danger")
        self.assertEquals(result, ("TNJR", "TNKR"))
        result = double_metaphone("manager")
        self.assertEquals(result, ("MNKR", "MNJR"))
        result = double_metaphone("dowager")
        self.assertEquals(result, ("TKR", "TJR"))

    def test_pb_words(self):
        result = double_metaphone("Campbell")
        self.assertEquals(result, ("KMPL", ""))
        result = double_metaphone("raspberry")
        self.assertEquals(result, ("RSPR", ""))

    def test_th_words(self):
        result = double_metaphone("Thomas")
        self.assertEquals(result, ("TMS", ""))
        result = double_metaphone("Thames")
        self.assertEquals(result, ("TMS", ""))

    def test_surnames(self):
        result = double_metaphone("")
        self.assertEquals(result, ("", ""))
        result = double_metaphone("ALLERTON")
        self.assertEquals(result, ("ALRT", "ALRT"))
        result = double_metaphone("Acton")
        self.assertEquals(result, ("AKTN", "AKTN"))
        result = double_metaphone("Adams")
        self.assertEquals(result, ("ATMS", "ATMS"))
        result = double_metaphone("Aggar")
        self.assertEquals(result, ("AKR", "AKR"))
        result = double_metaphone("Ahl")
        self.assertEquals(result, ("AL", "AL"))
        result = double_metaphone("Aiken")
        self.assertEquals(result, ("AKN", "AKN"))
        result = double_metaphone("Alan")
        self.assertEquals(result, ("ALN", "ALN"))
        result = double_metaphone("Alcock")
        self.assertEquals(result, ("ALKK", "ALKK"))
        result = double_metaphone("Alden")
        self.assertEquals(result, ("ALTN", "ALTN"))
        result = double_metaphone("Aldham")
        self.assertEquals(result, ("ALTM", "ALTM"))
        result = double_metaphone("Allen")
        self.assertEquals(result, ("ALN", "ALN"))
        result = double_metaphone("Allerton")
        self.assertEquals(result, ("ALRT", "ALRT"))
        result = double_metaphone("Alsop")
        self.assertEquals(result, ("ALSP", "ALSP"))
        result = double_metaphone("Alwein")
        self.assertEquals(result, ("ALN", "ALN"))
        result = double_metaphone("Ambler")
        self.assertEquals(result, ("AMPL", "AMPL"))
        result = double_metaphone("Andevill")
        self.assertEquals(result, ("ANTF", "ANTF"))
        result = double_metaphone("Andrews")
        self.assertEquals(result, ("ANTR", "ANTR"))
        result = double_metaphone("Andreyco")
        self.assertEquals(result, ("ANTR", "ANTR"))
        result = double_metaphone("Andriesse")
        self.assertEquals(result, ("ANTR", "ANTR"))
        result = double_metaphone("Angier")
        self.assertEquals(result, ("ANJ", "ANJR"))
        result = double_metaphone("Annabel")
        self.assertEquals(result, ("ANPL", "ANPL"))
        result = double_metaphone("Anne")
        self.assertEquals(result, ("AN", "AN"))
        result = double_metaphone("Anstye")
        self.assertEquals(result, ("ANST", "ANST"))
        result = double_metaphone("Appling")
        self.assertEquals(result, ("APLN", "APLN"))
        result = double_metaphone("Apuke")
        self.assertEquals(result, ("APK", "APK"))
        result = double_metaphone("Arnold")
        self.assertEquals(result, ("ARNL", "ARNL"))
        result = double_metaphone("Ashby")
        self.assertEquals(result, ("AXP", "AXP"))
        result = double_metaphone("Astwood")
        self.assertEquals(result, ("ASTT", "ASTT"))
        result = double_metaphone("Atkinson")
        self.assertEquals(result, ("ATKN", "ATKN"))
        result = double_metaphone("Audley")
        self.assertEquals(result, ("ATL", "ATL"))
        result = double_metaphone("Austin")
        self.assertEquals(result, ("ASTN", "ASTN"))
        result = double_metaphone("Avenal")
        self.assertEquals(result, ("AFNL", "AFNL"))
        result = double_metaphone("Ayer")
        self.assertEquals(result, ("AR", "AR"))
        result = double_metaphone("Ayot")
        self.assertEquals(result, ("AT", "AT"))
        result = double_metaphone("Babbitt")
        self.assertEquals(result, ("PPT", "PPT"))
        result = double_metaphone("Bachelor")
        self.assertEquals(result, ("PXLR", "PKLR"))
        result = double_metaphone("Bachelour")
        self.assertEquals(result, ("PXLR", "PKLR"))
        result = double_metaphone("Bailey")
        self.assertEquals(result, ("PL", "PL"))
        result = double_metaphone("Baivel")
        self.assertEquals(result, ("PFL", "PFL"))
        result = double_metaphone("Baker")
        self.assertEquals(result, ("PKR", "PKR"))
        result = double_metaphone("Baldwin")
        self.assertEquals(result, ("PLTN", "PLTN"))
        result = double_metaphone("Balsley")
        self.assertEquals(result, ("PLSL", "PLSL"))
        result = double_metaphone("Barber")
        self.assertEquals(result, ("PRPR", "PRPR"))
        result = double_metaphone("Barker")
        self.assertEquals(result, ("PRKR", "PRKR"))
        result = double_metaphone("Barlow")
        self.assertEquals(result, ("PRL", "PRLF"))
        result = double_metaphone("Barnard")
        self.assertEquals(result, ("PRNR", "PRNR"))
        result = double_metaphone("Barnes")
        self.assertEquals(result, ("PRNS", "PRNS"))
        result = double_metaphone("Barnsley")
        self.assertEquals(result, ("PRNS", "PRNS"))
        result = double_metaphone("Barouxis")
        self.assertEquals(result, ("PRKS", "PRKS"))
        result = double_metaphone("Bartlet")
        self.assertEquals(result, ("PRTL", "PRTL"))
        result = double_metaphone("Basley")
        self.assertEquals(result, ("PSL", "PSL"))
        result = double_metaphone("Basset")
        self.assertEquals(result, ("PST", "PST"))
        result = double_metaphone("Bassett")
        self.assertEquals(result, ("PST", "PST"))
        result = double_metaphone("Batchlor")
        self.assertEquals(result, ("PXLR", "PXLR"))
        result = double_metaphone("Bates")
        self.assertEquals(result, ("PTS", "PTS"))
        result = double_metaphone("Batson")
        self.assertEquals(result, ("PTSN", "PTSN"))
        result = double_metaphone("Bayes")
        self.assertEquals(result, ("PS", "PS"))
        result = double_metaphone("Bayley")
        self.assertEquals(result, ("PL", "PL"))
        result = double_metaphone("Beale")
        self.assertEquals(result, ("PL", "PL"))
        result = double_metaphone("Beauchamp")
        self.assertEquals(result, ("PXMP", "PKMP"))
        result = double_metaphone("Beauclerc")
        self.assertEquals(result, ("PKLR", "PKLR"))
        result = double_metaphone("Beech")
        self.assertEquals(result, ("PK", "PK"))
        result = double_metaphone("Beers")
        self.assertEquals(result, ("PRS", "PRS"))
        result = double_metaphone("Beke")
        self.assertEquals(result, ("PK", "PK"))
        result = double_metaphone("Belcher")
        self.assertEquals(result, ("PLXR", "PLKR"))
        result = double_metaphone("Benjamin")
        self.assertEquals(result, ("PNJM", "PNJM"))
        result = double_metaphone("Benningham")
        self.assertEquals(result, ("PNNK", "PNNK"))
        result = double_metaphone("Bereford")
        self.assertEquals(result, ("PRFR", "PRFR"))
        result = double_metaphone("Bergen")
        self.assertEquals(result, ("PRJN", "PRKN"))
        result = double_metaphone("Berkeley")
        self.assertEquals(result, ("PRKL", "PRKL"))
        result = double_metaphone("Berry")
        self.assertEquals(result, ("PR", "PR"))
        result = double_metaphone("Besse")
        self.assertEquals(result, ("PS", "PS"))
        result = double_metaphone("Bessey")
        self.assertEquals(result, ("PS", "PS"))
        result = double_metaphone("Bessiles")
        self.assertEquals(result, ("PSLS", "PSLS"))
        result = double_metaphone("Bigelow")
        self.assertEquals(result, ("PJL", "PKLF"))
        result = double_metaphone("Bigg")
        self.assertEquals(result, ("PK", "PK"))
        result = double_metaphone("Bigod")
        self.assertEquals(result, ("PKT", "PKT"))
        result = double_metaphone("Billings")
        self.assertEquals(result, ("PLNK", "PLNK"))
        result = double_metaphone("Bimper")
        self.assertEquals(result, ("PMPR", "PMPR"))
        result = double_metaphone("Binker")
        self.assertEquals(result, ("PNKR", "PNKR"))
        result = double_metaphone("Birdsill")
        self.assertEquals(result, ("PRTS", "PRTS"))
        result = double_metaphone("Bishop")
        self.assertEquals(result, ("PXP", "PXP"))
        result = double_metaphone("Black")
        self.assertEquals(result, ("PLK", "PLK"))
        result = double_metaphone("Blagge")
        self.assertEquals(result, ("PLK", "PLK"))
        result = double_metaphone("Blake")
        self.assertEquals(result, ("PLK", "PLK"))
        result = double_metaphone("Blanck")
        self.assertEquals(result, ("PLNK", "PLNK"))
        result = double_metaphone("Bledsoe")
        self.assertEquals(result, ("PLTS", "PLTS"))
        result = double_metaphone("Blennerhasset")
        self.assertEquals(result, ("PLNR", "PLNR"))
        result = double_metaphone("Blessing")
        self.assertEquals(result, ("PLSN", "PLSN"))
        result = double_metaphone("Blewett")
        self.assertEquals(result, ("PLT", "PLT"))
        result = double_metaphone("Bloctgoed")
        self.assertEquals(result, ("PLKT", "PLKT"))
        result = double_metaphone("Bloetgoet")
        self.assertEquals(result, ("PLTK", "PLTK"))
        result = double_metaphone("Bloodgood")
        self.assertEquals(result, ("PLTK", "PLTK"))
        result = double_metaphone("Blossom")
        self.assertEquals(result, ("PLSM", "PLSM"))
        result = double_metaphone("Blount")
        self.assertEquals(result, ("PLNT", "PLNT"))
        result = double_metaphone("Bodine")
        self.assertEquals(result, ("PTN", "PTN"))
        result = double_metaphone("Bodman")
        self.assertEquals(result, ("PTMN", "PTMN"))
        result = double_metaphone("BonCoeur")
        self.assertEquals(result, ("PNKR", "PNKR"))
        result = double_metaphone("Bond")
        self.assertEquals(result, ("PNT", "PNT"))
        result = double_metaphone("Boscawen")
        self.assertEquals(result, ("PSKN", "PSKN"))
        result = double_metaphone("Bosworth")
        self.assertEquals(result, ("PSR0", "PSRT"))
        result = double_metaphone("Bouchier")
        self.assertEquals(result, ("PX", "PKR"))
        result = double_metaphone("Bowne")
        self.assertEquals(result, ("PN", "PN"))
        result = double_metaphone("Bradbury")
        self.assertEquals(result, ("PRTP", "PRTP"))
        result = double_metaphone("Bradder")
        self.assertEquals(result, ("PRTR", "PRTR"))
        result = double_metaphone("Bradford")
        self.assertEquals(result, ("PRTF", "PRTF"))
        result = double_metaphone("Bradstreet")
        self.assertEquals(result, ("PRTS", "PRTS"))
        result = double_metaphone("Braham")
        self.assertEquals(result, ("PRHM", "PRHM"))
        result = double_metaphone("Brailsford")
        self.assertEquals(result, ("PRLS", "PRLS"))
        result = double_metaphone("Brainard")
        self.assertEquals(result, ("PRNR", "PRNR"))
        result = double_metaphone("Brandish")
        self.assertEquals(result, ("PRNT", "PRNT"))
        result = double_metaphone("Braun")
        self.assertEquals(result, ("PRN", "PRN"))
        result = double_metaphone("Brecc")
        self.assertEquals(result, ("PRK", "PRK"))
        result = double_metaphone("Brent")
        self.assertEquals(result, ("PRNT", "PRNT"))
        result = double_metaphone("Brenton")
        self.assertEquals(result, ("PRNT", "PRNT"))
        result = double_metaphone("Briggs")
        self.assertEquals(result, ("PRKS", "PRKS"))
        result = double_metaphone("Brigham")
        self.assertEquals(result, ("PRM", "PRM"))
        result = double_metaphone("Brobst")
        self.assertEquals(result, ("PRPS", "PRPS"))
        result = double_metaphone("Brome")
        self.assertEquals(result, ("PRM", "PRM"))
        result = double_metaphone("Bronson")
        self.assertEquals(result, ("PRNS", "PRNS"))
        result = double_metaphone("Brooks")
        self.assertEquals(result, ("PRKS", "PRKS"))
        result = double_metaphone("Brouillard")
        self.assertEquals(result, ("PRLR", "PRLR"))
        result = double_metaphone("Brown")
        self.assertEquals(result, ("PRN", "PRN"))
        result = double_metaphone("Browne")
        self.assertEquals(result, ("PRN", "PRN"))
        result = double_metaphone("Brownell")
        self.assertEquals(result, ("PRNL", "PRNL"))
        result = double_metaphone("Bruley")
        self.assertEquals(result, ("PRL", "PRL"))
        result = double_metaphone("Bryant")
        self.assertEquals(result, ("PRNT", "PRNT"))
        result = double_metaphone("Brzozowski")
        self.assertEquals(result, ("PRSS", "PRTS"))
        result = double_metaphone("Buide")
        self.assertEquals(result, ("PT", "PT"))
        result = double_metaphone("Bulmer")
        self.assertEquals(result, ("PLMR", "PLMR"))
        result = double_metaphone("Bunker")
        self.assertEquals(result, ("PNKR", "PNKR"))
        result = double_metaphone("Burden")
        self.assertEquals(result, ("PRTN", "PRTN"))
        result = double_metaphone("Burge")
        self.assertEquals(result, ("PRJ", "PRK"))
        result = double_metaphone("Burgoyne")
        self.assertEquals(result, ("PRKN", "PRKN"))
        result = double_metaphone("Burke")
        self.assertEquals(result, ("PRK", "PRK"))
        result = double_metaphone("Burnett")
        self.assertEquals(result, ("PRNT", "PRNT"))
        result = double_metaphone("Burpee")
        self.assertEquals(result, ("PRP", "PRP"))
        result = double_metaphone("Bursley")
        self.assertEquals(result, ("PRSL", "PRSL"))
        result = double_metaphone("Burton")
        self.assertEquals(result, ("PRTN", "PRTN"))
        result = double_metaphone("Bushnell")
        self.assertEquals(result, ("PXNL", "PXNL"))
        result = double_metaphone("Buss")
        self.assertEquals(result, ("PS", "PS"))
        result = double_metaphone("Buswell")
        self.assertEquals(result, ("PSL", "PSL"))
        result = double_metaphone("Butler")
        self.assertEquals(result, ("PTLR", "PTLR"))
        result = double_metaphone("Calkin")
        self.assertEquals(result, ("KLKN", "KLKN"))
        result = double_metaphone("Canada")
        self.assertEquals(result, ("KNT", "KNT"))
        result = double_metaphone("Canmore")
        self.assertEquals(result, ("KNMR", "KNMR"))
        result = double_metaphone("Canney")
        self.assertEquals(result, ("KN", "KN"))
        result = double_metaphone("Capet")
        self.assertEquals(result, ("KPT", "KPT"))
        result = double_metaphone("Card")
        self.assertEquals(result, ("KRT", "KRT"))
        result = double_metaphone("Carman")
        self.assertEquals(result, ("KRMN", "KRMN"))
        result = double_metaphone("Carpenter")
        self.assertEquals(result, ("KRPN", "KRPN"))
        result = double_metaphone("Cartwright")
        self.assertEquals(result, ("KRTR", "KRTR"))
        result = double_metaphone("Casey")
        self.assertEquals(result, ("KS", "KS"))
        result = double_metaphone("Catterfield")
        self.assertEquals(result, ("KTRF", "KTRF"))
        result = double_metaphone("Ceeley")
        self.assertEquals(result, ("SL", "SL"))
        result = double_metaphone("Chambers")
        self.assertEquals(result, ("XMPR", "XMPR"))
        result = double_metaphone("Champion")
        self.assertEquals(result, ("XMPN", "XMPN"))
        result = double_metaphone("Chapman")
        self.assertEquals(result, ("XPMN", "XPMN"))
        result = double_metaphone("Chase")
        self.assertEquals(result, ("XS", "XS"))
        result = double_metaphone("Cheney")
        self.assertEquals(result, ("XN", "XN"))
        result = double_metaphone("Chetwynd")
        self.assertEquals(result, ("XTNT", "XTNT"))
        result = double_metaphone("Chevalier")
        self.assertEquals(result, ("XFL", "XFLR"))
        result = double_metaphone("Chillingsworth")
        self.assertEquals(result, ("XLNK", "XLNK"))
        result = double_metaphone("Christie")
        self.assertEquals(result, ("KRST", "KRST"))
        result = double_metaphone("Chubbuck")
        self.assertEquals(result, ("XPK", "XPK"))
        result = double_metaphone("Church")
        self.assertEquals(result, ("XRX", "XRK"))
        result = double_metaphone("Clark")
        self.assertEquals(result, ("KLRK", "KLRK"))
        result = double_metaphone("Clarke")
        self.assertEquals(result, ("KLRK", "KLRK"))
        result = double_metaphone("Cleare")
        self.assertEquals(result, ("KLR", "KLR"))
        result = double_metaphone("Clement")
        self.assertEquals(result, ("KLMN", "KLMN"))
        result = double_metaphone("Clerke")
        self.assertEquals(result, ("KLRK", "KLRK"))
        result = double_metaphone("Clibben")
        self.assertEquals(result, ("KLPN", "KLPN"))
        result = double_metaphone("Clifford")
        self.assertEquals(result, ("KLFR", "KLFR"))
        result = double_metaphone("Clivedon")
        self.assertEquals(result, ("KLFT", "KLFT"))
        result = double_metaphone("Close")
        self.assertEquals(result, ("KLS", "KLS"))
        result = double_metaphone("Clothilde")
        self.assertEquals(result, ("KL0L", "KLTL"))
        result = double_metaphone("Cobb")
        self.assertEquals(result, ("KP", "KP"))
        result = double_metaphone("Coburn")
        self.assertEquals(result, ("KPRN", "KPRN"))
        result = double_metaphone("Coburne")
        self.assertEquals(result, ("KPRN", "KPRN"))
        result = double_metaphone("Cocke")
        self.assertEquals(result, ("KK", "KK"))
        result = double_metaphone("Coffin")
        self.assertEquals(result, ("KFN", "KFN"))
        result = double_metaphone("Coffyn")
        self.assertEquals(result, ("KFN", "KFN"))
        result = double_metaphone("Colborne")
        self.assertEquals(result, ("KLPR", "KLPR"))
        result = double_metaphone("Colby")
        self.assertEquals(result, ("KLP", "KLP"))
        result = double_metaphone("Cole")
        self.assertEquals(result, ("KL", "KL"))
        result = double_metaphone("Coleman")
        self.assertEquals(result, ("KLMN", "KLMN"))
        result = double_metaphone("Collier")
        self.assertEquals(result, ("KL", "KLR"))
        result = double_metaphone("Compton")
        self.assertEquals(result, ("KMPT", "KMPT"))
        result = double_metaphone("Cone")
        self.assertEquals(result, ("KN", "KN"))
        result = double_metaphone("Cook")
        self.assertEquals(result, ("KK", "KK"))
        result = double_metaphone("Cooke")
        self.assertEquals(result, ("KK", "KK"))
        result = double_metaphone("Cooper")
        self.assertEquals(result, ("KPR", "KPR"))
        result = double_metaphone("Copperthwaite")
        self.assertEquals(result, ("KPR0", "KPRT"))
        result = double_metaphone("Corbet")
        self.assertEquals(result, ("KRPT", "KRPT"))
        result = double_metaphone("Corell")
        self.assertEquals(result, ("KRL", "KRL"))
        result = double_metaphone("Corey")
        self.assertEquals(result, ("KR", "KR"))
        result = double_metaphone("Corlies")
        self.assertEquals(result, ("KRLS", "KRLS"))
        result = double_metaphone("Corneliszen")
        self.assertEquals(result, ("KRNL", "KRNL"))
        result = double_metaphone("Cornelius")
        self.assertEquals(result, ("KRNL", "KRNL"))
        result = double_metaphone("Cornwallis")
        self.assertEquals(result, ("KRNL", "KRNL"))
        result = double_metaphone("Cosgrove")
        self.assertEquals(result, ("KSKR", "KSKR"))
        result = double_metaphone("Count of Brionne")
        self.assertEquals(result, ("KNTF", "KNTF"))
        result = double_metaphone("Covill")
        self.assertEquals(result, ("KFL", "KFL"))
        result = double_metaphone("Cowperthwaite")
        self.assertEquals(result, ("KPR0", "KPRT"))
        result = double_metaphone("Cowperwaite")
        self.assertEquals(result, ("KPRT", "KPRT"))
        result = double_metaphone("Crane")
        self.assertEquals(result, ("KRN", "KRN"))
        result = double_metaphone("Creagmile")
        self.assertEquals(result, ("KRKM", "KRKM"))
        result = double_metaphone("Crew")
        self.assertEquals(result, ("KR", "KRF"))
        result = double_metaphone("Crispin")
        self.assertEquals(result, ("KRSP", "KRSP"))
        result = double_metaphone("Crocker")
        self.assertEquals(result, ("KRKR", "KRKR"))
        result = double_metaphone("Crockett")
        self.assertEquals(result, ("KRKT", "KRKT"))
        result = double_metaphone("Crosby")
        self.assertEquals(result, ("KRSP", "KRSP"))
        result = double_metaphone("Crump")
        self.assertEquals(result, ("KRMP", "KRMP"))
        result = double_metaphone("Cunningham")
        self.assertEquals(result, ("KNNK", "KNNK"))
        result = double_metaphone("Curtis")
        self.assertEquals(result, ("KRTS", "KRTS"))
        result = double_metaphone("Cutha")
        self.assertEquals(result, ("K0", "KT"))
        result = double_metaphone("Cutter")
        self.assertEquals(result, ("KTR", "KTR"))
        result = double_metaphone("D'Aubigny")
        self.assertEquals(result, ("TPN", "TPKN"))
        result = double_metaphone("DAVIS")
        self.assertEquals(result, ("TFS", "TFS"))
        result = double_metaphone("Dabinott")
        self.assertEquals(result, ("TPNT", "TPNT"))
        result = double_metaphone("Dacre")
        self.assertEquals(result, ("TKR", "TKR"))
        result = double_metaphone("Daggett")
        self.assertEquals(result, ("TKT", "TKT"))
        result = double_metaphone("Danvers")
        self.assertEquals(result, ("TNFR", "TNFR"))
        result = double_metaphone("Darcy")
        self.assertEquals(result, ("TRS", "TRS"))
        result = double_metaphone("Davis")
        self.assertEquals(result, ("TFS", "TFS"))
        result = double_metaphone("Dawn")
        self.assertEquals(result, ("TN", "TN"))
        result = double_metaphone("Dawson")
        self.assertEquals(result, ("TSN", "TSN"))
        result = double_metaphone("Day")
        self.assertEquals(result, ("T", "T"))
        result = double_metaphone("Daye")
        self.assertEquals(result, ("T", "T"))
        result = double_metaphone("DeGrenier")
        self.assertEquals(result, ("TKRN", "TKRN"))
        result = double_metaphone("Dean")
        self.assertEquals(result, ("TN", "TN"))
        result = double_metaphone("Deekindaugh")
        self.assertEquals(result, ("TKNT", "TKNT"))
        result = double_metaphone("Dennis")
        self.assertEquals(result, ("TNS", "TNS"))
        result = double_metaphone("Denny")
        self.assertEquals(result, ("TN", "TN"))
        result = double_metaphone("Denton")
        self.assertEquals(result, ("TNTN", "TNTN"))
        result = double_metaphone("Desborough")
        self.assertEquals(result, ("TSPR", "TSPR"))
        result = double_metaphone("Despenser")
        self.assertEquals(result, ("TSPN", "TSPN"))
        result = double_metaphone("Deverill")
        self.assertEquals(result, ("TFRL", "TFRL"))
        result = double_metaphone("Devine")
        self.assertEquals(result, ("TFN", "TFN"))
        result = double_metaphone("Dexter")
        self.assertEquals(result, ("TKST", "TKST"))
        result = double_metaphone("Dillaway")
        self.assertEquals(result, ("TL", "TL"))
        result = double_metaphone("Dimmick")
        self.assertEquals(result, ("TMK", "TMK"))
        result = double_metaphone("Dinan")
        self.assertEquals(result, ("TNN", "TNN"))
        result = double_metaphone("Dix")
        self.assertEquals(result, ("TKS", "TKS"))
        result = double_metaphone("Doggett")
        self.assertEquals(result, ("TKT", "TKT"))
        result = double_metaphone("Donahue")
        self.assertEquals(result, ("TNH", "TNH"))
        result = double_metaphone("Dorfman")
        self.assertEquals(result, ("TRFM", "TRFM"))
        result = double_metaphone("Dorris")
        self.assertEquals(result, ("TRS", "TRS"))
        result = double_metaphone("Dow")
        self.assertEquals(result, ("T", "TF"))
        result = double_metaphone("Downey")
        self.assertEquals(result, ("TN", "TN"))
        result = double_metaphone("Downing")
        self.assertEquals(result, ("TNNK", "TNNK"))
        result = double_metaphone("Dowsett")
        self.assertEquals(result, ("TST", "TST"))
        result = double_metaphone("Duck?")
        self.assertEquals(result, ("TK", "TK"))
        result = double_metaphone("Dudley")
        self.assertEquals(result, ("TTL", "TTL"))
        result = double_metaphone("Duffy")
        self.assertEquals(result, ("TF", "TF"))
        result = double_metaphone("Dunn")
        self.assertEquals(result, ("TN", "TN"))
        result = double_metaphone("Dunsterville")
        self.assertEquals(result, ("TNST", "TNST"))
        result = double_metaphone("Durrant")
        self.assertEquals(result, ("TRNT", "TRNT"))
        result = double_metaphone("Durrin")
        self.assertEquals(result, ("TRN", "TRN"))
        result = double_metaphone("Dustin")
        self.assertEquals(result, ("TSTN", "TSTN"))
        result = double_metaphone("Duston")
        self.assertEquals(result, ("TSTN", "TSTN"))
        result = double_metaphone("Eames")
        self.assertEquals(result, ("AMS", "AMS"))
        result = double_metaphone("Early")
        self.assertEquals(result, ("ARL", "ARL"))
        result = double_metaphone("Easty")
        self.assertEquals(result, ("AST", "AST"))
        result = double_metaphone("Ebbett")
        self.assertEquals(result, ("APT", "APT"))
        result = double_metaphone("Eberbach")
        self.assertEquals(result, ("APRP", "APRP"))
        result = double_metaphone("Eberhard")
        self.assertEquals(result, ("APRR", "APRR"))
        result = double_metaphone("Eddy")
        self.assertEquals(result, ("AT", "AT"))
        result = double_metaphone("Edenden")
        self.assertEquals(result, ("ATNT", "ATNT"))
        result = double_metaphone("Edwards")
        self.assertEquals(result, ("ATRT", "ATRT"))
        result = double_metaphone("Eglinton")
        self.assertEquals(result, ("AKLN", "ALNT"))
        result = double_metaphone("Eliot")
        self.assertEquals(result, ("ALT", "ALT"))
        result = double_metaphone("Elizabeth")
        self.assertEquals(result, ("ALSP", "ALSP"))
        result = double_metaphone("Ellis")
        self.assertEquals(result, ("ALS", "ALS"))
        result = double_metaphone("Ellison")
        self.assertEquals(result, ("ALSN", "ALSN"))
        result = double_metaphone("Ellot")
        self.assertEquals(result, ("ALT", "ALT"))
        result = double_metaphone("Elny")
        self.assertEquals(result, ("ALN", "ALN"))
        result = double_metaphone("Elsner")
        self.assertEquals(result, ("ALSN", "ALSN"))
        result = double_metaphone("Emerson")
        self.assertEquals(result, ("AMRS", "AMRS"))
        result = double_metaphone("Empson")
        self.assertEquals(result, ("AMPS", "AMPS"))
        result = double_metaphone("Est")
        self.assertEquals(result, ("AST", "AST"))
        result = double_metaphone("Estabrook")
        self.assertEquals(result, ("ASTP", "ASTP"))
        result = double_metaphone("Estes")
        self.assertEquals(result, ("ASTS", "ASTS"))
        result = double_metaphone("Estey")
        self.assertEquals(result, ("AST", "AST"))
        result = double_metaphone("Evans")
        self.assertEquals(result, ("AFNS", "AFNS"))
        result = double_metaphone("Fallowell")
        self.assertEquals(result, ("FLL", "FLL"))
        result = double_metaphone("Farnsworth")
        self.assertEquals(result, ("FRNS", "FRNS"))
        result = double_metaphone("Feake")
        self.assertEquals(result, ("FK", "FK"))
        result = double_metaphone("Feke")
        self.assertEquals(result, ("FK", "FK"))
        result = double_metaphone("Fellows")
        self.assertEquals(result, ("FLS", "FLS"))
        result = double_metaphone("Fettiplace")
        self.assertEquals(result, ("FTPL", "FTPL"))
        result = double_metaphone("Finney")
        self.assertEquals(result, ("FN", "FN"))
        result = double_metaphone("Fischer")
        self.assertEquals(result, ("FXR", "FSKR"))
        result = double_metaphone("Fisher")
        self.assertEquals(result, ("FXR", "FXR"))
        result = double_metaphone("Fisk")
        self.assertEquals(result, ("FSK", "FSK"))
        result = double_metaphone("Fiske")
        self.assertEquals(result, ("FSK", "FSK"))
        result = double_metaphone("Fletcher")
        self.assertEquals(result, ("FLXR", "FLXR"))
        result = double_metaphone("Folger")
        self.assertEquals(result, ("FLKR", "FLJR"))
        result = double_metaphone("Foliot")
        self.assertEquals(result, ("FLT", "FLT"))
        result = double_metaphone("Folyot")
        self.assertEquals(result, ("FLT", "FLT"))
        result = double_metaphone("Fones")
        self.assertEquals(result, ("FNS", "FNS"))
        result = double_metaphone("Fordham")
        self.assertEquals(result, ("FRTM", "FRTM"))
        result = double_metaphone("Forstner")
        self.assertEquals(result, ("FRST", "FRST"))
        result = double_metaphone("Fosten")
        self.assertEquals(result, ("FSTN", "FSTN"))
        result = double_metaphone("Foster")
        self.assertEquals(result, ("FSTR", "FSTR"))
        result = double_metaphone("Foulke")
        self.assertEquals(result, ("FLK", "FLK"))
        result = double_metaphone("Fowler")
        self.assertEquals(result, ("FLR", "FLR"))
        result = double_metaphone("Foxwell")
        self.assertEquals(result, ("FKSL", "FKSL"))
        result = double_metaphone("Fraley")
        self.assertEquals(result, ("FRL", "FRL"))
        result = double_metaphone("Franceys")
        self.assertEquals(result, ("FRNS", "FRNS"))
        result = double_metaphone("Franke")
        self.assertEquals(result, ("FRNK", "FRNK"))
        result = double_metaphone("Frascella")
        self.assertEquals(result, ("FRSL", "FRSL"))
        result = double_metaphone("Frazer")
        self.assertEquals(result, ("FRSR", "FRSR"))
        result = double_metaphone("Fredd")
        self.assertEquals(result, ("FRT", "FRT"))
        result = double_metaphone("Freeman")
        self.assertEquals(result, ("FRMN", "FRMN"))
        result = double_metaphone("French")
        self.assertEquals(result, ("FRNX", "FRNK"))
        result = double_metaphone("Freville")
        self.assertEquals(result, ("FRFL", "FRFL"))
        result = double_metaphone("Frey")
        self.assertEquals(result, ("FR", "FR"))
        result = double_metaphone("Frick")
        self.assertEquals(result, ("FRK", "FRK"))
        result = double_metaphone("Frier")
        self.assertEquals(result, ("FR", "FRR"))
        result = double_metaphone("Froe")
        self.assertEquals(result, ("FR", "FR"))
        result = double_metaphone("Frorer")
        self.assertEquals(result, ("FRRR", "FRRR"))
        result = double_metaphone("Frost")
        self.assertEquals(result, ("FRST", "FRST"))
        result = double_metaphone("Frothingham")
        self.assertEquals(result, ("FR0N", "FRTN"))
        result = double_metaphone("Fry")
        self.assertEquals(result, ("FR", "FR"))
        result = double_metaphone("Gaffney")
        self.assertEquals(result, ("KFN", "KFN"))
        result = double_metaphone("Gage")
        self.assertEquals(result, ("KJ", "KK"))
        result = double_metaphone("Gallion")
        self.assertEquals(result, ("KLN", "KLN"))
        result = double_metaphone("Gallishan")
        self.assertEquals(result, ("KLXN", "KLXN"))
        result = double_metaphone("Gamble")
        self.assertEquals(result, ("KMPL", "KMPL"))
        result = double_metaphone("Garbrand")
        self.assertEquals(result, ("KRPR", "KRPR"))
        result = double_metaphone("Gardner")
        self.assertEquals(result, ("KRTN", "KRTN"))
        result = double_metaphone("Garrett")
        self.assertEquals(result, ("KRT", "KRT"))
        result = double_metaphone("Gassner")
        self.assertEquals(result, ("KSNR", "KSNR"))
        result = double_metaphone("Gater")
        self.assertEquals(result, ("KTR", "KTR"))
        result = double_metaphone("Gaunt")
        self.assertEquals(result, ("KNT", "KNT"))
        result = double_metaphone("Gayer")
        self.assertEquals(result, ("KR", "KR"))
        result = double_metaphone("Gerken")
        self.assertEquals(result, ("KRKN", "JRKN"))
        result = double_metaphone("Gerritsen")
        self.assertEquals(result, ("KRTS", "JRTS"))
        result = double_metaphone("Gibbs")
        self.assertEquals(result, ("KPS", "JPS"))
        result = double_metaphone("Giffard")
        self.assertEquals(result, ("JFRT", "KFRT"))
        result = double_metaphone("Gilbert")
        self.assertEquals(result, ("KLPR", "JLPR"))
        result = double_metaphone("Gill")
        self.assertEquals(result, ("KL", "JL"))
        result = double_metaphone("Gilman")
        self.assertEquals(result, ("KLMN", "JLMN"))
        result = double_metaphone("Glass")
        self.assertEquals(result, ("KLS", "KLS"))
        result = double_metaphone("Goddard\Gifford")
        self.assertEquals(result, ("KTRT", "KTRT"))
        result = double_metaphone("Godfrey")
        self.assertEquals(result, ("KTFR", "KTFR"))
        result = double_metaphone("Godwin")
        self.assertEquals(result, ("KTN", "KTN"))
        result = double_metaphone("Goodale")
        self.assertEquals(result, ("KTL", "KTL"))
        result = double_metaphone("Goodnow")
        self.assertEquals(result, ("KTN", "KTNF"))
        result = double_metaphone("Gorham")
        self.assertEquals(result, ("KRM", "KRM"))
        result = double_metaphone("Goseline")
        self.assertEquals(result, ("KSLN", "KSLN"))
        result = double_metaphone("Gott")
        self.assertEquals(result, ("KT", "KT"))
        result = double_metaphone("Gould")
        self.assertEquals(result, ("KLT", "KLT"))
        result = double_metaphone("Grafton")
        self.assertEquals(result, ("KRFT", "KRFT"))
        result = double_metaphone("Grant")
        self.assertEquals(result, ("KRNT", "KRNT"))
        result = double_metaphone("Gray")
        self.assertEquals(result, ("KR", "KR"))
        result = double_metaphone("Green")
        self.assertEquals(result, ("KRN", "KRN"))
        result = double_metaphone("Griffin")
        self.assertEquals(result, ("KRFN", "KRFN"))
        result = double_metaphone("Grill")
        self.assertEquals(result, ("KRL", "KRL"))
        result = double_metaphone("Grim")
        self.assertEquals(result, ("KRM", "KRM"))
        result = double_metaphone("Grisgonelle")
        self.assertEquals(result, ("KRSK", "KRSK"))
        result = double_metaphone("Gross")
        self.assertEquals(result, ("KRS", "KRS"))
        result = double_metaphone("Guba")
        self.assertEquals(result, ("KP", "KP"))
        result = double_metaphone("Gybbes")
        self.assertEquals(result, ("KPS", "JPS"))
        result = double_metaphone("Haburne")
        self.assertEquals(result, ("HPRN", "HPRN"))
        result = double_metaphone("Hackburne")
        self.assertEquals(result, ("HKPR", "HKPR"))
        result = double_metaphone("Haddon?")
        self.assertEquals(result, ("HTN", "HTN"))
        result = double_metaphone("Haines")
        self.assertEquals(result, ("HNS", "HNS"))
        result = double_metaphone("Hale")
        self.assertEquals(result, ("HL", "HL"))
        result = double_metaphone("Hall")
        self.assertEquals(result, ("HL", "HL"))
        result = double_metaphone("Hallet")
        self.assertEquals(result, ("HLT", "HLT"))
        result = double_metaphone("Hallock")
        self.assertEquals(result, ("HLK", "HLK"))
        result = double_metaphone("Halstead")
        self.assertEquals(result, ("HLST", "HLST"))
        result = double_metaphone("Hammond")
        self.assertEquals(result, ("HMNT", "HMNT"))
        result = double_metaphone("Hance")
        self.assertEquals(result, ("HNS", "HNS"))
        result = double_metaphone("Handy")
        self.assertEquals(result, ("HNT", "HNT"))
        result = double_metaphone("Hanson")
        self.assertEquals(result, ("HNSN", "HNSN"))
        result = double_metaphone("Harasek")
        self.assertEquals(result, ("HRSK", "HRSK"))
        result = double_metaphone("Harcourt")
        self.assertEquals(result, ("HRKR", "HRKR"))
        result = double_metaphone("Hardy")
        self.assertEquals(result, ("HRT", "HRT"))
        result = double_metaphone("Harlock")
        self.assertEquals(result, ("HRLK", "HRLK"))
        result = double_metaphone("Harris")
        self.assertEquals(result, ("HRS", "HRS"))
        result = double_metaphone("Hartley")
        self.assertEquals(result, ("HRTL", "HRTL"))
        result = double_metaphone("Harvey")
        self.assertEquals(result, ("HRF", "HRF"))
        result = double_metaphone("Harvie")
        self.assertEquals(result, ("HRF", "HRF"))
        result = double_metaphone("Harwood")
        self.assertEquals(result, ("HRT", "HRT"))
        result = double_metaphone("Hathaway")
        self.assertEquals(result, ("H0", "HT"))
        result = double_metaphone("Haukeness")
        self.assertEquals(result, ("HKNS", "HKNS"))
        result = double_metaphone("Hawkes")
        self.assertEquals(result, ("HKS", "HKS"))
        result = double_metaphone("Hawkhurst")
        self.assertEquals(result, ("HKRS", "HKRS"))
        result = double_metaphone("Hawkins")
        self.assertEquals(result, ("HKNS", "HKNS"))
        result = double_metaphone("Hawley")
        self.assertEquals(result, ("HL", "HL"))
        result = double_metaphone("Heald")
        self.assertEquals(result, ("HLT", "HLT"))
        result = double_metaphone("Helsdon")
        self.assertEquals(result, ("HLST", "HLST"))
        result = double_metaphone("Hemenway")
        self.assertEquals(result, ("HMN", "HMN"))
        result = double_metaphone("Hemmenway")
        self.assertEquals(result, ("HMN", "HMN"))
        result = double_metaphone("Henck")
        self.assertEquals(result, ("HNK", "HNK"))
        result = double_metaphone("Henderson")
        self.assertEquals(result, ("HNTR", "HNTR"))
        result = double_metaphone("Hendricks")
        self.assertEquals(result, ("HNTR", "HNTR"))
        result = double_metaphone("Hersey")
        self.assertEquals(result, ("HRS", "HRS"))
        result = double_metaphone("Hewes")
        self.assertEquals(result, ("HS", "HS"))
        result = double_metaphone("Heyman")
        self.assertEquals(result, ("HMN", "HMN"))
        result = double_metaphone("Hicks")
        self.assertEquals(result, ("HKS", "HKS"))
        result = double_metaphone("Hidden")
        self.assertEquals(result, ("HTN", "HTN"))
        result = double_metaphone("Higgs")
        self.assertEquals(result, ("HKS", "HKS"))
        result = double_metaphone("Hill")
        self.assertEquals(result, ("HL", "HL"))
        result = double_metaphone("Hills")
        self.assertEquals(result, ("HLS", "HLS"))
        result = double_metaphone("Hinckley")
        self.assertEquals(result, ("HNKL", "HNKL"))
        result = double_metaphone("Hipwell")
        self.assertEquals(result, ("HPL", "HPL"))
        result = double_metaphone("Hobart")
        self.assertEquals(result, ("HPRT", "HPRT"))
        result = double_metaphone("Hoben")
        self.assertEquals(result, ("HPN", "HPN"))
        result = double_metaphone("Hoffmann")
        self.assertEquals(result, ("HFMN", "HFMN"))
        result = double_metaphone("Hogan")
        self.assertEquals(result, ("HKN", "HKN"))
        result = double_metaphone("Holmes")
        self.assertEquals(result, ("HLMS", "HLMS"))
        result = double_metaphone("Hoo")
        self.assertEquals(result, ("H", "H"))
        result = double_metaphone("Hooker")
        self.assertEquals(result, ("HKR", "HKR"))
        result = double_metaphone("Hopcott")
        self.assertEquals(result, ("HPKT", "HPKT"))
        result = double_metaphone("Hopkins")
        self.assertEquals(result, ("HPKN", "HPKN"))
        result = double_metaphone("Hopkinson")
        self.assertEquals(result, ("HPKN", "HPKN"))
        result = double_metaphone("Hornsey")
        self.assertEquals(result, ("HRNS", "HRNS"))
        result = double_metaphone("Houckgeest")
        self.assertEquals(result, ("HKJS", "HKKS"))
        result = double_metaphone("Hough")
        self.assertEquals(result, ("H", "H"))
        result = double_metaphone("Houstin")
        self.assertEquals(result, ("HSTN", "HSTN"))
        result = double_metaphone("How")
        self.assertEquals(result, ("H", "HF"))
        result = double_metaphone("Howe")
        self.assertEquals(result, ("H", "H"))
        result = double_metaphone("Howland")
        self.assertEquals(result, ("HLNT", "HLNT"))
        result = double_metaphone("Hubner")
        self.assertEquals(result, ("HPNR", "HPNR"))
        result = double_metaphone("Hudnut")
        self.assertEquals(result, ("HTNT", "HTNT"))
        result = double_metaphone("Hughes")
        self.assertEquals(result, ("HS", "HS"))
        result = double_metaphone("Hull")
        self.assertEquals(result, ("HL", "HL"))
        result = double_metaphone("Hulme")
        self.assertEquals(result, ("HLM", "HLM"))
        result = double_metaphone("Hume")
        self.assertEquals(result, ("HM", "HM"))
        result = double_metaphone("Hundertumark")
        self.assertEquals(result, ("HNTR", "HNTR"))
        result = double_metaphone("Hundley")
        self.assertEquals(result, ("HNTL", "HNTL"))
        result = double_metaphone("Hungerford")
        self.assertEquals(result, ("HNKR", "HNJR"))
        result = double_metaphone("Hunt")
        self.assertEquals(result, ("HNT", "HNT"))
        result = double_metaphone("Hurst")
        self.assertEquals(result, ("HRST", "HRST"))
        result = double_metaphone("Husbands")
        self.assertEquals(result, ("HSPN", "HSPN"))
        result = double_metaphone("Hussey")
        self.assertEquals(result, ("HS", "HS"))
        result = double_metaphone("Husted")
        self.assertEquals(result, ("HSTT", "HSTT"))
        result = double_metaphone("Hutchins")
        self.assertEquals(result, ("HXNS", "HXNS"))
        result = double_metaphone("Hutchinson")
        self.assertEquals(result, ("HXNS", "HXNS"))
        result = double_metaphone("Huttinger")
        self.assertEquals(result, ("HTNK", "HTNJ"))
        result = double_metaphone("Huybertsen")
        self.assertEquals(result, ("HPRT", "HPRT"))
        result = double_metaphone("Iddenden")
        self.assertEquals(result, ("ATNT", "ATNT"))
        result = double_metaphone("Ingraham")
        self.assertEquals(result, ("ANKR", "ANKR"))
        result = double_metaphone("Ives")
        self.assertEquals(result, ("AFS", "AFS"))
        result = double_metaphone("Jackson")
        self.assertEquals(result, ("JKSN", "AKSN"))
        result = double_metaphone("Jacob")
        self.assertEquals(result, ("JKP", "AKP"))
        result = double_metaphone("Jans")
        self.assertEquals(result, ("JNS", "ANS"))
        result = double_metaphone("Jenkins")
        self.assertEquals(result, ("JNKN", "ANKN"))
        result = double_metaphone("Jewett")
        self.assertEquals(result, ("JT", "AT"))
        result = double_metaphone("Jewitt")
        self.assertEquals(result, ("JT", "AT"))
        result = double_metaphone("Johnson")
        self.assertEquals(result, ("JNSN", "ANSN"))
        result = double_metaphone("Jones")
        self.assertEquals(result, ("JNS", "ANS"))
        result = double_metaphone("Josephine")
        self.assertEquals(result, ("JSFN", "HSFN"))
        result = double_metaphone("Judd")
        self.assertEquals(result, ("JT", "AT"))
        result = double_metaphone("June")
        self.assertEquals(result, ("JN", "AN"))
        result = double_metaphone("Kamarowska")
        self.assertEquals(result, ("KMRS", "KMRS"))
        result = double_metaphone("Kay")
        self.assertEquals(result, ("K", "K"))
        result = double_metaphone("Kelley")
        self.assertEquals(result, ("KL", "KL"))
        result = double_metaphone("Kelly")
        self.assertEquals(result, ("KL", "KL"))
        result = double_metaphone("Keymber")
        self.assertEquals(result, ("KMPR", "KMPR"))
        result = double_metaphone("Keynes")
        self.assertEquals(result, ("KNS", "KNS"))
        result = double_metaphone("Kilham")
        self.assertEquals(result, ("KLM", "KLM"))
        result = double_metaphone("Kim")
        self.assertEquals(result, ("KM", "KM"))
        result = double_metaphone("Kimball")
        self.assertEquals(result, ("KMPL", "KMPL"))
        result = double_metaphone("King")
        self.assertEquals(result, ("KNK", "KNK"))
        result = double_metaphone("Kinsey")
        self.assertEquals(result, ("KNS", "KNS"))
        result = double_metaphone("Kirk")
        self.assertEquals(result, ("KRK", "KRK"))
        result = double_metaphone("Kirton")
        self.assertEquals(result, ("KRTN", "KRTN"))
        result = double_metaphone("Kistler")
        self.assertEquals(result, ("KSTL", "KSTL"))
        result = double_metaphone("Kitchen")
        self.assertEquals(result, ("KXN", "KXN"))
        result = double_metaphone("Kitson")
        self.assertEquals(result, ("KTSN", "KTSN"))
        result = double_metaphone("Klett")
        self.assertEquals(result, ("KLT", "KLT"))
        result = double_metaphone("Kline")
        self.assertEquals(result, ("KLN", "KLN"))
        result = double_metaphone("Knapp")
        self.assertEquals(result, ("NP", "NP"))
        result = double_metaphone("Knight")
        self.assertEquals(result, ("NT", "NT"))
        result = double_metaphone("Knote")
        self.assertEquals(result, ("NT", "NT"))
        result = double_metaphone("Knott")
        self.assertEquals(result, ("NT", "NT"))
        result = double_metaphone("Knox")
        self.assertEquals(result, ("NKS", "NKS"))
        result = double_metaphone("Koeller")
        self.assertEquals(result, ("KLR", "KLR"))
        result = double_metaphone("La Pointe")
        self.assertEquals(result, ("LPNT", "LPNT"))
        result = double_metaphone("LaPlante")
        self.assertEquals(result, ("LPLN", "LPLN"))
        result = double_metaphone("Laimbeer")
        self.assertEquals(result, ("LMPR", "LMPR"))
        result = double_metaphone("Lamb")
        self.assertEquals(result, ("LMP", "LMP"))
        result = double_metaphone("Lambertson")
        self.assertEquals(result, ("LMPR", "LMPR"))
        result = double_metaphone("Lancto")
        self.assertEquals(result, ("LNKT", "LNKT"))
        result = double_metaphone("Landry")
        self.assertEquals(result, ("LNTR", "LNTR"))
        result = double_metaphone("Lane")
        self.assertEquals(result, ("LN", "LN"))
        result = double_metaphone("Langendyck")
        self.assertEquals(result, ("LNJN", "LNKN"))
        result = double_metaphone("Langer")
        self.assertEquals(result, ("LNKR", "LNJR"))
        result = double_metaphone("Langford")
        self.assertEquals(result, ("LNKF", "LNKF"))
        result = double_metaphone("Lantersee")
        self.assertEquals(result, ("LNTR", "LNTR"))
        result = double_metaphone("Laquer")
        self.assertEquals(result, ("LKR", "LKR"))
        result = double_metaphone("Larkin")
        self.assertEquals(result, ("LRKN", "LRKN"))
        result = double_metaphone("Latham")
        self.assertEquals(result, ("LTM", "LTM"))
        result = double_metaphone("Lathrop")
        self.assertEquals(result, ("L0RP", "LTRP"))
        result = double_metaphone("Lauter")
        self.assertEquals(result, ("LTR", "LTR"))
        result = double_metaphone("Lawrence")
        self.assertEquals(result, ("LRNS", "LRNS"))
        result = double_metaphone("Leach")
        self.assertEquals(result, ("LK", "LK"))
        result = double_metaphone("Leager")
        self.assertEquals(result, ("LKR", "LJR"))
        result = double_metaphone("Learned")
        self.assertEquals(result, ("LRNT", "LRNT"))
        result = double_metaphone("Leavitt")
        self.assertEquals(result, ("LFT", "LFT"))
        result = double_metaphone("Lee")
        self.assertEquals(result, ("L", "L"))
        result = double_metaphone("Leete")
        self.assertEquals(result, ("LT", "LT"))
        result = double_metaphone("Leggett")
        self.assertEquals(result, ("LKT", "LKT"))
        result = double_metaphone("Leland")
        self.assertEquals(result, ("LLNT", "LLNT"))
        result = double_metaphone("Leonard")
        self.assertEquals(result, ("LNRT", "LNRT"))
        result = double_metaphone("Lester")
        self.assertEquals(result, ("LSTR", "LSTR"))
        result = double_metaphone("Lestrange")
        self.assertEquals(result, ("LSTR", "LSTR"))
        result = double_metaphone("Lethem")
        self.assertEquals(result, ("L0M", "LTM"))
        result = double_metaphone("Levine")
        self.assertEquals(result, ("LFN", "LFN"))
        result = double_metaphone("Lewes")
        self.assertEquals(result, ("LS", "LS"))
        result = double_metaphone("Lewis")
        self.assertEquals(result, ("LS", "LS"))
        result = double_metaphone("Lincoln")
        self.assertEquals(result, ("LNKL", "LNKL"))
        result = double_metaphone("Lindsey")
        self.assertEquals(result, ("LNTS", "LNTS"))
        result = double_metaphone("Linher")
        self.assertEquals(result, ("LNR", "LNR"))
        result = double_metaphone("Lippet")
        self.assertEquals(result, ("LPT", "LPT"))
        result = double_metaphone("Lippincott")
        self.assertEquals(result, ("LPNK", "LPNK"))
        result = double_metaphone("Lockwood")
        self.assertEquals(result, ("LKT", "LKT"))
        result = double_metaphone("Loines")
        self.assertEquals(result, ("LNS", "LNS"))
        result = double_metaphone("Lombard")
        self.assertEquals(result, ("LMPR", "LMPR"))
        result = double_metaphone("Long")
        self.assertEquals(result, ("LNK", "LNK"))
        result = double_metaphone("Longespee")
        self.assertEquals(result, ("LNJS", "LNKS"))
        result = double_metaphone("Look")
        self.assertEquals(result, ("LK", "LK"))
        result = double_metaphone("Lounsberry")
        self.assertEquals(result, ("LNSP", "LNSP"))
        result = double_metaphone("Lounsbury")
        self.assertEquals(result, ("LNSP", "LNSP"))
        result = double_metaphone("Louthe")
        self.assertEquals(result, ("L0", "LT"))
        result = double_metaphone("Loveyne")
        self.assertEquals(result, ("LFN", "LFN"))
        result = double_metaphone("Lowe")
        self.assertEquals(result, ("L", "L"))
        result = double_metaphone("Ludlam")
        self.assertEquals(result, ("LTLM", "LTLM"))
        result = double_metaphone("Lumbard")
        self.assertEquals(result, ("LMPR", "LMPR"))
        result = double_metaphone("Lund")
        self.assertEquals(result, ("LNT", "LNT"))
        result = double_metaphone("Luno")
        self.assertEquals(result, ("LN", "LN"))
        result = double_metaphone("Lutz")
        self.assertEquals(result, ("LTS", "LTS"))
        result = double_metaphone("Lydia")
        self.assertEquals(result, ("LT", "LT"))
        result = double_metaphone("Lynne")
        self.assertEquals(result, ("LN", "LN"))
        result = double_metaphone("Lyon")
        self.assertEquals(result, ("LN", "LN"))
        result = double_metaphone("MacAlpin")
        self.assertEquals(result, ("MKLP", "MKLP"))
        result = double_metaphone("MacBricc")
        self.assertEquals(result, ("MKPR", "MKPR"))
        result = double_metaphone("MacCrinan")
        self.assertEquals(result, ("MKRN", "MKRN"))
        result = double_metaphone("MacKenneth")
        self.assertEquals(result, ("MKN0", "MKNT"))
        result = double_metaphone("MacMael nam Bo")
        self.assertEquals(result, ("MKML", "MKML"))
        result = double_metaphone("MacMurchada")
        self.assertEquals(result, ("MKMR", "MKMR"))
        result = double_metaphone("Macomber")
        self.assertEquals(result, ("MKMP", "MKMP"))
        result = double_metaphone("Macy")
        self.assertEquals(result, ("MS", "MS"))
        result = double_metaphone("Magnus")
        self.assertEquals(result, ("MNS", "MKNS"))
        result = double_metaphone("Mahien")
        self.assertEquals(result, ("MHN", "MHN"))
        result = double_metaphone("Malmains")
        self.assertEquals(result, ("MLMN", "MLMN"))
        result = double_metaphone("Malory")
        self.assertEquals(result, ("MLR", "MLR"))
        result = double_metaphone("Mancinelli")
        self.assertEquals(result, ("MNSN", "MNSN"))
        result = double_metaphone("Mancini")
        self.assertEquals(result, ("MNSN", "MNSN"))
        result = double_metaphone("Mann")
        self.assertEquals(result, ("MN", "MN"))
        result = double_metaphone("Manning")
        self.assertEquals(result, ("MNNK", "MNNK"))
        result = double_metaphone("Manter")
        self.assertEquals(result, ("MNTR", "MNTR"))
        result = double_metaphone("Marion")
        self.assertEquals(result, ("MRN", "MRN"))
        result = double_metaphone("Marley")
        self.assertEquals(result, ("MRL", "MRL"))
        result = double_metaphone("Marmion")
        self.assertEquals(result, ("MRMN", "MRMN"))
        result = double_metaphone("Marquart")
        self.assertEquals(result, ("MRKR", "MRKR"))
        result = double_metaphone("Marsh")
        self.assertEquals(result, ("MRX", "MRX"))
        result = double_metaphone("Marshal")
        self.assertEquals(result, ("MRXL", "MRXL"))
        result = double_metaphone("Marshall")
        self.assertEquals(result, ("MRXL", "MRXL"))
        result = double_metaphone("Martel")
        self.assertEquals(result, ("MRTL", "MRTL"))
        result = double_metaphone("Martha")
        self.assertEquals(result, ("MR0", "MRT"))
        result = double_metaphone("Martin")
        self.assertEquals(result, ("MRTN", "MRTN"))
        result = double_metaphone("Marturano")
        self.assertEquals(result, ("MRTR", "MRTR"))
        result = double_metaphone("Marvin")
        self.assertEquals(result, ("MRFN", "MRFN"))
        result = double_metaphone("Mary")
        self.assertEquals(result, ("MR", "MR"))
        result = double_metaphone("Mason")
        self.assertEquals(result, ("MSN", "MSN"))
        result = double_metaphone("Maxwell")
        self.assertEquals(result, ("MKSL", "MKSL"))
        result = double_metaphone("Mayhew")
        self.assertEquals(result, ("MH", "MHF"))
        result = double_metaphone("McAllaster")
        self.assertEquals(result, ("MKLS", "MKLS"))
        result = double_metaphone("McAllister")
        self.assertEquals(result, ("MKLS", "MKLS"))
        result = double_metaphone("McConnell")
        self.assertEquals(result, ("MKNL", "MKNL"))
        result = double_metaphone("McFarland")
        self.assertEquals(result, ("MKFR", "MKFR"))
        result = double_metaphone("McIlroy")
        self.assertEquals(result, ("MSLR", "MSLR"))
        result = double_metaphone("McNair")
        self.assertEquals(result, ("MKNR", "MKNR"))
        result = double_metaphone("McNair-Landry")
        self.assertEquals(result, ("MKNR", "MKNR"))
        result = double_metaphone("McRaven")
        self.assertEquals(result, ("MKRF", "MKRF"))
        result = double_metaphone("Mead")
        self.assertEquals(result, ("MT", "MT"))
        result = double_metaphone("Meade")
        self.assertEquals(result, ("MT", "MT"))
        result = double_metaphone("Meck")
        self.assertEquals(result, ("MK", "MK"))
        result = double_metaphone("Melton")
        self.assertEquals(result, ("MLTN", "MLTN"))
        result = double_metaphone("Mendenhall")
        self.assertEquals(result, ("MNTN", "MNTN"))
        result = double_metaphone("Mering")
        self.assertEquals(result, ("MRNK", "MRNK"))
        result = double_metaphone("Merrick")
        self.assertEquals(result, ("MRK", "MRK"))
        result = double_metaphone("Merry")
        self.assertEquals(result, ("MR", "MR"))
        result = double_metaphone("Mighill")
        self.assertEquals(result, ("ML", "ML"))
        result = double_metaphone("Miller")
        self.assertEquals(result, ("MLR", "MLR"))
        result = double_metaphone("Milton")
        self.assertEquals(result, ("MLTN", "MLTN"))
        result = double_metaphone("Mohun")
        self.assertEquals(result, ("MHN", "MHN"))
        result = double_metaphone("Montague")
        self.assertEquals(result, ("MNTK", "MNTK"))
        result = double_metaphone("Montboucher")
        self.assertEquals(result, ("MNTP", "MNTP"))
        result = double_metaphone("Moore")
        self.assertEquals(result, ("MR", "MR"))
        result = double_metaphone("Morrel")
        self.assertEquals(result, ("MRL", "MRL"))
        result = double_metaphone("Morrill")
        self.assertEquals(result, ("MRL", "MRL"))
        result = double_metaphone("Morris")
        self.assertEquals(result, ("MRS", "MRS"))
        result = double_metaphone("Morton")
        self.assertEquals(result, ("MRTN", "MRTN"))
        result = double_metaphone("Moton")
        self.assertEquals(result, ("MTN", "MTN"))
        result = double_metaphone("Muir")
        self.assertEquals(result, ("MR", "MR"))
        result = double_metaphone("Mulferd")
        self.assertEquals(result, ("MLFR", "MLFR"))
        result = double_metaphone("Mullins")
        self.assertEquals(result, ("MLNS", "MLNS"))
        result = double_metaphone("Mulso")
        self.assertEquals(result, ("MLS", "MLS"))
        result = double_metaphone("Munger")
        self.assertEquals(result, ("MNKR", "MNJR"))
        result = double_metaphone("Munt")
        self.assertEquals(result, ("MNT", "MNT"))
        result = double_metaphone("Murchad")
        self.assertEquals(result, ("MRXT", "MRKT"))
        result = double_metaphone("Murdock")
        self.assertEquals(result, ("MRTK", "MRTK"))
        result = double_metaphone("Murray")
        self.assertEquals(result, ("MR", "MR"))
        result = double_metaphone("Muskett")
        self.assertEquals(result, ("MSKT", "MSKT"))
        result = double_metaphone("Myers")
        self.assertEquals(result, ("MRS", "MRS"))
        result = double_metaphone("Myrick")
        self.assertEquals(result, ("MRK", "MRK"))
        result = double_metaphone("NORRIS")
        self.assertEquals(result, ("NRS", "NRS"))
        result = double_metaphone("Nayle")
        self.assertEquals(result, ("NL", "NL"))
        result = double_metaphone("Newcomb")
        self.assertEquals(result, ("NKMP", "NKMP"))
        result = double_metaphone("Newcomb(e)")
        self.assertEquals(result, ("NKMP", "NKMP"))
        result = double_metaphone("Newkirk")
        self.assertEquals(result, ("NKRK", "NKRK"))
        result = double_metaphone("Newton")
        self.assertEquals(result, ("NTN", "NTN"))
        result = double_metaphone("Niles")
        self.assertEquals(result, ("NLS", "NLS"))
        result = double_metaphone("Noble")
        self.assertEquals(result, ("NPL", "NPL"))
        result = double_metaphone("Noel")
        self.assertEquals(result, ("NL", "NL"))
        result = double_metaphone("Northend")
        self.assertEquals(result, ("NR0N", "NRTN"))
        result = double_metaphone("Norton")
        self.assertEquals(result, ("NRTN", "NRTN"))
        result = double_metaphone("Nutter")
        self.assertEquals(result, ("NTR", "NTR"))
        result = double_metaphone("Odding")
        self.assertEquals(result, ("ATNK", "ATNK"))
        result = double_metaphone("Odenbaugh")
        self.assertEquals(result, ("ATNP", "ATNP"))
        result = double_metaphone("Ogborn")
        self.assertEquals(result, ("AKPR", "AKPR"))
        result = double_metaphone("Oppenheimer")
        self.assertEquals(result, ("APNM", "APNM"))
        result = double_metaphone("Otis")
        self.assertEquals(result, ("ATS", "ATS"))
        result = double_metaphone("Oviatt")
        self.assertEquals(result, ("AFT", "AFT"))
        result = double_metaphone("PRUST?")
        self.assertEquals(result, ("PRST", "PRST"))
        result = double_metaphone("Paddock")
        self.assertEquals(result, ("PTK", "PTK"))
        result = double_metaphone("Page")
        self.assertEquals(result, ("PJ", "PK"))
        result = double_metaphone("Paine")
        self.assertEquals(result, ("PN", "PN"))
        result = double_metaphone("Paist")
        self.assertEquals(result, ("PST", "PST"))
        result = double_metaphone("Palmer")
        self.assertEquals(result, ("PLMR", "PLMR"))
        result = double_metaphone("Park")
        self.assertEquals(result, ("PRK", "PRK"))
        result = double_metaphone("Parker")
        self.assertEquals(result, ("PRKR", "PRKR"))
        result = double_metaphone("Parkhurst")
        self.assertEquals(result, ("PRKR", "PRKR"))
        result = double_metaphone("Parrat")
        self.assertEquals(result, ("PRT", "PRT"))
        result = double_metaphone("Parsons")
        self.assertEquals(result, ("PRSN", "PRSN"))
        result = double_metaphone("Partridge")
        self.assertEquals(result, ("PRTR", "PRTR"))
        result = double_metaphone("Pashley")
        self.assertEquals(result, ("PXL", "PXL"))
        result = double_metaphone("Pasley")
        self.assertEquals(result, ("PSL", "PSL"))
        result = double_metaphone("Patrick")
        self.assertEquals(result, ("PTRK", "PTRK"))
        result = double_metaphone("Pattee")
        self.assertEquals(result, ("PT", "PT"))
        result = double_metaphone("Patten")
        self.assertEquals(result, ("PTN", "PTN"))
        result = double_metaphone("Pawley")
        self.assertEquals(result, ("PL", "PL"))
        result = double_metaphone("Payne")
        self.assertEquals(result, ("PN", "PN"))
        result = double_metaphone("Peabody")
        self.assertEquals(result, ("PPT", "PPT"))
        result = double_metaphone("Peake")
        self.assertEquals(result, ("PK", "PK"))
        result = double_metaphone("Pearson")
        self.assertEquals(result, ("PRSN", "PRSN"))
        result = double_metaphone("Peat")
        self.assertEquals(result, ("PT", "PT"))
        result = double_metaphone("Pedersen")
        self.assertEquals(result, ("PTRS", "PTRS"))
        result = double_metaphone("Percy")
        self.assertEquals(result, ("PRS", "PRS"))
        result = double_metaphone("Perkins")
        self.assertEquals(result, ("PRKN", "PRKN"))
        result = double_metaphone("Perrine")
        self.assertEquals(result, ("PRN", "PRN"))
        result = double_metaphone("Perry")
        self.assertEquals(result, ("PR", "PR"))
        result = double_metaphone("Peson")
        self.assertEquals(result, ("PSN", "PSN"))
        result = double_metaphone("Peterson")
        self.assertEquals(result, ("PTRS", "PTRS"))
        result = double_metaphone("Peyton")
        self.assertEquals(result, ("PTN", "PTN"))
        result = double_metaphone("Phinney")
        self.assertEquals(result, ("FN", "FN"))
        result = double_metaphone("Pickard")
        self.assertEquals(result, ("PKRT", "PKRT"))
        result = double_metaphone("Pierce")
        self.assertEquals(result, ("PRS", "PRS"))
        result = double_metaphone("Pierrepont")
        self.assertEquals(result, ("PRPN", "PRPN"))
        result = double_metaphone("Pike")
        self.assertEquals(result, ("PK", "PK"))
        result = double_metaphone("Pinkham")
        self.assertEquals(result, ("PNKM", "PNKM"))
        result = double_metaphone("Pitman")
        self.assertEquals(result, ("PTMN", "PTMN"))
        result = double_metaphone("Pitt")
        self.assertEquals(result, ("PT", "PT"))
        result = double_metaphone("Pitts")
        self.assertEquals(result, ("PTS", "PTS"))
        result = double_metaphone("Plantagenet")
        self.assertEquals(result, ("PLNT", "PLNT"))
        result = double_metaphone("Platt")
        self.assertEquals(result, ("PLT", "PLT"))
        result = double_metaphone("Platts")
        self.assertEquals(result, ("PLTS", "PLTS"))
        result = double_metaphone("Pleis")
        self.assertEquals(result, ("PLS", "PLS"))
        result = double_metaphone("Pleiss")
        self.assertEquals(result, ("PLS", "PLS"))
        result = double_metaphone("Plisko")
        self.assertEquals(result, ("PLSK", "PLSK"))
        result = double_metaphone("Pliskovitch")
        self.assertEquals(result, ("PLSK", "PLSK"))
        result = double_metaphone("Plum")
        self.assertEquals(result, ("PLM", "PLM"))
        result = double_metaphone("Plume")
        self.assertEquals(result, ("PLM", "PLM"))
        result = double_metaphone("Poitou")
        self.assertEquals(result, ("PT", "PT"))
        result = double_metaphone("Pomeroy")
        self.assertEquals(result, ("PMR", "PMR"))
        result = double_metaphone("Poretiers")
        self.assertEquals(result, ("PRTR", "PRTR"))
        result = double_metaphone("Pote")
        self.assertEquals(result, ("PT", "PT"))
        result = double_metaphone("Potter")
        self.assertEquals(result, ("PTR", "PTR"))
        result = double_metaphone("Potts")
        self.assertEquals(result, ("PTS", "PTS"))
        result = double_metaphone("Powell")
        self.assertEquals(result, ("PL", "PL"))
        result = double_metaphone("Pratt")
        self.assertEquals(result, ("PRT", "PRT"))
        result = double_metaphone("Presbury")
        self.assertEquals(result, ("PRSP", "PRSP"))
        result = double_metaphone("Priest")
        self.assertEquals(result, ("PRST", "PRST"))
        result = double_metaphone("Prindle")
        self.assertEquals(result, ("PRNT", "PRNT"))
        result = double_metaphone("Prior")
        self.assertEquals(result, ("PRR", "PRR"))
        result = double_metaphone("Profumo")
        self.assertEquals(result, ("PRFM", "PRFM"))
        result = double_metaphone("Purdy")
        self.assertEquals(result, ("PRT", "PRT"))
        result = double_metaphone("Purefoy")
        self.assertEquals(result, ("PRF", "PRF"))
        result = double_metaphone("Pury")
        self.assertEquals(result, ("PR", "PR"))
        result = double_metaphone("Quinter")
        self.assertEquals(result, ("KNTR", "KNTR"))
        result = double_metaphone("Rachel")
        self.assertEquals(result, ("RXL", "RKL"))
        result = double_metaphone("Rand")
        self.assertEquals(result, ("RNT", "RNT"))
        result = double_metaphone("Rankin")
        self.assertEquals(result, ("RNKN", "RNKN"))
        result = double_metaphone("Ravenscroft")
        self.assertEquals(result, ("RFNS", "RFNS"))
        result = double_metaphone("Raynsford")
        self.assertEquals(result, ("RNSF", "RNSF"))
        result = double_metaphone("Reakirt")
        self.assertEquals(result, ("RKRT", "RKRT"))
        result = double_metaphone("Reaves")
        self.assertEquals(result, ("RFS", "RFS"))
        result = double_metaphone("Reeves")
        self.assertEquals(result, ("RFS", "RFS"))
        result = double_metaphone("Reichert")
        self.assertEquals(result, ("RXRT", "RKRT"))
        result = double_metaphone("Remmele")
        self.assertEquals(result, ("RML", "RML"))
        result = double_metaphone("Reynolds")
        self.assertEquals(result, ("RNLT", "RNLT"))
        result = double_metaphone("Rhodes")
        self.assertEquals(result, ("RTS", "RTS"))
        result = double_metaphone("Richards")
        self.assertEquals(result, ("RXRT", "RKRT"))
        result = double_metaphone("Richardson")
        self.assertEquals(result, ("RXRT", "RKRT"))
        result = double_metaphone("Ring")
        self.assertEquals(result, ("RNK", "RNK"))
        result = double_metaphone("Roberts")
        self.assertEquals(result, ("RPRT", "RPRT"))
        result = double_metaphone("Robertson")
        self.assertEquals(result, ("RPRT", "RPRT"))
        result = double_metaphone("Robson")
        self.assertEquals(result, ("RPSN", "RPSN"))
        result = double_metaphone("Rodie")
        self.assertEquals(result, ("RT", "RT"))
        result = double_metaphone("Rody")
        self.assertEquals(result, ("RT", "RT"))
        result = double_metaphone("Rogers")
        self.assertEquals(result, ("RKRS", "RJRS"))
        result = double_metaphone("Ross")
        self.assertEquals(result, ("RS", "RS"))
        result = double_metaphone("Rosslevin")
        self.assertEquals(result, ("RSLF", "RSLF"))
        result = double_metaphone("Rowland")
        self.assertEquals(result, ("RLNT", "RLNT"))
        result = double_metaphone("Ruehl")
        self.assertEquals(result, ("RL", "RL"))
        result = double_metaphone("Russell")
        self.assertEquals(result, ("RSL", "RSL"))
        result = double_metaphone("Ruth")
        self.assertEquals(result, ("R0", "RT"))
        result = double_metaphone("Ryan")
        self.assertEquals(result, ("RN", "RN"))
        result = double_metaphone("Rysse")
        self.assertEquals(result, ("RS", "RS"))
        result = double_metaphone("Sadler")
        self.assertEquals(result, ("STLR", "STLR"))
        result = double_metaphone("Salmon")
        self.assertEquals(result, ("SLMN", "SLMN"))
        result = double_metaphone("Salter")
        self.assertEquals(result, ("SLTR", "SLTR"))
        result = double_metaphone("Salvatore")
        self.assertEquals(result, ("SLFT", "SLFT"))
        result = double_metaphone("Sanders")
        self.assertEquals(result, ("SNTR", "SNTR"))
        result = double_metaphone("Sands")
        self.assertEquals(result, ("SNTS", "SNTS"))
        result = double_metaphone("Sanford")
        self.assertEquals(result, ("SNFR", "SNFR"))
        result = double_metaphone("Sanger")
        self.assertEquals(result, ("SNKR", "SNJR"))
        result = double_metaphone("Sargent")
        self.assertEquals(result, ("SRJN", "SRKN"))
        result = double_metaphone("Saunders")
        self.assertEquals(result, ("SNTR", "SNTR"))
        result = double_metaphone("Schilling")
        self.assertEquals(result, ("XLNK", "XLNK"))
        result = double_metaphone("Schlegel")
        self.assertEquals(result, ("XLKL", "SLKL"))
        result = double_metaphone("Scott")
        self.assertEquals(result, ("SKT", "SKT"))
        result = double_metaphone("Sears")
        self.assertEquals(result, ("SRS", "SRS"))
        result = double_metaphone("Segersall")
        self.assertEquals(result, ("SJRS", "SKRS"))
        result = double_metaphone("Senecal")
        self.assertEquals(result, ("SNKL", "SNKL"))
        result = double_metaphone("Sergeaux")
        self.assertEquals(result, ("SRJ", "SRK"))
        result = double_metaphone("Severance")
        self.assertEquals(result, ("SFRN", "SFRN"))
        result = double_metaphone("Sharp")
        self.assertEquals(result, ("XRP", "XRP"))
        result = double_metaphone("Sharpe")
        self.assertEquals(result, ("XRP", "XRP"))
        result = double_metaphone("Sharply")
        self.assertEquals(result, ("XRPL", "XRPL"))
        result = double_metaphone("Shatswell")
        self.assertEquals(result, ("XTSL", "XTSL"))
        result = double_metaphone("Shattack")
        self.assertEquals(result, ("XTK", "XTK"))
        result = double_metaphone("Shattock")
        self.assertEquals(result, ("XTK", "XTK"))
        result = double_metaphone("Shattuck")
        self.assertEquals(result, ("XTK", "XTK"))
        result = double_metaphone("Shaw")
        self.assertEquals(result, ("X", "XF"))
        result = double_metaphone("Sheldon")
        self.assertEquals(result, ("XLTN", "XLTN"))
        result = double_metaphone("Sherman")
        self.assertEquals(result, ("XRMN", "XRMN"))
        result = double_metaphone("Shinn")
        self.assertEquals(result, ("XN", "XN"))
        result = double_metaphone("Shirford")
        self.assertEquals(result, ("XRFR", "XRFR"))
        result = double_metaphone("Shirley")
        self.assertEquals(result, ("XRL", "XRL"))
        result = double_metaphone("Shively")
        self.assertEquals(result, ("XFL", "XFL"))
        result = double_metaphone("Shoemaker")
        self.assertEquals(result, ("XMKR", "XMKR"))
        result = double_metaphone("Short")
        self.assertEquals(result, ("XRT", "XRT"))
        result = double_metaphone("Shotwell")
        self.assertEquals(result, ("XTL", "XTL"))
        result = double_metaphone("Shute")
        self.assertEquals(result, ("XT", "XT"))
        result = double_metaphone("Sibley")
        self.assertEquals(result, ("SPL", "SPL"))
        result = double_metaphone("Silver")
        self.assertEquals(result, ("SLFR", "SLFR"))
        result = double_metaphone("Simes")
        self.assertEquals(result, ("SMS", "SMS"))
        result = double_metaphone("Sinken")
        self.assertEquals(result, ("SNKN", "SNKN"))
        result = double_metaphone("Sinn")
        self.assertEquals(result, ("SN", "SN"))
        result = double_metaphone("Skelton")
        self.assertEquals(result, ("SKLT", "SKLT"))
        result = double_metaphone("Skiffe")
        self.assertEquals(result, ("SKF", "SKF"))
        result = double_metaphone("Skotkonung")
        self.assertEquals(result, ("SKTK", "SKTK"))
        result = double_metaphone("Slade")
        self.assertEquals(result, ("SLT", "XLT"))
        result = double_metaphone("Slye")
        self.assertEquals(result, ("SL", "XL"))
        result = double_metaphone("Smedley")
        self.assertEquals(result, ("SMTL", "XMTL"))
        result = double_metaphone("Smith")
        self.assertEquals(result, ("SM0", "XMT"))
        result = double_metaphone("Snow")
        self.assertEquals(result, ("SN", "XNF"))
        result = double_metaphone("Soole")
        self.assertEquals(result, ("SL", "SL"))
        result = double_metaphone("Soule")
        self.assertEquals(result, ("SL", "SL"))
        result = double_metaphone("Southworth")
        self.assertEquals(result, ("S0R0", "STRT"))
        result = double_metaphone("Sowles")
        self.assertEquals(result, ("SLS", "SLS"))
        result = double_metaphone("Spalding")
        self.assertEquals(result, ("SPLT", "SPLT"))
        result = double_metaphone("Spark")
        self.assertEquals(result, ("SPRK", "SPRK"))
        result = double_metaphone("Spencer")
        self.assertEquals(result, ("SPNS", "SPNS"))
        result = double_metaphone("Sperry")
        self.assertEquals(result, ("SPR", "SPR"))
        result = double_metaphone("Spofford")
        self.assertEquals(result, ("SPFR", "SPFR"))
        result = double_metaphone("Spooner")
        self.assertEquals(result, ("SPNR", "SPNR"))
        result = double_metaphone("Sprague")
        self.assertEquals(result, ("SPRK", "SPRK"))
        result = double_metaphone("Springer")
        self.assertEquals(result, ("SPRN", "SPRN"))
        result = double_metaphone("St. Clair")
        self.assertEquals(result, ("STKL", "STKL"))
        result = double_metaphone("St. Claire")
        self.assertEquals(result, ("STKL", "STKL"))
        result = double_metaphone("St. Leger")
        self.assertEquals(result, ("STLJ", "STLK"))
        result = double_metaphone("St. Omer")
        self.assertEquals(result, ("STMR", "STMR"))
        result = double_metaphone("Stafferton")
        self.assertEquals(result, ("STFR", "STFR"))
        result = double_metaphone("Stafford")
        self.assertEquals(result, ("STFR", "STFR"))
        result = double_metaphone("Stalham")
        self.assertEquals(result, ("STLM", "STLM"))
        result = double_metaphone("Stanford")
        self.assertEquals(result, ("STNF", "STNF"))
        result = double_metaphone("Stanton")
        self.assertEquals(result, ("STNT", "STNT"))
        result = double_metaphone("Star")
        self.assertEquals(result, ("STR", "STR"))
        result = double_metaphone("Starbuck")
        self.assertEquals(result, ("STRP", "STRP"))
        result = double_metaphone("Starkey")
        self.assertEquals(result, ("STRK", "STRK"))
        result = double_metaphone("Starkweather")
        self.assertEquals(result, ("STRK", "STRK"))
        result = double_metaphone("Stearns")
        self.assertEquals(result, ("STRN", "STRN"))
        result = double_metaphone("Stebbins")
        self.assertEquals(result, ("STPN", "STPN"))
        result = double_metaphone("Steele")
        self.assertEquals(result, ("STL", "STL"))
        result = double_metaphone("Stephenson")
        self.assertEquals(result, ("STFN", "STFN"))
        result = double_metaphone("Stevens")
        self.assertEquals(result, ("STFN", "STFN"))
        result = double_metaphone("Stoddard")
        self.assertEquals(result, ("STTR", "STTR"))
        result = double_metaphone("Stodder")
        self.assertEquals(result, ("STTR", "STTR"))
        result = double_metaphone("Stone")
        self.assertEquals(result, ("STN", "STN"))
        result = double_metaphone("Storey")
        self.assertEquals(result, ("STR", "STR"))
        result = double_metaphone("Storrada")
        self.assertEquals(result, ("STRT", "STRT"))
        result = double_metaphone("Story")
        self.assertEquals(result, ("STR", "STR"))
        result = double_metaphone("Stoughton")
        self.assertEquals(result, ("STFT", "STFT"))
        result = double_metaphone("Stout")
        self.assertEquals(result, ("STT", "STT"))
        result = double_metaphone("Stow")
        self.assertEquals(result, ("ST", "STF"))
        result = double_metaphone("Strong")
        self.assertEquals(result, ("STRN", "STRN"))
        result = double_metaphone("Strutt")
        self.assertEquals(result, ("STRT", "STRT"))
        result = double_metaphone("Stryker")
        self.assertEquals(result, ("STRK", "STRK"))
        result = double_metaphone("Stuckeley")
        self.assertEquals(result, ("STKL", "STKL"))
        result = double_metaphone("Sturges")
        self.assertEquals(result, ("STRJ", "STRK"))
        result = double_metaphone("Sturgess")
        self.assertEquals(result, ("STRJ", "STRK"))
        result = double_metaphone("Sturgis")
        self.assertEquals(result, ("STRJ", "STRK"))
        result = double_metaphone("Suevain")
        self.assertEquals(result, ("SFN", "SFN"))
        result = double_metaphone("Sulyard")
        self.assertEquals(result, ("SLRT", "SLRT"))
        result = double_metaphone("Sutton")
        self.assertEquals(result, ("STN", "STN"))
        result = double_metaphone("Swain")
        self.assertEquals(result, ("SN", "XN"))
        result = double_metaphone("Swayne")
        self.assertEquals(result, ("SN", "XN"))
        result = double_metaphone("Swayze")
        self.assertEquals(result, ("SS", "XTS"))
        result = double_metaphone("Swift")
        self.assertEquals(result, ("SFT", "XFT"))
        result = double_metaphone("Taber")
        self.assertEquals(result, ("TPR", "TPR"))
        result = double_metaphone("Talcott")
        self.assertEquals(result, ("TLKT", "TLKT"))
        result = double_metaphone("Tarne")
        self.assertEquals(result, ("TRN", "TRN"))
        result = double_metaphone("Tatum")
        self.assertEquals(result, ("TTM", "TTM"))
        result = double_metaphone("Taverner")
        self.assertEquals(result, ("TFRN", "TFRN"))
        result = double_metaphone("Taylor")
        self.assertEquals(result, ("TLR", "TLR"))
        result = double_metaphone("Tenney")
        self.assertEquals(result, ("TN", "TN"))
        result = double_metaphone("Thayer")
        self.assertEquals(result, ("0R", "TR"))
        result = double_metaphone("Thember")
        self.assertEquals(result, ("0MPR", "TMPR"))
        result = double_metaphone("Thomas")
        self.assertEquals(result, ("TMS", "TMS"))
        result = double_metaphone("Thompson")
        self.assertEquals(result, ("TMPS", "TMPS"))
        result = double_metaphone("Thorne")
        self.assertEquals(result, ("0RN", "TRN"))
        result = double_metaphone("Thornycraft")
        self.assertEquals(result, ("0RNK", "TRNK"))
        result = double_metaphone("Threlkeld")
        self.assertEquals(result, ("0RLK", "TRLK"))
        result = double_metaphone("Throckmorton")
        self.assertEquals(result, ("0RKM", "TRKM"))
        result = double_metaphone("Thwaits")
        self.assertEquals(result, ("0TS", "TTS"))
        result = double_metaphone("Tibbetts")
        self.assertEquals(result, ("TPTS", "TPTS"))
        result = double_metaphone("Tidd")
        self.assertEquals(result, ("TT", "TT"))
        result = double_metaphone("Tierney")
        self.assertEquals(result, ("TRN", "TRN"))
        result = double_metaphone("Tilley")
        self.assertEquals(result, ("TL", "TL"))
        result = double_metaphone("Tillieres")
        self.assertEquals(result, ("TLRS", "TLRS"))
        result = double_metaphone("Tilly")
        self.assertEquals(result, ("TL", "TL"))
        result = double_metaphone("Tisdale")
        self.assertEquals(result, ("TSTL", "TSTL"))
        result = double_metaphone("Titus")
        self.assertEquals(result, ("TTS", "TTS"))
        result = double_metaphone("Tobey")
        self.assertEquals(result, ("TP", "TP"))
        result = double_metaphone("Tooker")
        self.assertEquals(result, ("TKR", "TKR"))
        result = double_metaphone("Towle")
        self.assertEquals(result, ("TL", "TL"))
        result = double_metaphone("Towne")
        self.assertEquals(result, ("TN", "TN"))
        result = double_metaphone("Townsend")
        self.assertEquals(result, ("TNSN", "TNSN"))
        result = double_metaphone("Treadway")
        self.assertEquals(result, ("TRT", "TRT"))
        result = double_metaphone("Trelawney")
        self.assertEquals(result, ("TRLN", "TRLN"))
        result = double_metaphone("Trinder")
        self.assertEquals(result, ("TRNT", "TRNT"))
        result = double_metaphone("Tripp")
        self.assertEquals(result, ("TRP", "TRP"))
        result = double_metaphone("Trippe")
        self.assertEquals(result, ("TRP", "TRP"))
        result = double_metaphone("Trott")
        self.assertEquals(result, ("TRT", "TRT"))
        result = double_metaphone("True")
        self.assertEquals(result, ("TR", "TR"))
        result = double_metaphone("Trussebut")
        self.assertEquals(result, ("TRSP", "TRSP"))
        result = double_metaphone("Tucker")
        self.assertEquals(result, ("TKR", "TKR"))
        result = double_metaphone("Turgeon")
        self.assertEquals(result, ("TRJN", "TRKN"))
        result = double_metaphone("Turner")
        self.assertEquals(result, ("TRNR", "TRNR"))
        result = double_metaphone("Tuttle")
        self.assertEquals(result, ("TTL", "TTL"))
        result = double_metaphone("Tyler")
        self.assertEquals(result, ("TLR", "TLR"))
        result = double_metaphone("Tylle")
        self.assertEquals(result, ("TL", "TL"))
        result = double_metaphone("Tyrrel")
        self.assertEquals(result, ("TRL", "TRL"))
        result = double_metaphone("Ua Tuathail")
        self.assertEquals(result, ("AT0L", "ATTL"))
        result = double_metaphone("Ulrich")
        self.assertEquals(result, ("ALRX", "ALRK"))
        result = double_metaphone("Underhill")
        self.assertEquals(result, ("ANTR", "ANTR"))
        result = double_metaphone("Underwood")
        self.assertEquals(result, ("ANTR", "ANTR"))
        result = double_metaphone("Unknown")
        self.assertEquals(result, ("ANKN", "ANKN"))
        result = double_metaphone("Valentine")
        self.assertEquals(result, ("FLNT", "FLNT"))
        result = double_metaphone("Van Egmond")
        self.assertEquals(result, ("FNKM", "FNKM"))
        result = double_metaphone("Van der Beek")
        self.assertEquals(result, ("FNTR", "FNTR"))
        result = double_metaphone("Vaughan")
        self.assertEquals(result, ("FKN", "FKN"))
        result = double_metaphone("Vermenlen")
        self.assertEquals(result, ("FRMN", "FRMN"))
        result = double_metaphone("Vincent")
        self.assertEquals(result, ("FNSN", "FNSN"))
        result = double_metaphone("Volentine")
        self.assertEquals(result, ("FLNT", "FLNT"))
        result = double_metaphone("Wagner")
        self.assertEquals(result, ("AKNR", "FKNR"))
        result = double_metaphone("Waite")
        self.assertEquals(result, ("AT", "FT"))
        result = double_metaphone("Walker")
        self.assertEquals(result, ("ALKR", "FLKR"))
        result = double_metaphone("Walter")
        self.assertEquals(result, ("ALTR", "FLTR"))
        result = double_metaphone("Wandell")
        self.assertEquals(result, ("ANTL", "FNTL"))
        result = double_metaphone("Wandesford")
        self.assertEquals(result, ("ANTS", "FNTS"))
        result = double_metaphone("Warbleton")
        self.assertEquals(result, ("ARPL", "FRPL"))
        result = double_metaphone("Ward")
        self.assertEquals(result, ("ART", "FRT"))
        result = double_metaphone("Warde")
        self.assertEquals(result, ("ART", "FRT"))
        result = double_metaphone("Ware")
        self.assertEquals(result, ("AR", "FR"))
        result = double_metaphone("Wareham")
        self.assertEquals(result, ("ARHM", "FRHM"))
        result = double_metaphone("Warner")
        self.assertEquals(result, ("ARNR", "FRNR"))
        result = double_metaphone("Warren")
        self.assertEquals(result, ("ARN", "FRN"))
        result = double_metaphone("Washburne")
        self.assertEquals(result, ("AXPR", "FXPR"))
        result = double_metaphone("Waterbury")
        self.assertEquals(result, ("ATRP", "FTRP"))
        result = double_metaphone("Watson")
        self.assertEquals(result, ("ATSN", "FTSN"))
        result = double_metaphone("WatsonEllithorpe")
        self.assertEquals(result, ("ATSN", "FTSN"))
        result = double_metaphone("Watts")
        self.assertEquals(result, ("ATS", "FTS"))
        result = double_metaphone("Wayne")
        self.assertEquals(result, ("AN", "FN"))
        result = double_metaphone("Webb")
        self.assertEquals(result, ("AP", "FP"))
        result = double_metaphone("Weber")
        self.assertEquals(result, ("APR", "FPR"))
        result = double_metaphone("Webster")
        self.assertEquals(result, ("APST", "FPST"))
        result = double_metaphone("Weed")
        self.assertEquals(result, ("AT", "FT"))
        result = double_metaphone("Weeks")
        self.assertEquals(result, ("AKS", "FKS"))
        result = double_metaphone("Wells")
        self.assertEquals(result, ("ALS", "FLS"))
        result = double_metaphone("Wenzell")
        self.assertEquals(result, ("ANSL", "FNTS"))
        result = double_metaphone("West")
        self.assertEquals(result, ("AST", "FST"))
        result = double_metaphone("Westbury")
        self.assertEquals(result, ("ASTP", "FSTP"))
        result = double_metaphone("Whatlocke")
        self.assertEquals(result, ("ATLK", "ATLK"))
        result = double_metaphone("Wheeler")
        self.assertEquals(result, ("ALR", "ALR"))
        result = double_metaphone("Whiston")
        self.assertEquals(result, ("ASTN", "ASTN"))
        result = double_metaphone("White")
        self.assertEquals(result, ("AT", "AT"))
        result = double_metaphone("Whitman")
        self.assertEquals(result, ("ATMN", "ATMN"))
        result = double_metaphone("Whiton")
        self.assertEquals(result, ("ATN", "ATN"))
        result = double_metaphone("Whitson")
        self.assertEquals(result, ("ATSN", "ATSN"))
        result = double_metaphone("Wickes")
        self.assertEquals(result, ("AKS", "FKS"))
        result = double_metaphone("Wilbur")
        self.assertEquals(result, ("ALPR", "FLPR"))
        result = double_metaphone("Wilcotes")
        self.assertEquals(result, ("ALKT", "FLKT"))
        result = double_metaphone("Wilkinson")
        self.assertEquals(result, ("ALKN", "FLKN"))
        result = double_metaphone("Willets")
        self.assertEquals(result, ("ALTS", "FLTS"))
        result = double_metaphone("Willett")
        self.assertEquals(result, ("ALT", "FLT"))
        result = double_metaphone("Willey")
        self.assertEquals(result, ("AL", "FL"))
        result = double_metaphone("Williams")
        self.assertEquals(result, ("ALMS", "FLMS"))
        result = double_metaphone("Williston")
        self.assertEquals(result, ("ALST", "FLST"))
        result = double_metaphone("Wilson")
        self.assertEquals(result, ("ALSN", "FLSN"))
        result = double_metaphone("Wimes")
        self.assertEquals(result, ("AMS", "FMS"))
        result = double_metaphone("Winch")
        self.assertEquals(result, ("ANX", "FNK"))
        result = double_metaphone("Winegar")
        self.assertEquals(result, ("ANKR", "FNKR"))
        result = double_metaphone("Wing")
        self.assertEquals(result, ("ANK", "FNK"))
        result = double_metaphone("Winsley")
        self.assertEquals(result, ("ANSL", "FNSL"))
        result = double_metaphone("Winslow")
        self.assertEquals(result, ("ANSL", "FNSL"))
        result = double_metaphone("Winthrop")
        self.assertEquals(result, ("AN0R", "FNTR"))
        result = double_metaphone("Wise")
        self.assertEquals(result, ("AS", "FS"))
        result = double_metaphone("Wood")
        self.assertEquals(result, ("AT", "FT"))
        result = double_metaphone("Woodbridge")
        self.assertEquals(result, ("ATPR", "FTPR"))
        result = double_metaphone("Woodward")
        self.assertEquals(result, ("ATRT", "FTRT"))
        result = double_metaphone("Wooley")
        self.assertEquals(result, ("AL", "FL"))
        result = double_metaphone("Woolley")
        self.assertEquals(result, ("AL", "FL"))
        result = double_metaphone("Worth")
        self.assertEquals(result, ("AR0", "FRT"))
        result = double_metaphone("Worthen")
        self.assertEquals(result, ("AR0N", "FRTN"))
        result = double_metaphone("Worthley")
        self.assertEquals(result, ("AR0L", "FRTL"))
        result = double_metaphone("Wright")
        self.assertEquals(result, ("RT", "RT"))
        result = double_metaphone("Wyer")
        self.assertEquals(result, ("AR", "FR"))
        result = double_metaphone("Wyere")
        self.assertEquals(result, ("AR", "FR"))
        result = double_metaphone("Wynkoop")
        self.assertEquals(result, ("ANKP", "FNKP"))
        result = double_metaphone("Yarnall")
        self.assertEquals(result, ("ARNL", "ARNL"))
        result = double_metaphone("Yeoman")
        self.assertEquals(result, ("AMN", "AMN"))
        result = double_metaphone("Yorke")
        self.assertEquals(result, ("ARK", "ARK"))
        result = double_metaphone("Young")
        self.assertEquals(result, ("ANK", "ANK"))
        result = double_metaphone("ab Wennonwen")
        self.assertEquals(result, ("APNN", "APNN"))
        result = double_metaphone("ap Llewellyn")
        self.assertEquals(result, ("APLL", "APLL"))
        result = double_metaphone("ap Lorwerth")
        self.assertEquals(result, ("APLR", "APLR"))
        result = double_metaphone("d'Angouleme")
        self.assertEquals(result, ("TNKL", "TNKL"))
        result = double_metaphone("de Audeham")
        self.assertEquals(result, ("TTHM", "TTHM"))
        result = double_metaphone("de Bavant")
        self.assertEquals(result, ("TPFN", "TPFN"))
        result = double_metaphone("de Beauchamp")
        self.assertEquals(result, ("TPXM", "TPKM"))
        result = double_metaphone("de Beaumont")
        self.assertEquals(result, ("TPMN", "TPMN"))
        result = double_metaphone("de Bolbec")
        self.assertEquals(result, ("TPLP", "TPLP"))
        result = double_metaphone("de Braiose")
        self.assertEquals(result, ("TPRS", "TPRS"))
        result = double_metaphone("de Braose")
        self.assertEquals(result, ("TPRS", "TPRS"))
        result = double_metaphone("de Briwere")
        self.assertEquals(result, ("TPRR", "TPRR"))
        result = double_metaphone("de Cantelou")
        self.assertEquals(result, ("TKNT", "TKNT"))
        result = double_metaphone("de Cherelton")
        self.assertEquals(result, ("TXRL", "TKRL"))
        result = double_metaphone("de Cherleton")
        self.assertEquals(result, ("TXRL", "TKRL"))
        result = double_metaphone("de Clare")
        self.assertEquals(result, ("TKLR", "TKLR"))
        result = double_metaphone("de Claremont")
        self.assertEquals(result, ("TKLR", "TKLR"))
        result = double_metaphone("de Clifford")
        self.assertEquals(result, ("TKLF", "TKLF"))
        result = double_metaphone("de Colville")
        self.assertEquals(result, ("TKLF", "TKLF"))
        result = double_metaphone("de Courtenay")
        self.assertEquals(result, ("TKRT", "TKRT"))
        result = double_metaphone("de Fauconberg")
        self.assertEquals(result, ("TFKN", "TFKN"))
        result = double_metaphone("de Forest")
        self.assertEquals(result, ("TFRS", "TFRS"))
        result = double_metaphone("de Gai")
        self.assertEquals(result, ("TK", "TK"))
        result = double_metaphone("de Grey")
        self.assertEquals(result, ("TKR", "TKR"))
        result = double_metaphone("de Guernons")
        self.assertEquals(result, ("TKRN", "TKRN"))
        result = double_metaphone("de Haia")
        self.assertEquals(result, ("T", "T"))
        result = double_metaphone("de Harcourt")
        self.assertEquals(result, ("TRKR", "TRKR"))
        result = double_metaphone("de Hastings")
        self.assertEquals(result, ("TSTN", "TSTN"))
        result = double_metaphone("de Hoke")
        self.assertEquals(result, ("TK", "TK"))
        result = double_metaphone("de Hooch")
        self.assertEquals(result, ("TK", "TK"))
        result = double_metaphone("de Hugelville")
        self.assertEquals(result, ("TJLF", "TKLF"))
        result = double_metaphone("de Huntingdon")
        self.assertEquals(result, ("TNTN", "TNTN"))
        result = double_metaphone("de Insula")
        self.assertEquals(result, ("TNSL", "TNSL"))
        result = double_metaphone("de Keynes")
        self.assertEquals(result, ("TKNS", "TKNS"))
        result = double_metaphone("de Lacy")
        self.assertEquals(result, ("TLS", "TLS"))
        result = double_metaphone("de Lexington")
        self.assertEquals(result, ("TLKS", "TLKS"))
        result = double_metaphone("de Lusignan")
        self.assertEquals(result, ("TLSN", "TLSK"))
        result = double_metaphone("de Manvers")
        self.assertEquals(result, ("TMNF", "TMNF"))
        result = double_metaphone("de Montagu")
        self.assertEquals(result, ("TMNT", "TMNT"))
        result = double_metaphone("de Montault")
        self.assertEquals(result, ("TMNT", "TMNT"))
        result = double_metaphone("de Montfort")
        self.assertEquals(result, ("TMNT", "TMNT"))
        result = double_metaphone("de Mortimer")
        self.assertEquals(result, ("TMRT", "TMRT"))
        result = double_metaphone("de Morville")
        self.assertEquals(result, ("TMRF", "TMRF"))
        result = double_metaphone("de Morvois")
        self.assertEquals(result, ("TMRF", "TMRF"))
        result = double_metaphone("de Neufmarche")
        self.assertEquals(result, ("TNFM", "TNFM"))
        result = double_metaphone("de Odingsells")
        self.assertEquals(result, ("TTNK", "TTNK"))
        result = double_metaphone("de Odyngsells")
        self.assertEquals(result, ("TTNK", "TTNK"))
        result = double_metaphone("de Percy")
        self.assertEquals(result, ("TPRS", "TPRS"))
        result = double_metaphone("de Pierrepont")
        self.assertEquals(result, ("TPRP", "TPRP"))
        result = double_metaphone("de Plessetis")
        self.assertEquals(result, ("TPLS", "TPLS"))
        result = double_metaphone("de Porhoet")
        self.assertEquals(result, ("TPRT", "TPRT"))
        result = double_metaphone("de Prouz")
        self.assertEquals(result, ("TPRS", "TPRS"))
        result = double_metaphone("de Quincy")
        self.assertEquals(result, ("TKNS", "TKNS"))
        result = double_metaphone("de Ripellis")
        self.assertEquals(result, ("TRPL", "TRPL"))
        result = double_metaphone("de Ros")
        self.assertEquals(result, ("TRS", "TRS"))
        result = double_metaphone("de Salisbury")
        self.assertEquals(result, ("TSLS", "TSLS"))
        result = double_metaphone("de Sanford")
        self.assertEquals(result, ("TSNF", "TSNF"))
        result = double_metaphone("de Somery")
        self.assertEquals(result, ("TSMR", "TSMR"))
        result = double_metaphone("de St. Hilary")
        self.assertEquals(result, ("TSTL", "TSTL"))
        result = double_metaphone("de St. Liz")
        self.assertEquals(result, ("TSTL", "TSTL"))
        result = double_metaphone("de Sutton")
        self.assertEquals(result, ("TSTN", "TSTN"))
        result = double_metaphone("de Toeni")
        self.assertEquals(result, ("TTN", "TTN"))
        result = double_metaphone("de Tony")
        self.assertEquals(result, ("TTN", "TTN"))
        result = double_metaphone("de Umfreville")
        self.assertEquals(result, ("TMFR", "TMFR"))
        result = double_metaphone("de Valognes")
        self.assertEquals(result, ("TFLN", "TFLK"))
        result = double_metaphone("de Vaux")
        self.assertEquals(result, ("TF", "TF"))
        result = double_metaphone("de Vere")
        self.assertEquals(result, ("TFR", "TFR"))
        result = double_metaphone("de Vermandois")
        self.assertEquals(result, ("TFRM", "TFRM"))
        result = double_metaphone("de Vernon")
        self.assertEquals(result, ("TFRN", "TFRN"))
        result = double_metaphone("de Vexin")
        self.assertEquals(result, ("TFKS", "TFKS"))
        result = double_metaphone("de Vitre")
        self.assertEquals(result, ("TFTR", "TFTR"))
        result = double_metaphone("de Wandesford")
        self.assertEquals(result, ("TNTS", "TNTS"))
        result = double_metaphone("de Warenne")
        self.assertEquals(result, ("TRN", "TRN"))
        result = double_metaphone("de Westbury")
        self.assertEquals(result, ("TSTP", "TSTP"))
        result = double_metaphone("di Saluzzo")
        self.assertEquals(result, ("TSLS", "TSLT"))
        result = double_metaphone("fitz Alan")
        self.assertEquals(result, ("FTSL", "FTSL"))
        result = double_metaphone("fitz Geoffrey")
        self.assertEquals(result, ("FTSJ", "FTSK"))
        result = double_metaphone("fitz Herbert")
        self.assertEquals(result, ("FTSR", "FTSR"))
        result = double_metaphone("fitz John")
        self.assertEquals(result, ("FTSJ", "FTSJ"))
        result = double_metaphone("fitz Patrick")
        self.assertEquals(result, ("FTSP", "FTSP"))
        result = double_metaphone("fitz Payn")
        self.assertEquals(result, ("FTSP", "FTSP"))
        result = double_metaphone("fitz Piers")
        self.assertEquals(result, ("FTSP", "FTSP"))
        result = double_metaphone("fitz Randolph")
        self.assertEquals(result, ("FTSR", "FTSR"))
        result = double_metaphone("fitz Richard")
        self.assertEquals(result, ("FTSR", "FTSR"))
        result = double_metaphone("fitz Robert")
        self.assertEquals(result, ("FTSR", "FTSR"))
        result = double_metaphone("fitz Roy")
        self.assertEquals(result, ("FTSR", "FTSR"))
        result = double_metaphone("fitz Scrob")
        self.assertEquals(result, ("FTSS", "FTSS"))
        result = double_metaphone("fitz Walter")
        self.assertEquals(result, ("FTSL", "FTSL"))
        result = double_metaphone("fitz Warin")
        self.assertEquals(result, ("FTSR", "FTSR"))
        result = double_metaphone("fitz Williams")
        self.assertEquals(result, ("FTSL", "FTSL"))
        result = double_metaphone("la Zouche")
        self.assertEquals(result, ("LSX", "LSK"))
        result = double_metaphone("le Botiller")
        self.assertEquals(result, ("LPTL", "LPTL"))
        result = double_metaphone("le Despenser")
        self.assertEquals(result, ("LTSP", "LTSP"))
        result = double_metaphone("le deSpencer")
        self.assertEquals(result, ("LTSP", "LTSP"))
        result = double_metaphone("of Allendale")
        self.assertEquals(result, ("AFLN", "AFLN"))
        result = double_metaphone("of Angouleme")
        self.assertEquals(result, ("AFNK", "AFNK"))
        result = double_metaphone("of Anjou")
        self.assertEquals(result, ("AFNJ", "AFNJ"))
        result = double_metaphone("of Aquitaine")
        self.assertEquals(result, ("AFKT", "AFKT"))
        result = double_metaphone("of Aumale")
        self.assertEquals(result, ("AFML", "AFML"))
        result = double_metaphone("of Bavaria")
        self.assertEquals(result, ("AFPF", "AFPF"))
        result = double_metaphone("of Boulogne")
        self.assertEquals(result, ("AFPL", "AFPL"))
        result = double_metaphone("of Brittany")
        self.assertEquals(result, ("AFPR", "AFPR"))
        result = double_metaphone("of Brittary")
        self.assertEquals(result, ("AFPR", "AFPR"))
        result = double_metaphone("of Castile")
        self.assertEquals(result, ("AFKS", "AFKS"))
        result = double_metaphone("of Chester")
        self.assertEquals(result, ("AFXS", "AFKS"))
        result = double_metaphone("of Clermont")
        self.assertEquals(result, ("AFKL", "AFKL"))
        result = double_metaphone("of Cologne")
        self.assertEquals(result, ("AFKL", "AFKL"))
        result = double_metaphone("of Dinan")
        self.assertEquals(result, ("AFTN", "AFTN"))
        result = double_metaphone("of Dunbar")
        self.assertEquals(result, ("AFTN", "AFTN"))
        result = double_metaphone("of England")
        self.assertEquals(result, ("AFNK", "AFNK"))
        result = double_metaphone("of Essex")
        self.assertEquals(result, ("AFSK", "AFSK"))
        result = double_metaphone("of Falaise")
        self.assertEquals(result, ("AFFL", "AFFL"))
        result = double_metaphone("of Flanders")
        self.assertEquals(result, ("AFFL", "AFFL"))
        result = double_metaphone("of Galloway")
        self.assertEquals(result, ("AFKL", "AFKL"))
        result = double_metaphone("of Germany")
        self.assertEquals(result, ("AFKR", "AFJR"))
        result = double_metaphone("of Gloucester")
        self.assertEquals(result, ("AFKL", "AFKL"))
        result = double_metaphone("of Heristal")
        self.assertEquals(result, ("AFRS", "AFRS"))
        result = double_metaphone("of Hungary")
        self.assertEquals(result, ("AFNK", "AFNK"))
        result = double_metaphone("of Huntington")
        self.assertEquals(result, ("AFNT", "AFNT"))
        result = double_metaphone("of Kiev")
        self.assertEquals(result, ("AFKF", "AFKF"))
        result = double_metaphone("of Kuno")
        self.assertEquals(result, ("AFKN", "AFKN"))
        result = double_metaphone("of Landen")
        self.assertEquals(result, ("AFLN", "AFLN"))
        result = double_metaphone("of Laon")
        self.assertEquals(result, ("AFLN", "AFLN"))
        result = double_metaphone("of Leinster")
        self.assertEquals(result, ("AFLN", "AFLN"))
        result = double_metaphone("of Lens")
        self.assertEquals(result, ("AFLN", "AFLN"))
        result = double_metaphone("of Lorraine")
        self.assertEquals(result, ("AFLR", "AFLR"))
        result = double_metaphone("of Louvain")
        self.assertEquals(result, ("AFLF", "AFLF"))
        result = double_metaphone("of Mercia")
        self.assertEquals(result, ("AFMR", "AFMR"))
        result = double_metaphone("of Metz")
        self.assertEquals(result, ("AFMT", "AFMT"))
        result = double_metaphone("of Meulan")
        self.assertEquals(result, ("AFML", "AFML"))
        result = double_metaphone("of Nass")
        self.assertEquals(result, ("AFNS", "AFNS"))
        result = double_metaphone("of Normandy")
        self.assertEquals(result, ("AFNR", "AFNR"))
        result = double_metaphone("of Ohningen")
        self.assertEquals(result, ("AFNN", "AFNN"))
        result = double_metaphone("of Orleans")
        self.assertEquals(result, ("AFRL", "AFRL"))
        result = double_metaphone("of Poitou")
        self.assertEquals(result, ("AFPT", "AFPT"))
        result = double_metaphone("of Polotzk")
        self.assertEquals(result, ("AFPL", "AFPL"))
        result = double_metaphone("of Provence")
        self.assertEquals(result, ("AFPR", "AFPR"))
        result = double_metaphone("of Ringelheim")
        self.assertEquals(result, ("AFRN", "AFRN"))
        result = double_metaphone("of Salisbury")
        self.assertEquals(result, ("AFSL", "AFSL"))
        result = double_metaphone("of Saxony")
        self.assertEquals(result, ("AFSK", "AFSK"))
        result = double_metaphone("of Scotland")
        self.assertEquals(result, ("AFSK", "AFSK"))
        result = double_metaphone("of Senlis")
        self.assertEquals(result, ("AFSN", "AFSN"))
        result = double_metaphone("of Stafford")
        self.assertEquals(result, ("AFST", "AFST"))
        result = double_metaphone("of Swabia")
        self.assertEquals(result, ("AFSP", "AFSP"))
        result = double_metaphone("of Tongres")
        self.assertEquals(result, ("AFTN", "AFTN"))
        result = double_metaphone("of the Tributes")
        self.assertEquals(result, ("AF0T", "AFTT"))
        result = double_metaphone("unknown")
        self.assertEquals(result, ("ANKN", "ANKN"))
        result = double_metaphone("van der Gouda")
        self.assertEquals(result, ("FNTR", "FNTR"))
        result = double_metaphone("von Adenbaugh")
        self.assertEquals(result, ("FNTN", "FNTN"))
        
        # added some additional names to check out specific test cases
        
        result = double_metaphone("ARCHITure")
        self.assertEquals(result, ("ARKT", "ARKT"))
        result = double_metaphone("Arnoff")
        self.assertEquals(result, ("ARNF", "ARNF"))
        result = double_metaphone("Arnow")
        self.assertEquals(result, ("ARN", "ARNF"))
        result = double_metaphone("DANGER")
        self.assertEquals(result, ("TNJR", "TNKR"))
        result = double_metaphone("Jankelowicz")
        self.assertEquals(result, ("JNKL", "ANKL"))
        result = double_metaphone("MANGER")
        self.assertEquals(result, ("MNJR", "MNKR"))
        result = double_metaphone("McClellan")
        self.assertEquals(result, ("MKLL", "MKLL"))
        result = double_metaphone("McHugh")
        self.assertEquals(result, ("MK", "MK"))
        result = double_metaphone("McLaughlin")
        self.assertEquals(result, ("MKLF", "MKLF"))
        result = double_metaphone("ORCHEStra")
        self.assertEquals(result, ("ARKS", "ARKS"))
        result = double_metaphone("ORCHID")
        self.assertEquals(result, ("ARKT", "ARKT"))
        result = double_metaphone("Pierce")
        self.assertEquals(result, ("PRS", "PRS"))
        result = double_metaphone("RANGER")
        self.assertEquals(result, ("RNJR", "RNKR"))
        result = double_metaphone("Schlesinger")
        self.assertEquals(result, ("XLSN", "SLSN"))
        result = double_metaphone("Uomo")
        self.assertEquals(result, ("AM", "AM"))
        result = double_metaphone("Vasserman")
        self.assertEquals(result, ("FSRM", "FSRM"))
        result = double_metaphone("Wasserman")
        self.assertEquals(result, ("ASRM", "FSRM"))
        result = double_metaphone("Womo")
        self.assertEquals(result, ("AM", "FM"))
        result = double_metaphone("Yankelovich")
        self.assertEquals(result, ("ANKL", "ANKL"))
        result = double_metaphone("accede")
        self.assertEquals(result, ("AKST", "AKST"))
        result = double_metaphone("accident")
        self.assertEquals(result, ("AKST", "AKST"))
        result = double_metaphone("adelsheim")
        self.assertEquals(result, ("ATLS", "ATLS"))
        result = double_metaphone("aged")
        self.assertEquals(result, ("AJT", "AKT"))
        result = double_metaphone("ageless")
        self.assertEquals(result, ("AJLS", "AKLS"))
        result = double_metaphone("agency")
        self.assertEquals(result, ("AJNS", "AKNS"))
        result = double_metaphone("aghast")
        self.assertEquals(result, ("AKST", "AKST"))
        result = double_metaphone("agio")
        self.assertEquals(result, ("AJ", "AK"))
        result = double_metaphone("agrimony")
        self.assertEquals(result, ("AKRM", "AKRM"))
        result = double_metaphone("album")
        self.assertEquals(result, ("ALPM", "ALPM"))
        result = double_metaphone("alcmene")
        self.assertEquals(result, ("ALKM", "ALKM"))
        result = double_metaphone("alehouse")
        self.assertEquals(result, ("ALHS", "ALHS"))
        result = double_metaphone("antique")
        self.assertEquals(result, ("ANTK", "ANTK"))
        result = double_metaphone("artois")
        self.assertEquals(result, ("ART", "ARTS"))
        result = double_metaphone("automation")
        self.assertEquals(result, ("ATMX", "ATMX"))
        result = double_metaphone("bacchus")
        self.assertEquals(result, ("PKS", "PKS"))
        result = double_metaphone("bacci")
        self.assertEquals(result, ("PX", "PX"))
        result = double_metaphone("bajador")
        self.assertEquals(result, ("PJTR", "PHTR"))
        result = double_metaphone("bellocchio")
        self.assertEquals(result, ("PLX", "PLX"))
        result = double_metaphone("bertucci")
        self.assertEquals(result, ("PRTX", "PRTX"))
        result = double_metaphone("biaggi")
        self.assertEquals(result, ("PJ", "PK"))
        result = double_metaphone("bough")
        self.assertEquals(result, ("P", "P"))
        result = double_metaphone("breaux")
        self.assertEquals(result, ("PR", "PR"))
        result = double_metaphone("broughton")
        self.assertEquals(result, ("PRTN", "PRTN"))
        result = double_metaphone("cabrillo")
        self.assertEquals(result, ("KPRL", "KPR"))
        result = double_metaphone("caesar")
        self.assertEquals(result, ("SSR", "SSR"))
        result = double_metaphone("cagney")
        self.assertEquals(result, ("KKN", "KKN"))
        result = double_metaphone("campbell")
        self.assertEquals(result, ("KMPL", "KMPL"))
        result = double_metaphone("carlisle")
        self.assertEquals(result, ("KRLL", "KRLL"))
        result = double_metaphone("carlysle")
        self.assertEquals(result, ("KRLL", "KRLL"))
        result = double_metaphone("chemistry")
        self.assertEquals(result, ("KMST", "KMST"))
        result = double_metaphone("chianti")
        self.assertEquals(result, ("KNT", "KNT"))
        result = double_metaphone("chorus")
        self.assertEquals(result, ("KRS", "KRS"))
        result = double_metaphone("cough")
        self.assertEquals(result, ("KF", "KF"))
        result = double_metaphone("czerny")
        self.assertEquals(result, ("SRN", "XRN"))
        result = double_metaphone("deffenbacher")
        self.assertEquals(result, ("TFNP", "TFNP"))
        result = double_metaphone("dumb")
        self.assertEquals(result, ("TM", "TM"))
        result = double_metaphone("edgar")
        self.assertEquals(result, ("ATKR", "ATKR"))
        result = double_metaphone("edge")
        self.assertEquals(result, ("AJ", "AJ"))
        result = double_metaphone("filipowicz")
        self.assertEquals(result, ("FLPT", "FLPF"))
        result = double_metaphone("focaccia")
        self.assertEquals(result, ("FKX", "FKX"))
        result = double_metaphone("gallegos")
        self.assertEquals(result, ("KLKS", "KKS"))
        result = double_metaphone("gambrelli")
        self.assertEquals(result, ("KMPR", "KMPR"))
        result = double_metaphone("geithain")
        self.assertEquals(result, ("K0N", "JTN"))
        result = double_metaphone("ghiradelli")
        self.assertEquals(result, ("JRTL", "JRTL"))
        result = double_metaphone("ghislane")
        self.assertEquals(result, ("JLN", "JLN"))
        result = double_metaphone("gough")
        self.assertEquals(result, ("KF", "KF"))
        result = double_metaphone("hartheim")
        self.assertEquals(result, ("HR0M", "HRTM"))
        result = double_metaphone("heimsheim")
        self.assertEquals(result, ("HMSM", "HMSM"))
        result = double_metaphone("hochmeier")
        self.assertEquals(result, ("HKMR", "HKMR"))
        result = double_metaphone("hugh")
        self.assertEquals(result, ("H", "H"))
        result = double_metaphone("hunger")
        self.assertEquals(result, ("HNKR", "HNJR"))
        result = double_metaphone("hungry")
        self.assertEquals(result, ("HNKR", "HNKR"))
        result = double_metaphone("island")
        self.assertEquals(result, ("ALNT", "ALNT"))
        result = double_metaphone("isle")
        self.assertEquals(result, ("AL", "AL"))
        result = double_metaphone("jose")
        self.assertEquals(result, ("HS", "HS"))
        result = double_metaphone("laugh")
        self.assertEquals(result, ("LF", "LF"))
        result = double_metaphone("mac caffrey")
        self.assertEquals(result, ("MKFR", "MKFR"))
        result = double_metaphone("mac gregor")
        self.assertEquals(result, ("MKRK", "MKRK"))
        result = double_metaphone("pegnitz")
        self.assertEquals(result, ("PNTS", "PKNT"))
        result = double_metaphone("piskowitz")
        self.assertEquals(result, ("PSKT", "PSKF"))
        result = double_metaphone("queen")
        self.assertEquals(result, ("KN", "KN"))
        result = double_metaphone("raspberry")
        self.assertEquals(result, ("RSPR", "RSPR"))
        result = double_metaphone("resnais")
        self.assertEquals(result, ("RSN", "RSNS"))
        result = double_metaphone("rogier")
        self.assertEquals(result, ("RJ", "RJR"))
        result = double_metaphone("rough")
        self.assertEquals(result, ("RF", "RF"))
        result = double_metaphone("san jacinto")
        self.assertEquals(result, ("SNHS", "SNHS"))
        result = double_metaphone("schenker")
        self.assertEquals(result, ("XNKR", "SKNK"))
        result = double_metaphone("schermerhorn")
        self.assertEquals(result, ("XRMR", "SKRM"))
        result = double_metaphone("schmidt")
        self.assertEquals(result, ("XMT", "SMT"))
        result = double_metaphone("schneider")
        self.assertEquals(result, ("XNTR", "SNTR"))
        result = double_metaphone("school")
        self.assertEquals(result, ("SKL", "SKL"))
        result = double_metaphone("schooner")
        self.assertEquals(result, ("SKNR", "SKNR"))
        result = double_metaphone("schrozberg")
        self.assertEquals(result, ("XRSP", "SRSP"))
        result = double_metaphone("schulman")
        self.assertEquals(result, ("XLMN", "XLMN"))
        result = double_metaphone("schwabach")
        self.assertEquals(result, ("XPK", "XFPK"))
        result = double_metaphone("schwarzach")
        self.assertEquals(result, ("XRSK", "XFRT"))
        result = double_metaphone("smith")
        self.assertEquals(result, ("SM0", "XMT"))
        result = double_metaphone("snider")
        self.assertEquals(result, ("SNTR", "XNTR"))
        result = double_metaphone("succeed")
        self.assertEquals(result, ("SKST", "SKST"))
        result = double_metaphone("sugarcane")
        self.assertEquals(result, ("XKRK", "SKRK"))
        result = double_metaphone("svobodka")
        self.assertEquals(result, ("SFPT", "SFPT"))
        result = double_metaphone("tagliaro")
        self.assertEquals(result, ("TKLR", "TLR"))
        result = double_metaphone("thames")
        self.assertEquals(result, ("TMS", "TMS"))
        result = double_metaphone("theilheim")
        self.assertEquals(result, ("0LM", "TLM"))
        result = double_metaphone("thomas")
        self.assertEquals(result, ("TMS", "TMS"))
        result = double_metaphone("thumb")
        self.assertEquals(result, ("0M", "TM"))
        result = double_metaphone("tichner")
        self.assertEquals(result, ("TXNR", "TKNR"))
        result = double_metaphone("tough")
        self.assertEquals(result, ("TF", "TF"))
        result = double_metaphone("umbrella")
        self.assertEquals(result, ("AMPR", "AMPR"))
        result = double_metaphone("vilshofen")
        self.assertEquals(result, ("FLXF", "FLXF"))
        result = double_metaphone("von schuller")
        self.assertEquals(result, ("FNXL", "FNXL"))
        result = double_metaphone("wachtler")
        self.assertEquals(result, ("AKTL", "FKTL"))
        result = double_metaphone("wechsler")
        self.assertEquals(result, ("AKSL", "FKSL"))
        result = double_metaphone("weikersheim")
        self.assertEquals(result, ("AKRS", "FKRS"))
        result = double_metaphone("zhao")
        self.assertEquals(result, ("J", "J"))

    def test_surnames4(self):
        result = double_metaphone("", 4)
        self.assertEquals(result, ("", ""))
        result = double_metaphone("ALLERTON", 4)
        self.assertEquals(result, ("ALRT", "ALRT"))
        result = double_metaphone("Acton", 4)
        self.assertEquals(result, ("AKTN", "AKTN"))
        result = double_metaphone("Adams", 4)
        self.assertEquals(result, ("ATMS", "ATMS"))
        result = double_metaphone("Aggar", 4)
        self.assertEquals(result, ("AKR", "AKR"))
        result = double_metaphone("Ahl", 4)
        self.assertEquals(result, ("AL", "AL"))
        result = double_metaphone("Aiken", 4)
        self.assertEquals(result, ("AKN", "AKN"))
        result = double_metaphone("Alan", 4)
        self.assertEquals(result, ("ALN", "ALN"))
        result = double_metaphone("Alcock", 4)
        self.assertEquals(result, ("ALKK", "ALKK"))
        result = double_metaphone("Alden", 4)
        self.assertEquals(result, ("ALTN", "ALTN"))
        result = double_metaphone("Aldham", 4)
        self.assertEquals(result, ("ALTM", "ALTM"))
        result = double_metaphone("Allen", 4)
        self.assertEquals(result, ("ALN", "ALN"))
        result = double_metaphone("Allerton", 4)
        self.assertEquals(result, ("ALRT", "ALRT"))
        result = double_metaphone("Alsop", 4)
        self.assertEquals(result, ("ALSP", "ALSP"))
        result = double_metaphone("Alwein", 4)
        self.assertEquals(result, ("ALN", "ALN"))
        result = double_metaphone("Ambler", 4)
        self.assertEquals(result, ("AMPL", "AMPL"))
        result = double_metaphone("Andevill", 4)
        self.assertEquals(result, ("ANTF", "ANTF"))
        result = double_metaphone("Andrews", 4)
        self.assertEquals(result, ("ANTR", "ANTR"))
        result = double_metaphone("Andreyco", 4)
        self.assertEquals(result, ("ANTR", "ANTR"))
        result = double_metaphone("Andriesse", 4)
        self.assertEquals(result, ("ANTR", "ANTR"))
        result = double_metaphone("Angier", 4)
        self.assertEquals(result, ("ANJ", "ANJR"))
        result = double_metaphone("Annabel", 4)
        self.assertEquals(result, ("ANPL", "ANPL"))
        result = double_metaphone("Anne", 4)
        self.assertEquals(result, ("AN", "AN"))
        result = double_metaphone("Anstye", 4)
        self.assertEquals(result, ("ANST", "ANST"))
        result = double_metaphone("Appling", 4)
        self.assertEquals(result, ("APLN", "APLN"))
        result = double_metaphone("Apuke", 4)
        self.assertEquals(result, ("APK", "APK"))
        result = double_metaphone("Arnold", 4)
        self.assertEquals(result, ("ARNL", "ARNL"))
        result = double_metaphone("Ashby", 4)
        self.assertEquals(result, ("AXP", "AXP"))
        result = double_metaphone("Astwood", 4)
        self.assertEquals(result, ("ASTT", "ASTT"))
        result = double_metaphone("Atkinson", 4)
        self.assertEquals(result, ("ATKN", "ATKN"))
        result = double_metaphone("Audley", 4)
        self.assertEquals(result, ("ATL", "ATL"))
        result = double_metaphone("Austin", 4)
        self.assertEquals(result, ("ASTN", "ASTN"))
        result = double_metaphone("Avenal", 4)
        self.assertEquals(result, ("AFNL", "AFNL"))
        result = double_metaphone("Ayer", 4)
        self.assertEquals(result, ("AR", "AR"))
        result = double_metaphone("Ayot", 4)
        self.assertEquals(result, ("AT", "AT"))
        result = double_metaphone("Babbitt", 4)
        self.assertEquals(result, ("PPT", "PPT"))
        result = double_metaphone("Bachelor", 4)
        self.assertEquals(result, ("PXLR", "PKLR"))
        result = double_metaphone("Bachelour", 4)
        self.assertEquals(result, ("PXLR", "PKLR"))
        result = double_metaphone("Bailey", 4)
        self.assertEquals(result, ("PL", "PL"))
        result = double_metaphone("Baivel", 4)
        self.assertEquals(result, ("PFL", "PFL"))
        result = double_metaphone("Baker", 4)
        self.assertEquals(result, ("PKR", "PKR"))
        result = double_metaphone("Baldwin", 4)
        self.assertEquals(result, ("PLTN", "PLTN"))
        result = double_metaphone("Balsley", 4)
        self.assertEquals(result, ("PLSL", "PLSL"))
        result = double_metaphone("Barber", 4)
        self.assertEquals(result, ("PRPR", "PRPR"))
        result = double_metaphone("Barker", 4)
        self.assertEquals(result, ("PRKR", "PRKR"))
        result = double_metaphone("Barlow", 4)
        self.assertEquals(result, ("PRL", "PRLF"))
        result = double_metaphone("Barnard", 4)
        self.assertEquals(result, ("PRNR", "PRNR"))
        result = double_metaphone("Barnes", 4)
        self.assertEquals(result, ("PRNS", "PRNS"))
        result = double_metaphone("Barnsley", 4)
        self.assertEquals(result, ("PRNS", "PRNS"))
        result = double_metaphone("Barouxis", 4)
        self.assertEquals(result, ("PRKS", "PRKS"))
        result = double_metaphone("Bartlet", 4)
        self.assertEquals(result, ("PRTL", "PRTL"))
        result = double_metaphone("Basley", 4)
        self.assertEquals(result, ("PSL", "PSL"))
        result = double_metaphone("Basset", 4)
        self.assertEquals(result, ("PST", "PST"))
        result = double_metaphone("Bassett", 4)
        self.assertEquals(result, ("PST", "PST"))
        result = double_metaphone("Batchlor", 4)
        self.assertEquals(result, ("PXLR", "PXLR"))
        result = double_metaphone("Bates", 4)
        self.assertEquals(result, ("PTS", "PTS"))
        result = double_metaphone("Batson", 4)
        self.assertEquals(result, ("PTSN", "PTSN"))
        result = double_metaphone("Bayes", 4)
        self.assertEquals(result, ("PS", "PS"))
        result = double_metaphone("Bayley", 4)
        self.assertEquals(result, ("PL", "PL"))
        result = double_metaphone("Beale", 4)
        self.assertEquals(result, ("PL", "PL"))
        result = double_metaphone("Beauchamp", 4)
        self.assertEquals(result, ("PXMP", "PKMP"))
        result = double_metaphone("Beauclerc", 4)
        self.assertEquals(result, ("PKLR", "PKLR"))
        result = double_metaphone("Beech", 4)
        self.assertEquals(result, ("PK", "PK"))
        result = double_metaphone("Beers", 4)
        self.assertEquals(result, ("PRS", "PRS"))
        result = double_metaphone("Beke", 4)
        self.assertEquals(result, ("PK", "PK"))
        result = double_metaphone("Belcher", 4)
        self.assertEquals(result, ("PLXR", "PLKR"))
        result = double_metaphone("Benjamin", 4)
        self.assertEquals(result, ("PNJM", "PNJM"))
        result = double_metaphone("Benningham", 4)
        self.assertEquals(result, ("PNNK", "PNNK"))
        result = double_metaphone("Bereford", 4)
        self.assertEquals(result, ("PRFR", "PRFR"))
        result = double_metaphone("Bergen", 4)
        self.assertEquals(result, ("PRJN", "PRKN"))
        result = double_metaphone("Berkeley", 4)
        self.assertEquals(result, ("PRKL", "PRKL"))
        result = double_metaphone("Berry", 4)
        self.assertEquals(result, ("PR", "PR"))
        result = double_metaphone("Besse", 4)
        self.assertEquals(result, ("PS", "PS"))
        result = double_metaphone("Bessey", 4)
        self.assertEquals(result, ("PS", "PS"))
        result = double_metaphone("Bessiles", 4)
        self.assertEquals(result, ("PSLS", "PSLS"))
        result = double_metaphone("Bigelow", 4)
        self.assertEquals(result, ("PJL", "PKLF"))
        result = double_metaphone("Bigg", 4)
        self.assertEquals(result, ("PK", "PK"))
        result = double_metaphone("Bigod", 4)
        self.assertEquals(result, ("PKT", "PKT"))
        result = double_metaphone("Billings", 4)
        self.assertEquals(result, ("PLNK", "PLNK"))
        result = double_metaphone("Bimper", 4)
        self.assertEquals(result, ("PMPR", "PMPR"))
        result = double_metaphone("Binker", 4)
        self.assertEquals(result, ("PNKR", "PNKR"))
        result = double_metaphone("Birdsill", 4)
        self.assertEquals(result, ("PRTS", "PRTS"))
        result = double_metaphone("Bishop", 4)
        self.assertEquals(result, ("PXP", "PXP"))
        result = double_metaphone("Black", 4)
        self.assertEquals(result, ("PLK", "PLK"))
        result = double_metaphone("Blagge", 4)
        self.assertEquals(result, ("PLK", "PLK"))
        result = double_metaphone("Blake", 4)
        self.assertEquals(result, ("PLK", "PLK"))
        result = double_metaphone("Blanck", 4)
        self.assertEquals(result, ("PLNK", "PLNK"))
        result = double_metaphone("Bledsoe", 4)
        self.assertEquals(result, ("PLTS", "PLTS"))
        result = double_metaphone("Blennerhasset", 4)
        self.assertEquals(result, ("PLNR", "PLNR"))
        result = double_metaphone("Blessing", 4)
        self.assertEquals(result, ("PLSN", "PLSN"))
        result = double_metaphone("Blewett", 4)
        self.assertEquals(result, ("PLT", "PLT"))
        result = double_metaphone("Bloctgoed", 4)
        self.assertEquals(result, ("PLKT", "PLKT"))
        result = double_metaphone("Bloetgoet", 4)
        self.assertEquals(result, ("PLTK", "PLTK"))
        result = double_metaphone("Bloodgood", 4)
        self.assertEquals(result, ("PLTK", "PLTK"))
        result = double_metaphone("Blossom", 4)
        self.assertEquals(result, ("PLSM", "PLSM"))
        result = double_metaphone("Blount", 4)
        self.assertEquals(result, ("PLNT", "PLNT"))
        result = double_metaphone("Bodine", 4)
        self.assertEquals(result, ("PTN", "PTN"))
        result = double_metaphone("Bodman", 4)
        self.assertEquals(result, ("PTMN", "PTMN"))
        result = double_metaphone("BonCoeur", 4)
        self.assertEquals(result, ("PNKR", "PNKR"))
        result = double_metaphone("Bond", 4)
        self.assertEquals(result, ("PNT", "PNT"))
        result = double_metaphone("Boscawen", 4)
        self.assertEquals(result, ("PSKN", "PSKN"))
        result = double_metaphone("Bosworth", 4)
        self.assertEquals(result, ("PSR0", "PSRT"))
        result = double_metaphone("Bouchier", 4)
        self.assertEquals(result, ("PX", "PKR"))
        result = double_metaphone("Bowne", 4)
        self.assertEquals(result, ("PN", "PN"))
        result = double_metaphone("Bradbury", 4)
        self.assertEquals(result, ("PRTP", "PRTP"))
        result = double_metaphone("Bradder", 4)
        self.assertEquals(result, ("PRTR", "PRTR"))
        result = double_metaphone("Bradford", 4)
        self.assertEquals(result, ("PRTF", "PRTF"))
        result = double_metaphone("Bradstreet", 4)
        self.assertEquals(result, ("PRTS", "PRTS"))
        result = double_metaphone("Braham", 4)
        self.assertEquals(result, ("PRHM", "PRHM"))
        result = double_metaphone("Brailsford", 4)
        self.assertEquals(result, ("PRLS", "PRLS"))
        result = double_metaphone("Brainard", 4)
        self.assertEquals(result, ("PRNR", "PRNR"))
        result = double_metaphone("Brandish", 4)
        self.assertEquals(result, ("PRNT", "PRNT"))
        result = double_metaphone("Braun", 4)
        self.assertEquals(result, ("PRN", "PRN"))
        result = double_metaphone("Brecc", 4)
        self.assertEquals(result, ("PRK", "PRK"))
        result = double_metaphone("Brent", 4)
        self.assertEquals(result, ("PRNT", "PRNT"))
        result = double_metaphone("Brenton", 4)
        self.assertEquals(result, ("PRNT", "PRNT"))
        result = double_metaphone("Briggs", 4)
        self.assertEquals(result, ("PRKS", "PRKS"))
        result = double_metaphone("Brigham", 4)
        self.assertEquals(result, ("PRM", "PRM"))
        result = double_metaphone("Brobst", 4)
        self.assertEquals(result, ("PRPS", "PRPS"))
        result = double_metaphone("Brome", 4)
        self.assertEquals(result, ("PRM", "PRM"))
        result = double_metaphone("Bronson", 4)
        self.assertEquals(result, ("PRNS", "PRNS"))
        result = double_metaphone("Brooks", 4)
        self.assertEquals(result, ("PRKS", "PRKS"))
        result = double_metaphone("Brouillard", 4)
        self.assertEquals(result, ("PRLR", "PRLR"))
        result = double_metaphone("Brown", 4)
        self.assertEquals(result, ("PRN", "PRN"))
        result = double_metaphone("Browne", 4)
        self.assertEquals(result, ("PRN", "PRN"))
        result = double_metaphone("Brownell", 4)
        self.assertEquals(result, ("PRNL", "PRNL"))
        result = double_metaphone("Bruley", 4)
        self.assertEquals(result, ("PRL", "PRL"))
        result = double_metaphone("Bryant", 4)
        self.assertEquals(result, ("PRNT", "PRNT"))
        result = double_metaphone("Brzozowski", 4)
        self.assertEquals(result, ("PRSS", "PRTS"))
        result = double_metaphone("Buide", 4)
        self.assertEquals(result, ("PT", "PT"))
        result = double_metaphone("Bulmer", 4)
        self.assertEquals(result, ("PLMR", "PLMR"))
        result = double_metaphone("Bunker", 4)
        self.assertEquals(result, ("PNKR", "PNKR"))
        result = double_metaphone("Burden", 4)
        self.assertEquals(result, ("PRTN", "PRTN"))
        result = double_metaphone("Burge", 4)
        self.assertEquals(result, ("PRJ", "PRK"))
        result = double_metaphone("Burgoyne", 4)
        self.assertEquals(result, ("PRKN", "PRKN"))
        result = double_metaphone("Burke", 4)
        self.assertEquals(result, ("PRK", "PRK"))
        result = double_metaphone("Burnett", 4)
        self.assertEquals(result, ("PRNT", "PRNT"))
        result = double_metaphone("Burpee", 4)
        self.assertEquals(result, ("PRP", "PRP"))
        result = double_metaphone("Bursley", 4)
        self.assertEquals(result, ("PRSL", "PRSL"))
        result = double_metaphone("Burton", 4)
        self.assertEquals(result, ("PRTN", "PRTN"))
        result = double_metaphone("Bushnell", 4)
        self.assertEquals(result, ("PXNL", "PXNL"))
        result = double_metaphone("Buss", 4)
        self.assertEquals(result, ("PS", "PS"))
        result = double_metaphone("Buswell", 4)
        self.assertEquals(result, ("PSL", "PSL"))
        result = double_metaphone("Butler", 4)
        self.assertEquals(result, ("PTLR", "PTLR"))
        result = double_metaphone("Calkin", 4)
        self.assertEquals(result, ("KLKN", "KLKN"))
        result = double_metaphone("Canada", 4)
        self.assertEquals(result, ("KNT", "KNT"))
        result = double_metaphone("Canmore", 4)
        self.assertEquals(result, ("KNMR", "KNMR"))
        result = double_metaphone("Canney", 4)
        self.assertEquals(result, ("KN", "KN"))
        result = double_metaphone("Capet", 4)
        self.assertEquals(result, ("KPT", "KPT"))
        result = double_metaphone("Card", 4)
        self.assertEquals(result, ("KRT", "KRT"))
        result = double_metaphone("Carman", 4)
        self.assertEquals(result, ("KRMN", "KRMN"))
        result = double_metaphone("Carpenter", 4)
        self.assertEquals(result, ("KRPN", "KRPN"))
        result = double_metaphone("Cartwright", 4)
        self.assertEquals(result, ("KRTR", "KRTR"))
        result = double_metaphone("Casey", 4)
        self.assertEquals(result, ("KS", "KS"))
        result = double_metaphone("Catterfield", 4)
        self.assertEquals(result, ("KTRF", "KTRF"))
        result = double_metaphone("Ceeley", 4)
        self.assertEquals(result, ("SL", "SL"))
        result = double_metaphone("Chambers", 4)
        self.assertEquals(result, ("XMPR", "XMPR"))
        result = double_metaphone("Champion", 4)
        self.assertEquals(result, ("XMPN", "XMPN"))
        result = double_metaphone("Chapman", 4)
        self.assertEquals(result, ("XPMN", "XPMN"))
        result = double_metaphone("Chase", 4)
        self.assertEquals(result, ("XS", "XS"))
        result = double_metaphone("Cheney", 4)
        self.assertEquals(result, ("XN", "XN"))
        result = double_metaphone("Chetwynd", 4)
        self.assertEquals(result, ("XTNT", "XTNT"))
        result = double_metaphone("Chevalier", 4)
        self.assertEquals(result, ("XFL", "XFLR"))
        result = double_metaphone("Chillingsworth", 4)
        self.assertEquals(result, ("XLNK", "XLNK"))
        result = double_metaphone("Christie", 4)
        self.assertEquals(result, ("KRST", "KRST"))
        result = double_metaphone("Chubbuck", 4)
        self.assertEquals(result, ("XPK", "XPK"))
        result = double_metaphone("Church", 4)
        self.assertEquals(result, ("XRX", "XRK"))
        result = double_metaphone("Clark", 4)
        self.assertEquals(result, ("KLRK", "KLRK"))
        result = double_metaphone("Clarke", 4)
        self.assertEquals(result, ("KLRK", "KLRK"))
        result = double_metaphone("Cleare", 4)
        self.assertEquals(result, ("KLR", "KLR"))
        result = double_metaphone("Clement", 4)
        self.assertEquals(result, ("KLMN", "KLMN"))
        result = double_metaphone("Clerke", 4)
        self.assertEquals(result, ("KLRK", "KLRK"))
        result = double_metaphone("Clibben", 4)
        self.assertEquals(result, ("KLPN", "KLPN"))
        result = double_metaphone("Clifford", 4)
        self.assertEquals(result, ("KLFR", "KLFR"))
        result = double_metaphone("Clivedon", 4)
        self.assertEquals(result, ("KLFT", "KLFT"))
        result = double_metaphone("Close", 4)
        self.assertEquals(result, ("KLS", "KLS"))
        result = double_metaphone("Clothilde", 4)
        self.assertEquals(result, ("KL0L", "KLTL"))
        result = double_metaphone("Cobb", 4)
        self.assertEquals(result, ("KP", "KP"))
        result = double_metaphone("Coburn", 4)
        self.assertEquals(result, ("KPRN", "KPRN"))
        result = double_metaphone("Coburne", 4)
        self.assertEquals(result, ("KPRN", "KPRN"))
        result = double_metaphone("Cocke", 4)
        self.assertEquals(result, ("KK", "KK"))
        result = double_metaphone("Coffin", 4)
        self.assertEquals(result, ("KFN", "KFN"))
        result = double_metaphone("Coffyn", 4)
        self.assertEquals(result, ("KFN", "KFN"))
        result = double_metaphone("Colborne", 4)
        self.assertEquals(result, ("KLPR", "KLPR"))
        result = double_metaphone("Colby", 4)
        self.assertEquals(result, ("KLP", "KLP"))
        result = double_metaphone("Cole", 4)
        self.assertEquals(result, ("KL", "KL"))
        result = double_metaphone("Coleman", 4)
        self.assertEquals(result, ("KLMN", "KLMN"))
        result = double_metaphone("Collier", 4)
        self.assertEquals(result, ("KL", "KLR"))
        result = double_metaphone("Compton", 4)
        self.assertEquals(result, ("KMPT", "KMPT"))
        result = double_metaphone("Cone", 4)
        self.assertEquals(result, ("KN", "KN"))
        result = double_metaphone("Cook", 4)
        self.assertEquals(result, ("KK", "KK"))
        result = double_metaphone("Cooke", 4)
        self.assertEquals(result, ("KK", "KK"))
        result = double_metaphone("Cooper", 4)
        self.assertEquals(result, ("KPR", "KPR"))
        result = double_metaphone("Copperthwaite", 4)
        self.assertEquals(result, ("KPR0", "KPRT"))
        result = double_metaphone("Corbet", 4)
        self.assertEquals(result, ("KRPT", "KRPT"))
        result = double_metaphone("Corell", 4)
        self.assertEquals(result, ("KRL", "KRL"))
        result = double_metaphone("Corey", 4)
        self.assertEquals(result, ("KR", "KR"))
        result = double_metaphone("Corlies", 4)
        self.assertEquals(result, ("KRLS", "KRLS"))
        result = double_metaphone("Corneliszen", 4)
        self.assertEquals(result, ("KRNL", "KRNL"))
        result = double_metaphone("Cornelius", 4)
        self.assertEquals(result, ("KRNL", "KRNL"))
        result = double_metaphone("Cornwallis", 4)
        self.assertEquals(result, ("KRNL", "KRNL"))
        result = double_metaphone("Cosgrove", 4)
        self.assertEquals(result, ("KSKR", "KSKR"))
        result = double_metaphone("Count of Brionne", 4)
        self.assertEquals(result, ("KNTF", "KNTF"))
        result = double_metaphone("Covill", 4)
        self.assertEquals(result, ("KFL", "KFL"))
        result = double_metaphone("Cowperthwaite", 4)
        self.assertEquals(result, ("KPR0", "KPRT"))
        result = double_metaphone("Cowperwaite", 4)
        self.assertEquals(result, ("KPRT", "KPRT"))
        result = double_metaphone("Crane", 4)
        self.assertEquals(result, ("KRN", "KRN"))
        result = double_metaphone("Creagmile", 4)
        self.assertEquals(result, ("KRKM", "KRKM"))
        result = double_metaphone("Crew", 4)
        self.assertEquals(result, ("KR", "KRF"))
        result = double_metaphone("Crispin", 4)
        self.assertEquals(result, ("KRSP", "KRSP"))
        result = double_metaphone("Crocker", 4)
        self.assertEquals(result, ("KRKR", "KRKR"))
        result = double_metaphone("Crockett", 4)
        self.assertEquals(result, ("KRKT", "KRKT"))
        result = double_metaphone("Crosby", 4)
        self.assertEquals(result, ("KRSP", "KRSP"))
        result = double_metaphone("Crump", 4)
        self.assertEquals(result, ("KRMP", "KRMP"))
        result = double_metaphone("Cunningham", 4)
        self.assertEquals(result, ("KNNK", "KNNK"))
        result = double_metaphone("Curtis", 4)
        self.assertEquals(result, ("KRTS", "KRTS"))
        result = double_metaphone("Cutha", 4)
        self.assertEquals(result, ("K0", "KT"))
        result = double_metaphone("Cutter", 4)
        self.assertEquals(result, ("KTR", "KTR"))
        result = double_metaphone("D'Aubigny", 4)
        self.assertEquals(result, ("TPN", "TPKN"))
        result = double_metaphone("DAVIS", 4)
        self.assertEquals(result, ("TFS", "TFS"))
        result = double_metaphone("Dabinott", 4)
        self.assertEquals(result, ("TPNT", "TPNT"))
        result = double_metaphone("Dacre", 4)
        self.assertEquals(result, ("TKR", "TKR"))
        result = double_metaphone("Daggett", 4)
        self.assertEquals(result, ("TKT", "TKT"))
        result = double_metaphone("Danvers", 4)
        self.assertEquals(result, ("TNFR", "TNFR"))
        result = double_metaphone("Darcy", 4)
        self.assertEquals(result, ("TRS", "TRS"))
        result = double_metaphone("Davis", 4)
        self.assertEquals(result, ("TFS", "TFS"))
        result = double_metaphone("Dawn", 4)
        self.assertEquals(result, ("TN", "TN"))
        result = double_metaphone("Dawson", 4)
        self.assertEquals(result, ("TSN", "TSN"))
        result = double_metaphone("Day", 4)
        self.assertEquals(result, ("T", "T"))
        result = double_metaphone("Daye", 4)
        self.assertEquals(result, ("T", "T"))
        result = double_metaphone("DeGrenier", 4)
        self.assertEquals(result, ("TKRN", "TKRN"))
        result = double_metaphone("Dean", 4)
        self.assertEquals(result, ("TN", "TN"))
        result = double_metaphone("Deekindaugh", 4)
        self.assertEquals(result, ("TKNT", "TKNT"))
        result = double_metaphone("Dennis", 4)
        self.assertEquals(result, ("TNS", "TNS"))
        result = double_metaphone("Denny", 4)
        self.assertEquals(result, ("TN", "TN"))
        result = double_metaphone("Denton", 4)
        self.assertEquals(result, ("TNTN", "TNTN"))
        result = double_metaphone("Desborough", 4)
        self.assertEquals(result, ("TSPR", "TSPR"))
        result = double_metaphone("Despenser", 4)
        self.assertEquals(result, ("TSPN", "TSPN"))
        result = double_metaphone("Deverill", 4)
        self.assertEquals(result, ("TFRL", "TFRL"))
        result = double_metaphone("Devine", 4)
        self.assertEquals(result, ("TFN", "TFN"))
        result = double_metaphone("Dexter", 4)
        self.assertEquals(result, ("TKST", "TKST"))
        result = double_metaphone("Dillaway", 4)
        self.assertEquals(result, ("TL", "TL"))
        result = double_metaphone("Dimmick", 4)
        self.assertEquals(result, ("TMK", "TMK"))
        result = double_metaphone("Dinan", 4)
        self.assertEquals(result, ("TNN", "TNN"))
        result = double_metaphone("Dix", 4)
        self.assertEquals(result, ("TKS", "TKS"))
        result = double_metaphone("Doggett", 4)
        self.assertEquals(result, ("TKT", "TKT"))
        result = double_metaphone("Donahue", 4)
        self.assertEquals(result, ("TNH", "TNH"))
        result = double_metaphone("Dorfman", 4)
        self.assertEquals(result, ("TRFM", "TRFM"))
        result = double_metaphone("Dorris", 4)
        self.assertEquals(result, ("TRS", "TRS"))
        result = double_metaphone("Dow", 4)
        self.assertEquals(result, ("T", "TF"))
        result = double_metaphone("Downey", 4)
        self.assertEquals(result, ("TN", "TN"))
        result = double_metaphone("Downing", 4)
        self.assertEquals(result, ("TNNK", "TNNK"))
        result = double_metaphone("Dowsett", 4)
        self.assertEquals(result, ("TST", "TST"))
        result = double_metaphone("Duck?", 4)
        self.assertEquals(result, ("TK", "TK"))
        result = double_metaphone("Dudley", 4)
        self.assertEquals(result, ("TTL", "TTL"))
        result = double_metaphone("Duffy", 4)
        self.assertEquals(result, ("TF", "TF"))
        result = double_metaphone("Dunn", 4)
        self.assertEquals(result, ("TN", "TN"))
        result = double_metaphone("Dunsterville", 4)
        self.assertEquals(result, ("TNST", "TNST"))
        result = double_metaphone("Durrant", 4)
        self.assertEquals(result, ("TRNT", "TRNT"))
        result = double_metaphone("Durrin", 4)
        self.assertEquals(result, ("TRN", "TRN"))
        result = double_metaphone("Dustin", 4)
        self.assertEquals(result, ("TSTN", "TSTN"))
        result = double_metaphone("Duston", 4)
        self.assertEquals(result, ("TSTN", "TSTN"))
        result = double_metaphone("Eames", 4)
        self.assertEquals(result, ("AMS", "AMS"))
        result = double_metaphone("Early", 4)
        self.assertEquals(result, ("ARL", "ARL"))
        result = double_metaphone("Easty", 4)
        self.assertEquals(result, ("AST", "AST"))
        result = double_metaphone("Ebbett", 4)
        self.assertEquals(result, ("APT", "APT"))
        result = double_metaphone("Eberbach", 4)
        self.assertEquals(result, ("APRP", "APRP"))
        result = double_metaphone("Eberhard", 4)
        self.assertEquals(result, ("APRR", "APRR"))
        result = double_metaphone("Eddy", 4)
        self.assertEquals(result, ("AT", "AT"))
        result = double_metaphone("Edenden", 4)
        self.assertEquals(result, ("ATNT", "ATNT"))
        result = double_metaphone("Edwards", 4)
        self.assertEquals(result, ("ATRT", "ATRT"))
        result = double_metaphone("Eglinton", 4)
        self.assertEquals(result, ("AKLN", "ALNT"))
        result = double_metaphone("Eliot", 4)
        self.assertEquals(result, ("ALT", "ALT"))
        result = double_metaphone("Elizabeth", 4)
        self.assertEquals(result, ("ALSP", "ALSP"))
        result = double_metaphone("Ellis", 4)
        self.assertEquals(result, ("ALS", "ALS"))
        result = double_metaphone("Ellison", 4)
        self.assertEquals(result, ("ALSN", "ALSN"))
        result = double_metaphone("Ellot", 4)
        self.assertEquals(result, ("ALT", "ALT"))
        result = double_metaphone("Elny", 4)
        self.assertEquals(result, ("ALN", "ALN"))
        result = double_metaphone("Elsner", 4)
        self.assertEquals(result, ("ALSN", "ALSN"))
        result = double_metaphone("Emerson", 4)
        self.assertEquals(result, ("AMRS", "AMRS"))
        result = double_metaphone("Empson", 4)
        self.assertEquals(result, ("AMPS", "AMPS"))
        result = double_metaphone("Est", 4)
        self.assertEquals(result, ("AST", "AST"))
        result = double_metaphone("Estabrook", 4)
        self.assertEquals(result, ("ASTP", "ASTP"))
        result = double_metaphone("Estes", 4)
        self.assertEquals(result, ("ASTS", "ASTS"))
        result = double_metaphone("Estey", 4)
        self.assertEquals(result, ("AST", "AST"))
        result = double_metaphone("Evans", 4)
        self.assertEquals(result, ("AFNS", "AFNS"))
        result = double_metaphone("Fallowell", 4)
        self.assertEquals(result, ("FLL", "FLL"))
        result = double_metaphone("Farnsworth", 4)
        self.assertEquals(result, ("FRNS", "FRNS"))
        result = double_metaphone("Feake", 4)
        self.assertEquals(result, ("FK", "FK"))
        result = double_metaphone("Feke", 4)
        self.assertEquals(result, ("FK", "FK"))
        result = double_metaphone("Fellows", 4)
        self.assertEquals(result, ("FLS", "FLS"))
        result = double_metaphone("Fettiplace", 4)
        self.assertEquals(result, ("FTPL", "FTPL"))
        result = double_metaphone("Finney", 4)
        self.assertEquals(result, ("FN", "FN"))
        result = double_metaphone("Fischer", 4)
        self.assertEquals(result, ("FXR", "FSKR"))
        result = double_metaphone("Fisher", 4)
        self.assertEquals(result, ("FXR", "FXR"))
        result = double_metaphone("Fisk", 4)
        self.assertEquals(result, ("FSK", "FSK"))
        result = double_metaphone("Fiske", 4)
        self.assertEquals(result, ("FSK", "FSK"))
        result = double_metaphone("Fletcher", 4)
        self.assertEquals(result, ("FLXR", "FLXR"))
        result = double_metaphone("Folger", 4)
        self.assertEquals(result, ("FLKR", "FLJR"))
        result = double_metaphone("Foliot", 4)
        self.assertEquals(result, ("FLT", "FLT"))
        result = double_metaphone("Folyot", 4)
        self.assertEquals(result, ("FLT", "FLT"))
        result = double_metaphone("Fones", 4)
        self.assertEquals(result, ("FNS", "FNS"))
        result = double_metaphone("Fordham", 4)
        self.assertEquals(result, ("FRTM", "FRTM"))
        result = double_metaphone("Forstner", 4)
        self.assertEquals(result, ("FRST", "FRST"))
        result = double_metaphone("Fosten", 4)
        self.assertEquals(result, ("FSTN", "FSTN"))
        result = double_metaphone("Foster", 4)
        self.assertEquals(result, ("FSTR", "FSTR"))
        result = double_metaphone("Foulke", 4)
        self.assertEquals(result, ("FLK", "FLK"))
        result = double_metaphone("Fowler", 4)
        self.assertEquals(result, ("FLR", "FLR"))
        result = double_metaphone("Foxwell", 4)
        self.assertEquals(result, ("FKSL", "FKSL"))
        result = double_metaphone("Fraley", 4)
        self.assertEquals(result, ("FRL", "FRL"))
        result = double_metaphone("Franceys", 4)
        self.assertEquals(result, ("FRNS", "FRNS"))
        result = double_metaphone("Franke", 4)
        self.assertEquals(result, ("FRNK", "FRNK"))
        result = double_metaphone("Frascella", 4)
        self.assertEquals(result, ("FRSL", "FRSL"))
        result = double_metaphone("Frazer", 4)
        self.assertEquals(result, ("FRSR", "FRSR"))
        result = double_metaphone("Fredd", 4)
        self.assertEquals(result, ("FRT", "FRT"))
        result = double_metaphone("Freeman", 4)
        self.assertEquals(result, ("FRMN", "FRMN"))
        result = double_metaphone("French", 4)
        self.assertEquals(result, ("FRNX", "FRNK"))
        result = double_metaphone("Freville", 4)
        self.assertEquals(result, ("FRFL", "FRFL"))
        result = double_metaphone("Frey", 4)
        self.assertEquals(result, ("FR", "FR"))
        result = double_metaphone("Frick", 4)
        self.assertEquals(result, ("FRK", "FRK"))
        result = double_metaphone("Frier", 4)
        self.assertEquals(result, ("FR", "FRR"))
        result = double_metaphone("Froe", 4)
        self.assertEquals(result, ("FR", "FR"))
        result = double_metaphone("Frorer", 4)
        self.assertEquals(result, ("FRRR", "FRRR"))
        result = double_metaphone("Frost", 4)
        self.assertEquals(result, ("FRST", "FRST"))
        result = double_metaphone("Frothingham", 4)
        self.assertEquals(result, ("FR0N", "FRTN"))
        result = double_metaphone("Fry", 4)
        self.assertEquals(result, ("FR", "FR"))
        result = double_metaphone("Gaffney", 4)
        self.assertEquals(result, ("KFN", "KFN"))
        result = double_metaphone("Gage", 4)
        self.assertEquals(result, ("KJ", "KK"))
        result = double_metaphone("Gallion", 4)
        self.assertEquals(result, ("KLN", "KLN"))
        result = double_metaphone("Gallishan", 4)
        self.assertEquals(result, ("KLXN", "KLXN"))
        result = double_metaphone("Gamble", 4)
        self.assertEquals(result, ("KMPL", "KMPL"))
        result = double_metaphone("Garbrand", 4)
        self.assertEquals(result, ("KRPR", "KRPR"))
        result = double_metaphone("Gardner", 4)
        self.assertEquals(result, ("KRTN", "KRTN"))
        result = double_metaphone("Garrett", 4)
        self.assertEquals(result, ("KRT", "KRT"))
        result = double_metaphone("Gassner", 4)
        self.assertEquals(result, ("KSNR", "KSNR"))
        result = double_metaphone("Gater", 4)
        self.assertEquals(result, ("KTR", "KTR"))
        result = double_metaphone("Gaunt", 4)
        self.assertEquals(result, ("KNT", "KNT"))
        result = double_metaphone("Gayer", 4)
        self.assertEquals(result, ("KR", "KR"))
        result = double_metaphone("Gerken", 4)
        self.assertEquals(result, ("KRKN", "JRKN"))
        result = double_metaphone("Gerritsen", 4)
        self.assertEquals(result, ("KRTS", "JRTS"))
        result = double_metaphone("Gibbs", 4)
        self.assertEquals(result, ("KPS", "JPS"))
        result = double_metaphone("Giffard", 4)
        self.assertEquals(result, ("JFRT", "KFRT"))
        result = double_metaphone("Gilbert", 4)
        self.assertEquals(result, ("KLPR", "JLPR"))
        result = double_metaphone("Gill", 4)
        self.assertEquals(result, ("KL", "JL"))
        result = double_metaphone("Gilman", 4)
        self.assertEquals(result, ("KLMN", "JLMN"))
        result = double_metaphone("Glass", 4)
        self.assertEquals(result, ("KLS", "KLS"))
        result = double_metaphone("Goddard\Gifford", 4)
        self.assertEquals(result, ("KTRT", "KTRT"))
        result = double_metaphone("Godfrey", 4)
        self.assertEquals(result, ("KTFR", "KTFR"))
        result = double_metaphone("Godwin", 4)
        self.assertEquals(result, ("KTN", "KTN"))
        result = double_metaphone("Goodale", 4)
        self.assertEquals(result, ("KTL", "KTL"))
        result = double_metaphone("Goodnow", 4)
        self.assertEquals(result, ("KTN", "KTNF"))
        result = double_metaphone("Gorham", 4)
        self.assertEquals(result, ("KRM", "KRM"))
        result = double_metaphone("Goseline", 4)
        self.assertEquals(result, ("KSLN", "KSLN"))
        result = double_metaphone("Gott", 4)
        self.assertEquals(result, ("KT", "KT"))
        result = double_metaphone("Gould", 4)
        self.assertEquals(result, ("KLT", "KLT"))
        result = double_metaphone("Grafton", 4)
        self.assertEquals(result, ("KRFT", "KRFT"))
        result = double_metaphone("Grant", 4)
        self.assertEquals(result, ("KRNT", "KRNT"))
        result = double_metaphone("Gray", 4)
        self.assertEquals(result, ("KR", "KR"))
        result = double_metaphone("Green", 4)
        self.assertEquals(result, ("KRN", "KRN"))
        result = double_metaphone("Griffin", 4)
        self.assertEquals(result, ("KRFN", "KRFN"))
        result = double_metaphone("Grill", 4)
        self.assertEquals(result, ("KRL", "KRL"))
        result = double_metaphone("Grim", 4)
        self.assertEquals(result, ("KRM", "KRM"))
        result = double_metaphone("Grisgonelle", 4)
        self.assertEquals(result, ("KRSK", "KRSK"))
        result = double_metaphone("Gross", 4)
        self.assertEquals(result, ("KRS", "KRS"))
        result = double_metaphone("Guba", 4)
        self.assertEquals(result, ("KP", "KP"))
        result = double_metaphone("Gybbes", 4)
        self.assertEquals(result, ("KPS", "JPS"))
        result = double_metaphone("Haburne", 4)
        self.assertEquals(result, ("HPRN", "HPRN"))
        result = double_metaphone("Hackburne", 4)
        self.assertEquals(result, ("HKPR", "HKPR"))
        result = double_metaphone("Haddon?", 4)
        self.assertEquals(result, ("HTN", "HTN"))
        result = double_metaphone("Haines", 4)
        self.assertEquals(result, ("HNS", "HNS"))
        result = double_metaphone("Hale", 4)
        self.assertEquals(result, ("HL", "HL"))
        result = double_metaphone("Hall", 4)
        self.assertEquals(result, ("HL", "HL"))
        result = double_metaphone("Hallet", 4)
        self.assertEquals(result, ("HLT", "HLT"))
        result = double_metaphone("Hallock", 4)
        self.assertEquals(result, ("HLK", "HLK"))
        result = double_metaphone("Halstead", 4)
        self.assertEquals(result, ("HLST", "HLST"))
        result = double_metaphone("Hammond", 4)
        self.assertEquals(result, ("HMNT", "HMNT"))
        result = double_metaphone("Hance", 4)
        self.assertEquals(result, ("HNS", "HNS"))
        result = double_metaphone("Handy", 4)
        self.assertEquals(result, ("HNT", "HNT"))
        result = double_metaphone("Hanson", 4)
        self.assertEquals(result, ("HNSN", "HNSN"))
        result = double_metaphone("Harasek", 4)
        self.assertEquals(result, ("HRSK", "HRSK"))
        result = double_metaphone("Harcourt", 4)
        self.assertEquals(result, ("HRKR", "HRKR"))
        result = double_metaphone("Hardy", 4)
        self.assertEquals(result, ("HRT", "HRT"))
        result = double_metaphone("Harlock", 4)
        self.assertEquals(result, ("HRLK", "HRLK"))
        result = double_metaphone("Harris", 4)
        self.assertEquals(result, ("HRS", "HRS"))
        result = double_metaphone("Hartley", 4)
        self.assertEquals(result, ("HRTL", "HRTL"))
        result = double_metaphone("Harvey", 4)
        self.assertEquals(result, ("HRF", "HRF"))
        result = double_metaphone("Harvie", 4)
        self.assertEquals(result, ("HRF", "HRF"))
        result = double_metaphone("Harwood", 4)
        self.assertEquals(result, ("HRT", "HRT"))
        result = double_metaphone("Hathaway", 4)
        self.assertEquals(result, ("H0", "HT"))
        result = double_metaphone("Haukeness", 4)
        self.assertEquals(result, ("HKNS", "HKNS"))
        result = double_metaphone("Hawkes", 4)
        self.assertEquals(result, ("HKS", "HKS"))
        result = double_metaphone("Hawkhurst", 4)
        self.assertEquals(result, ("HKRS", "HKRS"))
        result = double_metaphone("Hawkins", 4)
        self.assertEquals(result, ("HKNS", "HKNS"))
        result = double_metaphone("Hawley", 4)
        self.assertEquals(result, ("HL", "HL"))
        result = double_metaphone("Heald", 4)
        self.assertEquals(result, ("HLT", "HLT"))
        result = double_metaphone("Helsdon", 4)
        self.assertEquals(result, ("HLST", "HLST"))
        result = double_metaphone("Hemenway", 4)
        self.assertEquals(result, ("HMN", "HMN"))
        result = double_metaphone("Hemmenway", 4)
        self.assertEquals(result, ("HMN", "HMN"))
        result = double_metaphone("Henck", 4)
        self.assertEquals(result, ("HNK", "HNK"))
        result = double_metaphone("Henderson", 4)
        self.assertEquals(result, ("HNTR", "HNTR"))
        result = double_metaphone("Hendricks", 4)
        self.assertEquals(result, ("HNTR", "HNTR"))
        result = double_metaphone("Hersey", 4)
        self.assertEquals(result, ("HRS", "HRS"))
        result = double_metaphone("Hewes", 4)
        self.assertEquals(result, ("HS", "HS"))
        result = double_metaphone("Heyman", 4)
        self.assertEquals(result, ("HMN", "HMN"))
        result = double_metaphone("Hicks", 4)
        self.assertEquals(result, ("HKS", "HKS"))
        result = double_metaphone("Hidden", 4)
        self.assertEquals(result, ("HTN", "HTN"))
        result = double_metaphone("Higgs", 4)
        self.assertEquals(result, ("HKS", "HKS"))
        result = double_metaphone("Hill", 4)
        self.assertEquals(result, ("HL", "HL"))
        result = double_metaphone("Hills", 4)
        self.assertEquals(result, ("HLS", "HLS"))
        result = double_metaphone("Hinckley", 4)
        self.assertEquals(result, ("HNKL", "HNKL"))
        result = double_metaphone("Hipwell", 4)
        self.assertEquals(result, ("HPL", "HPL"))
        result = double_metaphone("Hobart", 4)
        self.assertEquals(result, ("HPRT", "HPRT"))
        result = double_metaphone("Hoben", 4)
        self.assertEquals(result, ("HPN", "HPN"))
        result = double_metaphone("Hoffmann", 4)
        self.assertEquals(result, ("HFMN", "HFMN"))
        result = double_metaphone("Hogan", 4)
        self.assertEquals(result, ("HKN", "HKN"))
        result = double_metaphone("Holmes", 4)
        self.assertEquals(result, ("HLMS", "HLMS"))
        result = double_metaphone("Hoo", 4)
        self.assertEquals(result, ("H", "H"))
        result = double_metaphone("Hooker", 4)
        self.assertEquals(result, ("HKR", "HKR"))
        result = double_metaphone("Hopcott", 4)
        self.assertEquals(result, ("HPKT", "HPKT"))
        result = double_metaphone("Hopkins", 4)
        self.assertEquals(result, ("HPKN", "HPKN"))
        result = double_metaphone("Hopkinson", 4)
        self.assertEquals(result, ("HPKN", "HPKN"))
        result = double_metaphone("Hornsey", 4)
        self.assertEquals(result, ("HRNS", "HRNS"))
        result = double_metaphone("Houckgeest", 4)
        self.assertEquals(result, ("HKJS", "HKKS"))
        result = double_metaphone("Hough", 4)
        self.assertEquals(result, ("H", "H"))
        result = double_metaphone("Houstin", 4)
        self.assertEquals(result, ("HSTN", "HSTN"))
        result = double_metaphone("How", 4)
        self.assertEquals(result, ("H", "HF"))
        result = double_metaphone("Howe", 4)
        self.assertEquals(result, ("H", "H"))
        result = double_metaphone("Howland", 4)
        self.assertEquals(result, ("HLNT", "HLNT"))
        result = double_metaphone("Hubner", 4)
        self.assertEquals(result, ("HPNR", "HPNR"))
        result = double_metaphone("Hudnut", 4)
        self.assertEquals(result, ("HTNT", "HTNT"))
        result = double_metaphone("Hughes", 4)
        self.assertEquals(result, ("HS", "HS"))
        result = double_metaphone("Hull", 4)
        self.assertEquals(result, ("HL", "HL"))
        result = double_metaphone("Hulme", 4)
        self.assertEquals(result, ("HLM", "HLM"))
        result = double_metaphone("Hume", 4)
        self.assertEquals(result, ("HM", "HM"))
        result = double_metaphone("Hundertumark", 4)
        self.assertEquals(result, ("HNTR", "HNTR"))
        result = double_metaphone("Hundley", 4)
        self.assertEquals(result, ("HNTL", "HNTL"))
        result = double_metaphone("Hungerford", 4)
        self.assertEquals(result, ("HNKR", "HNJR"))
        result = double_metaphone("Hunt", 4)
        self.assertEquals(result, ("HNT", "HNT"))
        result = double_metaphone("Hurst", 4)
        self.assertEquals(result, ("HRST", "HRST"))
        result = double_metaphone("Husbands", 4)
        self.assertEquals(result, ("HSPN", "HSPN"))
        result = double_metaphone("Hussey", 4)
        self.assertEquals(result, ("HS", "HS"))
        result = double_metaphone("Husted", 4)
        self.assertEquals(result, ("HSTT", "HSTT"))
        result = double_metaphone("Hutchins", 4)
        self.assertEquals(result, ("HXNS", "HXNS"))
        result = double_metaphone("Hutchinson", 4)
        self.assertEquals(result, ("HXNS", "HXNS"))
        result = double_metaphone("Huttinger", 4)
        self.assertEquals(result, ("HTNK", "HTNJ"))
        result = double_metaphone("Huybertsen", 4)
        self.assertEquals(result, ("HPRT", "HPRT"))
        result = double_metaphone("Iddenden", 4)
        self.assertEquals(result, ("ATNT", "ATNT"))
        result = double_metaphone("Ingraham", 4)
        self.assertEquals(result, ("ANKR", "ANKR"))
        result = double_metaphone("Ives", 4)
        self.assertEquals(result, ("AFS", "AFS"))
        result = double_metaphone("Jackson", 4)
        self.assertEquals(result, ("JKSN", "AKSN"))
        result = double_metaphone("Jacob", 4)
        self.assertEquals(result, ("JKP", "AKP"))
        result = double_metaphone("Jans", 4)
        self.assertEquals(result, ("JNS", "ANS"))
        result = double_metaphone("Jenkins", 4)
        self.assertEquals(result, ("JNKN", "ANKN"))
        result = double_metaphone("Jewett", 4)
        self.assertEquals(result, ("JT", "AT"))
        result = double_metaphone("Jewitt", 4)
        self.assertEquals(result, ("JT", "AT"))
        result = double_metaphone("Johnson", 4)
        self.assertEquals(result, ("JNSN", "ANSN"))
        result = double_metaphone("Jones", 4)
        self.assertEquals(result, ("JNS", "ANS"))
        result = double_metaphone("Josephine", 4)
        self.assertEquals(result, ("JSFN", "HSFN"))
        result = double_metaphone("Judd", 4)
        self.assertEquals(result, ("JT", "AT"))
        result = double_metaphone("June", 4)
        self.assertEquals(result, ("JN", "AN"))
        result = double_metaphone("Kamarowska", 4)
        self.assertEquals(result, ("KMRS", "KMRS"))
        result = double_metaphone("Kay", 4)
        self.assertEquals(result, ("K", "K"))
        result = double_metaphone("Kelley", 4)
        self.assertEquals(result, ("KL", "KL"))
        result = double_metaphone("Kelly", 4)
        self.assertEquals(result, ("KL", "KL"))
        result = double_metaphone("Keymber", 4)
        self.assertEquals(result, ("KMPR", "KMPR"))
        result = double_metaphone("Keynes", 4)
        self.assertEquals(result, ("KNS", "KNS"))
        result = double_metaphone("Kilham", 4)
        self.assertEquals(result, ("KLM", "KLM"))
        result = double_metaphone("Kim", 4)
        self.assertEquals(result, ("KM", "KM"))
        result = double_metaphone("Kimball", 4)
        self.assertEquals(result, ("KMPL", "KMPL"))
        result = double_metaphone("King", 4)
        self.assertEquals(result, ("KNK", "KNK"))
        result = double_metaphone("Kinsey", 4)
        self.assertEquals(result, ("KNS", "KNS"))
        result = double_metaphone("Kirk", 4)
        self.assertEquals(result, ("KRK", "KRK"))
        result = double_metaphone("Kirton", 4)
        self.assertEquals(result, ("KRTN", "KRTN"))
        result = double_metaphone("Kistler", 4)
        self.assertEquals(result, ("KSTL", "KSTL"))
        result = double_metaphone("Kitchen", 4)
        self.assertEquals(result, ("KXN", "KXN"))
        result = double_metaphone("Kitson", 4)
        self.assertEquals(result, ("KTSN", "KTSN"))
        result = double_metaphone("Klett", 4)
        self.assertEquals(result, ("KLT", "KLT"))
        result = double_metaphone("Kline", 4)
        self.assertEquals(result, ("KLN", "KLN"))
        result = double_metaphone("Knapp", 4)
        self.assertEquals(result, ("NP", "NP"))
        result = double_metaphone("Knight", 4)
        self.assertEquals(result, ("NT", "NT"))
        result = double_metaphone("Knote", 4)
        self.assertEquals(result, ("NT", "NT"))
        result = double_metaphone("Knott", 4)
        self.assertEquals(result, ("NT", "NT"))
        result = double_metaphone("Knox", 4)
        self.assertEquals(result, ("NKS", "NKS"))
        result = double_metaphone("Koeller", 4)
        self.assertEquals(result, ("KLR", "KLR"))
        result = double_metaphone("La Pointe", 4)
        self.assertEquals(result, ("LPNT", "LPNT"))
        result = double_metaphone("LaPlante", 4)
        self.assertEquals(result, ("LPLN", "LPLN"))
        result = double_metaphone("Laimbeer", 4)
        self.assertEquals(result, ("LMPR", "LMPR"))
        result = double_metaphone("Lamb", 4)
        self.assertEquals(result, ("LMP", "LMP"))
        result = double_metaphone("Lambertson", 4)
        self.assertEquals(result, ("LMPR", "LMPR"))
        result = double_metaphone("Lancto", 4)
        self.assertEquals(result, ("LNKT", "LNKT"))
        result = double_metaphone("Landry", 4)
        self.assertEquals(result, ("LNTR", "LNTR"))
        result = double_metaphone("Lane", 4)
        self.assertEquals(result, ("LN", "LN"))
        result = double_metaphone("Langendyck", 4)
        self.assertEquals(result, ("LNJN", "LNKN"))
        result = double_metaphone("Langer", 4)
        self.assertEquals(result, ("LNKR", "LNJR"))
        result = double_metaphone("Langford", 4)
        self.assertEquals(result, ("LNKF", "LNKF"))
        result = double_metaphone("Lantersee", 4)
        self.assertEquals(result, ("LNTR", "LNTR"))
        result = double_metaphone("Laquer", 4)
        self.assertEquals(result, ("LKR", "LKR"))
        result = double_metaphone("Larkin", 4)
        self.assertEquals(result, ("LRKN", "LRKN"))
        result = double_metaphone("Latham", 4)
        self.assertEquals(result, ("LTM", "LTM"))
        result = double_metaphone("Lathrop", 4)
        self.assertEquals(result, ("L0RP", "LTRP"))
        result = double_metaphone("Lauter", 4)
        self.assertEquals(result, ("LTR", "LTR"))
        result = double_metaphone("Lawrence", 4)
        self.assertEquals(result, ("LRNS", "LRNS"))
        result = double_metaphone("Leach", 4)
        self.assertEquals(result, ("LK", "LK"))
        result = double_metaphone("Leager", 4)
        self.assertEquals(result, ("LKR", "LJR"))
        result = double_metaphone("Learned", 4)
        self.assertEquals(result, ("LRNT", "LRNT"))
        result = double_metaphone("Leavitt", 4)
        self.assertEquals(result, ("LFT", "LFT"))
        result = double_metaphone("Lee", 4)
        self.assertEquals(result, ("L", "L"))
        result = double_metaphone("Leete", 4)
        self.assertEquals(result, ("LT", "LT"))
        result = double_metaphone("Leggett", 4)
        self.assertEquals(result, ("LKT", "LKT"))
        result = double_metaphone("Leland", 4)
        self.assertEquals(result, ("LLNT", "LLNT"))
        result = double_metaphone("Leonard", 4)
        self.assertEquals(result, ("LNRT", "LNRT"))
        result = double_metaphone("Lester", 4)
        self.assertEquals(result, ("LSTR", "LSTR"))
        result = double_metaphone("Lestrange", 4)
        self.assertEquals(result, ("LSTR", "LSTR"))
        result = double_metaphone("Lethem", 4)
        self.assertEquals(result, ("L0M", "LTM"))
        result = double_metaphone("Levine", 4)
        self.assertEquals(result, ("LFN", "LFN"))
        result = double_metaphone("Lewes", 4)
        self.assertEquals(result, ("LS", "LS"))
        result = double_metaphone("Lewis", 4)
        self.assertEquals(result, ("LS", "LS"))
        result = double_metaphone("Lincoln", 4)
        self.assertEquals(result, ("LNKL", "LNKL"))
        result = double_metaphone("Lindsey", 4)
        self.assertEquals(result, ("LNTS", "LNTS"))
        result = double_metaphone("Linher", 4)
        self.assertEquals(result, ("LNR", "LNR"))
        result = double_metaphone("Lippet", 4)
        self.assertEquals(result, ("LPT", "LPT"))
        result = double_metaphone("Lippincott", 4)
        self.assertEquals(result, ("LPNK", "LPNK"))
        result = double_metaphone("Lockwood", 4)
        self.assertEquals(result, ("LKT", "LKT"))
        result = double_metaphone("Loines", 4)
        self.assertEquals(result, ("LNS", "LNS"))
        result = double_metaphone("Lombard", 4)
        self.assertEquals(result, ("LMPR", "LMPR"))
        result = double_metaphone("Long", 4)
        self.assertEquals(result, ("LNK", "LNK"))
        result = double_metaphone("Longespee", 4)
        self.assertEquals(result, ("LNJS", "LNKS"))
        result = double_metaphone("Look", 4)
        self.assertEquals(result, ("LK", "LK"))
        result = double_metaphone("Lounsberry", 4)
        self.assertEquals(result, ("LNSP", "LNSP"))
        result = double_metaphone("Lounsbury", 4)
        self.assertEquals(result, ("LNSP", "LNSP"))
        result = double_metaphone("Louthe", 4)
        self.assertEquals(result, ("L0", "LT"))
        result = double_metaphone("Loveyne", 4)
        self.assertEquals(result, ("LFN", "LFN"))
        result = double_metaphone("Lowe", 4)
        self.assertEquals(result, ("L", "L"))
        result = double_metaphone("Ludlam", 4)
        self.assertEquals(result, ("LTLM", "LTLM"))
        result = double_metaphone("Lumbard", 4)
        self.assertEquals(result, ("LMPR", "LMPR"))
        result = double_metaphone("Lund", 4)
        self.assertEquals(result, ("LNT", "LNT"))
        result = double_metaphone("Luno", 4)
        self.assertEquals(result, ("LN", "LN"))
        result = double_metaphone("Lutz", 4)
        self.assertEquals(result, ("LTS", "LTS"))
        result = double_metaphone("Lydia", 4)
        self.assertEquals(result, ("LT", "LT"))
        result = double_metaphone("Lynne", 4)
        self.assertEquals(result, ("LN", "LN"))
        result = double_metaphone("Lyon", 4)
        self.assertEquals(result, ("LN", "LN"))
        result = double_metaphone("MacAlpin", 4)
        self.assertEquals(result, ("MKLP", "MKLP"))
        result = double_metaphone("MacBricc", 4)
        self.assertEquals(result, ("MKPR", "MKPR"))
        result = double_metaphone("MacCrinan", 4)
        self.assertEquals(result, ("MKRN", "MKRN"))
        result = double_metaphone("MacKenneth", 4)
        self.assertEquals(result, ("MKN0", "MKNT"))
        result = double_metaphone("MacMael nam Bo", 4)
        self.assertEquals(result, ("MKML", "MKML"))
        result = double_metaphone("MacMurchada", 4)
        self.assertEquals(result, ("MKMR", "MKMR"))
        result = double_metaphone("Macomber", 4)
        self.assertEquals(result, ("MKMP", "MKMP"))
        result = double_metaphone("Macy", 4)
        self.assertEquals(result, ("MS", "MS"))
        result = double_metaphone("Magnus", 4)
        self.assertEquals(result, ("MNS", "MKNS"))
        result = double_metaphone("Mahien", 4)
        self.assertEquals(result, ("MHN", "MHN"))
        result = double_metaphone("Malmains", 4)
        self.assertEquals(result, ("MLMN", "MLMN"))
        result = double_metaphone("Malory", 4)
        self.assertEquals(result, ("MLR", "MLR"))
        result = double_metaphone("Mancinelli", 4)
        self.assertEquals(result, ("MNSN", "MNSN"))
        result = double_metaphone("Mancini", 4)
        self.assertEquals(result, ("MNSN", "MNSN"))
        result = double_metaphone("Mann", 4)
        self.assertEquals(result, ("MN", "MN"))
        result = double_metaphone("Manning", 4)
        self.assertEquals(result, ("MNNK", "MNNK"))
        result = double_metaphone("Manter", 4)
        self.assertEquals(result, ("MNTR", "MNTR"))
        result = double_metaphone("Marion", 4)
        self.assertEquals(result, ("MRN", "MRN"))
        result = double_metaphone("Marley", 4)
        self.assertEquals(result, ("MRL", "MRL"))
        result = double_metaphone("Marmion", 4)
        self.assertEquals(result, ("MRMN", "MRMN"))
        result = double_metaphone("Marquart", 4)
        self.assertEquals(result, ("MRKR", "MRKR"))
        result = double_metaphone("Marsh", 4)
        self.assertEquals(result, ("MRX", "MRX"))
        result = double_metaphone("Marshal", 4)
        self.assertEquals(result, ("MRXL", "MRXL"))
        result = double_metaphone("Marshall", 4)
        self.assertEquals(result, ("MRXL", "MRXL"))
        result = double_metaphone("Martel", 4)
        self.assertEquals(result, ("MRTL", "MRTL"))
        result = double_metaphone("Martha", 4)
        self.assertEquals(result, ("MR0", "MRT"))
        result = double_metaphone("Martin", 4)
        self.assertEquals(result, ("MRTN", "MRTN"))
        result = double_metaphone("Marturano", 4)
        self.assertEquals(result, ("MRTR", "MRTR"))
        result = double_metaphone("Marvin", 4)
        self.assertEquals(result, ("MRFN", "MRFN"))
        result = double_metaphone("Mary", 4)
        self.assertEquals(result, ("MR", "MR"))
        result = double_metaphone("Mason", 4)
        self.assertEquals(result, ("MSN", "MSN"))
        result = double_metaphone("Maxwell", 4)
        self.assertEquals(result, ("MKSL", "MKSL"))
        result = double_metaphone("Mayhew", 4)
        self.assertEquals(result, ("MH", "MHF"))
        result = double_metaphone("McAllaster", 4)
        self.assertEquals(result, ("MKLS", "MKLS"))
        result = double_metaphone("McAllister", 4)
        self.assertEquals(result, ("MKLS", "MKLS"))
        result = double_metaphone("McConnell", 4)
        self.assertEquals(result, ("MKNL", "MKNL"))
        result = double_metaphone("McFarland", 4)
        self.assertEquals(result, ("MKFR", "MKFR"))
        result = double_metaphone("McIlroy", 4)
        self.assertEquals(result, ("MSLR", "MSLR"))
        result = double_metaphone("McNair", 4)
        self.assertEquals(result, ("MKNR", "MKNR"))
        result = double_metaphone("McNair-Landry", 4)
        self.assertEquals(result, ("MKNR", "MKNR"))
        result = double_metaphone("McRaven", 4)
        self.assertEquals(result, ("MKRF", "MKRF"))
        result = double_metaphone("Mead", 4)
        self.assertEquals(result, ("MT", "MT"))
        result = double_metaphone("Meade", 4)
        self.assertEquals(result, ("MT", "MT"))
        result = double_metaphone("Meck", 4)
        self.assertEquals(result, ("MK", "MK"))
        result = double_metaphone("Melton", 4)
        self.assertEquals(result, ("MLTN", "MLTN"))
        result = double_metaphone("Mendenhall", 4)
        self.assertEquals(result, ("MNTN", "MNTN"))
        result = double_metaphone("Mering", 4)
        self.assertEquals(result, ("MRNK", "MRNK"))
        result = double_metaphone("Merrick", 4)
        self.assertEquals(result, ("MRK", "MRK"))
        result = double_metaphone("Merry", 4)
        self.assertEquals(result, ("MR", "MR"))
        result = double_metaphone("Mighill", 4)
        self.assertEquals(result, ("ML", "ML"))
        result = double_metaphone("Miller", 4)
        self.assertEquals(result, ("MLR", "MLR"))
        result = double_metaphone("Milton", 4)
        self.assertEquals(result, ("MLTN", "MLTN"))
        result = double_metaphone("Mohun", 4)
        self.assertEquals(result, ("MHN", "MHN"))
        result = double_metaphone("Montague", 4)
        self.assertEquals(result, ("MNTK", "MNTK"))
        result = double_metaphone("Montboucher", 4)
        self.assertEquals(result, ("MNTP", "MNTP"))
        result = double_metaphone("Moore", 4)
        self.assertEquals(result, ("MR", "MR"))
        result = double_metaphone("Morrel", 4)
        self.assertEquals(result, ("MRL", "MRL"))
        result = double_metaphone("Morrill", 4)
        self.assertEquals(result, ("MRL", "MRL"))
        result = double_metaphone("Morris", 4)
        self.assertEquals(result, ("MRS", "MRS"))
        result = double_metaphone("Morton", 4)
        self.assertEquals(result, ("MRTN", "MRTN"))
        result = double_metaphone("Moton", 4)
        self.assertEquals(result, ("MTN", "MTN"))
        result = double_metaphone("Muir", 4)
        self.assertEquals(result, ("MR", "MR"))
        result = double_metaphone("Mulferd", 4)
        self.assertEquals(result, ("MLFR", "MLFR"))
        result = double_metaphone("Mullins", 4)
        self.assertEquals(result, ("MLNS", "MLNS"))
        result = double_metaphone("Mulso", 4)
        self.assertEquals(result, ("MLS", "MLS"))
        result = double_metaphone("Munger", 4)
        self.assertEquals(result, ("MNKR", "MNJR"))
        result = double_metaphone("Munt", 4)
        self.assertEquals(result, ("MNT", "MNT"))
        result = double_metaphone("Murchad", 4)
        self.assertEquals(result, ("MRXT", "MRKT"))
        result = double_metaphone("Murdock", 4)
        self.assertEquals(result, ("MRTK", "MRTK"))
        result = double_metaphone("Murray", 4)
        self.assertEquals(result, ("MR", "MR"))
        result = double_metaphone("Muskett", 4)
        self.assertEquals(result, ("MSKT", "MSKT"))
        result = double_metaphone("Myers", 4)
        self.assertEquals(result, ("MRS", "MRS"))
        result = double_metaphone("Myrick", 4)
        self.assertEquals(result, ("MRK", "MRK"))
        result = double_metaphone("NORRIS", 4)
        self.assertEquals(result, ("NRS", "NRS"))
        result = double_metaphone("Nayle", 4)
        self.assertEquals(result, ("NL", "NL"))
        result = double_metaphone("Newcomb", 4)
        self.assertEquals(result, ("NKMP", "NKMP"))
        result = double_metaphone("Newcomb(e, 4)")
        self.assertEquals(result, ("NKMP", "NKMP"))
        result = double_metaphone("Newkirk", 4)
        self.assertEquals(result, ("NKRK", "NKRK"))
        result = double_metaphone("Newton", 4)
        self.assertEquals(result, ("NTN", "NTN"))
        result = double_metaphone("Niles", 4)
        self.assertEquals(result, ("NLS", "NLS"))
        result = double_metaphone("Noble", 4)
        self.assertEquals(result, ("NPL", "NPL"))
        result = double_metaphone("Noel", 4)
        self.assertEquals(result, ("NL", "NL"))
        result = double_metaphone("Northend", 4)
        self.assertEquals(result, ("NR0N", "NRTN"))
        result = double_metaphone("Norton", 4)
        self.assertEquals(result, ("NRTN", "NRTN"))
        result = double_metaphone("Nutter", 4)
        self.assertEquals(result, ("NTR", "NTR"))
        result = double_metaphone("Odding", 4)
        self.assertEquals(result, ("ATNK", "ATNK"))
        result = double_metaphone("Odenbaugh", 4)
        self.assertEquals(result, ("ATNP", "ATNP"))
        result = double_metaphone("Ogborn", 4)
        self.assertEquals(result, ("AKPR", "AKPR"))
        result = double_metaphone("Oppenheimer", 4)
        self.assertEquals(result, ("APNM", "APNM"))
        result = double_metaphone("Otis", 4)
        self.assertEquals(result, ("ATS", "ATS"))
        result = double_metaphone("Oviatt", 4)
        self.assertEquals(result, ("AFT", "AFT"))
        result = double_metaphone("PRUST?", 4)
        self.assertEquals(result, ("PRST", "PRST"))
        result = double_metaphone("Paddock", 4)
        self.assertEquals(result, ("PTK", "PTK"))
        result = double_metaphone("Page", 4)
        self.assertEquals(result, ("PJ", "PK"))
        result = double_metaphone("Paine", 4)
        self.assertEquals(result, ("PN", "PN"))
        result = double_metaphone("Paist", 4)
        self.assertEquals(result, ("PST", "PST"))
        result = double_metaphone("Palmer", 4)
        self.assertEquals(result, ("PLMR", "PLMR"))
        result = double_metaphone("Park", 4)
        self.assertEquals(result, ("PRK", "PRK"))
        result = double_metaphone("Parker", 4)
        self.assertEquals(result, ("PRKR", "PRKR"))
        result = double_metaphone("Parkhurst", 4)
        self.assertEquals(result, ("PRKR", "PRKR"))
        result = double_metaphone("Parrat", 4)
        self.assertEquals(result, ("PRT", "PRT"))
        result = double_metaphone("Parsons", 4)
        self.assertEquals(result, ("PRSN", "PRSN"))
        result = double_metaphone("Partridge", 4)
        self.assertEquals(result, ("PRTR", "PRTR"))
        result = double_metaphone("Pashley", 4)
        self.assertEquals(result, ("PXL", "PXL"))
        result = double_metaphone("Pasley", 4)
        self.assertEquals(result, ("PSL", "PSL"))
        result = double_metaphone("Patrick", 4)
        self.assertEquals(result, ("PTRK", "PTRK"))
        result = double_metaphone("Pattee", 4)
        self.assertEquals(result, ("PT", "PT"))
        result = double_metaphone("Patten", 4)
        self.assertEquals(result, ("PTN", "PTN"))
        result = double_metaphone("Pawley", 4)
        self.assertEquals(result, ("PL", "PL"))
        result = double_metaphone("Payne", 4)
        self.assertEquals(result, ("PN", "PN"))
        result = double_metaphone("Peabody", 4)
        self.assertEquals(result, ("PPT", "PPT"))
        result = double_metaphone("Peake", 4)
        self.assertEquals(result, ("PK", "PK"))
        result = double_metaphone("Pearson", 4)
        self.assertEquals(result, ("PRSN", "PRSN"))
        result = double_metaphone("Peat", 4)
        self.assertEquals(result, ("PT", "PT"))
        result = double_metaphone("Pedersen", 4)
        self.assertEquals(result, ("PTRS", "PTRS"))
        result = double_metaphone("Percy", 4)
        self.assertEquals(result, ("PRS", "PRS"))
        result = double_metaphone("Perkins", 4)
        self.assertEquals(result, ("PRKN", "PRKN"))
        result = double_metaphone("Perrine", 4)
        self.assertEquals(result, ("PRN", "PRN"))
        result = double_metaphone("Perry", 4)
        self.assertEquals(result, ("PR", "PR"))
        result = double_metaphone("Peson", 4)
        self.assertEquals(result, ("PSN", "PSN"))
        result = double_metaphone("Peterson", 4)
        self.assertEquals(result, ("PTRS", "PTRS"))
        result = double_metaphone("Peyton", 4)
        self.assertEquals(result, ("PTN", "PTN"))
        result = double_metaphone("Phinney", 4)
        self.assertEquals(result, ("FN", "FN"))
        result = double_metaphone("Pickard", 4)
        self.assertEquals(result, ("PKRT", "PKRT"))
        result = double_metaphone("Pierce", 4)
        self.assertEquals(result, ("PRS", "PRS"))
        result = double_metaphone("Pierrepont", 4)
        self.assertEquals(result, ("PRPN", "PRPN"))
        result = double_metaphone("Pike", 4)
        self.assertEquals(result, ("PK", "PK"))
        result = double_metaphone("Pinkham", 4)
        self.assertEquals(result, ("PNKM", "PNKM"))
        result = double_metaphone("Pitman", 4)
        self.assertEquals(result, ("PTMN", "PTMN"))
        result = double_metaphone("Pitt", 4)
        self.assertEquals(result, ("PT", "PT"))
        result = double_metaphone("Pitts", 4)
        self.assertEquals(result, ("PTS", "PTS"))
        result = double_metaphone("Plantagenet", 4)
        self.assertEquals(result, ("PLNT", "PLNT"))
        result = double_metaphone("Platt", 4)
        self.assertEquals(result, ("PLT", "PLT"))
        result = double_metaphone("Platts", 4)
        self.assertEquals(result, ("PLTS", "PLTS"))
        result = double_metaphone("Pleis", 4)
        self.assertEquals(result, ("PLS", "PLS"))
        result = double_metaphone("Pleiss", 4)
        self.assertEquals(result, ("PLS", "PLS"))
        result = double_metaphone("Plisko", 4)
        self.assertEquals(result, ("PLSK", "PLSK"))
        result = double_metaphone("Pliskovitch", 4)
        self.assertEquals(result, ("PLSK", "PLSK"))
        result = double_metaphone("Plum", 4)
        self.assertEquals(result, ("PLM", "PLM"))
        result = double_metaphone("Plume", 4)
        self.assertEquals(result, ("PLM", "PLM"))
        result = double_metaphone("Poitou", 4)
        self.assertEquals(result, ("PT", "PT"))
        result = double_metaphone("Pomeroy", 4)
        self.assertEquals(result, ("PMR", "PMR"))
        result = double_metaphone("Poretiers", 4)
        self.assertEquals(result, ("PRTR", "PRTR"))
        result = double_metaphone("Pote", 4)
        self.assertEquals(result, ("PT", "PT"))
        result = double_metaphone("Potter", 4)
        self.assertEquals(result, ("PTR", "PTR"))
        result = double_metaphone("Potts", 4)
        self.assertEquals(result, ("PTS", "PTS"))
        result = double_metaphone("Powell", 4)
        self.assertEquals(result, ("PL", "PL"))
        result = double_metaphone("Pratt", 4)
        self.assertEquals(result, ("PRT", "PRT"))
        result = double_metaphone("Presbury", 4)
        self.assertEquals(result, ("PRSP", "PRSP"))
        result = double_metaphone("Priest", 4)
        self.assertEquals(result, ("PRST", "PRST"))
        result = double_metaphone("Prindle", 4)
        self.assertEquals(result, ("PRNT", "PRNT"))
        result = double_metaphone("Prior", 4)
        self.assertEquals(result, ("PRR", "PRR"))
        result = double_metaphone("Profumo", 4)
        self.assertEquals(result, ("PRFM", "PRFM"))
        result = double_metaphone("Purdy", 4)
        self.assertEquals(result, ("PRT", "PRT"))
        result = double_metaphone("Purefoy", 4)
        self.assertEquals(result, ("PRF", "PRF"))
        result = double_metaphone("Pury", 4)
        self.assertEquals(result, ("PR", "PR"))
        result = double_metaphone("Quinter", 4)
        self.assertEquals(result, ("KNTR", "KNTR"))
        result = double_metaphone("Rachel", 4)
        self.assertEquals(result, ("RXL", "RKL"))
        result = double_metaphone("Rand", 4)
        self.assertEquals(result, ("RNT", "RNT"))
        result = double_metaphone("Rankin", 4)
        self.assertEquals(result, ("RNKN", "RNKN"))
        result = double_metaphone("Ravenscroft", 4)
        self.assertEquals(result, ("RFNS", "RFNS"))
        result = double_metaphone("Raynsford", 4)
        self.assertEquals(result, ("RNSF", "RNSF"))
        result = double_metaphone("Reakirt", 4)
        self.assertEquals(result, ("RKRT", "RKRT"))
        result = double_metaphone("Reaves", 4)
        self.assertEquals(result, ("RFS", "RFS"))
        result = double_metaphone("Reeves", 4)
        self.assertEquals(result, ("RFS", "RFS"))
        result = double_metaphone("Reichert", 4)
        self.assertEquals(result, ("RXRT", "RKRT"))
        result = double_metaphone("Remmele", 4)
        self.assertEquals(result, ("RML", "RML"))
        result = double_metaphone("Reynolds", 4)
        self.assertEquals(result, ("RNLT", "RNLT"))
        result = double_metaphone("Rhodes", 4)
        self.assertEquals(result, ("RTS", "RTS"))
        result = double_metaphone("Richards", 4)
        self.assertEquals(result, ("RXRT", "RKRT"))
        result = double_metaphone("Richardson", 4)
        self.assertEquals(result, ("RXRT", "RKRT"))
        result = double_metaphone("Ring", 4)
        self.assertEquals(result, ("RNK", "RNK"))
        result = double_metaphone("Roberts", 4)
        self.assertEquals(result, ("RPRT", "RPRT"))
        result = double_metaphone("Robertson", 4)
        self.assertEquals(result, ("RPRT", "RPRT"))
        result = double_metaphone("Robson", 4)
        self.assertEquals(result, ("RPSN", "RPSN"))
        result = double_metaphone("Rodie", 4)
        self.assertEquals(result, ("RT", "RT"))
        result = double_metaphone("Rody", 4)
        self.assertEquals(result, ("RT", "RT"))
        result = double_metaphone("Rogers", 4)
        self.assertEquals(result, ("RKRS", "RJRS"))
        result = double_metaphone("Ross", 4)
        self.assertEquals(result, ("RS", "RS"))
        result = double_metaphone("Rosslevin", 4)
        self.assertEquals(result, ("RSLF", "RSLF"))
        result = double_metaphone("Rowland", 4)
        self.assertEquals(result, ("RLNT", "RLNT"))
        result = double_metaphone("Ruehl", 4)
        self.assertEquals(result, ("RL", "RL"))
        result = double_metaphone("Russell", 4)
        self.assertEquals(result, ("RSL", "RSL"))
        result = double_metaphone("Ruth", 4)
        self.assertEquals(result, ("R0", "RT"))
        result = double_metaphone("Ryan", 4)
        self.assertEquals(result, ("RN", "RN"))
        result = double_metaphone("Rysse", 4)
        self.assertEquals(result, ("RS", "RS"))
        result = double_metaphone("Sadler", 4)
        self.assertEquals(result, ("STLR", "STLR"))
        result = double_metaphone("Salmon", 4)
        self.assertEquals(result, ("SLMN", "SLMN"))
        result = double_metaphone("Salter", 4)
        self.assertEquals(result, ("SLTR", "SLTR"))
        result = double_metaphone("Salvatore", 4)
        self.assertEquals(result, ("SLFT", "SLFT"))
        result = double_metaphone("Sanders", 4)
        self.assertEquals(result, ("SNTR", "SNTR"))
        result = double_metaphone("Sands", 4)
        self.assertEquals(result, ("SNTS", "SNTS"))
        result = double_metaphone("Sanford", 4)
        self.assertEquals(result, ("SNFR", "SNFR"))
        result = double_metaphone("Sanger", 4)
        self.assertEquals(result, ("SNKR", "SNJR"))
        result = double_metaphone("Sargent", 4)
        self.assertEquals(result, ("SRJN", "SRKN"))
        result = double_metaphone("Saunders", 4)
        self.assertEquals(result, ("SNTR", "SNTR"))
        result = double_metaphone("Schilling", 4)
        self.assertEquals(result, ("XLNK", "XLNK"))
        result = double_metaphone("Schlegel", 4)
        self.assertEquals(result, ("XLKL", "SLKL"))
        result = double_metaphone("Scott", 4)
        self.assertEquals(result, ("SKT", "SKT"))
        result = double_metaphone("Sears", 4)
        self.assertEquals(result, ("SRS", "SRS"))
        result = double_metaphone("Segersall", 4)
        self.assertEquals(result, ("SJRS", "SKRS"))
        result = double_metaphone("Senecal", 4)
        self.assertEquals(result, ("SNKL", "SNKL"))
        result = double_metaphone("Sergeaux", 4)
        self.assertEquals(result, ("SRJ", "SRK"))
        result = double_metaphone("Severance", 4)
        self.assertEquals(result, ("SFRN", "SFRN"))
        result = double_metaphone("Sharp", 4)
        self.assertEquals(result, ("XRP", "XRP"))
        result = double_metaphone("Sharpe", 4)
        self.assertEquals(result, ("XRP", "XRP"))
        result = double_metaphone("Sharply", 4)
        self.assertEquals(result, ("XRPL", "XRPL"))
        result = double_metaphone("Shatswell", 4)
        self.assertEquals(result, ("XTSL", "XTSL"))
        result = double_metaphone("Shattack", 4)
        self.assertEquals(result, ("XTK", "XTK"))
        result = double_metaphone("Shattock", 4)
        self.assertEquals(result, ("XTK", "XTK"))
        result = double_metaphone("Shattuck", 4)
        self.assertEquals(result, ("XTK", "XTK"))
        result = double_metaphone("Shaw", 4)
        self.assertEquals(result, ("X", "XF"))
        result = double_metaphone("Sheldon", 4)
        self.assertEquals(result, ("XLTN", "XLTN"))
        result = double_metaphone("Sherman", 4)
        self.assertEquals(result, ("XRMN", "XRMN"))
        result = double_metaphone("Shinn", 4)
        self.assertEquals(result, ("XN", "XN"))
        result = double_metaphone("Shirford", 4)
        self.assertEquals(result, ("XRFR", "XRFR"))
        result = double_metaphone("Shirley", 4)
        self.assertEquals(result, ("XRL", "XRL"))
        result = double_metaphone("Shively", 4)
        self.assertEquals(result, ("XFL", "XFL"))
        result = double_metaphone("Shoemaker", 4)
        self.assertEquals(result, ("XMKR", "XMKR"))
        result = double_metaphone("Short", 4)
        self.assertEquals(result, ("XRT", "XRT"))
        result = double_metaphone("Shotwell", 4)
        self.assertEquals(result, ("XTL", "XTL"))
        result = double_metaphone("Shute", 4)
        self.assertEquals(result, ("XT", "XT"))
        result = double_metaphone("Sibley", 4)
        self.assertEquals(result, ("SPL", "SPL"))
        result = double_metaphone("Silver", 4)
        self.assertEquals(result, ("SLFR", "SLFR"))
        result = double_metaphone("Simes", 4)
        self.assertEquals(result, ("SMS", "SMS"))
        result = double_metaphone("Sinken", 4)
        self.assertEquals(result, ("SNKN", "SNKN"))
        result = double_metaphone("Sinn", 4)
        self.assertEquals(result, ("SN", "SN"))
        result = double_metaphone("Skelton", 4)
        self.assertEquals(result, ("SKLT", "SKLT"))
        result = double_metaphone("Skiffe", 4)
        self.assertEquals(result, ("SKF", "SKF"))
        result = double_metaphone("Skotkonung", 4)
        self.assertEquals(result, ("SKTK", "SKTK"))
        result = double_metaphone("Slade", 4)
        self.assertEquals(result, ("SLT", "XLT"))
        result = double_metaphone("Slye", 4)
        self.assertEquals(result, ("SL", "XL"))
        result = double_metaphone("Smedley", 4)
        self.assertEquals(result, ("SMTL", "XMTL"))
        result = double_metaphone("Smith", 4)
        self.assertEquals(result, ("SM0", "XMT"))
        result = double_metaphone("Snow", 4)
        self.assertEquals(result, ("SN", "XNF"))
        result = double_metaphone("Soole", 4)
        self.assertEquals(result, ("SL", "SL"))
        result = double_metaphone("Soule", 4)
        self.assertEquals(result, ("SL", "SL"))
        result = double_metaphone("Southworth", 4)
        self.assertEquals(result, ("S0R0", "STRT"))
        result = double_metaphone("Sowles", 4)
        self.assertEquals(result, ("SLS", "SLS"))
        result = double_metaphone("Spalding", 4)
        self.assertEquals(result, ("SPLT", "SPLT"))
        result = double_metaphone("Spark", 4)
        self.assertEquals(result, ("SPRK", "SPRK"))
        result = double_metaphone("Spencer", 4)
        self.assertEquals(result, ("SPNS", "SPNS"))
        result = double_metaphone("Sperry", 4)
        self.assertEquals(result, ("SPR", "SPR"))
        result = double_metaphone("Spofford", 4)
        self.assertEquals(result, ("SPFR", "SPFR"))
        result = double_metaphone("Spooner", 4)
        self.assertEquals(result, ("SPNR", "SPNR"))
        result = double_metaphone("Sprague", 4)
        self.assertEquals(result, ("SPRK", "SPRK"))
        result = double_metaphone("Springer", 4)
        self.assertEquals(result, ("SPRN", "SPRN"))
        result = double_metaphone("St. Clair", 4)
        self.assertEquals(result, ("STKL", "STKL"))
        result = double_metaphone("St. Claire", 4)
        self.assertEquals(result, ("STKL", "STKL"))
        result = double_metaphone("St. Leger", 4)
        self.assertEquals(result, ("STLJ", "STLK"))
        result = double_metaphone("St. Omer", 4)
        self.assertEquals(result, ("STMR", "STMR"))
        result = double_metaphone("Stafferton", 4)
        self.assertEquals(result, ("STFR", "STFR"))
        result = double_metaphone("Stafford", 4)
        self.assertEquals(result, ("STFR", "STFR"))
        result = double_metaphone("Stalham", 4)
        self.assertEquals(result, ("STLM", "STLM"))
        result = double_metaphone("Stanford", 4)
        self.assertEquals(result, ("STNF", "STNF"))
        result = double_metaphone("Stanton", 4)
        self.assertEquals(result, ("STNT", "STNT"))
        result = double_metaphone("Star", 4)
        self.assertEquals(result, ("STR", "STR"))
        result = double_metaphone("Starbuck", 4)
        self.assertEquals(result, ("STRP", "STRP"))
        result = double_metaphone("Starkey", 4)
        self.assertEquals(result, ("STRK", "STRK"))
        result = double_metaphone("Starkweather", 4)
        self.assertEquals(result, ("STRK", "STRK"))
        result = double_metaphone("Stearns", 4)
        self.assertEquals(result, ("STRN", "STRN"))
        result = double_metaphone("Stebbins", 4)
        self.assertEquals(result, ("STPN", "STPN"))
        result = double_metaphone("Steele", 4)
        self.assertEquals(result, ("STL", "STL"))
        result = double_metaphone("Stephenson", 4)
        self.assertEquals(result, ("STFN", "STFN"))
        result = double_metaphone("Stevens", 4)
        self.assertEquals(result, ("STFN", "STFN"))
        result = double_metaphone("Stoddard", 4)
        self.assertEquals(result, ("STTR", "STTR"))
        result = double_metaphone("Stodder", 4)
        self.assertEquals(result, ("STTR", "STTR"))
        result = double_metaphone("Stone", 4)
        self.assertEquals(result, ("STN", "STN"))
        result = double_metaphone("Storey", 4)
        self.assertEquals(result, ("STR", "STR"))
        result = double_metaphone("Storrada", 4)
        self.assertEquals(result, ("STRT", "STRT"))
        result = double_metaphone("Story", 4)
        self.assertEquals(result, ("STR", "STR"))
        result = double_metaphone("Stoughton", 4)
        self.assertEquals(result, ("STFT", "STFT"))
        result = double_metaphone("Stout", 4)
        self.assertEquals(result, ("STT", "STT"))
        result = double_metaphone("Stow", 4)
        self.assertEquals(result, ("ST", "STF"))
        result = double_metaphone("Strong", 4)
        self.assertEquals(result, ("STRN", "STRN"))
        result = double_metaphone("Strutt", 4)
        self.assertEquals(result, ("STRT", "STRT"))
        result = double_metaphone("Stryker", 4)
        self.assertEquals(result, ("STRK", "STRK"))
        result = double_metaphone("Stuckeley", 4)
        self.assertEquals(result, ("STKL", "STKL"))
        result = double_metaphone("Sturges", 4)
        self.assertEquals(result, ("STRJ", "STRK"))
        result = double_metaphone("Sturgess", 4)
        self.assertEquals(result, ("STRJ", "STRK"))
        result = double_metaphone("Sturgis", 4)
        self.assertEquals(result, ("STRJ", "STRK"))
        result = double_metaphone("Suevain", 4)
        self.assertEquals(result, ("SFN", "SFN"))
        result = double_metaphone("Sulyard", 4)
        self.assertEquals(result, ("SLRT", "SLRT"))
        result = double_metaphone("Sutton", 4)
        self.assertEquals(result, ("STN", "STN"))
        result = double_metaphone("Swain", 4)
        self.assertEquals(result, ("SN", "XN"))
        result = double_metaphone("Swayne", 4)
        self.assertEquals(result, ("SN", "XN"))
        result = double_metaphone("Swayze", 4)
        self.assertEquals(result, ("SS", "XTS"))
        result = double_metaphone("Swift", 4)
        self.assertEquals(result, ("SFT", "XFT"))
        result = double_metaphone("Taber", 4)
        self.assertEquals(result, ("TPR", "TPR"))
        result = double_metaphone("Talcott", 4)
        self.assertEquals(result, ("TLKT", "TLKT"))
        result = double_metaphone("Tarne", 4)
        self.assertEquals(result, ("TRN", "TRN"))
        result = double_metaphone("Tatum", 4)
        self.assertEquals(result, ("TTM", "TTM"))
        result = double_metaphone("Taverner", 4)
        self.assertEquals(result, ("TFRN", "TFRN"))
        result = double_metaphone("Taylor", 4)
        self.assertEquals(result, ("TLR", "TLR"))
        result = double_metaphone("Tenney", 4)
        self.assertEquals(result, ("TN", "TN"))
        result = double_metaphone("Thayer", 4)
        self.assertEquals(result, ("0R", "TR"))
        result = double_metaphone("Thember", 4)
        self.assertEquals(result, ("0MPR", "TMPR"))
        result = double_metaphone("Thomas", 4)
        self.assertEquals(result, ("TMS", "TMS"))
        result = double_metaphone("Thompson", 4)
        self.assertEquals(result, ("TMPS", "TMPS"))
        result = double_metaphone("Thorne", 4)
        self.assertEquals(result, ("0RN", "TRN"))
        result = double_metaphone("Thornycraft", 4)
        self.assertEquals(result, ("0RNK", "TRNK"))
        result = double_metaphone("Threlkeld", 4)
        self.assertEquals(result, ("0RLK", "TRLK"))
        result = double_metaphone("Throckmorton", 4)
        self.assertEquals(result, ("0RKM", "TRKM"))
        result = double_metaphone("Thwaits", 4)
        self.assertEquals(result, ("0TS", "TTS"))
        result = double_metaphone("Tibbetts", 4)
        self.assertEquals(result, ("TPTS", "TPTS"))
        result = double_metaphone("Tidd", 4)
        self.assertEquals(result, ("TT", "TT"))
        result = double_metaphone("Tierney", 4)
        self.assertEquals(result, ("TRN", "TRN"))
        result = double_metaphone("Tilley", 4)
        self.assertEquals(result, ("TL", "TL"))
        result = double_metaphone("Tillieres", 4)
        self.assertEquals(result, ("TLRS", "TLRS"))
        result = double_metaphone("Tilly", 4)
        self.assertEquals(result, ("TL", "TL"))
        result = double_metaphone("Tisdale", 4)
        self.assertEquals(result, ("TSTL", "TSTL"))
        result = double_metaphone("Titus", 4)
        self.assertEquals(result, ("TTS", "TTS"))
        result = double_metaphone("Tobey", 4)
        self.assertEquals(result, ("TP", "TP"))
        result = double_metaphone("Tooker", 4)
        self.assertEquals(result, ("TKR", "TKR"))
        result = double_metaphone("Towle", 4)
        self.assertEquals(result, ("TL", "TL"))
        result = double_metaphone("Towne", 4)
        self.assertEquals(result, ("TN", "TN"))
        result = double_metaphone("Townsend", 4)
        self.assertEquals(result, ("TNSN", "TNSN"))
        result = double_metaphone("Treadway", 4)
        self.assertEquals(result, ("TRT", "TRT"))
        result = double_metaphone("Trelawney", 4)
        self.assertEquals(result, ("TRLN", "TRLN"))
        result = double_metaphone("Trinder", 4)
        self.assertEquals(result, ("TRNT", "TRNT"))
        result = double_metaphone("Tripp", 4)
        self.assertEquals(result, ("TRP", "TRP"))
        result = double_metaphone("Trippe", 4)
        self.assertEquals(result, ("TRP", "TRP"))
        result = double_metaphone("Trott", 4)
        self.assertEquals(result, ("TRT", "TRT"))
        result = double_metaphone("True", 4)
        self.assertEquals(result, ("TR", "TR"))
        result = double_metaphone("Trussebut", 4)
        self.assertEquals(result, ("TRSP", "TRSP"))
        result = double_metaphone("Tucker", 4)
        self.assertEquals(result, ("TKR", "TKR"))
        result = double_metaphone("Turgeon", 4)
        self.assertEquals(result, ("TRJN", "TRKN"))
        result = double_metaphone("Turner", 4)
        self.assertEquals(result, ("TRNR", "TRNR"))
        result = double_metaphone("Tuttle", 4)
        self.assertEquals(result, ("TTL", "TTL"))
        result = double_metaphone("Tyler", 4)
        self.assertEquals(result, ("TLR", "TLR"))
        result = double_metaphone("Tylle", 4)
        self.assertEquals(result, ("TL", "TL"))
        result = double_metaphone("Tyrrel", 4)
        self.assertEquals(result, ("TRL", "TRL"))
        result = double_metaphone("Ua Tuathail", 4)
        self.assertEquals(result, ("AT0L", "ATTL"))
        result = double_metaphone("Ulrich", 4)
        self.assertEquals(result, ("ALRX", "ALRK"))
        result = double_metaphone("Underhill", 4)
        self.assertEquals(result, ("ANTR", "ANTR"))
        result = double_metaphone("Underwood", 4)
        self.assertEquals(result, ("ANTR", "ANTR"))
        result = double_metaphone("Unknown", 4)
        self.assertEquals(result, ("ANKN", "ANKN"))
        result = double_metaphone("Valentine", 4)
        self.assertEquals(result, ("FLNT", "FLNT"))
        result = double_metaphone("Van Egmond", 4)
        self.assertEquals(result, ("FNKM", "FNKM"))
        result = double_metaphone("Van der Beek", 4)
        self.assertEquals(result, ("FNTR", "FNTR"))
        result = double_metaphone("Vaughan", 4)
        self.assertEquals(result, ("FKN", "FKN"))
        result = double_metaphone("Vermenlen", 4)
        self.assertEquals(result, ("FRMN", "FRMN"))
        result = double_metaphone("Vincent", 4)
        self.assertEquals(result, ("FNSN", "FNSN"))
        result = double_metaphone("Volentine", 4)
        self.assertEquals(result, ("FLNT", "FLNT"))
        result = double_metaphone("Wagner", 4)
        self.assertEquals(result, ("AKNR", "FKNR"))
        result = double_metaphone("Waite", 4)
        self.assertEquals(result, ("AT", "FT"))
        result = double_metaphone("Walker", 4)
        self.assertEquals(result, ("ALKR", "FLKR"))
        result = double_metaphone("Walter", 4)
        self.assertEquals(result, ("ALTR", "FLTR"))
        result = double_metaphone("Wandell", 4)
        self.assertEquals(result, ("ANTL", "FNTL"))
        result = double_metaphone("Wandesford", 4)
        self.assertEquals(result, ("ANTS", "FNTS"))
        result = double_metaphone("Warbleton", 4)
        self.assertEquals(result, ("ARPL", "FRPL"))
        result = double_metaphone("Ward", 4)
        self.assertEquals(result, ("ART", "FRT"))
        result = double_metaphone("Warde", 4)
        self.assertEquals(result, ("ART", "FRT"))
        result = double_metaphone("Ware", 4)
        self.assertEquals(result, ("AR", "FR"))
        result = double_metaphone("Wareham", 4)
        self.assertEquals(result, ("ARHM", "FRHM"))
        result = double_metaphone("Warner", 4)
        self.assertEquals(result, ("ARNR", "FRNR"))
        result = double_metaphone("Warren", 4)
        self.assertEquals(result, ("ARN", "FRN"))
        result = double_metaphone("Washburne", 4)
        self.assertEquals(result, ("AXPR", "FXPR"))
        result = double_metaphone("Waterbury", 4)
        self.assertEquals(result, ("ATRP", "FTRP"))
        result = double_metaphone("Watson", 4)
        self.assertEquals(result, ("ATSN", "FTSN"))
        result = double_metaphone("WatsonEllithorpe", 4)
        self.assertEquals(result, ("ATSN", "FTSN"))
        result = double_metaphone("Watts", 4)
        self.assertEquals(result, ("ATS", "FTS"))
        result = double_metaphone("Wayne", 4)
        self.assertEquals(result, ("AN", "FN"))
        result = double_metaphone("Webb", 4)
        self.assertEquals(result, ("AP", "FP"))
        result = double_metaphone("Weber", 4)
        self.assertEquals(result, ("APR", "FPR"))
        result = double_metaphone("Webster", 4)
        self.assertEquals(result, ("APST", "FPST"))
        result = double_metaphone("Weed", 4)
        self.assertEquals(result, ("AT", "FT"))
        result = double_metaphone("Weeks", 4)
        self.assertEquals(result, ("AKS", "FKS"))
        result = double_metaphone("Wells", 4)
        self.assertEquals(result, ("ALS", "FLS"))
        result = double_metaphone("Wenzell", 4)
        self.assertEquals(result, ("ANSL", "FNTS"))
        result = double_metaphone("West", 4)
        self.assertEquals(result, ("AST", "FST"))
        result = double_metaphone("Westbury", 4)
        self.assertEquals(result, ("ASTP", "FSTP"))
        result = double_metaphone("Whatlocke", 4)
        self.assertEquals(result, ("ATLK", "ATLK"))
        result = double_metaphone("Wheeler", 4)
        self.assertEquals(result, ("ALR", "ALR"))
        result = double_metaphone("Whiston", 4)
        self.assertEquals(result, ("ASTN", "ASTN"))
        result = double_metaphone("White", 4)
        self.assertEquals(result, ("AT", "AT"))
        result = double_metaphone("Whitman", 4)
        self.assertEquals(result, ("ATMN", "ATMN"))
        result = double_metaphone("Whiton", 4)
        self.assertEquals(result, ("ATN", "ATN"))
        result = double_metaphone("Whitson", 4)
        self.assertEquals(result, ("ATSN", "ATSN"))
        result = double_metaphone("Wickes", 4)
        self.assertEquals(result, ("AKS", "FKS"))
        result = double_metaphone("Wilbur", 4)
        self.assertEquals(result, ("ALPR", "FLPR"))
        result = double_metaphone("Wilcotes", 4)
        self.assertEquals(result, ("ALKT", "FLKT"))
        result = double_metaphone("Wilkinson", 4)
        self.assertEquals(result, ("ALKN", "FLKN"))
        result = double_metaphone("Willets", 4)
        self.assertEquals(result, ("ALTS", "FLTS"))
        result = double_metaphone("Willett", 4)
        self.assertEquals(result, ("ALT", "FLT"))
        result = double_metaphone("Willey", 4)
        self.assertEquals(result, ("AL", "FL"))
        result = double_metaphone("Williams", 4)
        self.assertEquals(result, ("ALMS", "FLMS"))
        result = double_metaphone("Williston", 4)
        self.assertEquals(result, ("ALST", "FLST"))
        result = double_metaphone("Wilson", 4)
        self.assertEquals(result, ("ALSN", "FLSN"))
        result = double_metaphone("Wimes", 4)
        self.assertEquals(result, ("AMS", "FMS"))
        result = double_metaphone("Winch", 4)
        self.assertEquals(result, ("ANX", "FNK"))
        result = double_metaphone("Winegar", 4)
        self.assertEquals(result, ("ANKR", "FNKR"))
        result = double_metaphone("Wing", 4)
        self.assertEquals(result, ("ANK", "FNK"))
        result = double_metaphone("Winsley", 4)
        self.assertEquals(result, ("ANSL", "FNSL"))
        result = double_metaphone("Winslow", 4)
        self.assertEquals(result, ("ANSL", "FNSL"))
        result = double_metaphone("Winthrop", 4)
        self.assertEquals(result, ("AN0R", "FNTR"))
        result = double_metaphone("Wise", 4)
        self.assertEquals(result, ("AS", "FS"))
        result = double_metaphone("Wood", 4)
        self.assertEquals(result, ("AT", "FT"))
        result = double_metaphone("Woodbridge", 4)
        self.assertEquals(result, ("ATPR", "FTPR"))
        result = double_metaphone("Woodward", 4)
        self.assertEquals(result, ("ATRT", "FTRT"))
        result = double_metaphone("Wooley", 4)
        self.assertEquals(result, ("AL", "FL"))
        result = double_metaphone("Woolley", 4)
        self.assertEquals(result, ("AL", "FL"))
        result = double_metaphone("Worth", 4)
        self.assertEquals(result, ("AR0", "FRT"))
        result = double_metaphone("Worthen", 4)
        self.assertEquals(result, ("AR0N", "FRTN"))
        result = double_metaphone("Worthley", 4)
        self.assertEquals(result, ("AR0L", "FRTL"))
        result = double_metaphone("Wright", 4)
        self.assertEquals(result, ("RT", "RT"))
        result = double_metaphone("Wyer", 4)
        self.assertEquals(result, ("AR", "FR"))
        result = double_metaphone("Wyere", 4)
        self.assertEquals(result, ("AR", "FR"))
        result = double_metaphone("Wynkoop", 4)
        self.assertEquals(result, ("ANKP", "FNKP"))
        result = double_metaphone("Yarnall", 4)
        self.assertEquals(result, ("ARNL", "ARNL"))
        result = double_metaphone("Yeoman", 4)
        self.assertEquals(result, ("AMN", "AMN"))
        result = double_metaphone("Yorke", 4)
        self.assertEquals(result, ("ARK", "ARK"))
        result = double_metaphone("Young", 4)
        self.assertEquals(result, ("ANK", "ANK"))
        result = double_metaphone("ab Wennonwen", 4)
        self.assertEquals(result, ("APNN", "APNN"))
        result = double_metaphone("ap Llewellyn", 4)
        self.assertEquals(result, ("APLL", "APLL"))
        result = double_metaphone("ap Lorwerth", 4)
        self.assertEquals(result, ("APLR", "APLR"))
        result = double_metaphone("d'Angouleme", 4)
        self.assertEquals(result, ("TNKL", "TNKL"))
        result = double_metaphone("de Audeham", 4)
        self.assertEquals(result, ("TTHM", "TTHM"))
        result = double_metaphone("de Bavant", 4)
        self.assertEquals(result, ("TPFN", "TPFN"))
        result = double_metaphone("de Beauchamp", 4)
        self.assertEquals(result, ("TPXM", "TPKM"))
        result = double_metaphone("de Beaumont", 4)
        self.assertEquals(result, ("TPMN", "TPMN"))
        result = double_metaphone("de Bolbec", 4)
        self.assertEquals(result, ("TPLP", "TPLP"))
        result = double_metaphone("de Braiose", 4)
        self.assertEquals(result, ("TPRS", "TPRS"))
        result = double_metaphone("de Braose", 4)
        self.assertEquals(result, ("TPRS", "TPRS"))
        result = double_metaphone("de Briwere", 4)
        self.assertEquals(result, ("TPRR", "TPRR"))
        result = double_metaphone("de Cantelou", 4)
        self.assertEquals(result, ("TKNT", "TKNT"))
        result = double_metaphone("de Cherelton", 4)
        self.assertEquals(result, ("TXRL", "TKRL"))
        result = double_metaphone("de Cherleton", 4)
        self.assertEquals(result, ("TXRL", "TKRL"))
        result = double_metaphone("de Clare", 4)
        self.assertEquals(result, ("TKLR", "TKLR"))
        result = double_metaphone("de Claremont", 4)
        self.assertEquals(result, ("TKLR", "TKLR"))
        result = double_metaphone("de Clifford", 4)
        self.assertEquals(result, ("TKLF", "TKLF"))
        result = double_metaphone("de Colville", 4)
        self.assertEquals(result, ("TKLF", "TKLF"))
        result = double_metaphone("de Courtenay", 4)
        self.assertEquals(result, ("TKRT", "TKRT"))
        result = double_metaphone("de Fauconberg", 4)
        self.assertEquals(result, ("TFKN", "TFKN"))
        result = double_metaphone("de Forest", 4)
        self.assertEquals(result, ("TFRS", "TFRS"))
        result = double_metaphone("de Gai", 4)
        self.assertEquals(result, ("TK", "TK"))
        result = double_metaphone("de Grey", 4)
        self.assertEquals(result, ("TKR", "TKR"))
        result = double_metaphone("de Guernons", 4)
        self.assertEquals(result, ("TKRN", "TKRN"))
        result = double_metaphone("de Haia", 4)
        self.assertEquals(result, ("T", "T"))
        result = double_metaphone("de Harcourt", 4)
        self.assertEquals(result, ("TRKR", "TRKR"))
        result = double_metaphone("de Hastings", 4)
        self.assertEquals(result, ("TSTN", "TSTN"))
        result = double_metaphone("de Hoke", 4)
        self.assertEquals(result, ("TK", "TK"))
        result = double_metaphone("de Hooch", 4)
        self.assertEquals(result, ("TK", "TK"))
        result = double_metaphone("de Hugelville", 4)
        self.assertEquals(result, ("TJLF", "TKLF"))
        result = double_metaphone("de Huntingdon", 4)
        self.assertEquals(result, ("TNTN", "TNTN"))
        result = double_metaphone("de Insula", 4)
        self.assertEquals(result, ("TNSL", "TNSL"))
        result = double_metaphone("de Keynes", 4)
        self.assertEquals(result, ("TKNS", "TKNS"))
        result = double_metaphone("de Lacy", 4)
        self.assertEquals(result, ("TLS", "TLS"))
        result = double_metaphone("de Lexington", 4)
        self.assertEquals(result, ("TLKS", "TLKS"))
        result = double_metaphone("de Lusignan", 4)
        self.assertEquals(result, ("TLSN", "TLSK"))
        result = double_metaphone("de Manvers", 4)
        self.assertEquals(result, ("TMNF", "TMNF"))
        result = double_metaphone("de Montagu", 4)
        self.assertEquals(result, ("TMNT", "TMNT"))
        result = double_metaphone("de Montault", 4)
        self.assertEquals(result, ("TMNT", "TMNT"))
        result = double_metaphone("de Montfort", 4)
        self.assertEquals(result, ("TMNT", "TMNT"))
        result = double_metaphone("de Mortimer", 4)
        self.assertEquals(result, ("TMRT", "TMRT"))
        result = double_metaphone("de Morville", 4)
        self.assertEquals(result, ("TMRF", "TMRF"))
        result = double_metaphone("de Morvois", 4)
        self.assertEquals(result, ("TMRF", "TMRF"))
        result = double_metaphone("de Neufmarche", 4)
        self.assertEquals(result, ("TNFM", "TNFM"))
        result = double_metaphone("de Odingsells", 4)
        self.assertEquals(result, ("TTNK", "TTNK"))
        result = double_metaphone("de Odyngsells", 4)
        self.assertEquals(result, ("TTNK", "TTNK"))
        result = double_metaphone("de Percy", 4)
        self.assertEquals(result, ("TPRS", "TPRS"))
        result = double_metaphone("de Pierrepont", 4)
        self.assertEquals(result, ("TPRP", "TPRP"))
        result = double_metaphone("de Plessetis", 4)
        self.assertEquals(result, ("TPLS", "TPLS"))
        result = double_metaphone("de Porhoet", 4)
        self.assertEquals(result, ("TPRT", "TPRT"))
        result = double_metaphone("de Prouz", 4)
        self.assertEquals(result, ("TPRS", "TPRS"))
        result = double_metaphone("de Quincy", 4)
        self.assertEquals(result, ("TKNS", "TKNS"))
        result = double_metaphone("de Ripellis", 4)
        self.assertEquals(result, ("TRPL", "TRPL"))
        result = double_metaphone("de Ros", 4)
        self.assertEquals(result, ("TRS", "TRS"))
        result = double_metaphone("de Salisbury", 4)
        self.assertEquals(result, ("TSLS", "TSLS"))
        result = double_metaphone("de Sanford", 4)
        self.assertEquals(result, ("TSNF", "TSNF"))
        result = double_metaphone("de Somery", 4)
        self.assertEquals(result, ("TSMR", "TSMR"))
        result = double_metaphone("de St. Hilary", 4)
        self.assertEquals(result, ("TSTL", "TSTL"))
        result = double_metaphone("de St. Liz", 4)
        self.assertEquals(result, ("TSTL", "TSTL"))
        result = double_metaphone("de Sutton", 4)
        self.assertEquals(result, ("TSTN", "TSTN"))
        result = double_metaphone("de Toeni", 4)
        self.assertEquals(result, ("TTN", "TTN"))
        result = double_metaphone("de Tony", 4)
        self.assertEquals(result, ("TTN", "TTN"))
        result = double_metaphone("de Umfreville", 4)
        self.assertEquals(result, ("TMFR", "TMFR"))
        result = double_metaphone("de Valognes", 4)
        self.assertEquals(result, ("TFLN", "TFLK"))
        result = double_metaphone("de Vaux", 4)
        self.assertEquals(result, ("TF", "TF"))
        result = double_metaphone("de Vere", 4)
        self.assertEquals(result, ("TFR", "TFR"))
        result = double_metaphone("de Vermandois", 4)
        self.assertEquals(result, ("TFRM", "TFRM"))
        result = double_metaphone("de Vernon", 4)
        self.assertEquals(result, ("TFRN", "TFRN"))
        result = double_metaphone("de Vexin", 4)
        self.assertEquals(result, ("TFKS", "TFKS"))
        result = double_metaphone("de Vitre", 4)
        self.assertEquals(result, ("TFTR", "TFTR"))
        result = double_metaphone("de Wandesford", 4)
        self.assertEquals(result, ("TNTS", "TNTS"))
        result = double_metaphone("de Warenne", 4)
        self.assertEquals(result, ("TRN", "TRN"))
        result = double_metaphone("de Westbury", 4)
        self.assertEquals(result, ("TSTP", "TSTP"))
        result = double_metaphone("di Saluzzo", 4)
        self.assertEquals(result, ("TSLS", "TSLT"))
        result = double_metaphone("fitz Alan", 4)
        self.assertEquals(result, ("FTSL", "FTSL"))
        result = double_metaphone("fitz Geoffrey", 4)
        self.assertEquals(result, ("FTSJ", "FTSK"))
        result = double_metaphone("fitz Herbert", 4)
        self.assertEquals(result, ("FTSR", "FTSR"))
        result = double_metaphone("fitz John", 4)
        self.assertEquals(result, ("FTSJ", "FTSJ"))
        result = double_metaphone("fitz Patrick", 4)
        self.assertEquals(result, ("FTSP", "FTSP"))
        result = double_metaphone("fitz Payn", 4)
        self.assertEquals(result, ("FTSP", "FTSP"))
        result = double_metaphone("fitz Piers", 4)
        self.assertEquals(result, ("FTSP", "FTSP"))
        result = double_metaphone("fitz Randolph", 4)
        self.assertEquals(result, ("FTSR", "FTSR"))
        result = double_metaphone("fitz Richard", 4)
        self.assertEquals(result, ("FTSR", "FTSR"))
        result = double_metaphone("fitz Robert", 4)
        self.assertEquals(result, ("FTSR", "FTSR"))
        result = double_metaphone("fitz Roy", 4)
        self.assertEquals(result, ("FTSR", "FTSR"))
        result = double_metaphone("fitz Scrob", 4)
        self.assertEquals(result, ("FTSS", "FTSS"))
        result = double_metaphone("fitz Walter", 4)
        self.assertEquals(result, ("FTSL", "FTSL"))
        result = double_metaphone("fitz Warin", 4)
        self.assertEquals(result, ("FTSR", "FTSR"))
        result = double_metaphone("fitz Williams", 4)
        self.assertEquals(result, ("FTSL", "FTSL"))
        result = double_metaphone("la Zouche", 4)
        self.assertEquals(result, ("LSX", "LSK"))
        result = double_metaphone("le Botiller", 4)
        self.assertEquals(result, ("LPTL", "LPTL"))
        result = double_metaphone("le Despenser", 4)
        self.assertEquals(result, ("LTSP", "LTSP"))
        result = double_metaphone("le deSpencer", 4)
        self.assertEquals(result, ("LTSP", "LTSP"))
        result = double_metaphone("of Allendale", 4)
        self.assertEquals(result, ("AFLN", "AFLN"))
        result = double_metaphone("of Angouleme", 4)
        self.assertEquals(result, ("AFNK", "AFNK"))
        result = double_metaphone("of Anjou", 4)
        self.assertEquals(result, ("AFNJ", "AFNJ"))
        result = double_metaphone("of Aquitaine", 4)
        self.assertEquals(result, ("AFKT", "AFKT"))
        result = double_metaphone("of Aumale", 4)
        self.assertEquals(result, ("AFML", "AFML"))
        result = double_metaphone("of Bavaria", 4)
        self.assertEquals(result, ("AFPF", "AFPF"))
        result = double_metaphone("of Boulogne", 4)
        self.assertEquals(result, ("AFPL", "AFPL"))
        result = double_metaphone("of Brittany", 4)
        self.assertEquals(result, ("AFPR", "AFPR"))
        result = double_metaphone("of Brittary", 4)
        self.assertEquals(result, ("AFPR", "AFPR"))
        result = double_metaphone("of Castile", 4)
        self.assertEquals(result, ("AFKS", "AFKS"))
        result = double_metaphone("of Chester", 4)
        self.assertEquals(result, ("AFXS", "AFKS"))
        result = double_metaphone("of Clermont", 4)
        self.assertEquals(result, ("AFKL", "AFKL"))
        result = double_metaphone("of Cologne", 4)
        self.assertEquals(result, ("AFKL", "AFKL"))
        result = double_metaphone("of Dinan", 4)
        self.assertEquals(result, ("AFTN", "AFTN"))
        result = double_metaphone("of Dunbar", 4)
        self.assertEquals(result, ("AFTN", "AFTN"))
        result = double_metaphone("of England", 4)
        self.assertEquals(result, ("AFNK", "AFNK"))
        result = double_metaphone("of Essex", 4)
        self.assertEquals(result, ("AFSK", "AFSK"))
        result = double_metaphone("of Falaise", 4)
        self.assertEquals(result, ("AFFL", "AFFL"))
        result = double_metaphone("of Flanders", 4)
        self.assertEquals(result, ("AFFL", "AFFL"))
        result = double_metaphone("of Galloway", 4)
        self.assertEquals(result, ("AFKL", "AFKL"))
        result = double_metaphone("of Germany", 4)
        self.assertEquals(result, ("AFKR", "AFJR"))
        result = double_metaphone("of Gloucester", 4)
        self.assertEquals(result, ("AFKL", "AFKL"))
        result = double_metaphone("of Heristal", 4)
        self.assertEquals(result, ("AFRS", "AFRS"))
        result = double_metaphone("of Hungary", 4)
        self.assertEquals(result, ("AFNK", "AFNK"))
        result = double_metaphone("of Huntington", 4)
        self.assertEquals(result, ("AFNT", "AFNT"))
        result = double_metaphone("of Kiev", 4)
        self.assertEquals(result, ("AFKF", "AFKF"))
        result = double_metaphone("of Kuno", 4)
        self.assertEquals(result, ("AFKN", "AFKN"))
        result = double_metaphone("of Landen", 4)
        self.assertEquals(result, ("AFLN", "AFLN"))
        result = double_metaphone("of Laon", 4)
        self.assertEquals(result, ("AFLN", "AFLN"))
        result = double_metaphone("of Leinster", 4)
        self.assertEquals(result, ("AFLN", "AFLN"))
        result = double_metaphone("of Lens", 4)
        self.assertEquals(result, ("AFLN", "AFLN"))
        result = double_metaphone("of Lorraine", 4)
        self.assertEquals(result, ("AFLR", "AFLR"))
        result = double_metaphone("of Louvain", 4)
        self.assertEquals(result, ("AFLF", "AFLF"))
        result = double_metaphone("of Mercia", 4)
        self.assertEquals(result, ("AFMR", "AFMR"))
        result = double_metaphone("of Metz", 4)
        self.assertEquals(result, ("AFMT", "AFMT"))
        result = double_metaphone("of Meulan", 4)
        self.assertEquals(result, ("AFML", "AFML"))
        result = double_metaphone("of Nass", 4)
        self.assertEquals(result, ("AFNS", "AFNS"))
        result = double_metaphone("of Normandy", 4)
        self.assertEquals(result, ("AFNR", "AFNR"))
        result = double_metaphone("of Ohningen", 4)
        self.assertEquals(result, ("AFNN", "AFNN"))
        result = double_metaphone("of Orleans", 4)
        self.assertEquals(result, ("AFRL", "AFRL"))
        result = double_metaphone("of Poitou", 4)
        self.assertEquals(result, ("AFPT", "AFPT"))
        result = double_metaphone("of Polotzk", 4)
        self.assertEquals(result, ("AFPL", "AFPL"))
        result = double_metaphone("of Provence", 4)
        self.assertEquals(result, ("AFPR", "AFPR"))
        result = double_metaphone("of Ringelheim", 4)
        self.assertEquals(result, ("AFRN", "AFRN"))
        result = double_metaphone("of Salisbury", 4)
        self.assertEquals(result, ("AFSL", "AFSL"))
        result = double_metaphone("of Saxony", 4)
        self.assertEquals(result, ("AFSK", "AFSK"))
        result = double_metaphone("of Scotland", 4)
        self.assertEquals(result, ("AFSK", "AFSK"))
        result = double_metaphone("of Senlis", 4)
        self.assertEquals(result, ("AFSN", "AFSN"))
        result = double_metaphone("of Stafford", 4)
        self.assertEquals(result, ("AFST", "AFST"))
        result = double_metaphone("of Swabia", 4)
        self.assertEquals(result, ("AFSP", "AFSP"))
        result = double_metaphone("of Tongres", 4)
        self.assertEquals(result, ("AFTN", "AFTN"))
        result = double_metaphone("of the Tributes", 4)
        self.assertEquals(result, ("AF0T", "AFTT"))
        result = double_metaphone("unknown", 4)
        self.assertEquals(result, ("ANKN", "ANKN"))
        result = double_metaphone("van der Gouda", 4)
        self.assertEquals(result, ("FNTR", "FNTR"))
        result = double_metaphone("von Adenbaugh", 4)
        self.assertEquals(result, ("FNTN", "FNTN"))
        
        # added some additional names to check out specific test cases
        
        result = double_metaphone("ARCHITure", 4)
        self.assertEquals(result, ("ARKT", "ARKT"))
        result = double_metaphone("Arnoff", 4)
        self.assertEquals(result, ("ARNF", "ARNF"))
        result = double_metaphone("Arnow", 4)
        self.assertEquals(result, ("ARN", "ARNF"))
        result = double_metaphone("DANGER", 4)
        self.assertEquals(result, ("TNJR", "TNKR"))
        result = double_metaphone("Jankelowicz", 4)
        self.assertEquals(result, ("JNKL", "ANKL"))
        result = double_metaphone("MANGER", 4)
        self.assertEquals(result, ("MNJR", "MNKR"))
        result = double_metaphone("McClellan", 4)
        self.assertEquals(result, ("MKLL", "MKLL"))
        result = double_metaphone("McHugh", 4)
        self.assertEquals(result, ("MK", "MK"))
        result = double_metaphone("McLaughlin", 4)
        self.assertEquals(result, ("MKLF", "MKLF"))
        result = double_metaphone("ORCHEStra", 4)
        self.assertEquals(result, ("ARKS", "ARKS"))
        result = double_metaphone("ORCHID", 4)
        self.assertEquals(result, ("ARKT", "ARKT"))
        result = double_metaphone("Pierce", 4)
        self.assertEquals(result, ("PRS", "PRS"))
        result = double_metaphone("RANGER", 4)
        self.assertEquals(result, ("RNJR", "RNKR"))
        result = double_metaphone("Schlesinger", 4)
        self.assertEquals(result, ("XLSN", "SLSN"))
        result = double_metaphone("Uomo", 4)
        self.assertEquals(result, ("AM", "AM"))
        result = double_metaphone("Vasserman", 4)
        self.assertEquals(result, ("FSRM", "FSRM"))
        result = double_metaphone("Wasserman", 4)
        self.assertEquals(result, ("ASRM", "FSRM"))
        result = double_metaphone("Womo", 4)
        self.assertEquals(result, ("AM", "FM"))
        result = double_metaphone("Yankelovich", 4)
        self.assertEquals(result, ("ANKL", "ANKL"))
        result = double_metaphone("accede", 4)
        self.assertEquals(result, ("AKST", "AKST"))
        result = double_metaphone("accident", 4)
        self.assertEquals(result, ("AKST", "AKST"))
        result = double_metaphone("adelsheim", 4)
        self.assertEquals(result, ("ATLS", "ATLS"))
        result = double_metaphone("aged", 4)
        self.assertEquals(result, ("AJT", "AKT"))
        result = double_metaphone("ageless", 4)
        self.assertEquals(result, ("AJLS", "AKLS"))
        result = double_metaphone("agency", 4)
        self.assertEquals(result, ("AJNS", "AKNS"))
        result = double_metaphone("aghast", 4)
        self.assertEquals(result, ("AKST", "AKST"))
        result = double_metaphone("agio", 4)
        self.assertEquals(result, ("AJ", "AK"))
        result = double_metaphone("agrimony", 4)
        self.assertEquals(result, ("AKRM", "AKRM"))
        result = double_metaphone("album", 4)
        self.assertEquals(result, ("ALPM", "ALPM"))
        result = double_metaphone("alcmene", 4)
        self.assertEquals(result, ("ALKM", "ALKM"))
        result = double_metaphone("alehouse", 4)
        self.assertEquals(result, ("ALHS", "ALHS"))
        result = double_metaphone("antique", 4)
        self.assertEquals(result, ("ANTK", "ANTK"))
        result = double_metaphone("artois", 4)
        self.assertEquals(result, ("ART", "ARTS"))
        result = double_metaphone("automation", 4)
        self.assertEquals(result, ("ATMX", "ATMX"))
        result = double_metaphone("bacchus", 4)
        self.assertEquals(result, ("PKS", "PKS"))
        result = double_metaphone("bacci", 4)
        self.assertEquals(result, ("PX", "PX"))
        result = double_metaphone("bajador", 4)
        self.assertEquals(result, ("PJTR", "PHTR"))
        result = double_metaphone("bellocchio", 4)
        self.assertEquals(result, ("PLX", "PLX"))
        result = double_metaphone("bertucci", 4)
        self.assertEquals(result, ("PRTX", "PRTX"))
        result = double_metaphone("biaggi", 4)
        self.assertEquals(result, ("PJ", "PK"))
        result = double_metaphone("bough", 4)
        self.assertEquals(result, ("P", "P"))
        result = double_metaphone("breaux", 4)
        self.assertEquals(result, ("PR", "PR"))
        result = double_metaphone("broughton", 4)
        self.assertEquals(result, ("PRTN", "PRTN"))
        result = double_metaphone("cabrillo", 4)
        self.assertEquals(result, ("KPRL", "KPR"))
        result = double_metaphone("caesar", 4)
        self.assertEquals(result, ("SSR", "SSR"))
        result = double_metaphone("cagney", 4)
        self.assertEquals(result, ("KKN", "KKN"))
        result = double_metaphone("campbell", 4)
        self.assertEquals(result, ("KMPL", "KMPL"))
        result = double_metaphone("carlisle", 4)
        self.assertEquals(result, ("KRLL", "KRLL"))
        result = double_metaphone("carlysle", 4)
        self.assertEquals(result, ("KRLL", "KRLL"))
        result = double_metaphone("chemistry", 4)
        self.assertEquals(result, ("KMST", "KMST"))
        result = double_metaphone("chianti", 4)
        self.assertEquals(result, ("KNT", "KNT"))
        result = double_metaphone("chorus", 4)
        self.assertEquals(result, ("KRS", "KRS"))
        result = double_metaphone("cough", 4)
        self.assertEquals(result, ("KF", "KF"))
        result = double_metaphone("czerny", 4)
        self.assertEquals(result, ("SRN", "XRN"))
        result = double_metaphone("deffenbacher", 4)
        self.assertEquals(result, ("TFNP", "TFNP"))
        result = double_metaphone("dumb", 4)
        self.assertEquals(result, ("TM", "TM"))
        result = double_metaphone("edgar", 4)
        self.assertEquals(result, ("ATKR", "ATKR"))
        result = double_metaphone("edge", 4)
        self.assertEquals(result, ("AJ", "AJ"))
        result = double_metaphone("filipowicz", 4)
        self.assertEquals(result, ("FLPT", "FLPF"))
        result = double_metaphone("focaccia", 4)
        self.assertEquals(result, ("FKX", "FKX"))
        result = double_metaphone("gallegos", 4)
        self.assertEquals(result, ("KLKS", "KKS"))
        result = double_metaphone("gambrelli", 4)
        self.assertEquals(result, ("KMPR", "KMPR"))
        result = double_metaphone("geithain", 4)
        self.assertEquals(result, ("K0N", "JTN"))
        result = double_metaphone("ghiradelli", 4)
        self.assertEquals(result, ("JRTL", "JRTL"))
        result = double_metaphone("ghislane", 4)
        self.assertEquals(result, ("JLN", "JLN"))
        result = double_metaphone("gough", 4)
        self.assertEquals(result, ("KF", "KF"))
        result = double_metaphone("hartheim", 4)
        self.assertEquals(result, ("HR0M", "HRTM"))
        result = double_metaphone("heimsheim", 4)
        self.assertEquals(result, ("HMSM", "HMSM"))
        result = double_metaphone("hochmeier", 4)
        self.assertEquals(result, ("HKMR", "HKMR"))
        result = double_metaphone("hugh", 4)
        self.assertEquals(result, ("H", "H"))
        result = double_metaphone("hunger", 4)
        self.assertEquals(result, ("HNKR", "HNJR"))
        result = double_metaphone("hungry", 4)
        self.assertEquals(result, ("HNKR", "HNKR"))
        result = double_metaphone("island", 4)
        self.assertEquals(result, ("ALNT", "ALNT"))
        result = double_metaphone("isle", 4)
        self.assertEquals(result, ("AL", "AL"))
        result = double_metaphone("jose", 4)
        self.assertEquals(result, ("HS", "HS"))
        result = double_metaphone("laugh", 4)
        self.assertEquals(result, ("LF", "LF"))
        result = double_metaphone("mac caffrey", 4)
        self.assertEquals(result, ("MKFR", "MKFR"))
        result = double_metaphone("mac gregor", 4)
        self.assertEquals(result, ("MKRK", "MKRK"))
        result = double_metaphone("pegnitz", 4)
        self.assertEquals(result, ("PNTS", "PKNT"))
        result = double_metaphone("piskowitz", 4)
        self.assertEquals(result, ("PSKT", "PSKF"))
        result = double_metaphone("queen", 4)
        self.assertEquals(result, ("KN", "KN"))
        result = double_metaphone("raspberry", 4)
        self.assertEquals(result, ("RSPR", "RSPR"))
        result = double_metaphone("resnais", 4)
        self.assertEquals(result, ("RSN", "RSNS"))
        result = double_metaphone("rogier", 4)
        self.assertEquals(result, ("RJ", "RJR"))
        result = double_metaphone("rough", 4)
        self.assertEquals(result, ("RF", "RF"))
        result = double_metaphone("san jacinto", 4)
        self.assertEquals(result, ("SNHS", "SNHS"))
        result = double_metaphone("schenker", 4)
        self.assertEquals(result, ("XNKR", "SKNK"))
        result = double_metaphone("schermerhorn", 4)
        self.assertEquals(result, ("XRMR", "SKRM"))
        result = double_metaphone("schmidt", 4)
        self.assertEquals(result, ("XMT", "SMT"))
        result = double_metaphone("schneider", 4)
        self.assertEquals(result, ("XNTR", "SNTR"))
        result = double_metaphone("school", 4)
        self.assertEquals(result, ("SKL", "SKL"))
        result = double_metaphone("schooner", 4)
        self.assertEquals(result, ("SKNR", "SKNR"))
        result = double_metaphone("schrozberg", 4)
        self.assertEquals(result, ("XRSP", "SRSP"))
        result = double_metaphone("schulman", 4)
        self.assertEquals(result, ("XLMN", "XLMN"))
        result = double_metaphone("schwabach", 4)
        self.assertEquals(result, ("XPK", "XFPK"))
        result = double_metaphone("schwarzach", 4)
        self.assertEquals(result, ("XRSK", "XFRT"))
        result = double_metaphone("smith", 4)
        self.assertEquals(result, ("SM0", "XMT"))
        result = double_metaphone("snider", 4)
        self.assertEquals(result, ("SNTR", "XNTR"))
        result = double_metaphone("succeed", 4)
        self.assertEquals(result, ("SKST", "SKST"))
        result = double_metaphone("sugarcane", 4)
        self.assertEquals(result, ("XKRK", "SKRK"))
        result = double_metaphone("svobodka", 4)
        self.assertEquals(result, ("SFPT", "SFPT"))
        result = double_metaphone("tagliaro", 4)
        self.assertEquals(result, ("TKLR", "TLR"))
        result = double_metaphone("thames", 4)
        self.assertEquals(result, ("TMS", "TMS"))
        result = double_metaphone("theilheim", 4)
        self.assertEquals(result, ("0LM", "TLM"))
        result = double_metaphone("thomas", 4)
        self.assertEquals(result, ("TMS", "TMS"))
        result = double_metaphone("thumb", 4)
        self.assertEquals(result, ("0M", "TM"))
        result = double_metaphone("tichner", 4)
        self.assertEquals(result, ("TXNR", "TKNR"))
        result = double_metaphone("tough", 4)
        self.assertEquals(result, ("TF", "TF"))
        result = double_metaphone("umbrella", 4)
        self.assertEquals(result, ("AMPR", "AMPR"))
        result = double_metaphone("vilshofen", 4)
        self.assertEquals(result, ("FLXF", "FLXF"))
        result = double_metaphone("von schuller", 4)
        self.assertEquals(result, ("FNXL", "FNXL"))
        result = double_metaphone("wachtler", 4)
        self.assertEquals(result, ("AKTL", "FKTL"))
        result = double_metaphone("wechsler", 4)
        self.assertEquals(result, ("AKSL", "FKSL"))
        result = double_metaphone("weikersheim", 4)
        self.assertEquals(result, ("AKRS", "FKRS"))
        result = double_metaphone("zhao", 4)
        self.assertEquals(result, ("J", "J"))


if __name__ == '__main__':
    unittest.main()
