# -*- coding: utf-8 -*-

from __future__ import unicode_literals
import unittest
from abydos.phonetic import russell_index, russell_index_num_to_alpha, \
    russell_index_alpha, soundex, dm_soundex, koelner_phonetik, \
    koelner_phonetik_num_to_alpha, koelner_phonetik_alpha, nysiis, mra, \
    metaphone, double_metaphone, caverphone

class russell_index_test_cases(unittest.TestCase):
    def test_russel_index(self):
        self.assertEquals(russell_index(''), None)
        self.assertEquals(russell_index('Hoppa'), 12)
        self.assertEquals(russell_index('Hopley'), 125)
        self.assertEquals(russell_index('Highfield'), 1254)
        self.assertEquals(russell_index('Wright'), 814)
        self.assertEquals(russell_index('Carter'), 31848)
        self.assertEquals(russell_index('Hopf'), 12)
        self.assertEquals(russell_index('Hay'), 1)
        self.assertEquals(russell_index('Haas'), 1)
        self.assertEquals(russell_index('Meyers'), 618)
        self.assertEquals(russell_index('Myers'), 618)
        self.assertEquals(russell_index('Meyer'), 618)
        self.assertEquals(russell_index('Myer'), 618)
        self.assertEquals(russell_index('Mack'), 613)
        self.assertEquals(russell_index('Knack'), 3713)

    def test_russel_index_num_to_alpha(self):
        self.assertEquals(russell_index_num_to_alpha(0), None)
        self.assertEquals(russell_index_num_to_alpha(''), None)
        self.assertEquals(russell_index_num_to_alpha(123456789), 'ABCDLMNR')
        self.assertEquals(russell_index_num_to_alpha('0123456789'), 'ABCDLMNR')

    def test_russel_index_alpha(self):
        self.assertEquals(russell_index_alpha(''), None)
        self.assertEquals(russell_index_alpha('Hoppa'), 'AB')
        self.assertEquals(russell_index_alpha('Hopley'), 'ABL')
        self.assertEquals(russell_index_alpha('Highfield'), 'ABLD')
        self.assertEquals(russell_index_alpha('Wright'), 'RAD')
        self.assertEquals(russell_index_alpha('Carter'), 'CARDR')
        self.assertEquals(russell_index_alpha('Hopf'), 'AB')
        self.assertEquals(russell_index_alpha('Hay'), 'A')
        self.assertEquals(russell_index_alpha('Haas'), 'A')
        self.assertEquals(russell_index_alpha('Meyers'), 'MAR')
        self.assertEquals(russell_index_alpha('Myers'), 'MAR')
        self.assertEquals(russell_index_alpha('Meyer'), 'MAR')
        self.assertEquals(russell_index_alpha('Myer'), 'MAR')
        self.assertEquals(russell_index_alpha('Mack'), 'MAC')
        self.assertEquals(russell_index_alpha('Knack'), 'CNAC')


class soundex_test_cases(unittest.TestCase):
    def test_soundex(self):
        self.assertEquals(soundex(''), '0000')

        # https://archive.org/stream/accessingindivid00moor#page/14/mode/2up
        self.assertEquals(soundex('Euler'), 'E460')
        self.assertEquals(soundex('Gauss'), 'G200')
        self.assertEquals(soundex('Hilbert'), 'H416')
        self.assertEquals(soundex('Knuth'), 'K530')
        self.assertEquals(soundex('Lloyd'), 'L300')
        self.assertEquals(soundex('Lukasieicz'), 'L222')
        self.assertEquals(soundex('Ellery'), 'E460')
        self.assertEquals(soundex('Ghosh'), 'G200')
        self.assertEquals(soundex('Heilbronn'), 'H416')
        self.assertEquals(soundex('Kant'), 'K530')
        self.assertEquals(soundex('Ladd'), 'L300')
        self.assertEquals(soundex('Lissajous'), 'L222')
        self.assertEquals(soundex('Rogers'), 'R262')
        self.assertEquals(soundex('Rodgers'), 'R326')
        self.assertNotEquals(soundex('Rogers'), soundex('Rodgers'))
        self.assertNotEquals(soundex('Sinclair'), soundex('St. Clair'))
        self.assertNotEquals(soundex('Tchebysheff'), soundex('Chebyshev'))
        
        # http://creativyst.com/Doc/Articles/SoundEx1/SoundEx1.htm#Related
        self.assertEquals(soundex('Htacky'), 'H320')
        self.assertEquals(soundex('Atacky'), 'A320')
        self.assertEquals(soundex('Schmit'), 'S530')
        self.assertEquals(soundex('Schneider'), 'S536')
        self.assertEquals(soundex('Pfister'), 'P236')
        self.assertEquals(soundex('Ashcroft'), 'A261')
        self.assertEquals(soundex('Asicroft'), 'A226')
        
        # https://en.wikipedia.org/wiki/Soundex
        self.assertEquals(soundex('Robert'), 'R163')
        self.assertEquals(soundex('Rupert'), 'R163')
        self.assertEquals(soundex('Rubin'), 'R150')
        self.assertEquals(soundex('Tymczak'), 'T522')

        # https://en.wikipedia.org/wiki/Daitch%E2%80%93Mokotoff_Soundex
        self.assertEquals(soundex('Peters'), 'P362')
        self.assertEquals(soundex('Peterson'), 'P362')
        self.assertEquals(soundex('Moskowitz'), 'M232')
        self.assertEquals(soundex('Moskovitz'), 'M213')
        self.assertEquals(soundex('Auerbach'), 'A612')
        self.assertEquals(soundex('Uhrbach'), 'U612')
        self.assertEquals(soundex('Jackson'), 'J250')
        self.assertEquals(soundex('Jackson-Jackson'), 'J252')

        # maxlength tests
        self.assertEquals(soundex('Lincoln', 10), 'L524500000')
        self.assertEquals(soundex('Lincoln', 5), 'L5245')
        self.assertEquals(soundex('Christopher', 6), 'C62316')

        # reverse tests
        self.assertEquals(soundex('Rubin', reverse=True), 'N160')
        self.assertEquals(soundex('Llyod', reverse=True), 'D400')
        self.assertEquals(soundex('Lincoln', reverse=True), 'N425')
        self.assertEquals(soundex('Knuth', reverse=True), 'H352')

    def test_soundex_caversham_testset(self):
        # caversham.otago.ac.nz/files/variantNames.csv
        self.assertEquals(soundex('abernathy'), 'A165')
        self.assertEquals(soundex('abernethie'), 'A165')
        self.assertEquals(soundex('abernethy'), 'A165')
        self.assertEquals(soundex('ailen'), 'A450')
        self.assertEquals(soundex('aldridge'), 'A436')
        self.assertEquals(soundex('allan'), 'A450')
        self.assertEquals(soundex('allen'), 'A450')
        self.assertEquals(soundex('andersen'), 'A536')
        self.assertEquals(soundex('anderson'), 'A536')
        self.assertEquals(soundex('andorson'), 'A536')
        self.assertEquals(soundex('applegart'), 'A142')
        self.assertEquals(soundex('applegarth'), 'A142')
        self.assertEquals(soundex('arnal'), 'A654')
        self.assertEquals(soundex('arnel'), 'A654')
        self.assertEquals(soundex('bail'), 'B400')
        self.assertEquals(soundex('bailer'), 'B460')
        self.assertEquals(soundex('bailey'), 'B400')
        self.assertEquals(soundex('bain'), 'B500')
        self.assertEquals(soundex('baley'), 'B400')
        self.assertEquals(soundex('ball'), 'B400')
        self.assertEquals(soundex('barclay'), 'B624')
        self.assertEquals(soundex('barkla'), 'B624')
        self.assertEquals(soundex('barlthrop'), 'B643')
        self.assertEquals(soundex('barltrop'), 'B643')
        self.assertEquals(soundex('barnett'), 'B653')
        self.assertEquals(soundex('barratt'), 'B630')
        self.assertEquals(soundex('barrett'), 'B630')
        self.assertEquals(soundex('barrie'), 'B600')
        self.assertEquals(soundex('barwick'), 'B620')
        self.assertEquals(soundex('baylee'), 'B400')
        self.assertEquals(soundex('bell'), 'B400')
        self.assertEquals(soundex('bellet'), 'B430')
        self.assertEquals(soundex('bellett'), 'B430')
        self.assertEquals(soundex('bennet'), 'B530')
        self.assertEquals(soundex('bennett'), 'B530')
        self.assertEquals(soundex('bennie'), 'B500')
        self.assertEquals(soundex('bernie'), 'B650')
        self.assertEquals(soundex('berry'), 'B600')
        self.assertEquals(soundex('berwick'), 'B620')
        self.assertEquals(soundex('beven'), 'B150')
        self.assertEquals(soundex('bevin'), 'B150')
        self.assertEquals(soundex('binnie'), 'B500')
        self.assertEquals(soundex('birrell'), 'B640')
        self.assertEquals(soundex('black'), 'B420')
        self.assertEquals(soundex('blake'), 'B420')
        self.assertEquals(soundex('blakeley'), 'B424')
        self.assertEquals(soundex('blakely'), 'B424')
        self.assertEquals(soundex('bouchor'), 'B260')
        self.assertEquals(soundex('boutcher'), 'B326')
        self.assertEquals(soundex('brand'), 'B653')
        self.assertEquals(soundex('brandt'), 'B653')
        self.assertEquals(soundex('brock'), 'B620')
        self.assertEquals(soundex('brockie'), 'B620')
        self.assertEquals(soundex('brook'), 'B620')
        self.assertEquals(soundex('brooke'), 'B620')
        self.assertEquals(soundex('brown'), 'B650')
        self.assertEquals(soundex('browne'), 'B650')
        self.assertEquals(soundex('bruten'), 'B635')
        self.assertEquals(soundex('bruton'), 'B635')
        self.assertEquals(soundex('bulger'), 'B426')
        self.assertEquals(soundex('bull'), 'B400')
        self.assertEquals(soundex('burger'), 'B626')
        self.assertEquals(soundex('burgess'), 'B622')
        self.assertEquals(soundex('burnett'), 'B653')
        self.assertEquals(soundex('buttermore'), 'B365')
        self.assertEquals(soundex('buttimore'), 'B356')
        self.assertEquals(soundex('calder'), 'C436')
        self.assertEquals(soundex('caley'), 'C400')
        self.assertEquals(soundex('callaghan'), 'C425')
        self.assertEquals(soundex('callander'), 'C453')
        self.assertEquals(soundex('callender'), 'C453')
        self.assertEquals(soundex('callighan'), 'C425')
        self.assertEquals(soundex('carder'), 'C636')
        self.assertEquals(soundex('carley'), 'C640')
        self.assertEquals(soundex('carruthers'), 'C636')
        self.assertEquals(soundex('carside'), 'C623')
        self.assertEquals(soundex('caruthers'), 'C636')
        self.assertEquals(soundex('case'), 'C200')
        self.assertEquals(soundex('casey'), 'C200')
        self.assertEquals(soundex('cassells'), 'C242')
        self.assertEquals(soundex('cassels'), 'C242')
        self.assertEquals(soundex('cassidy'), 'C230')
        self.assertEquals(soundex('chaplain'), 'C145')
        self.assertEquals(soundex('chaplin'), 'C145')
        self.assertEquals(soundex('chrisp'), 'C621')
        self.assertEquals(soundex('chronican'), 'C652')
        self.assertEquals(soundex('chronichan'), 'C652')
        self.assertEquals(soundex('clark'), 'C462')
        self.assertEquals(soundex('clarke'), 'C462')
        self.assertEquals(soundex('clent'), 'C453')
        self.assertEquals(soundex('clint'), 'C453')
        self.assertEquals(soundex('coates'), 'C320')
        self.assertEquals(soundex('coats'), 'C320')
        self.assertEquals(soundex('conheady'), 'C530')
        self.assertEquals(soundex('connell'), 'C540')
        self.assertEquals(soundex('connolly'), 'C540')
        self.assertEquals(soundex('conolly'), 'C540')
        self.assertEquals(soundex('cook'), 'C200')
        self.assertEquals(soundex('cooke'), 'C200')
        self.assertEquals(soundex('corcoran'), 'C626')
        self.assertEquals(soundex('corkran'), 'C626')
        self.assertEquals(soundex('cornell'), 'C654')
        self.assertEquals(soundex('cosegrove'), 'C226')
        self.assertEquals(soundex('cosgrove'), 'C261')
        self.assertEquals(soundex('coulter'), 'C436')
        self.assertEquals(soundex('coupar'), 'C160')
        self.assertEquals(soundex('couper'), 'C160')
        self.assertEquals(soundex('courter'), 'C636')
        self.assertEquals(soundex('craig'), 'C620')
        self.assertEquals(soundex('craik'), 'C620')
        self.assertEquals(soundex('crammond'), 'C655')
        self.assertEquals(soundex('cramond'), 'C655')
        self.assertEquals(soundex('crawford'), 'C616')
        self.assertEquals(soundex('crawfurd'), 'C616')
        self.assertEquals(soundex('cress'), 'C620')
        self.assertEquals(soundex('crisp'), 'C621')
        self.assertEquals(soundex('crosbie'), 'C621')
        self.assertEquals(soundex('crosby'), 'C621')
        self.assertEquals(soundex('crossan'), 'C625')
        self.assertEquals(soundex('crossian'), 'C625')
        self.assertEquals(soundex('cruse'), 'C620')
        self.assertEquals(soundex('cubbins'), 'C152')
        self.assertEquals(soundex('culsey'), 'C420')
        self.assertEquals(soundex('cunhingham'), 'C552')
        self.assertEquals(soundex('cunningham'), 'C552')
        self.assertEquals(soundex('curran'), 'C650')
        self.assertEquals(soundex('curren'), 'C650')
        self.assertEquals(soundex('cursey'), 'C620')
        self.assertEquals(soundex('daly'), 'D400')
        self.assertEquals(soundex('davany'), 'D150')
        self.assertEquals(soundex('daveis'), 'D120')
        self.assertEquals(soundex('davies'), 'D120')
        self.assertEquals(soundex('davis'), 'D120')
        self.assertEquals(soundex('davys'), 'D120')
        self.assertEquals(soundex('delaney'), 'D450')
        self.assertEquals(soundex('delany'), 'D450')
        self.assertEquals(soundex('delargey'), 'D462')
        self.assertEquals(soundex('delargy'), 'D462')
        self.assertEquals(soundex('dely'), 'D400')
        self.assertEquals(soundex('denfold'), 'D514')
        self.assertEquals(soundex('denford'), 'D516')
        self.assertEquals(soundex('devaney'), 'D150')
        self.assertEquals(soundex('dickison'), 'D225')
        self.assertEquals(soundex('dickson'), 'D250')
        self.assertEquals(soundex('dillan'), 'D450')
        self.assertEquals(soundex('dillon'), 'D450')
        self.assertEquals(soundex('dockworth'), 'D263')
        self.assertEquals(soundex('dodd'), 'D300')
        self.assertEquals(soundex('donne'), 'D500')
        self.assertEquals(soundex('dougal'), 'D240')
        self.assertEquals(soundex('dougall'), 'D240')
        self.assertEquals(soundex('douglas'), 'D242')
        self.assertEquals(soundex('douglass'), 'D242')
        self.assertEquals(soundex('dreaver'), 'D616')
        self.assertEquals(soundex('dreavor'), 'D616')
        self.assertEquals(soundex('droaver'), 'D616')
        self.assertEquals(soundex('duckworth'), 'D263')
        self.assertEquals(soundex('dunn'), 'D500')
        self.assertEquals(soundex('dunne'), 'D500')
        self.assertEquals(soundex('eagan'), 'E250')
        self.assertEquals(soundex('eagar'), 'E260')
        self.assertEquals(soundex('eager'), 'E260')
        self.assertEquals(soundex('easson'), 'E250')
        self.assertEquals(soundex('egan'), 'E250')
        self.assertEquals(soundex('eldridge'), 'E436')
        self.assertEquals(soundex('elliis'), 'E420')
        self.assertEquals(soundex('ellis'), 'E420')
        self.assertEquals(soundex('emerson'), 'E562')
        self.assertEquals(soundex('emmerson'), 'E562')
        self.assertEquals(soundex('essson'), 'E250')
        self.assertEquals(soundex('fahey'), 'F000')
        self.assertEquals(soundex('fahy'), 'F000')
        self.assertEquals(soundex('fail'), 'F400')
        self.assertEquals(soundex('fairbairn'), 'F616')
        self.assertEquals(soundex('fairburn'), 'F616')
        self.assertEquals(soundex('faithful'), 'F314')
        self.assertEquals(soundex('faithfull'), 'F314')
        self.assertEquals(soundex('fall'), 'F400')
        self.assertEquals(soundex('farminger'), 'F655')
        self.assertEquals(soundex('farry'), 'F600')
        self.assertEquals(soundex('feil'), 'F400')
        self.assertEquals(soundex('fell'), 'F400')
        self.assertEquals(soundex('fennessey'), 'F520')
        self.assertEquals(soundex('fennessy'), 'F520')
        self.assertEquals(soundex('ferry'), 'F600')
        self.assertEquals(soundex('fiddes'), 'F320')
        self.assertEquals(soundex('fiddis'), 'F320')
        self.assertEquals(soundex('fielden'), 'F435')
        self.assertEquals(soundex('fielder'), 'F436')
        self.assertEquals(soundex('findlay'), 'F534')
        self.assertEquals(soundex('findley'), 'F534')
        self.assertEquals(soundex('fitzpatric'), 'F321')
        self.assertEquals(soundex('fitzpatrick'), 'F321')
        self.assertEquals(soundex('fraer'), 'F660')
        self.assertEquals(soundex('fraher'), 'F660')
        self.assertEquals(soundex('fullarton'), 'F463')
        self.assertEquals(soundex('fullerton'), 'F463')
        self.assertEquals(soundex('furminger'), 'F655')
        self.assertEquals(soundex('gailichan'), 'G425')
        self.assertEquals(soundex('galbraith'), 'G416')
        self.assertEquals(soundex('gallanders'), 'G453')
        self.assertEquals(soundex('gallaway'), 'G400')
        self.assertEquals(soundex('gallbraith'), 'G416')
        self.assertEquals(soundex('gallichan'), 'G425')
        self.assertEquals(soundex('galloway'), 'G400')
        self.assertEquals(soundex('garcho'), 'G620')
        self.assertEquals(soundex('garchow'), 'G620')
        self.assertEquals(soundex('garret'), 'G630')
        self.assertEquals(soundex('garrett'), 'G630')
        self.assertEquals(soundex('garside'), 'G623')
        self.assertEquals(soundex('geddes'), 'G320')
        self.assertEquals(soundex('geddis'), 'G320')
        self.assertEquals(soundex('george'), 'G620')
        self.assertEquals(soundex('georgeison'), 'G622')
        self.assertEquals(soundex('georgeson'), 'G622')
        self.assertEquals(soundex('gillanders'), 'G453')
        self.assertEquals(soundex('gillespie'), 'G421')
        self.assertEquals(soundex('gillispie'), 'G421')
        self.assertEquals(soundex('gilmore'), 'G456')
        self.assertEquals(soundex('gilmour'), 'G456')
        self.assertEquals(soundex('glendining'), 'G453')
        self.assertEquals(soundex('glendinnin'), 'G453')
        self.assertEquals(soundex('glendinning'), 'G453')
        self.assertEquals(soundex('gorge'), 'G620')
        self.assertEquals(soundex('graig'), 'G620')
        self.assertEquals(soundex('gray'), 'G600')
        self.assertEquals(soundex('greeves'), 'G612')
        self.assertEquals(soundex('greig'), 'G620')
        self.assertEquals(soundex('greves'), 'G612')
        self.assertEquals(soundex('grey'), 'G600')
        self.assertEquals(soundex('griffiths'), 'G613')
        self.assertEquals(soundex('griffths'), 'G613')
        self.assertEquals(soundex('grig'), 'G620')
        self.assertEquals(soundex('grigg'), 'G620')
        self.assertEquals(soundex('gubbins'), 'G152')
        self.assertEquals(soundex('gulbins'), 'G415')
        self.assertEquals(soundex('haddon'), 'H350')
        self.assertEquals(soundex('hal'), 'H400')
        self.assertEquals(soundex('hall'), 'H400')
        self.assertEquals(soundex('hanley'), 'H540')
        self.assertEquals(soundex('hanly'), 'H540')
        self.assertEquals(soundex('hannagan'), 'H525')
        self.assertEquals(soundex('hannan'), 'H550')
        self.assertEquals(soundex('hannigan'), 'H525')
        self.assertEquals(soundex('hanon'), 'H550')
        self.assertEquals(soundex('harman'), 'H655')
        self.assertEquals(soundex('hart'), 'H630')
        self.assertEquals(soundex('harty'), 'H630')
        self.assertEquals(soundex('hatton'), 'H350')
        self.assertEquals(soundex('hayden'), 'H350')
        self.assertEquals(soundex('hay'), 'H000')
        self.assertEquals(soundex('healey'), 'H400')
        self.assertEquals(soundex('healy'), 'H400')
        self.assertEquals(soundex('helleyer'), 'H460')
        self.assertEquals(soundex('hellyer'), 'H460')
        self.assertEquals(soundex('henaghan'), 'H525')
        self.assertEquals(soundex('heneghan'), 'H525')
        self.assertEquals(soundex('herman'), 'H655')
        self.assertEquals(soundex('hey'), 'H000')
        self.assertEquals(soundex('hill'), 'H400')
        self.assertEquals(soundex('hinde'), 'H530')
        self.assertEquals(soundex('hobcraft'), 'H126')
        self.assertEquals(soundex('hobcroft'), 'H126')
        self.assertEquals(soundex('hocking'), 'H252')
        self.assertEquals(soundex('hoeking'), 'H252')
        self.assertEquals(soundex('holander'), 'H453')
        self.assertEquals(soundex('holdgate'), 'H432')
        self.assertEquals(soundex('holgate'), 'H423')
        self.assertEquals(soundex('hollander'), 'H453')
        self.assertEquals(soundex('home'), 'H500')
        self.assertEquals(soundex('horne'), 'H650')
        self.assertEquals(soundex('horn'), 'H650')
        self.assertEquals(soundex('howarth'), 'H630')
        self.assertEquals(soundex('howe'), 'H000')
        self.assertEquals(soundex('howie'), 'H000')
        self.assertEquals(soundex('howorth'), 'H630')
        self.assertEquals(soundex('hoy'), 'H000')
        self.assertEquals(soundex('huddlestone'), 'H342')
        self.assertEquals(soundex('huddleston'), 'H342')
        self.assertEquals(soundex('hugget'), 'H230')
        self.assertEquals(soundex('huggett'), 'H230')
        self.assertEquals(soundex('hume'), 'H500')
        self.assertEquals(soundex('hunt'), 'H530')
        self.assertEquals(soundex('hurt'), 'H630')
        self.assertEquals(soundex('hutcheson'), 'H322')
        self.assertEquals(soundex('hutchison'), 'H322')
        self.assertEquals(soundex('hutt'), 'H300')
        self.assertEquals(soundex('hutton'), 'H350')
        self.assertEquals(soundex('jacobsen'), 'J212')
        self.assertEquals(soundex('jacobs'), 'J212')
        self.assertEquals(soundex('jacobson'), 'J212')
        self.assertEquals(soundex('jaicobs'), 'J212')
        self.assertEquals(soundex('jamieson'), 'J525')
        self.assertEquals(soundex('jamison'), 'J525')
        self.assertEquals(soundex('jansen'), 'J525')
        self.assertEquals(soundex('janson'), 'J525')
        self.assertEquals(soundex('jardine'), 'J635')
        self.assertEquals(soundex('jeannings'), 'J552')
        self.assertEquals(soundex('jeffery'), 'J160')
        self.assertEquals(soundex('jeffrey'), 'J160')
        self.assertEquals(soundex('jelly'), 'J400')
        self.assertEquals(soundex('jennings'), 'J552')
        self.assertEquals(soundex('johns'), 'J520')
        self.assertEquals(soundex('johnstone'), 'J523')
        self.assertEquals(soundex('johnston'), 'J523')
        self.assertEquals(soundex('jolly'), 'J400')
        self.assertEquals(soundex('jones'), 'J520')
        self.assertEquals(soundex('jurdine'), 'J635')
        self.assertEquals(soundex('kean'), 'K500')
        self.assertEquals(soundex('keen'), 'K500')
        self.assertEquals(soundex('keennelly'), 'K540')
        self.assertEquals(soundex('kellan'), 'K450')
        self.assertEquals(soundex('kennard'), 'K563')
        self.assertEquals(soundex('kennealy'), 'K540')
        self.assertEquals(soundex('kennedy'), 'K530')
        self.assertEquals(soundex('kenn'), 'K500')
        self.assertEquals(soundex('killin'), 'K450')
        self.assertEquals(soundex('kirkaldie'), 'K624')
        self.assertEquals(soundex('kirkcaldie'), 'K624')
        self.assertEquals(soundex('kirke'), 'K620')
        self.assertEquals(soundex('kirk'), 'K620')
        self.assertEquals(soundex('kitchen'), 'K325')
        self.assertEquals(soundex('kitchin'), 'K325')
        self.assertEquals(soundex('krause'), 'K620')
        self.assertEquals(soundex('kraus'), 'K620')
        self.assertEquals(soundex('langham'), 'L525')
        self.assertEquals(soundex('lanham'), 'L550')
        self.assertEquals(soundex('larson'), 'L625')
        self.assertEquals(soundex('laughlin'), 'L245')
        self.assertEquals(soundex('laurie'), 'L600')
        self.assertEquals(soundex('lawrie'), 'L600')
        self.assertEquals(soundex('lawson'), 'L250')
        self.assertEquals(soundex('leary'), 'L600')
        self.assertEquals(soundex('leech'), 'L200')
        self.assertEquals(soundex('leery'), 'L600')
        self.assertEquals(soundex('leitch'), 'L320')
        self.assertEquals(soundex('lemin'), 'L550')
        self.assertEquals(soundex('lemon'), 'L550')
        self.assertEquals(soundex('lenihan'), 'L550')
        self.assertEquals(soundex('lennon'), 'L550')
        self.assertEquals(soundex('leyden'), 'L350')
        self.assertEquals(soundex('leydon'), 'L350')
        self.assertEquals(soundex('lister'), 'L236')
        self.assertEquals(soundex('list'), 'L230')
        self.assertEquals(soundex('livingstone'), 'L152')
        self.assertEquals(soundex('livingston'), 'L152')
        self.assertEquals(soundex('lochhead'), 'L230')
        self.assertEquals(soundex('lockhead'), 'L230')
        self.assertEquals(soundex('loughlin'), 'L245')
        self.assertEquals(soundex('macallum'), 'M245')
        self.assertEquals(soundex('macaskill'), 'M224')
        self.assertEquals(soundex('macaulay'), 'M240')
        self.assertEquals(soundex('macauley'), 'M240')
        self.assertEquals(soundex('macbeath'), 'M213')
        self.assertEquals(soundex('macdonald'), 'M235')
        self.assertEquals(soundex('maceewan'), 'M250')
        self.assertEquals(soundex('macewan'), 'M250')
        self.assertEquals(soundex('macfarlane'), 'M216')
        self.assertEquals(soundex('macintosh'), 'M253')
        self.assertEquals(soundex('mackechnie'), 'M225')
        self.assertEquals(soundex('mackenzie'), 'M252')
        self.assertEquals(soundex('mackersey'), 'M262')
        self.assertEquals(soundex('mackersy'), 'M262')
        self.assertEquals(soundex('maclean'), 'M245')
        self.assertEquals(soundex('macnee'), 'M250')
        self.assertEquals(soundex('macpherson'), 'M216')
        self.assertEquals(soundex('main'), 'M500')
        self.assertEquals(soundex('maley'), 'M400')
        self.assertEquals(soundex('malladew'), 'M430')
        self.assertEquals(soundex('maloney'), 'M450')
        self.assertEquals(soundex('mann'), 'M500')
        self.assertEquals(soundex('marchant'), 'M625')
        self.assertEquals(soundex('marett'), 'M630')
        self.assertEquals(soundex('marrett'), 'M630')
        self.assertEquals(soundex('mason'), 'M250')
        self.assertEquals(soundex('matheson'), 'M325')
        self.assertEquals(soundex('mathieson'), 'M325')
        self.assertEquals(soundex('mattingle'), 'M352')
        self.assertEquals(soundex('mattingly'), 'M352')
        self.assertEquals(soundex('mawson'), 'M250')
        self.assertEquals(soundex('mcaulay'), 'M240')
        self.assertEquals(soundex('mcauley'), 'M240')
        self.assertEquals(soundex('mcauliffe'), 'M241')
        self.assertEquals(soundex('mcauliff'), 'M241')
        self.assertEquals(soundex('mcbeath'), 'M213')
        self.assertEquals(soundex('mccallum'), 'M245')
        self.assertEquals(soundex('mccarthy'), 'M263')
        self.assertEquals(soundex('mccarty'), 'M263')
        self.assertEquals(soundex('mccaskill'), 'M224')
        self.assertEquals(soundex('mccay'), 'M200')
        self.assertEquals(soundex('mcclintock'), 'M245')
        self.assertEquals(soundex('mccluskey'), 'M242')
        self.assertEquals(soundex('mcclusky'), 'M242')
        self.assertEquals(soundex('mccormack'), 'M265')
        self.assertEquals(soundex('mccormacl'), 'M265')
        self.assertEquals(soundex('mccrorie'), 'M266')
        self.assertEquals(soundex('mccrory'), 'M266')
        self.assertEquals(soundex('mccrossan'), 'M262')
        self.assertEquals(soundex('mccrossin'), 'M262')
        self.assertEquals(soundex('mcdermott'), 'M236')
        self.assertEquals(soundex('mcdiarmid'), 'M236')
        self.assertEquals(soundex('mcdonald'), 'M235')
        self.assertEquals(soundex('mcdonell'), 'M235')
        self.assertEquals(soundex('mcdonnell'), 'M235')
        self.assertEquals(soundex('mcdowall'), 'M234')
        self.assertEquals(soundex('mcdowell'), 'M234')
        self.assertEquals(soundex('mcewan'), 'M250')
        self.assertEquals(soundex('mcewen'), 'M250')
        self.assertEquals(soundex('mcfarlane'), 'M216')
        self.assertEquals(soundex('mcfaull'), 'M214')
        self.assertEquals(soundex('mcgill'), 'M240')
        self.assertEquals(soundex('mciintyre'), 'M253')
        self.assertEquals(soundex('mcintosh'), 'M253')
        self.assertEquals(soundex('mcintyre'), 'M253')
        self.assertEquals(soundex('mciver'), 'M216')
        self.assertEquals(soundex('mcivor'), 'M216')
        self.assertEquals(soundex('mckay'), 'M200')
        self.assertEquals(soundex('mckechnie'), 'M225')
        self.assertEquals(soundex('mckecknie'), 'M225')
        self.assertEquals(soundex('mckellar'), 'M246')
        self.assertEquals(soundex('mckenzie'), 'M252')
        self.assertEquals(soundex('mcketterick'), 'M236')
        self.assertEquals(soundex('mckey'), 'M200')
        self.assertEquals(soundex('mckinlay'), 'M254')
        self.assertEquals(soundex('mckinley'), 'M254')
        self.assertEquals(soundex('mckitterick'), 'M236')
        self.assertEquals(soundex('mclachlan'), 'M242')
        self.assertEquals(soundex('mclauchlan'), 'M242')
        self.assertEquals(soundex('mclauchlin'), 'M242')
        self.assertEquals(soundex('mclaughlan'), 'M242')
        self.assertEquals(soundex('mclaughlin'), 'M242')
        self.assertEquals(soundex('mclean'), 'M245')
        self.assertEquals(soundex('mcledd'), 'M243')
        self.assertEquals(soundex('mcledowne'), 'M243')
        self.assertEquals(soundex('mcledowney'), 'M243')
        self.assertEquals(soundex('mclellan'), 'M244')
        self.assertEquals(soundex('mcleod'), 'M243')
        self.assertEquals(soundex('mclintock'), 'M245')
        self.assertEquals(soundex('mcloud'), 'M243')
        self.assertEquals(soundex('mcloughlin'), 'M242')
        self.assertEquals(soundex('mcmillan'), 'M254')
        self.assertEquals(soundex('mcmullan'), 'M254')
        self.assertEquals(soundex('mcmullen'), 'M254')
        self.assertEquals(soundex('mcnair'), 'M256')
        self.assertEquals(soundex('mcnalty'), 'M254')
        self.assertEquals(soundex('mcnatty'), 'M253')
        self.assertEquals(soundex('mcnee'), 'M250')
        self.assertEquals(soundex('mcneill'), 'M254')
        self.assertEquals(soundex('mcneil'), 'M254')
        self.assertEquals(soundex('mcnicoll'), 'M252')
        self.assertEquals(soundex('mcnicol'), 'M252')
        self.assertEquals(soundex('mcnie'), 'M250')
        self.assertEquals(soundex('mcphail'), 'M214')
        self.assertEquals(soundex('mcphee'), 'M210')
        self.assertEquals(soundex('mcpherson'), 'M216')
        self.assertEquals(soundex('mcsweeney'), 'M250')
        self.assertEquals(soundex('mcsweeny'), 'M250')
        self.assertEquals(soundex('mctague'), 'M232')
        self.assertEquals(soundex('mctigue'), 'M232')
        self.assertEquals(soundex('mcvicar'), 'M212')
        self.assertEquals(soundex('mcvickar'), 'M212')
        self.assertEquals(soundex('mcvie'), 'M210')
        self.assertEquals(soundex('meade'), 'M300')
        self.assertEquals(soundex('mead'), 'M300')
        self.assertEquals(soundex('meder'), 'M360')
        self.assertEquals(soundex('meekin'), 'M250')
        self.assertEquals(soundex('meighan'), 'M250')
        self.assertEquals(soundex('melladew'), 'M430')
        self.assertEquals(soundex('merchant'), 'M625')
        self.assertEquals(soundex('metcalfe'), 'M324')
        self.assertEquals(soundex('metcalf'), 'M324')
        self.assertEquals(soundex('millar'), 'M460')
        self.assertEquals(soundex('millea'), 'M400')
        self.assertEquals(soundex('miller'), 'M460')
        self.assertEquals(soundex('millie'), 'M400')
        self.assertEquals(soundex('moffat'), 'M130')
        self.assertEquals(soundex('moffitt'), 'M130')
        self.assertEquals(soundex('moirison'), 'M625')
        self.assertEquals(soundex('mokenzie'), 'M252')
        self.assertEquals(soundex('moloney'), 'M450')
        self.assertEquals(soundex('molonoy'), 'M450')
        self.assertEquals(soundex('monaghan'), 'M525')
        self.assertEquals(soundex('monagon'), 'M525')
        self.assertEquals(soundex('moodie'), 'M300')
        self.assertEquals(soundex('moody'), 'M300')
        self.assertEquals(soundex('morell'), 'M640')
        self.assertEquals(soundex('morice'), 'M620')
        self.assertEquals(soundex('morrell'), 'M640')
        self.assertEquals(soundex('morrisey'), 'M620')
        self.assertEquals(soundex('morris'), 'M620')
        self.assertEquals(soundex('morrison'), 'M625')
        self.assertEquals(soundex('morrissey'), 'M620')
        self.assertEquals(soundex('muiorhead'), 'M630')
        self.assertEquals(soundex('muirhead'), 'M630')
        self.assertEquals(soundex('mulch'), 'M420')
        self.assertEquals(soundex('mulholland'), 'M445')
        self.assertEquals(soundex('mullay'), 'M400')
        self.assertEquals(soundex('mullholland'), 'M445')
        self.assertEquals(soundex('mulloy'), 'M400')
        self.assertEquals(soundex('mulqueen'), 'M425')
        self.assertEquals(soundex('mulquin'), 'M425')
        self.assertEquals(soundex('murdoch'), 'M632')
        self.assertEquals(soundex('murdock'), 'M632')
        self.assertEquals(soundex('mutch'), 'M320')
        self.assertEquals(soundex('naughton'), 'N235')
        self.assertEquals(soundex('naumann'), 'N550')
        self.assertEquals(soundex('neason'), 'N250')
        self.assertEquals(soundex('nelsion'), 'N425')
        self.assertEquals(soundex('nelson'), 'N425')
        self.assertEquals(soundex('nesbitt'), 'N213')
        self.assertEquals(soundex('neumann'), 'N550')
        self.assertEquals(soundex('newall'), 'N400')
        self.assertEquals(soundex('newell'), 'N400')
        self.assertEquals(soundex('newlands'), 'N453')
        self.assertEquals(soundex('neylan'), 'N450')
        self.assertEquals(soundex('neylon'), 'N450')
        self.assertEquals(soundex('nichol'), 'N240')
        self.assertEquals(soundex('nicoll'), 'N240')
        self.assertEquals(soundex('nicol'), 'N240')
        self.assertEquals(soundex('nisbet'), 'N213')
        self.assertEquals(soundex('norton'), 'N635')
        self.assertEquals(soundex('nowlands'), 'N453')
        self.assertEquals(soundex('o\'brian'), 'O165')
        self.assertEquals(soundex('o\'brien'), 'O165')
        self.assertEquals(soundex('ockwell'), 'O240')
        self.assertEquals(soundex('o\'connell'), 'O254')
        self.assertEquals(soundex('o\'connor'), 'O256')
        self.assertEquals(soundex('ocwell'), 'O240')
        self.assertEquals(soundex('odham'), 'O350')
        self.assertEquals(soundex('ogilvie'), 'O241')
        self.assertEquals(soundex('ogivie'), 'O210')
        self.assertEquals(soundex('o\'keefe'), 'O210')
        self.assertEquals(soundex('o\'keeffe'), 'O210')
        self.assertEquals(soundex('oldham'), 'O435')
        self.assertEquals(soundex('olsen'), 'O425')
        self.assertEquals(soundex('olsien'), 'O425')
        self.assertEquals(soundex('osmand'), 'O255')
        self.assertEquals(soundex('osmond'), 'O255')
        self.assertEquals(soundex('page'), 'P200')
        self.assertEquals(soundex('paine'), 'P500')
        self.assertEquals(soundex('pascoe'), 'P200')
        self.assertEquals(soundex('pasco'), 'P200')
        self.assertEquals(soundex('paterson'), 'P362')
        self.assertEquals(soundex('patrick'), 'P362')
        self.assertEquals(soundex('patterson'), 'P362')
        self.assertEquals(soundex('pattison'), 'P325')
        self.assertEquals(soundex('pattrick'), 'P362')
        self.assertEquals(soundex('payne'), 'P500')
        self.assertEquals(soundex('peace'), 'P200')
        self.assertEquals(soundex('pearce'), 'P620')
        self.assertEquals(soundex('peebles'), 'P142')
        self.assertEquals(soundex('pegg'), 'P200')
        self.assertEquals(soundex('peoples'), 'P142')
        self.assertEquals(soundex('pepperell'), 'P164')
        self.assertEquals(soundex('pepperill'), 'P164')
        self.assertEquals(soundex('perry'), 'P600')
        self.assertEquals(soundex('petersen'), 'P362')
        self.assertEquals(soundex('peterson'), 'P362')
        self.assertEquals(soundex('phimester'), 'P523')
        self.assertEquals(soundex('phimister'), 'P523')
        self.assertEquals(soundex('picket'), 'P230')
        self.assertEquals(soundex('pickett'), 'P230')
        self.assertEquals(soundex('pickles'), 'P242')
        self.assertEquals(soundex('picklis'), 'P242')
        self.assertEquals(soundex('pollock'), 'P420')
        self.assertEquals(soundex('polloek'), 'P420')
        self.assertEquals(soundex('polwarth'), 'P463')
        self.assertEquals(soundex('polworth'), 'P463')
        self.assertEquals(soundex('popperell'), 'P164')
        self.assertEquals(soundex('powell'), 'P400')
        self.assertEquals(soundex('power'), 'P600')
        self.assertEquals(soundex('preston'), 'P623')
        self.assertEquals(soundex('priston'), 'P623')
        self.assertEquals(soundex('procter'), 'P623')
        self.assertEquals(soundex('proctor'), 'P623')
        self.assertEquals(soundex('pullar'), 'P460')
        self.assertEquals(soundex('puller'), 'P460')
        self.assertEquals(soundex('purches'), 'P622')
        self.assertEquals(soundex('rae'), 'R000')
        self.assertEquals(soundex('ramsay'), 'R520')
        self.assertEquals(soundex('ramsey'), 'R520')
        self.assertEquals(soundex('ray'), 'R000')
        self.assertEquals(soundex('redder'), 'R360')
        self.assertEquals(soundex('reed'), 'R300')
        self.assertEquals(soundex('reider'), 'R360')
        self.assertEquals(soundex('reidle'), 'R340')
        self.assertEquals(soundex('reid'), 'R300')
        self.assertEquals(soundex('rendel'), 'R534')
        self.assertEquals(soundex('render'), 'R536')
        self.assertEquals(soundex('renfree'), 'R516')
        self.assertEquals(soundex('renfrew'), 'R516')
        self.assertEquals(soundex('riddoch'), 'R320')
        self.assertEquals(soundex('riddock'), 'R320')
        self.assertEquals(soundex('riedle'), 'R340')
        self.assertEquals(soundex('riley'), 'R400')
        self.assertEquals(soundex('rilly'), 'R400')
        self.assertEquals(soundex('robertsan'), 'R163')
        self.assertEquals(soundex('robertson'), 'R163')
        self.assertEquals(soundex('rodgerson'), 'R326')
        self.assertEquals(soundex('rodgers'), 'R326')
        self.assertEquals(soundex('rogerson'), 'R262')
        self.assertEquals(soundex('rogers'), 'R262')
        self.assertEquals(soundex('rorley'), 'R640')
        self.assertEquals(soundex('rosenbrock'), 'R251')
        self.assertEquals(soundex('rosenbrook'), 'R251')
        self.assertEquals(soundex('rose'), 'R200')
        self.assertEquals(soundex('ross'), 'R200')
        self.assertEquals(soundex('routledge'), 'R343')
        self.assertEquals(soundex('routlege'), 'R342')
        self.assertEquals(soundex('rowley'), 'R400')
        self.assertEquals(soundex('russell'), 'R240')
        self.assertEquals(soundex('sanders'), 'S536')
        self.assertEquals(soundex('sandes'), 'S532')
        self.assertEquals(soundex('sandrey'), 'S536')
        self.assertEquals(soundex('sandry'), 'S536')
        self.assertEquals(soundex('saunders'), 'S536')
        self.assertEquals(soundex('saxton'), 'S235')
        self.assertEquals(soundex('scaife'), 'S100')
        self.assertEquals(soundex('scanlan'), 'S545')
        self.assertEquals(soundex('scanlon'), 'S545')
        self.assertEquals(soundex('scarfe'), 'S610')
        self.assertEquals(soundex('scoffeld'), 'S143')
        self.assertEquals(soundex('scofield'), 'S143')
        self.assertEquals(soundex('seamer'), 'S560')
        self.assertEquals(soundex('sellar'), 'S460')
        self.assertEquals(soundex('seller'), 'S460')
        self.assertEquals(soundex('sexton'), 'S235')
        self.assertEquals(soundex('seymour'), 'S560')
        self.assertEquals(soundex('sharpe'), 'S610')
        self.assertEquals(soundex('sharp'), 'S610')
        self.assertEquals(soundex('shaw'), 'S000')
        self.assertEquals(soundex('shea'), 'S000')
        self.assertEquals(soundex('shephard'), 'S163')
        self.assertEquals(soundex('shepherd'), 'S163')
        self.assertEquals(soundex('sheppard'), 'S163')
        self.assertEquals(soundex('shepperd'), 'S163')
        self.assertEquals(soundex('sheriff'), 'S610')
        self.assertEquals(soundex('sherriff'), 'S610')
        self.assertEquals(soundex('sidey'), 'S300')
        self.assertEquals(soundex('sidoy'), 'S300')
        self.assertEquals(soundex('silvertsen'), 'S416')
        self.assertEquals(soundex('sincock'), 'S522')
        self.assertEquals(soundex('sincok'), 'S522')
        self.assertEquals(soundex('sivertsen'), 'S163')
        self.assertEquals(soundex('skeene'), 'S500')
        self.assertEquals(soundex('skene'), 'S500')
        self.assertEquals(soundex('slowley'), 'S440')
        self.assertEquals(soundex('slowly'), 'S440')
        self.assertEquals(soundex('smith'), 'S530')
        self.assertEquals(soundex('smythe'), 'S530')
        self.assertEquals(soundex('smyth'), 'S530')
        self.assertEquals(soundex('spencer'), 'S152')
        self.assertEquals(soundex('spence'), 'S152')
        self.assertEquals(soundex('steadman'), 'S335')
        self.assertEquals(soundex('stedman'), 'S335')
        self.assertEquals(soundex('stenhouse'), 'S352')
        self.assertEquals(soundex('stennouse'), 'S352')
        self.assertEquals(soundex('stephenson'), 'S315')
        self.assertEquals(soundex('stevenson'), 'S315')
        self.assertEquals(soundex('stichmann'), 'S325')
        self.assertEquals(soundex('stickman'), 'S325')
        self.assertEquals(soundex('stock'), 'S320')
        self.assertEquals(soundex('stook'), 'S320')
        self.assertEquals(soundex('strang'), 'S365')
        self.assertEquals(soundex('strong'), 'S365')
        self.assertEquals(soundex('summerell'), 'S564')
        self.assertEquals(soundex('taverner'), 'T165')
        self.assertEquals(soundex('tillie'), 'T400')
        self.assertEquals(soundex('tiverner'), 'T165')
        self.assertEquals(soundex('todd'), 'T300')
        self.assertEquals(soundex('tonar'), 'T560')
        self.assertEquals(soundex('toner'), 'T560')
        self.assertEquals(soundex('tonner'), 'T560')
        self.assertEquals(soundex('tonnor'), 'T560')
        self.assertEquals(soundex('townsend'), 'T525')
        self.assertEquals(soundex('townshend'), 'T525')
        self.assertEquals(soundex('treeweek'), 'T620')
        self.assertEquals(soundex('tregoning'), 'T625')
        self.assertEquals(soundex('tregonning'), 'T625')
        self.assertEquals(soundex('trevena'), 'T615')
        self.assertEquals(soundex('trevenna'), 'T615')
        self.assertEquals(soundex('trewick'), 'T620')
        self.assertEquals(soundex('turley'), 'T640')
        self.assertEquals(soundex('vial'), 'V400')
        self.assertEquals(soundex('vintinner'), 'V535')
        self.assertEquals(soundex('vintinuer'), 'V535')
        self.assertEquals(soundex('wackeldine'), 'W243')
        self.assertEquals(soundex('wackildene'), 'W243')
        self.assertEquals(soundex('wackilden'), 'W243')
        self.assertEquals(soundex('waghornee'), 'W265')
        self.assertEquals(soundex('waghorne'), 'W265')
        self.assertEquals(soundex('wallace'), 'W420')
        self.assertEquals(soundex('wallin'), 'W450')
        self.assertEquals(soundex('walquest'), 'W422')
        self.assertEquals(soundex('walquist'), 'W422')
        self.assertEquals(soundex('walsh'), 'W420')
        self.assertEquals(soundex('warreil'), 'W640')
        self.assertEquals(soundex('warrell'), 'W640')
        self.assertEquals(soundex('watsan'), 'W325')
        self.assertEquals(soundex('watson'), 'W325')
        self.assertEquals(soundex('welbourn'), 'W416')
        self.assertEquals(soundex('weldon'), 'W435')
        self.assertEquals(soundex('wellbourn'), 'W416')
        self.assertEquals(soundex('wells'), 'W420')
        self.assertEquals(soundex('welsh'), 'W420')
        self.assertEquals(soundex('wheelan'), 'W450')
        self.assertEquals(soundex('wheeler'), 'W460')
        self.assertEquals(soundex('whelan'), 'W450')
        self.assertEquals(soundex('white'), 'W300')
        self.assertEquals(soundex('whyte'), 'W300')
        self.assertEquals(soundex('wilden'), 'W435')
        self.assertEquals(soundex('wildey'), 'W430')
        self.assertEquals(soundex('wildoy'), 'W430')
        self.assertEquals(soundex('willis'), 'W420')
        self.assertEquals(soundex('willon'), 'W450')
        self.assertEquals(soundex('willson'), 'W425')
        self.assertEquals(soundex('wills'), 'W420')
        self.assertEquals(soundex('wilson'), 'W425')
        self.assertEquals(soundex('wilton'), 'W435')
        self.assertEquals(soundex('winders'), 'W536')
        self.assertEquals(soundex('windus'), 'W532')
        self.assertEquals(soundex('wine'), 'W500')
        self.assertEquals(soundex('winn'), 'W500')
        self.assertEquals(soundex('wooton'), 'W350')
        self.assertEquals(soundex('wootten'), 'W350')
        self.assertEquals(soundex('wootton'), 'W350')
        self.assertEquals(soundex('wraight'), 'W623')
        self.assertEquals(soundex('wright'), 'W623')

    def test_soundex_special(self):
        self.assertEquals(soundex('Ashcroft', var='special'), 'A226')
        self.assertEquals(soundex('Asicroft', var='special'), 'A226')
        self.assertEquals(soundex('AsWcroft', var='special'), 'A226')
        self.assertEquals(soundex('Rupert', var='special'), 'R163')
        self.assertEquals(soundex('Rubin', var='special'), 'R150')

    def test_dm_soundex(self):
        # D-M tests
        self.assertEquals(soundex('', var='dm'), set(['000000']))
        self.assertEquals(dm_soundex(''), set(['000000']))

        # http://www.avotaynu.com/soundex.htm
        self.assertEquals(soundex('Augsburg', var='dm'), set(['054795']))
        self.assertEquals(dm_soundex('Augsburg'), set(['054795']))
        self.assertEquals(soundex('Breuer', var='dm'), set(['791900']))
        self.assertEquals(dm_soundex('Breuer'), set(['791900']))
        self.assertEquals(soundex('Halberstadt', var='dm'),
                          set(['587943', '587433']))
        self.assertEquals(dm_soundex('Halberstadt'), set(['587943', '587433']))
        self.assertEquals(soundex('Mannheim', var='dm'), set(['665600']))
        self.assertEquals(dm_soundex('Mannheim'), set(['665600']))
        self.assertEquals(soundex('Chernowitz', var='dm'),
                          set(['496740', '596740']))
        self.assertEquals(dm_soundex('Chernowitz'), set(['496740', '596740']))
        self.assertEquals(soundex('Cherkassy', var='dm'),
                          set(['495400', '595400']))
        self.assertEquals(dm_soundex('Cherkassy'), set(['495400', '595400']))
        self.assertEquals(soundex('Kleinman', var='dm'), set(['586660']))
        self.assertEquals(dm_soundex('Kleinman'), set(['586660']))
        self.assertEquals(soundex('Berlin', var='dm'), set(['798600']))
        self.assertEquals(dm_soundex('Berlin'), set(['798600']))

        self.assertEquals(soundex('Ceniow', var='dm'),
                          set(['467000', '567000']))
        self.assertEquals(dm_soundex('Ceniow'), set(['467000', '567000']))
        self.assertEquals(soundex('Tsenyuv', var='dm'), set(['467000']))
        self.assertEquals(dm_soundex('Tsenyuv'), set(['467000']))
        self.assertEquals(soundex('Holubica', var='dm'),
                          set(['587400', '587500']))
        self.assertEquals(dm_soundex('Holubica'), set(['587400', '587500']))
        self.assertEquals(soundex('Golubitsa', var='dm'), set(['587400']))
        self.assertEquals(dm_soundex('Golubitsa'), set(['587400']))
        self.assertEquals(soundex('Przemysl', var='dm'),
                          set(['746480', '794648']))
        self.assertEquals(dm_soundex('Przemysl'), set(['746480', '794648']))
        self.assertEquals(soundex('Pshemeshil', var='dm'), set(['746480']))
        self.assertEquals(dm_soundex('Pshemeshil'), set(['746480']))
        self.assertEquals(soundex('Rosochowaciec', var='dm'),
                          set(['944744', '945744', '944755', '944754', '944745',
                               '945745', '945754', '945755']))
        self.assertEquals(dm_soundex('Rosochowaciec'),
                          set(['944744', '945744', '944755', '944754', '944745',
                               '945745', '945754', '945755']))
        self.assertEquals(soundex('Rosokhovatsets', var='dm'), set(['945744']))
        self.assertEquals(dm_soundex('Rosokhovatsets'), set(['945744']))

        # https://en.wikipedia.org/wiki/Daitch%E2%80%93Mokotoff_Soundex
        self.assertEquals(soundex('Peters', var='dm'),
                          set(['739400', '734000']))
        self.assertEquals(dm_soundex('Peters'), set(['739400', '734000']))
        self.assertEquals(soundex('Peterson', var='dm'),
                          set(['739460', '734600']))
        self.assertEquals(dm_soundex('Peterson'), set(['739460', '734600']))
        self.assertEquals(soundex('Moskowitz', var='dm'), set(['645740']))
        self.assertEquals(dm_soundex('Moskowitz'), set(['645740']))
        self.assertEquals(soundex('Moskovitz', var='dm'), set(['645740']))
        self.assertEquals(dm_soundex('Moskovitz'), set(['645740']))
        self.assertEquals(soundex('Auerbach', var='dm'),
                          set(['097500', '097400']))
        self.assertEquals(dm_soundex('Auerbach'), set(['097500', '097400']))
        self.assertEquals(soundex('Uhrbach', var='dm'),
                          set(['097500', '097400']))
        self.assertEquals(dm_soundex('Uhrbach'), set(['097500', '097400']))
        self.assertEquals(soundex('Jackson', var='dm'),
                          set(['154600', '454600', '145460', '445460']))
        self.assertEquals(dm_soundex('Jackson'),
                          set(['154600', '454600', '145460', '445460']))
        self.assertEquals(soundex('Jackson-Jackson', var='dm'),
                          set(['154654', '454654', '145465', '445465', '154645',
                               '454645', '145464', '445464', '154644',
                               '454644']))
        self.assertEquals(dm_soundex('Jackson-Jackson'),
                          set(['154654', '454654', '145465', '445465', '154645',
                               '454645', '145464', '445464', '154644',
                               '454644']))

        # http://www.jewishgen.org/infofiles/soundex.html
        self.assertEquals(soundex('OHRBACH', var='dm'),
                          set(['097500', '097400']))
        self.assertEquals(dm_soundex('OHRBACH'), set(['097500', '097400']))
        self.assertEquals(soundex('LIPSHITZ', var='dm'), set(['874400']))
        self.assertEquals(dm_soundex('LIPSHITZ'), set(['874400']))
        self.assertEquals(soundex('LIPPSZYC', var='dm'),
                          set(['874400', '874500']))
        self.assertEquals(dm_soundex('LIPPSZYC'), set(['874400', '874500']))
        self.assertEquals(soundex('LEWINSKY', var='dm'), set(['876450']))
        self.assertEquals(dm_soundex('LEWINSKY'), set(['876450']))
        self.assertEquals(soundex('LEVINSKI', var='dm'), set(['876450']))
        self.assertEquals(dm_soundex('LEVINSKI'), set(['876450']))
        self.assertEquals(soundex('SZLAMAWICZ', var='dm'), set(['486740']))
        self.assertEquals(dm_soundex('SZLAMAWICZ'), set(['486740']))
        self.assertEquals(soundex('SHLAMOVITZ', var='dm'), set(['486740']))
        self.assertEquals(dm_soundex('SHLAMOVITZ'), set(['486740']))

        # http://community.actian.com/wiki/OME_soundex_dm()
        self.assertEquals(soundex('Schwarzenegger', var='dm'),
                          set(['479465', '474659']))
        self.assertEquals(dm_soundex('Schwarzenegger'),
                          set(['479465', '474659']))
        self.assertEquals(soundex('Shwarzenegger', var='dm'),
                          set(['479465', '474659']))
        self.assertEquals(dm_soundex('Shwarzenegger'),
                          set(['479465', '474659']))
        self.assertEquals(soundex('Schwartsenegger', var='dm'),
                          set(['479465']))
        self.assertEquals(dm_soundex('Schwartsenegger'), set(['479465']))


class koelner_phonetik_test_cases(unittest.TestCase):
    def test_koelner_phonetik(self):
        self.assertEquals(koelner_phonetik(''), '')

        # https://de.wikipedia.org/wiki/K%C3%B6lner_Phonetik
        self.assertEquals(koelner_phonetik('Müller-Lüdenscheidt'), '65752682')
        self.assertEquals(koelner_phonetik('Wikipedia'), '3412')
        self.assertEquals(koelner_phonetik('Breschnew'), '17863')

        # http://search.cpan.org/~maros/Text-Phonetic/lib/Text/Phonetic/Koeln.pm
        self.assertEquals(koelner_phonetik('Müller'), '657')
        self.assertEquals(koelner_phonetik('schmidt'), '862')
        self.assertEquals(koelner_phonetik('schneider'), '8627')
        self.assertEquals(koelner_phonetik('fischer'), '387')
        self.assertEquals(koelner_phonetik('weber'), '317')
        self.assertEquals(koelner_phonetik('meyer'), '67')
        self.assertEquals(koelner_phonetik('wagner'), '3467')
        self.assertEquals(koelner_phonetik('schulz'), '858')
        self.assertEquals(koelner_phonetik('becker'), '147')
        self.assertEquals(koelner_phonetik('hoffmann'), '0366')
        self.assertEquals(koelner_phonetik('schäfer'), '837')
        self.assertEquals(koelner_phonetik('cater'), '427')
        self.assertEquals(koelner_phonetik('axel'), '0485')

    def test_koelner_phonetic_num_to_alpha(self):
        self.assertEquals(koelner_phonetik_num_to_alpha('0123456789'),
                          'APTFKLNRS')

    def test_koelner_phonetik_alpha(self):
        self.assertEquals(koelner_phonetik_alpha('Müller-Lüdenscheidt'), 'NLRLTNST')
        self.assertEquals(koelner_phonetik_alpha('Wikipedia'), 'FKPT')
        self.assertEquals(koelner_phonetik_alpha('Breschnew'), 'PRSNF')
        self.assertEquals(koelner_phonetik_alpha('Müller'), 'NLR')
        self.assertEquals(koelner_phonetik_alpha('schmidt'), 'SNT')
        self.assertEquals(koelner_phonetik_alpha('schneider'), 'SNTR')
        self.assertEquals(koelner_phonetik_alpha('fischer'), 'FSR')
        self.assertEquals(koelner_phonetik_alpha('weber'), 'FPR')
        self.assertEquals(koelner_phonetik_alpha('meyer'), 'NR')
        self.assertEquals(koelner_phonetik_alpha('wagner'), 'FKNR')
        self.assertEquals(koelner_phonetik_alpha('schulz'), 'SLS')
        self.assertEquals(koelner_phonetik_alpha('becker'), 'PKR')
        self.assertEquals(koelner_phonetik_alpha('hoffmann'), 'AFNN')
        self.assertEquals(koelner_phonetik_alpha('schäfer'), 'SFR')
        self.assertEquals(koelner_phonetik_alpha('cater'), 'KTR')
        self.assertEquals(koelner_phonetik_alpha('axel'), 'AKSL')


class nysiis_test_cases(unittest.TestCase):
    def test_nysiis(self):
        # http://coryodaniel.com/index.php/2009/12/30/ruby-nysiis-implementation/
        self.assertEquals(nysiis('O\'Daniel'), 'ODANAL')
        self.assertEquals(nysiis('O\'Donnel'), 'ODANAL')
        self.assertEquals(nysiis('Cory'), 'CARY')
        self.assertEquals(nysiis('Corey'), 'CARY')
        self.assertEquals(nysiis('Kory'), 'CARY')

        # http://ntz-develop.blogspot.com/2011/03/phonetic-algorithms.html
        self.assertEquals(nysiis('Diggell'), 'DAGAL')
        self.assertEquals(nysiis('Dougal'), 'DAGAL')
        self.assertEquals(nysiis('Doughill'), 'DAGAL')
        self.assertEquals(nysiis('Dougill'), 'DAGAL')
        self.assertEquals(nysiis('Dowgill'), 'DAGAL')
        self.assertEquals(nysiis('Dugall'), 'DAGAL')
        self.assertEquals(nysiis('Dugall'), 'DAGAL')
        self.assertEquals(nysiis('Glinde'), 'GLAND')
        self.assertEquals(nysiis('Plumridge', maxlength=20), 'PLANRADG')
        self.assertEquals(nysiis('Chinnick'), 'CANAC')
        self.assertEquals(nysiis('Chinnock'), 'CANAC')
        self.assertEquals(nysiis('Chinnock'), 'CANAC')
        self.assertEquals(nysiis('Chomicki'), 'CANAC')
        self.assertEquals(nysiis('Chomicz'), 'CANAC')
        self.assertEquals(nysiis('Schimek'), 'SANAC')
        self.assertEquals(nysiis('Shimuk'), 'SANAC')
        self.assertEquals(nysiis('Simak'), 'SANAC')
        self.assertEquals(nysiis('Simek'), 'SANAC')
        self.assertEquals(nysiis('Simic'), 'SANAC')
        self.assertEquals(nysiis('Sinnock'), 'SANAC')
        self.assertEquals(nysiis('Sinnocke'), 'SANAC')
        self.assertEquals(nysiis('Sunnex'), 'SANAX')
        self.assertEquals(nysiis('Sunnucks'), 'SANAC')
        self.assertEquals(nysiis('Sunock'), 'SANAC')
        self.assertEquals(nysiis('Webberley', maxlength=20), 'WABARLY')
        self.assertEquals(nysiis('Wibberley', maxlength=20), 'WABARLY')


class mra_test_cases(unittest.TestCase):
    def test_mra(self):
        # https://en.wikipedia.org/wiki/Match_rating_approach
        self.assertEquals(mra('Byrne'), 'BYRN')
        self.assertEquals(mra('Boern'), 'BRN')
        self.assertEquals(mra('Smith'), 'SMTH')
        self.assertEquals(mra('Smyth'), 'SMYTH')
        self.assertEquals(mra('Catherine'), 'CTHRN')
        self.assertEquals(mra('Kathryn'), 'KTHRYN')


class metaphone_test_cases(unittest.TestCase):
    def test_metaphone(self):
        # http://ntz-develop.blogspot.com/2011/03/phonetic-algorithms.html
        self.assertEquals(metaphone('Fishpool', 4), 'FXPL')
        self.assertEquals(metaphone('Fishpoole', 4), 'FXPL')
        self.assertEquals(metaphone('Gellately', 4), 'JLTL')
        self.assertEquals(metaphone('Gelletly', 4), 'JLTL')
        self.assertEquals(metaphone('Lowers', 4), 'LWRS')
        self.assertEquals(metaphone('Lowerson', 4), 'LWRS')
        self.assertEquals(metaphone('Mallabar', 4), 'MLBR')
        self.assertEquals(metaphone('Melbert', 4), 'MLBR')
        self.assertEquals(metaphone('Melbourn', 4), 'MLBR')
        self.assertEquals(metaphone('Melbourne', 4), 'MLBR')
        self.assertEquals(metaphone('Melburg', 4), 'MLBR')
        self.assertEquals(metaphone('Melbury', 4), 'MLBR')
        self.assertEquals(metaphone('Milberry', 4), 'MLBR')
        self.assertEquals(metaphone('Milborn', 4), 'MLBR')
        self.assertEquals(metaphone('Milbourn', 4), 'MLBR')
        self.assertEquals(metaphone('Milbourne', 4), 'MLBR')
        self.assertEquals(metaphone('Milburn', 4), 'MLBR')
        self.assertEquals(metaphone('Milburne', 4), 'MLBR')
        self.assertEquals(metaphone('Millberg', 4), 'MLBR')
        self.assertEquals(metaphone('Mulberry', 4), 'MLBR')
        self.assertEquals(metaphone('Mulbery', 4), 'MLBR')
        self.assertEquals(metaphone('Mulbry', 4), 'MLBR')
        self.assertEquals(metaphone('Saipy', 4), 'SP')
        self.assertEquals(metaphone('Sapey', 4), 'SP')
        self.assertEquals(metaphone('Sapp', 4), 'SP')
        self.assertEquals(metaphone('Sappy', 4), 'SP')
        self.assertEquals(metaphone('Sepey', 4), 'SP')
        self.assertEquals(metaphone('Seppey', 4), 'SP')
        self.assertEquals(metaphone('Sopp', 4), 'SP')
        self.assertEquals(metaphone('Zoppie', 4), 'SP')
        self.assertEquals(metaphone('Zoppo', 4), 'SP')
        self.assertEquals(metaphone('Zupa', 4), 'SP')
        self.assertEquals(metaphone('Zupo', 4), 'SP')
        self.assertEquals(metaphone('Zuppa', 4), 'SP')

    def test_metaphone_caversham_testset(self):
        # caversham.otago.ac.nz/files/variantNames.csv
        self.assertEquals(metaphone('abernathy'), 'ABRN0')
        self.assertEquals(metaphone('abernethie'), 'ABRN0')
        self.assertEquals(metaphone('abernethy'), 'ABRN0')
        self.assertEquals(metaphone('ailen'), 'ALN')
        self.assertEquals(metaphone('aldridge'), 'ALTRJ')
        self.assertEquals(metaphone('allan'), 'ALN')
        self.assertEquals(metaphone('allen'), 'ALN')
        self.assertEquals(metaphone('andersen'), 'ANTRSN')
        self.assertEquals(metaphone('anderson'), 'ANTRSN')
        self.assertEquals(metaphone('andorson'), 'ANTRSN')
        self.assertEquals(metaphone('applegart'), 'APLKRT')
        self.assertEquals(metaphone('applegarth'), 'APLKR0')
        self.assertEquals(metaphone('arnal'), 'ARNL')
        self.assertEquals(metaphone('arnel'), 'ARNL')
        self.assertEquals(metaphone('bail'), 'BL')
        self.assertEquals(metaphone('bailer'), 'BLR')
        self.assertEquals(metaphone('bailey'), 'BL')
        self.assertEquals(metaphone('bain'), 'BN')
        self.assertEquals(metaphone('baley'), 'BL')
        self.assertEquals(metaphone('ball'), 'BL')
        self.assertEquals(metaphone('barclay'), 'BRKL')
        self.assertEquals(metaphone('barkla'), 'BRKL')
        self.assertEquals(metaphone('barlthrop'), 'BRL0RP')
        self.assertEquals(metaphone('barltrop'), 'BRLTRP')
        self.assertEquals(metaphone('barnett'), 'BRNT')
        self.assertEquals(metaphone('barratt'), 'BRT')
        self.assertEquals(metaphone('barrett'), 'BRT')
        self.assertEquals(metaphone('barrie'), 'BR')
        self.assertEquals(metaphone('barwick'), 'BRWK')
        self.assertEquals(metaphone('baylee'), 'BL')
        self.assertEquals(metaphone('bell'), 'BL')
        self.assertEquals(metaphone('bellet'), 'BLT')
        self.assertEquals(metaphone('bellett'), 'BLT')
        self.assertEquals(metaphone('bennet'), 'BNT')
        self.assertEquals(metaphone('bennett'), 'BNT')
        self.assertEquals(metaphone('bennie'), 'BN')
        self.assertEquals(metaphone('bernie'), 'BRN')
        self.assertEquals(metaphone('berry'), 'BR')
        self.assertEquals(metaphone('berwick'), 'BRWK')
        self.assertEquals(metaphone('beven'), 'BFN')
        self.assertEquals(metaphone('bevin'), 'BFN')
        self.assertEquals(metaphone('binnie'), 'BN')
        self.assertEquals(metaphone('birrell'), 'BRL')
        self.assertEquals(metaphone('black'), 'BLK')
        self.assertEquals(metaphone('blake'), 'BLK')
        self.assertEquals(metaphone('blakeley'), 'BLKL')
        self.assertEquals(metaphone('blakely'), 'BLKL')
        self.assertEquals(metaphone('bouchor'), 'BXR')
        self.assertEquals(metaphone('boutcher'), 'BXR')
        self.assertEquals(metaphone('brand'), 'BRNT')
        self.assertEquals(metaphone('brandt'), 'BRNTT')
        self.assertEquals(metaphone('brock'), 'BRK')
        self.assertEquals(metaphone('brockie'), 'BRK')
        self.assertEquals(metaphone('brook'), 'BRK')
        self.assertEquals(metaphone('brooke'), 'BRK')
        self.assertEquals(metaphone('brown'), 'BRN')
        self.assertEquals(metaphone('browne'), 'BRN')
        self.assertEquals(metaphone('bruten'), 'BRTN')
        self.assertEquals(metaphone('bruton'), 'BRTN')
        self.assertEquals(metaphone('bulger'), 'BLJR')
        self.assertEquals(metaphone('bull'), 'BL')
        self.assertEquals(metaphone('burger'), 'BRJR')
        self.assertEquals(metaphone('burgess'), 'BRJS')
        self.assertEquals(metaphone('burnett'), 'BRNT')
        self.assertEquals(metaphone('buttermore'), 'BTRMR')
        self.assertEquals(metaphone('buttimore'), 'BTMR')
        self.assertEquals(metaphone('calder'), 'KLTR')
        self.assertEquals(metaphone('caley'), 'KL')
        self.assertEquals(metaphone('callaghan'), 'KLKN')
        self.assertEquals(metaphone('callander'), 'KLNTR')
        self.assertEquals(metaphone('callender'), 'KLNTR')
        self.assertEquals(metaphone('callighan'), 'KLKN')
        self.assertEquals(metaphone('carder'), 'KRTR')
        self.assertEquals(metaphone('carley'), 'KRL')
        self.assertEquals(metaphone('carruthers'), 'KR0RS')
        self.assertEquals(metaphone('carside'), 'KRST')
        self.assertEquals(metaphone('caruthers'), 'KR0RS')
        self.assertEquals(metaphone('case'), 'KS')
        self.assertEquals(metaphone('casey'), 'KS')
        self.assertEquals(metaphone('cassells'), 'KSLS')
        self.assertEquals(metaphone('cassels'), 'KSLS')
        self.assertEquals(metaphone('cassidy'), 'KST')
        self.assertEquals(metaphone('chaplain'), 'XPLN')
        self.assertEquals(metaphone('chaplin'), 'XPLN')
        self.assertEquals(metaphone('chrisp'), 'KRSP')
        self.assertEquals(metaphone('chronican'), 'KRNKN')
        self.assertEquals(metaphone('chronichan'), 'KRNXN')
        self.assertEquals(metaphone('clarke'), 'KLRK')
        self.assertEquals(metaphone('clark'), 'KLRK')
        self.assertEquals(metaphone('clent'), 'KLNT')
        self.assertEquals(metaphone('clint'), 'KLNT')
        self.assertEquals(metaphone('coates'), 'KTS')
        self.assertEquals(metaphone('coats'), 'KTS')
        self.assertEquals(metaphone('conheady'), 'KNHT')
        self.assertEquals(metaphone('connell'), 'KNL')
        self.assertEquals(metaphone('connolly'), 'KNL')
        self.assertEquals(metaphone('conolly'), 'KNL')
        self.assertEquals(metaphone('cooke'), 'KK')
        self.assertEquals(metaphone('cook'), 'KK')
        self.assertEquals(metaphone('corcoran'), 'KRKRN')
        self.assertEquals(metaphone('corkran'), 'KRKRN')
        self.assertEquals(metaphone('cornell'), 'KRNL')
        self.assertEquals(metaphone('cosegrove'), 'KSKRF')
        self.assertEquals(metaphone('cosgrove'), 'KSKRF')
        self.assertEquals(metaphone('coulter'), 'KLTR')
        self.assertEquals(metaphone('coupar'), 'KPR')
        self.assertEquals(metaphone('couper'), 'KPR')
        self.assertEquals(metaphone('courter'), 'KRTR')
        self.assertEquals(metaphone('craig'), 'KRK')
        self.assertEquals(metaphone('craik'), 'KRK')
        self.assertEquals(metaphone('crammond'), 'KRMNT')
        self.assertEquals(metaphone('cramond'), 'KRMNT')
        self.assertEquals(metaphone('crawford'), 'KRFRT')
        self.assertEquals(metaphone('crawfurd'), 'KRFRT')
        self.assertEquals(metaphone('cress'), 'KRS')
        self.assertEquals(metaphone('crisp'), 'KRSP')
        self.assertEquals(metaphone('crosbie'), 'KRSB')
        self.assertEquals(metaphone('crosby'), 'KRSB')
        self.assertEquals(metaphone('crossan'), 'KRSN')
        self.assertEquals(metaphone('crossian'), 'KRSN')
        self.assertEquals(metaphone('cruse'), 'KRS')
        self.assertEquals(metaphone('cubbins'), 'KBNS')
        self.assertEquals(metaphone('culsey'), 'KLS')
        self.assertEquals(metaphone('cunhingham'), 'KNHNM')
        self.assertEquals(metaphone('cunningham'), 'KNNFM')
        self.assertEquals(metaphone('curran'), 'KRN')
        self.assertEquals(metaphone('curren'), 'KRN')
        self.assertEquals(metaphone('cursey'), 'KRS')
        self.assertEquals(metaphone('daly'), 'TL')
        self.assertEquals(metaphone('davany'), 'TFN')
        self.assertEquals(metaphone('daveis'), 'TFS')
        self.assertEquals(metaphone('davies'), 'TFS')
        self.assertEquals(metaphone('davis'), 'TFS')
        self.assertEquals(metaphone('davys'), 'TFS')
        self.assertEquals(metaphone('delaney'), 'TLN')
        self.assertEquals(metaphone('delany'), 'TLN')
        self.assertEquals(metaphone('delargey'), 'TLRJ')
        self.assertEquals(metaphone('delargy'), 'TLRJ')
        self.assertEquals(metaphone('dely'), 'TL')
        self.assertEquals(metaphone('denfold'), 'TNFLT')
        self.assertEquals(metaphone('denford'), 'TNFRT')
        self.assertEquals(metaphone('devaney'), 'TFN')
        self.assertEquals(metaphone('dickison'), 'TKSN')
        self.assertEquals(metaphone('dickson'), 'TKSN')
        self.assertEquals(metaphone('dillan'), 'TLN')
        self.assertEquals(metaphone('dillon'), 'TLN')
        self.assertEquals(metaphone('dockworth'), 'TKWR0')
        self.assertEquals(metaphone('dodd'), 'TT')
        self.assertEquals(metaphone('donne'), 'TN')
        self.assertEquals(metaphone('dougall'), 'TKL')
        self.assertEquals(metaphone('dougal'), 'TKL')
        self.assertEquals(metaphone('douglass'), 'TKLS')
        self.assertEquals(metaphone('douglas'), 'TKLS')
        self.assertEquals(metaphone('dreaver'), 'TRFR')
        self.assertEquals(metaphone('dreavor'), 'TRFR')
        self.assertEquals(metaphone('droaver'), 'TRFR')
        self.assertEquals(metaphone('duckworth'), 'TKWR0')
        self.assertEquals(metaphone('dunne'), 'TN')
        self.assertEquals(metaphone('dunn'), 'TN')
        self.assertEquals(metaphone('eagan'), 'EKN')
        self.assertEquals(metaphone('eagar'), 'EKR')
        self.assertEquals(metaphone('eager'), 'EJR')
        self.assertEquals(metaphone('easson'), 'ESN')
        self.assertEquals(metaphone('egan'), 'EKN')
        self.assertEquals(metaphone('eldridge'), 'ELTRJ')
        self.assertEquals(metaphone('elliis'), 'ELS')
        self.assertEquals(metaphone('ellis'), 'ELS')
        self.assertEquals(metaphone('emerson'), 'EMRSN')
        self.assertEquals(metaphone('emmerson'), 'EMRSN')
        self.assertEquals(metaphone('essson'), 'ESN')
        self.assertEquals(metaphone('fahey'), 'FH')
        self.assertEquals(metaphone('fahy'), 'F')
        self.assertEquals(metaphone('fail'), 'FL')
        self.assertEquals(metaphone('fairbairn'), 'FRBRN')
        self.assertEquals(metaphone('fairburn'), 'FRBRN')
        self.assertEquals(metaphone('faithful'), 'F0FL')
        self.assertEquals(metaphone('faithfull'), 'F0FL')
        self.assertEquals(metaphone('fall'), 'FL')
        self.assertEquals(metaphone('farminger'), 'FRMNJR')
        self.assertEquals(metaphone('farry'), 'FR')
        self.assertEquals(metaphone('feil'), 'FL')
        self.assertEquals(metaphone('fell'), 'FL')
        self.assertEquals(metaphone('fennessey'), 'FNS')
        self.assertEquals(metaphone('fennessy'), 'FNS')
        self.assertEquals(metaphone('ferry'), 'FR')
        self.assertEquals(metaphone('fiddes'), 'FTS')
        self.assertEquals(metaphone('fiddis'), 'FTS')
        self.assertEquals(metaphone('fielden'), 'FLTN')
        self.assertEquals(metaphone('fielder'), 'FLTR')
        self.assertEquals(metaphone('findlay'), 'FNTL')
        self.assertEquals(metaphone('findley'), 'FNTL')
        self.assertEquals(metaphone('fitzpatric'), 'FTSPTRK')
        self.assertEquals(metaphone('fitzpatrick'), 'FTSPTRK')
        self.assertEquals(metaphone('fraer'), 'FRR')
        self.assertEquals(metaphone('fraher'), 'FRHR')
        self.assertEquals(metaphone('fullarton'), 'FLRTN')
        self.assertEquals(metaphone('fullerton'), 'FLRTN')
        self.assertEquals(metaphone('furminger'), 'FRMNJR')
        self.assertEquals(metaphone('gailichan'), 'KLXN')
        self.assertEquals(metaphone('galbraith'), 'KLBR0')
        self.assertEquals(metaphone('gallanders'), 'KLNTRS')
        self.assertEquals(metaphone('gallaway'), 'KLW')
        self.assertEquals(metaphone('gallbraith'), 'KLBR0')
        self.assertEquals(metaphone('gallichan'), 'KLXN')
        self.assertEquals(metaphone('galloway'), 'KLW')
        self.assertEquals(metaphone('garcho'), 'KRX')
        self.assertEquals(metaphone('garchow'), 'KRX')
        self.assertEquals(metaphone('garret'), 'KRT')
        self.assertEquals(metaphone('garrett'), 'KRT')
        self.assertEquals(metaphone('garside'), 'KRST')
        self.assertEquals(metaphone('geddes'), 'JTS')
        self.assertEquals(metaphone('geddis'), 'JTS')
        self.assertEquals(metaphone('georgeison'), 'JRJSN')
        self.assertEquals(metaphone('george'), 'JRJ')
        self.assertEquals(metaphone('georgeson'), 'JRJSN')
        self.assertEquals(metaphone('gillanders'), 'JLNTRS')
        self.assertEquals(metaphone('gillespie'), 'JLSP')
        self.assertEquals(metaphone('gillispie'), 'JLSP')
        self.assertEquals(metaphone('gilmore'), 'JLMR')
        self.assertEquals(metaphone('gilmour'), 'JLMR')
        self.assertEquals(metaphone('glendining'), 'KLNTNNK')
        self.assertEquals(metaphone('glendinning'), 'KLNTNNK')
        self.assertEquals(metaphone('glendinnin'), 'KLNTNN')
        self.assertEquals(metaphone('gorge'), 'KRJ')
        self.assertEquals(metaphone('graig'), 'KRK')
        self.assertEquals(metaphone('gray'), 'KR')
        self.assertEquals(metaphone('greeves'), 'KRFS')
        self.assertEquals(metaphone('greig'), 'KRK')
        self.assertEquals(metaphone('greves'), 'KRFS')
        self.assertEquals(metaphone('grey'), 'KR')
        self.assertEquals(metaphone('griffiths'), 'KRF0S')
        self.assertEquals(metaphone('griffths'), 'KRF0S')
        self.assertEquals(metaphone('grigg'), 'KRK')
        self.assertEquals(metaphone('grig'), 'KRK')
        self.assertEquals(metaphone('gubbins'), 'KBNS')
        self.assertEquals(metaphone('gulbins'), 'KLBNS')
        self.assertEquals(metaphone('haddon'), 'HTN')
        self.assertEquals(metaphone('hal'), 'HL')
        self.assertEquals(metaphone('hall'), 'HL')
        self.assertEquals(metaphone('hanley'), 'HNL')
        self.assertEquals(metaphone('hanly'), 'HNL')
        self.assertEquals(metaphone('hannagan'), 'HNKN')
        self.assertEquals(metaphone('hannan'), 'HNN')
        self.assertEquals(metaphone('hannigan'), 'HNKN')
        self.assertEquals(metaphone('hanon'), 'HNN')
        self.assertEquals(metaphone('harman'), 'HRMN')
        self.assertEquals(metaphone('hart'), 'HRT')
        self.assertEquals(metaphone('harty'), 'HRT')
        self.assertEquals(metaphone('hatton'), 'HTN')
        self.assertEquals(metaphone('hayden'), 'HTN')
        self.assertEquals(metaphone('hay'), 'H')
        self.assertEquals(metaphone('healey'), 'HL')
        self.assertEquals(metaphone('healy'), 'HL')
        self.assertEquals(metaphone('helleyer'), 'HLYR')
        self.assertEquals(metaphone('hellyer'), 'HLYR')
        self.assertEquals(metaphone('henaghan'), 'HNN')
        self.assertEquals(metaphone('heneghan'), 'HNN')
        self.assertEquals(metaphone('herman'), 'HRMN')
        self.assertEquals(metaphone('hey'), 'H')
        self.assertEquals(metaphone('hill'), 'HL')
        self.assertEquals(metaphone('hinde'), 'HNT')
        self.assertEquals(metaphone('hobcraft'), 'HBKRFT')
        self.assertEquals(metaphone('hobcroft'), 'HBKRFT')
        self.assertEquals(metaphone('hocking'), 'HKNK')
        self.assertEquals(metaphone('hoeking'), 'HKNK')
        self.assertEquals(metaphone('holander'), 'HLNTR')
        self.assertEquals(metaphone('holdgate'), 'HLTKT')
        self.assertEquals(metaphone('holgate'), 'HLKT')
        self.assertEquals(metaphone('hollander'), 'HLNTR')
        self.assertEquals(metaphone('home'), 'HM')
        self.assertEquals(metaphone('horne'), 'HRN')
        self.assertEquals(metaphone('horn'), 'HRN')
        self.assertEquals(metaphone('howarth'), 'HWR0')
        self.assertEquals(metaphone('howe'), 'HW')
        self.assertEquals(metaphone('howie'), 'HW')
        self.assertEquals(metaphone('howorth'), 'HWR0')
        self.assertEquals(metaphone('hoy'), 'H')
        self.assertEquals(metaphone('huddlestone'), 'HTLSTN')
        self.assertEquals(metaphone('huddleston'), 'HTLSTN')
        self.assertEquals(metaphone('hugget'), 'HKT')
        self.assertEquals(metaphone('huggett'), 'HKT')
        self.assertEquals(metaphone('hume'), 'HM')
        self.assertEquals(metaphone('hunt'), 'HNT')
        self.assertEquals(metaphone('hurt'), 'HRT')
        self.assertEquals(metaphone('hutcheson'), 'HTXSN')
        self.assertEquals(metaphone('hutchison'), 'HTXSN')
        self.assertEquals(metaphone('hutt'), 'HT')
        self.assertEquals(metaphone('hutton'), 'HTN')
        self.assertEquals(metaphone('jacobsen'), 'JKBSN')
        self.assertEquals(metaphone('jacobs'), 'JKBS')
        self.assertEquals(metaphone('jacobson'), 'JKBSN')
        self.assertEquals(metaphone('jaicobs'), 'JKBS')
        self.assertEquals(metaphone('jamieson'), 'JMSN')
        self.assertEquals(metaphone('jamison'), 'JMSN')
        self.assertEquals(metaphone('jansen'), 'JNSN')
        self.assertEquals(metaphone('janson'), 'JNSN')
        self.assertEquals(metaphone('jardine'), 'JRTN')
        self.assertEquals(metaphone('jeannings'), 'JNNKS')
        self.assertEquals(metaphone('jeffery'), 'JFR')
        self.assertEquals(metaphone('jeffrey'), 'JFR')
        self.assertEquals(metaphone('jelly'), 'JL')
        self.assertEquals(metaphone('jennings'), 'JNNKS')
        self.assertEquals(metaphone('johns'), 'JNS')
        self.assertEquals(metaphone('johnstone'), 'JNSTN')
        self.assertEquals(metaphone('johnston'), 'JNSTN')
        self.assertEquals(metaphone('jolly'), 'JL')
        self.assertEquals(metaphone('jones'), 'JNS')
        self.assertEquals(metaphone('jurdine'), 'JRTN')
        self.assertEquals(metaphone('kean'), 'KN')
        self.assertEquals(metaphone('keen'), 'KN')
        self.assertEquals(metaphone('keennelly'), 'KNL')
        self.assertEquals(metaphone('kellan'), 'KLN')
        self.assertEquals(metaphone('kennard'), 'KNRT')
        self.assertEquals(metaphone('kennealy'), 'KNL')
        self.assertEquals(metaphone('kennedy'), 'KNT')
        self.assertEquals(metaphone('kenn'), 'KN')
        self.assertEquals(metaphone('killin'), 'KLN')
        self.assertEquals(metaphone('kirkaldie'), 'KRKLT')
        self.assertEquals(metaphone('kirkcaldie'), 'KRKKLT')
        self.assertEquals(metaphone('kirke'), 'KRK')
        self.assertEquals(metaphone('kirk'), 'KRK')
        self.assertEquals(metaphone('kitchen'), 'KTXN')
        self.assertEquals(metaphone('kitchin'), 'KTXN')
        self.assertEquals(metaphone('krause'), 'KRS')
        self.assertEquals(metaphone('kraus'), 'KRS')
        self.assertEquals(metaphone('langham'), 'LNFM')
        self.assertEquals(metaphone('lanham'), 'LNHM')
        self.assertEquals(metaphone('larson'), 'LRSN')
        self.assertEquals(metaphone('laughlin'), 'LFLN')
        self.assertEquals(metaphone('laurie'), 'LR')
        self.assertEquals(metaphone('lawrie'), 'LR')
        self.assertEquals(metaphone('lawson'), 'LSN')
        self.assertEquals(metaphone('leary'), 'LR')
        self.assertEquals(metaphone('leech'), 'LX')
        self.assertEquals(metaphone('leery'), 'LR')
        self.assertEquals(metaphone('leitch'), 'LTX')
        self.assertEquals(metaphone('lemin'), 'LMN')
        self.assertEquals(metaphone('lemon'), 'LMN')
        self.assertEquals(metaphone('lenihan'), 'LNHN')
        self.assertEquals(metaphone('lennon'), 'LNN')
        self.assertEquals(metaphone('leyden'), 'LTN')
        self.assertEquals(metaphone('leydon'), 'LTN')
        self.assertEquals(metaphone('lister'), 'LSTR')
        self.assertEquals(metaphone('list'), 'LST')
        self.assertEquals(metaphone('livingstone'), 'LFNKSTN')
        self.assertEquals(metaphone('livingston'), 'LFNKSTN')
        self.assertEquals(metaphone('lochhead'), 'LXT')
        self.assertEquals(metaphone('lockhead'), 'LKHT')
        self.assertEquals(metaphone('loughlin'), 'LFLN')
        self.assertEquals(metaphone('macallum'), 'MKLM')
        self.assertEquals(metaphone('macaskill'), 'MKSKL')
        self.assertEquals(metaphone('macaulay'), 'MKL')
        self.assertEquals(metaphone('macauley'), 'MKL')
        self.assertEquals(metaphone('macbeath'), 'MKB0')
        self.assertEquals(metaphone('macdonald'), 'MKTNLT')
        self.assertEquals(metaphone('maceewan'), 'MSWN')
        self.assertEquals(metaphone('macewan'), 'MSWN')
        self.assertEquals(metaphone('macfarlane'), 'MKFRLN')
        self.assertEquals(metaphone('macintosh'), 'MSNTX')
        self.assertEquals(metaphone('mackechnie'), 'MKXN')
        self.assertEquals(metaphone('mackenzie'), 'MKNS')
        self.assertEquals(metaphone('mackersey'), 'MKRS')
        self.assertEquals(metaphone('mackersy'), 'MKRS')
        self.assertEquals(metaphone('maclean'), 'MKLN')
        self.assertEquals(metaphone('macnee'), 'MKN')
        self.assertEquals(metaphone('macpherson'), 'MKFRSN')
        self.assertEquals(metaphone('main'), 'MN')
        self.assertEquals(metaphone('maley'), 'ML')
        self.assertEquals(metaphone('malladew'), 'MLT')
        self.assertEquals(metaphone('maloney'), 'MLN')
        self.assertEquals(metaphone('mann'), 'MN')
        self.assertEquals(metaphone('marchant'), 'MRXNT')
        self.assertEquals(metaphone('marett'), 'MRT')
        self.assertEquals(metaphone('marrett'), 'MRT')
        self.assertEquals(metaphone('mason'), 'MSN')
        self.assertEquals(metaphone('matheson'), 'M0SN')
        self.assertEquals(metaphone('mathieson'), 'M0SN')
        self.assertEquals(metaphone('mattingle'), 'MTNKL')
        self.assertEquals(metaphone('mattingly'), 'MTNKL')
        self.assertEquals(metaphone('mawson'), 'MSN')
        self.assertEquals(metaphone('mcaulay'), 'MKL')
        self.assertEquals(metaphone('mcauley'), 'MKL')
        self.assertEquals(metaphone('mcauliffe'), 'MKLF')
        self.assertEquals(metaphone('mcauliff'), 'MKLF')
        self.assertEquals(metaphone('mcbeath'), 'MKB0')
        self.assertEquals(metaphone('mccallum'), 'MKKLM')
        self.assertEquals(metaphone('mccarthy'), 'MKKR0')
        self.assertEquals(metaphone('mccarty'), 'MKKRT')
        self.assertEquals(metaphone('mccaskill'), 'MKKSKL')
        self.assertEquals(metaphone('mccay'), 'MKK')
        self.assertEquals(metaphone('mcclintock'), 'MKKLNTK')
        self.assertEquals(metaphone('mccluskey'), 'MKKLSK')
        self.assertEquals(metaphone('mcclusky'), 'MKKLSK')
        self.assertEquals(metaphone('mccormack'), 'MKKRMK')
        self.assertEquals(metaphone('mccormacl'), 'MKKRMKL')
        self.assertEquals(metaphone('mccrorie'), 'MKKRR')
        self.assertEquals(metaphone('mccrory'), 'MKKRR')
        self.assertEquals(metaphone('mccrossan'), 'MKKRSN')
        self.assertEquals(metaphone('mccrossin'), 'MKKRSN')
        self.assertEquals(metaphone('mcdermott'), 'MKTRMT')
        self.assertEquals(metaphone('mcdiarmid'), 'MKTRMT')
        self.assertEquals(metaphone('mcdonald'), 'MKTNLT')
        self.assertEquals(metaphone('mcdonell'), 'MKTNL')
        self.assertEquals(metaphone('mcdonnell'), 'MKTNL')
        self.assertEquals(metaphone('mcdowall'), 'MKTWL')
        self.assertEquals(metaphone('mcdowell'), 'MKTWL')
        self.assertEquals(metaphone('mcewan'), 'MSWN')
        self.assertEquals(metaphone('mcewen'), 'MSWN')
        self.assertEquals(metaphone('mcfarlane'), 'MKFRLN')
        self.assertEquals(metaphone('mcfaull'), 'MKFL')
        self.assertEquals(metaphone('mcgill'), 'MKJL')
        self.assertEquals(metaphone('mciintyre'), 'MSNTR')
        self.assertEquals(metaphone('mcintosh'), 'MSNTX')
        self.assertEquals(metaphone('mcintyre'), 'MSNTR')
        self.assertEquals(metaphone('mciver'), 'MSFR')
        self.assertEquals(metaphone('mcivor'), 'MSFR')
        self.assertEquals(metaphone('mckay'), 'MK')
        self.assertEquals(metaphone('mckechnie'), 'MKXN')
        self.assertEquals(metaphone('mckecknie'), 'MKKN')
        self.assertEquals(metaphone('mckellar'), 'MKLR')
        self.assertEquals(metaphone('mckenzie'), 'MKNS')
        self.assertEquals(metaphone('mcketterick'), 'MKTRK')
        self.assertEquals(metaphone('mckey'), 'MK')
        self.assertEquals(metaphone('mckinlay'), 'MKNL')
        self.assertEquals(metaphone('mckinley'), 'MKNL')
        self.assertEquals(metaphone('mckitterick'), 'MKTRK')
        self.assertEquals(metaphone('mclachlan'), 'MKLXLN')
        self.assertEquals(metaphone('mclauchlan'), 'MKLXLN')
        self.assertEquals(metaphone('mclauchlin'), 'MKLXLN')
        self.assertEquals(metaphone('mclaughlan'), 'MKLFLN')
        self.assertEquals(metaphone('mclaughlin'), 'MKLFLN')
        self.assertEquals(metaphone('mclean'), 'MKLN')
        self.assertEquals(metaphone('mcledd'), 'MKLT')
        self.assertEquals(metaphone('mcledowne'), 'MKLTN')
        self.assertEquals(metaphone('mcledowney'), 'MKLTN')
        self.assertEquals(metaphone('mclellan'), 'MKLLN')
        self.assertEquals(metaphone('mcleod'), 'MKLT')
        self.assertEquals(metaphone('mclintock'), 'MKLNTK')
        self.assertEquals(metaphone('mcloud'), 'MKLT')
        self.assertEquals(metaphone('mcloughlin'), 'MKLFLN')
        self.assertEquals(metaphone('mcmillan'), 'MKMLN')
        self.assertEquals(metaphone('mcmullan'), 'MKMLN')
        self.assertEquals(metaphone('mcmullen'), 'MKMLN')
        self.assertEquals(metaphone('mcnair'), 'MKNR')
        self.assertEquals(metaphone('mcnalty'), 'MKNLT')
        self.assertEquals(metaphone('mcnatty'), 'MKNT')
        self.assertEquals(metaphone('mcnee'), 'MKN')
        self.assertEquals(metaphone('mcneill'), 'MKNL')
        self.assertEquals(metaphone('mcneil'), 'MKNL')
        self.assertEquals(metaphone('mcnicoll'), 'MKNKL')
        self.assertEquals(metaphone('mcnicol'), 'MKNKL')
        self.assertEquals(metaphone('mcnie'), 'MKN')
        self.assertEquals(metaphone('mcphail'), 'MKFL')
        self.assertEquals(metaphone('mcphee'), 'MKF')
        self.assertEquals(metaphone('mcpherson'), 'MKFRSN')
        self.assertEquals(metaphone('mcsweeney'), 'MKSWN')
        self.assertEquals(metaphone('mcsweeny'), 'MKSWN')
        self.assertEquals(metaphone('mctague'), 'MKTK')
        self.assertEquals(metaphone('mctigue'), 'MKTK')
        self.assertEquals(metaphone('mcvicar'), 'MKFKR')
        self.assertEquals(metaphone('mcvickar'), 'MKFKR')
        self.assertEquals(metaphone('mcvie'), 'MKF')
        self.assertEquals(metaphone('meade'), 'MT')
        self.assertEquals(metaphone('mead'), 'MT')
        self.assertEquals(metaphone('meder'), 'MTR')
        self.assertEquals(metaphone('meekin'), 'MKN')
        self.assertEquals(metaphone('meighan'), 'MFN')
        self.assertEquals(metaphone('melladew'), 'MLT')
        self.assertEquals(metaphone('merchant'), 'MRXNT')
        self.assertEquals(metaphone('metcalfe'), 'MTKLF')
        self.assertEquals(metaphone('metcalf'), 'MTKLF')
        self.assertEquals(metaphone('millar'), 'MLR')
        self.assertEquals(metaphone('millea'), 'ML')
        self.assertEquals(metaphone('miller'), 'MLR')
        self.assertEquals(metaphone('millie'), 'ML')
        self.assertEquals(metaphone('moffat'), 'MFT')
        self.assertEquals(metaphone('moffitt'), 'MFT')
        self.assertEquals(metaphone('moirison'), 'MRSN')
        self.assertEquals(metaphone('mokenzie'), 'MKNS')
        self.assertEquals(metaphone('moloney'), 'MLN')
        self.assertEquals(metaphone('molonoy'), 'MLN')
        self.assertEquals(metaphone('monaghan'), 'MNFN')
        self.assertEquals(metaphone('monagon'), 'MNKN')
        self.assertEquals(metaphone('moodie'), 'MT')
        self.assertEquals(metaphone('moody'), 'MT')
        self.assertEquals(metaphone('morell'), 'MRL')
        self.assertEquals(metaphone('morice'), 'MRS')
        self.assertEquals(metaphone('morrell'), 'MRL')
        self.assertEquals(metaphone('morrisey'), 'MRS')
        self.assertEquals(metaphone('morris'), 'MRS')
        self.assertEquals(metaphone('morrison'), 'MRSN')
        self.assertEquals(metaphone('morrissey'), 'MRS')
        self.assertEquals(metaphone('muiorhead'), 'MRHT')
        self.assertEquals(metaphone('muirhead'), 'MRHT')
        self.assertEquals(metaphone('mulch'), 'MLX')
        self.assertEquals(metaphone('mulholland'), 'MLHLNT')
        self.assertEquals(metaphone('mullay'), 'ML')
        self.assertEquals(metaphone('mullholland'), 'MLHLNT')
        self.assertEquals(metaphone('mulloy'), 'ML')
        self.assertEquals(metaphone('mulqueen'), 'MLKN')
        self.assertEquals(metaphone('mulquin'), 'MLKN')
        self.assertEquals(metaphone('murdoch'), 'MRTX')
        self.assertEquals(metaphone('murdock'), 'MRTK')
        self.assertEquals(metaphone('mutch'), 'MTX')
        self.assertEquals(metaphone('naughton'), 'NFTN')
        self.assertEquals(metaphone('naumann'), 'NMN')
        self.assertEquals(metaphone('neason'), 'NSN')
        self.assertEquals(metaphone('nelsion'), 'NLXN')
        self.assertEquals(metaphone('nelson'), 'NLSN')
        self.assertEquals(metaphone('nesbitt'), 'NSBT')
        self.assertEquals(metaphone('neumann'), 'NMN')
        self.assertEquals(metaphone('newall'), 'NWL')
        self.assertEquals(metaphone('newell'), 'NWL')
        self.assertEquals(metaphone('newlands'), 'NLNTS')
        self.assertEquals(metaphone('neylan'), 'NLN')
        self.assertEquals(metaphone('neylon'), 'NLN')
        self.assertEquals(metaphone('nichol'), 'NXL')
        self.assertEquals(metaphone('nicoll'), 'NKL')
        self.assertEquals(metaphone('nicol'), 'NKL')
        self.assertEquals(metaphone('nisbet'), 'NSBT')
        self.assertEquals(metaphone('norton'), 'NRTN')
        self.assertEquals(metaphone('nowlands'), 'NLNTS')
        self.assertEquals(metaphone('o\'brian'), 'OBRN')
        self.assertEquals(metaphone('o\'brien'), 'OBRN')
        self.assertEquals(metaphone('ockwell'), 'OKWL')
        self.assertEquals(metaphone('o\'connell'), 'OKNL')
        self.assertEquals(metaphone('o\'connor'), 'OKNR')
        self.assertEquals(metaphone('ocwell'), 'OKWL')
        self.assertEquals(metaphone('odham'), 'OTHM')
        self.assertEquals(metaphone('ogilvie'), 'OJLF')
        self.assertEquals(metaphone('ogivie'), 'OJF')
        self.assertEquals(metaphone('o\'keefe'), 'OKF')
        self.assertEquals(metaphone('o\'keeffe'), 'OKF')
        self.assertEquals(metaphone('oldham'), 'OLTHM')
        self.assertEquals(metaphone('olsen'), 'OLSN')
        self.assertEquals(metaphone('olsien'), 'OLSN')
        self.assertEquals(metaphone('osmand'), 'OSMNT')
        self.assertEquals(metaphone('osmond'), 'OSMNT')
        self.assertEquals(metaphone('page'), 'PJ')
        self.assertEquals(metaphone('paine'), 'PN')
        self.assertEquals(metaphone('pascoe'), 'PSK')
        self.assertEquals(metaphone('pasco'), 'PSK')
        self.assertEquals(metaphone('paterson'), 'PTRSN')
        self.assertEquals(metaphone('patrick'), 'PTRK')
        self.assertEquals(metaphone('patterson'), 'PTRSN')
        self.assertEquals(metaphone('pattison'), 'PTSN')
        self.assertEquals(metaphone('pattrick'), 'PTRK')
        self.assertEquals(metaphone('payne'), 'PN')
        self.assertEquals(metaphone('peace'), 'PS')
        self.assertEquals(metaphone('pearce'), 'PRS')
        self.assertEquals(metaphone('peebles'), 'PBLS')
        self.assertEquals(metaphone('pegg'), 'PK')
        self.assertEquals(metaphone('peoples'), 'PPLS')
        self.assertEquals(metaphone('pepperell'), 'PPRL')
        self.assertEquals(metaphone('pepperill'), 'PPRL')
        self.assertEquals(metaphone('perry'), 'PR')
        self.assertEquals(metaphone('petersen'), 'PTRSN')
        self.assertEquals(metaphone('peterson'), 'PTRSN')
        self.assertEquals(metaphone('phimester'), 'FMSTR')
        self.assertEquals(metaphone('phimister'), 'FMSTR')
        self.assertEquals(metaphone('picket'), 'PKT')
        self.assertEquals(metaphone('pickett'), 'PKT')
        self.assertEquals(metaphone('pickles'), 'PKLS')
        self.assertEquals(metaphone('picklis'), 'PKLS')
        self.assertEquals(metaphone('pollock'), 'PLK')
        self.assertEquals(metaphone('polloek'), 'PLK')
        self.assertEquals(metaphone('polwarth'), 'PLWR0')
        self.assertEquals(metaphone('polworth'), 'PLWR0')
        self.assertEquals(metaphone('popperell'), 'PPRL')
        self.assertEquals(metaphone('powell'), 'PWL')
        self.assertEquals(metaphone('power'), 'PWR')
        self.assertEquals(metaphone('preston'), 'PRSTN')
        self.assertEquals(metaphone('priston'), 'PRSTN')
        self.assertEquals(metaphone('procter'), 'PRKTR')
        self.assertEquals(metaphone('proctor'), 'PRKTR')
        self.assertEquals(metaphone('pullar'), 'PLR')
        self.assertEquals(metaphone('puller'), 'PLR')
        self.assertEquals(metaphone('purches'), 'PRXS')
        self.assertEquals(metaphone('rae'), 'R')
        self.assertEquals(metaphone('ramsay'), 'RMS')
        self.assertEquals(metaphone('ramsey'), 'RMS')
        self.assertEquals(metaphone('ray'), 'R')
        self.assertEquals(metaphone('redder'), 'RTR')
        self.assertEquals(metaphone('reed'), 'RT')
        self.assertEquals(metaphone('reider'), 'RTR')
        self.assertEquals(metaphone('reidle'), 'RTL')
        self.assertEquals(metaphone('reid'), 'RT')
        self.assertEquals(metaphone('rendel'), 'RNTL')
        self.assertEquals(metaphone('render'), 'RNTR')
        self.assertEquals(metaphone('renfree'), 'RNFR')
        self.assertEquals(metaphone('renfrew'), 'RNFR')
        self.assertEquals(metaphone('riddoch'), 'RTX')
        self.assertEquals(metaphone('riddock'), 'RTK')
        self.assertEquals(metaphone('riedle'), 'RTL')
        self.assertEquals(metaphone('riley'), 'RL')
        self.assertEquals(metaphone('rilly'), 'RL')
        self.assertEquals(metaphone('robertsan'), 'RBRTSN')
        self.assertEquals(metaphone('robertson'), 'RBRTSN')
        self.assertEquals(metaphone('rodgerson'), 'RJRSN')
        self.assertEquals(metaphone('rodgers'), 'RJRS')
        self.assertEquals(metaphone('rogerson'), 'RJRSN')
        self.assertEquals(metaphone('rogers'), 'RJRS')
        self.assertEquals(metaphone('rorley'), 'RRL')
        self.assertEquals(metaphone('rosenbrock'), 'RSNBRK')
        self.assertEquals(metaphone('rosenbrook'), 'RSNBRK')
        self.assertEquals(metaphone('rose'), 'RS')
        self.assertEquals(metaphone('ross'), 'RS')
        self.assertEquals(metaphone('routledge'), 'RTLJ')
        self.assertEquals(metaphone('routlege'), 'RTLJ')
        self.assertEquals(metaphone('rowley'), 'RL')
        self.assertEquals(metaphone('russell'), 'RSL')
        self.assertEquals(metaphone('sanders'), 'SNTRS')
        self.assertEquals(metaphone('sandes'), 'SNTS')
        self.assertEquals(metaphone('sandrey'), 'SNTR')
        self.assertEquals(metaphone('sandry'), 'SNTR')
        self.assertEquals(metaphone('saunders'), 'SNTRS')
        self.assertEquals(metaphone('saxton'), 'SKSTN')
        self.assertEquals(metaphone('scaife'), 'SKF')
        self.assertEquals(metaphone('scanlan'), 'SKNLN')
        self.assertEquals(metaphone('scanlon'), 'SKNLN')
        self.assertEquals(metaphone('scarfe'), 'SKRF')
        self.assertEquals(metaphone('scoffeld'), 'SKFLT')
        self.assertEquals(metaphone('scofield'), 'SKFLT')
        self.assertEquals(metaphone('seamer'), 'SMR')
        self.assertEquals(metaphone('sellar'), 'SLR')
        self.assertEquals(metaphone('seller'), 'SLR')
        self.assertEquals(metaphone('sexton'), 'SKSTN')
        self.assertEquals(metaphone('seymour'), 'SMR')
        self.assertEquals(metaphone('sharpe'), 'XRP')
        self.assertEquals(metaphone('sharp'), 'XRP')
        self.assertEquals(metaphone('shaw'), 'X')
        self.assertEquals(metaphone('shea'), 'X')
        self.assertEquals(metaphone('shephard'), 'XFRT')
        self.assertEquals(metaphone('shepherd'), 'XFRT')
        self.assertEquals(metaphone('sheppard'), 'XPRT')
        self.assertEquals(metaphone('shepperd'), 'XPRT')
        self.assertEquals(metaphone('sheriff'), 'XRF')
        self.assertEquals(metaphone('sherriff'), 'XRF')
        self.assertEquals(metaphone('sidey'), 'ST')
        self.assertEquals(metaphone('sidoy'), 'ST')
        self.assertEquals(metaphone('silvertsen'), 'SLFRTSN')
        self.assertEquals(metaphone('sincock'), 'SNKK')
        self.assertEquals(metaphone('sincok'), 'SNKK')
        self.assertEquals(metaphone('sivertsen'), 'SFRTSN')
        self.assertEquals(metaphone('skeene'), 'SKN')
        self.assertEquals(metaphone('skene'), 'SKN')
        self.assertEquals(metaphone('slowley'), 'SLL')
        self.assertEquals(metaphone('slowly'), 'SLL')
        self.assertEquals(metaphone('smith'), 'SM0')
        self.assertEquals(metaphone('smythe'), 'SM0')
        self.assertEquals(metaphone('smyth'), 'SM0')
        self.assertEquals(metaphone('spencer'), 'SPNSR')
        self.assertEquals(metaphone('spence'), 'SPNS')
        self.assertEquals(metaphone('steadman'), 'STTMN')
        self.assertEquals(metaphone('stedman'), 'STTMN')
        self.assertEquals(metaphone('stenhouse'), 'STNHS')
        self.assertEquals(metaphone('stennouse'), 'STNS')
        self.assertEquals(metaphone('stephenson'), 'STFNSN')
        self.assertEquals(metaphone('stevenson'), 'STFNSN')
        self.assertEquals(metaphone('stichmann'), 'STXMN')
        self.assertEquals(metaphone('stickman'), 'STKMN')
        self.assertEquals(metaphone('stock'), 'STK')
        self.assertEquals(metaphone('stook'), 'STK')
        self.assertEquals(metaphone('strang'), 'STRNK')
        self.assertEquals(metaphone('strong'), 'STRNK')
        self.assertEquals(metaphone('summerell'), 'SMRL')
        self.assertEquals(metaphone('taverner'), 'TFRNR')
        self.assertEquals(metaphone('tillie'), 'TL')
        self.assertEquals(metaphone('tiverner'), 'TFRNR')
        self.assertEquals(metaphone('todd'), 'TT')
        self.assertEquals(metaphone('tonar'), 'TNR')
        self.assertEquals(metaphone('toner'), 'TNR')
        self.assertEquals(metaphone('tonner'), 'TNR')
        self.assertEquals(metaphone('tonnor'), 'TNR')
        self.assertEquals(metaphone('townsend'), 'TNSNT')
        self.assertEquals(metaphone('townshend'), 'TNXNT')
        self.assertEquals(metaphone('treeweek'), 'TRWK')
        self.assertEquals(metaphone('tregoning'), 'TRKNNK')
        self.assertEquals(metaphone('tregonning'), 'TRKNNK')
        self.assertEquals(metaphone('trevena'), 'TRFN')
        self.assertEquals(metaphone('trevenna'), 'TRFN')
        self.assertEquals(metaphone('trewick'), 'TRWK')
        self.assertEquals(metaphone('turley'), 'TRL')
        self.assertEquals(metaphone('vial'), 'FL')
        self.assertEquals(metaphone('vintinner'), 'FNTNR')
        self.assertEquals(metaphone('vintinuer'), 'FNTNR')
        self.assertEquals(metaphone('wackeldine'), 'WKLTN')
        self.assertEquals(metaphone('wackildene'), 'WKLTN')
        self.assertEquals(metaphone('wackilden'), 'WKLTN')
        self.assertEquals(metaphone('waghornee'), 'WFRN')
        self.assertEquals(metaphone('waghorne'), 'WFRN')
        self.assertEquals(metaphone('wallace'), 'WLS')
        self.assertEquals(metaphone('wallin'), 'WLN')
        self.assertEquals(metaphone('walquest'), 'WLKST')
        self.assertEquals(metaphone('walquist'), 'WLKST')
        self.assertEquals(metaphone('walsh'), 'WLX')
        self.assertEquals(metaphone('warreil'), 'WRL')
        self.assertEquals(metaphone('warrell'), 'WRL')
        self.assertEquals(metaphone('watsan'), 'WTSN')
        self.assertEquals(metaphone('watson'), 'WTSN')
        self.assertEquals(metaphone('welbourn'), 'WLBRN')
        self.assertEquals(metaphone('weldon'), 'WLTN')
        self.assertEquals(metaphone('wellbourn'), 'WLBRN')
        self.assertEquals(metaphone('wells'), 'WLS')
        self.assertEquals(metaphone('welsh'), 'WLX')
        self.assertEquals(metaphone('wheelan'), 'HLN')
        self.assertEquals(metaphone('wheeler'), 'HLR')
        self.assertEquals(metaphone('whelan'), 'HLN')
        self.assertEquals(metaphone('white'), 'HT')
        self.assertEquals(metaphone('whyte'), 'HT')
        self.assertEquals(metaphone('wilden'), 'WLTN')
        self.assertEquals(metaphone('wildey'), 'WLT')
        self.assertEquals(metaphone('wildoy'), 'WLT')
        self.assertEquals(metaphone('willis'), 'WLS')
        self.assertEquals(metaphone('willon'), 'WLN')
        self.assertEquals(metaphone('willson'), 'WLSN')
        self.assertEquals(metaphone('wills'), 'WLS')
        self.assertEquals(metaphone('wilson'), 'WLSN')
        self.assertEquals(metaphone('wilton'), 'WLTN')
        self.assertEquals(metaphone('winders'), 'WNTRS')
        self.assertEquals(metaphone('windus'), 'WNTS')
        self.assertEquals(metaphone('wine'), 'WN')
        self.assertEquals(metaphone('winn'), 'WN')
        self.assertEquals(metaphone('wooton'), 'WTN')
        self.assertEquals(metaphone('wootten'), 'WTN')
        self.assertEquals(metaphone('wootton'), 'WTN')
        self.assertEquals(metaphone('wraight'), 'RFT')
        self.assertEquals(metaphone('wright'), 'RFT')


class double_metaphone_test_cases(unittest.TestCase):
    """These test cases are copied from two sources:
    https://github.com/oubiwann/metaphone/blob/master/metaphone/tests/test_metaphone.py
    and
    http://swoodbridge.com/DoubleMetaPhone/surnames.txt

    All tests other than test_surnames and test_surnames4 come from
    the former and are under the following license:

        Copyright (c) 2007 Andrew Collins, Chris Leong
        Copyright (c) 2009 Matthew Somerville
        Copyright (c) 2010 Maximillian Dornseif, Richard Barran
        Copyright (c) 2012 Duncan McGreggor
        All rights reserved.

         * Redistribution and use in source and binary forms, with or without
            modification, are permitted provided that the following conditions
            are met:

         * Redistributions of source code must retain the above copyright
             notice, this list of conditions and the following disclaimer.

         * Redistributions in binary form must reproduce the above copyright
            notice, this list of conditions and the following disclaimer in
            the documentation and/or other materials provided with the
            distribution.

        Neither the name "Metaphone" nor the names of its contributors may be
        used to endorse or promote products derived from this software without
        specific prior written permission.

        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
        "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
        LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
        A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
        HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
        LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
        DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
        THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
        (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

    test_surname and test_surname4 come from a set of tests for a PHP port
    of Double Metaphone that is Copyright 2001, Stephen Woodbridge and
    identified as 'freely distributable'
    """
    def test_double_metaphone_single_result(self):
        self.assertEquals(double_metaphone(u"aubrey"), ('APR', ''))

    def test_double_metaphone_double_result(self):
        self.assertEquals(double_metaphone(u"richard"), ('RXRT', 'RKRT'))

    def test_double_metaphone_general_word_list(self):
        self.assertEquals(double_metaphone('Jose'), ('HS', ''))
        self.assertEquals(double_metaphone('cambrillo'), ('KMPRL', 'KMPR'))
        self.assertEquals(double_metaphone('otto'), ('AT', ''))
        self.assertEquals(double_metaphone('aubrey'), ('APR', ''))
        self.assertEquals(double_metaphone('maurice'), ('MRS', ''))
        self.assertEquals(double_metaphone('auto'), ('AT', ''))
        self.assertEquals(double_metaphone('maisey'), ('MS', ''))
        self.assertEquals(double_metaphone('catherine'), ('K0RN', 'KTRN'))
        self.assertEquals(double_metaphone('geoff'), ('JF', 'KF'))
        self.assertEquals(double_metaphone('Chile'), ('XL', ''))
        self.assertEquals(double_metaphone('katherine'), ('K0RN', 'KTRN'))
        self.assertEquals(double_metaphone('steven'), ('STFN', ''))
        self.assertEquals(double_metaphone('zhang'), ('JNK', ''))
        self.assertEquals(double_metaphone('bob'), ('PP', ''))
        self.assertEquals(double_metaphone('ray'), ('R', ''))
        self.assertEquals(double_metaphone('Tux'), ('TKS', ''))
        self.assertEquals(double_metaphone('bryan'), ('PRN', ''))
        self.assertEquals(double_metaphone('bryce'), ('PRS', ''))
        self.assertEquals(double_metaphone('Rapelje'), ('RPL', ''))
        self.assertEquals(double_metaphone('richard'), ('RXRT', 'RKRT'))
        self.assertEquals(double_metaphone('solilijs'), ('SLLS', ''))
        self.assertEquals(double_metaphone('Dallas'), ('TLS', ''))
        self.assertEquals(double_metaphone('Schwein'), ('XN', 'XFN'))
        self.assertEquals(double_metaphone('dave'), ('TF', ''))
        self.assertEquals(double_metaphone('eric'), ('ARK', ''))
        self.assertEquals(double_metaphone('Parachute'), ('PRKT', ''))
        self.assertEquals(double_metaphone('brian'), ('PRN', ''))
        self.assertEquals(double_metaphone('randy'), ('RNT', ''))
        self.assertEquals(double_metaphone('Through'), ('0R', 'TR'))
        self.assertEquals(double_metaphone('Nowhere'), ('NR', ''))
        self.assertEquals(double_metaphone('heidi'), ('HT', ''))
        self.assertEquals(double_metaphone('Arnow'), ('ARN', 'ARNF'))
        self.assertEquals(double_metaphone('Thumbail'), ('0MPL', 'TMPL'))

    def test_double_metaphone_homophones(self):
        self.assertEqual(double_metaphone(u"tolled"), double_metaphone(u"told"))
        self.assertEqual(double_metaphone(u"katherine"), double_metaphone(u"catherine"))
        self.assertEqual(double_metaphone(u"brian"), double_metaphone(u"bryan"))

    def test_double_metaphone_similar_names(self):
        self.assertEquals(double_metaphone("Bartoš"), ('PRT', ''))
        self.assertEquals(double_metaphone(u"Bartosz"), ('PRTS', 'PRTX'))
        self.assertEquals(double_metaphone(u"Bartosch"), ('PRTX', ''))
        self.assertEquals(double_metaphone(u"Bartos"), ('PRTS', ''))
        self.assertEquals(list(set(double_metaphone(u"Jablonski")).intersection(double_metaphone(u"Yablonsky"))), ['APLNSK'])
        self.assertEquals(list(set(double_metaphone(u"Smith")).intersection(double_metaphone(u"Schmidt"))), ['XMT'])

    def test_double_metaphone_non_english_unicode(self):
        self.assertEquals(double_metaphone("andestādītu"), ('ANTSTTT', ''))

    def test_double_metaphone_c_cedilla(self):
        self.assertEquals(double_metaphone("français"), ('FRNS', 'FRNSS'))
        self.assertEquals(double_metaphone("garçon"), ('KRSN', ''))
        self.assertEquals(double_metaphone("leçon"), ('LSN', ''))

    def test_double_metaphone_german(self):
        self.assertEquals(double_metaphone("ach"), ("AK", ""))
        self.assertEquals(double_metaphone("bacher"), ("PKR", ""))
        self.assertEquals(double_metaphone("macher"), ("MKR", ""))

    def test_double_metaphone_italian(self):
        self.assertEquals(double_metaphone("bacci"), ("PX", ""))
        self.assertEquals(double_metaphone("bertucci"), ("PRTX", ""))
        self.assertEquals(double_metaphone("bellocchio"), ("PLX", ""))
        self.assertEquals(double_metaphone("bacchus"), ("PKS", ""))
        self.assertEquals(double_metaphone("focaccia"), ("FKX", ""))
        self.assertEquals(double_metaphone("chianti"), ("KNT", ""))
        self.assertEquals(double_metaphone("tagliaro"), ("TKLR", "TLR"))
        self.assertEquals(double_metaphone("biaggi"), ("PJ", "PK"))

    def test_double_metaphone_spanish(self):
        self.assertEquals(double_metaphone("bajador"), ("PJTR", "PHTR"))
        self.assertEquals(double_metaphone("cabrillo"), ("KPRL", "KPR"))
        self.assertEquals(double_metaphone("gallegos"), ("KLKS", "KKS"))
        self.assertEquals(double_metaphone("San Jacinto"), ("SNHSNT", ""))

    def test_double_metaphone_french(self):
        self.assertEquals(double_metaphone("rogier"), ("RJ", "RJR"))
        self.assertEquals(double_metaphone("breaux"), ("PR", ""))

    def test_double_metaphone_slavic(self):
        self.assertEquals(double_metaphone("Wewski"), ("ASK", "FFSK"))

    def test_double_metaphone_chinese(self):
        self.assertEquals(double_metaphone("zhao"), ("J", ""))

    def test_double_metaphone_dutch_origin(self):
        self.assertEquals(double_metaphone("school"), ("SKL", ""))
        self.assertEquals(double_metaphone("schooner"), ("SKNR", ""))
        self.assertEquals(double_metaphone("schermerhorn"), ("XRMRRN", "SKRMRRN"))
        self.assertEquals(double_metaphone("schenker"), ("XNKR", "SKNKR"))

    def test_double_metaphone_ch_words(self):
        self.assertEquals(double_metaphone("Charac"), ("KRK", ""))
        self.assertEquals(double_metaphone("Charis"), ("KRS", ""))
        self.assertEquals(double_metaphone("chord"), ("KRT", ""))
        self.assertEquals(double_metaphone("Chym"), ("KM", ""))
        self.assertEquals(double_metaphone("Chia"), ("K", ""))
        self.assertEquals(double_metaphone("chem"), ("KM", ""))
        self.assertEquals(double_metaphone("chore"), ("XR", ""))
        self.assertEquals(double_metaphone("orchestra"), ("ARKSTR", ""))
        self.assertEquals(double_metaphone("architect"), ("ARKTKT", ""))
        self.assertEquals(double_metaphone("orchid"), ("ARKT", ""))

    def test_double_metaphone_cc_words(self):
        self.assertEquals(double_metaphone("accident"), ("AKSTNT", ""))
        self.assertEquals(double_metaphone("accede"), ("AKST", ""))
        self.assertEquals(double_metaphone("succeed"), ("SKST", ""))

    def test_double_metaphone_mc_words(self):
        self.assertEquals(double_metaphone("mac caffrey"), ("MKFR", ""))
        self.assertEquals(double_metaphone("mac gregor"), ("MKRKR", ""))
        self.assertEquals(double_metaphone("mc crae"), ("MKR", ""))
        self.assertEquals(double_metaphone("mcclain"), ("MKLN", ""))

    def test_double_metaphone_gh_words(self):
        self.assertEquals(double_metaphone("laugh"), ("LF", ""))
        self.assertEquals(double_metaphone("cough"), ("KF", ""))
        self.assertEquals(double_metaphone("rough"), ("RF", ""))

    def test_double_metaphone_g3_words(self):
        self.assertEquals(double_metaphone("gya"), ("K", "J"))
        self.assertEquals(double_metaphone("ges"), ("KS", "JS"))
        self.assertEquals(double_metaphone("gep"), ("KP", "JP"))
        self.assertEquals(double_metaphone("geb"), ("KP", "JP"))
        self.assertEquals(double_metaphone("gel"), ("KL", "JL"))
        self.assertEquals(double_metaphone("gey"), ("K", "J"))
        self.assertEquals(double_metaphone("gib"), ("KP", "JP"))
        self.assertEquals(double_metaphone("gil"), ("KL", "JL"))
        self.assertEquals(double_metaphone("gin"), ("KN", "JN"))
        self.assertEquals(double_metaphone("gie"), ("K", "J"))
        self.assertEquals(double_metaphone("gei"), ("K", "J"))
        self.assertEquals(double_metaphone("ger"), ("KR", "JR"))
        self.assertEquals(double_metaphone("danger"), ("TNJR", "TNKR"))
        self.assertEquals(double_metaphone("manager"), ("MNKR", "MNJR"))
        self.assertEquals(double_metaphone("dowager"), ("TKR", "TJR"))

    def test_double_metaphone_pb_words(self):
        self.assertEquals(double_metaphone("Campbell"), ("KMPL", ""))
        self.assertEquals(double_metaphone("raspberry"), ("RSPR", ""))

    def test_double_metaphone_th_words(self):
        self.assertEquals(double_metaphone("Thomas"), ("TMS", ""))
        self.assertEquals(double_metaphone("Thames"), ("TMS", ""))

    def test_double_metaphone_surnames(self):
        self.assertEquals(double_metaphone(''), ('', ''))
        self.assertEquals(double_metaphone('ALLERTON'), ('ALRTN', ''))
        self.assertEquals(double_metaphone('Acton'), ('AKTN', ''))
        self.assertEquals(double_metaphone('Adams'), ('ATMS', ''))
        self.assertEquals(double_metaphone('Aggar'), ('AKR', ''))
        self.assertEquals(double_metaphone('Ahl'), ('AL', ''))
        self.assertEquals(double_metaphone('Aiken'), ('AKN', ''))
        self.assertEquals(double_metaphone('Alan'), ('ALN', ''))
        self.assertEquals(double_metaphone('Alcock'), ('ALKK', ''))
        self.assertEquals(double_metaphone('Alden'), ('ALTN', ''))
        self.assertEquals(double_metaphone('Aldham'), ('ALTM', ''))
        self.assertEquals(double_metaphone('Allen'), ('ALN', ''))
        self.assertEquals(double_metaphone('Allerton'), ('ALRTN', ''))
        self.assertEquals(double_metaphone('Alsop'), ('ALSP', ''))
        self.assertEquals(double_metaphone('Alwein'), ('ALN', ''))
        self.assertEquals(double_metaphone('Ambler'), ('AMPLR', ''))
        self.assertEquals(double_metaphone('Andevill'), ('ANTFL', ''))
        self.assertEquals(double_metaphone('Andrews'), ('ANTRS', ''))
        self.assertEquals(double_metaphone('Andreyco'), ('ANTRK', ''))
        self.assertEquals(double_metaphone('Andriesse'), ('ANTRS', ''))
        self.assertEquals(double_metaphone('Angier'), ('ANJ', 'ANJR'))
        self.assertEquals(double_metaphone('Annabel'), ('ANPL', ''))
        self.assertEquals(double_metaphone('Anne'), ('AN', ''))
        self.assertEquals(double_metaphone('Anstye'), ('ANST', ''))
        self.assertEquals(double_metaphone('Appling'), ('APLNK', ''))
        self.assertEquals(double_metaphone('Apuke'), ('APK', ''))
        self.assertEquals(double_metaphone('Arnold'), ('ARNLT', ''))
        self.assertEquals(double_metaphone('Ashby'), ('AXP', ''))
        self.assertEquals(double_metaphone('Astwood'), ('ASTT', ''))
        self.assertEquals(double_metaphone('Atkinson'), ('ATKNSN', ''))
        self.assertEquals(double_metaphone('Audley'), ('ATL', ''))
        self.assertEquals(double_metaphone('Austin'), ('ASTN', ''))
        self.assertEquals(double_metaphone('Avenal'), ('AFNL', ''))
        self.assertEquals(double_metaphone('Ayer'), ('AR', ''))
        self.assertEquals(double_metaphone('Ayot'), ('AT', ''))
        self.assertEquals(double_metaphone('Babbitt'), ('PPT', ''))
        self.assertEquals(double_metaphone('Bachelor'), ('PXLR', 'PKLR'))
        self.assertEquals(double_metaphone('Bachelour'), ('PXLR', 'PKLR'))
        self.assertEquals(double_metaphone('Bailey'), ('PL', ''))
        self.assertEquals(double_metaphone('Baivel'), ('PFL', ''))
        self.assertEquals(double_metaphone('Baker'), ('PKR', ''))
        self.assertEquals(double_metaphone('Baldwin'), ('PLTN', ''))
        self.assertEquals(double_metaphone('Balsley'), ('PLSL', ''))
        self.assertEquals(double_metaphone('Barber'), ('PRPR', ''))
        self.assertEquals(double_metaphone('Barker'), ('PRKR', ''))
        self.assertEquals(double_metaphone('Barlow'), ('PRL', 'PRLF'))
        self.assertEquals(double_metaphone('Barnard'), ('PRNRT', ''))
        self.assertEquals(double_metaphone('Barnes'), ('PRNS', ''))
        self.assertEquals(double_metaphone('Barnsley'), ('PRNSL', ''))
        self.assertEquals(double_metaphone('Barouxis'), ('PRKSS', ''))
        self.assertEquals(double_metaphone('Bartlet'), ('PRTLT', ''))
        self.assertEquals(double_metaphone('Basley'), ('PSL', ''))
        self.assertEquals(double_metaphone('Basset'), ('PST', ''))
        self.assertEquals(double_metaphone('Bassett'), ('PST', ''))
        self.assertEquals(double_metaphone('Batchlor'), ('PXLR', ''))
        self.assertEquals(double_metaphone('Bates'), ('PTS', ''))
        self.assertEquals(double_metaphone('Batson'), ('PTSN', ''))
        self.assertEquals(double_metaphone('Bayes'), ('PS', ''))
        self.assertEquals(double_metaphone('Bayley'), ('PL', ''))
        self.assertEquals(double_metaphone('Beale'), ('PL', ''))
        self.assertEquals(double_metaphone('Beauchamp'), ('PXMP', 'PKMP'))
        self.assertEquals(double_metaphone('Beauclerc'), ('PKLRK', ''))
        self.assertEquals(double_metaphone('Beech'), ('PK', ''))
        self.assertEquals(double_metaphone('Beers'), ('PRS', ''))
        self.assertEquals(double_metaphone('Beke'), ('PK', ''))
        self.assertEquals(double_metaphone('Belcher'), ('PLXR', 'PLKR'))
        self.assertEquals(double_metaphone('Benjamin'), ('PNJMN', ''))
        self.assertEquals(double_metaphone('Benningham'), ('PNNKM', ''))
        self.assertEquals(double_metaphone('Bereford'), ('PRFRT', ''))
        self.assertEquals(double_metaphone('Bergen'), ('PRJN', 'PRKN'))
        self.assertEquals(double_metaphone('Berkeley'), ('PRKL', ''))
        self.assertEquals(double_metaphone('Berry'), ('PR', ''))
        self.assertEquals(double_metaphone('Besse'), ('PS', ''))
        self.assertEquals(double_metaphone('Bessey'), ('PS', ''))
        self.assertEquals(double_metaphone('Bessiles'), ('PSLS', ''))
        self.assertEquals(double_metaphone('Bigelow'), ('PJL', 'PKLF'))
        self.assertEquals(double_metaphone('Bigg'), ('PK', ''))
        self.assertEquals(double_metaphone('Bigod'), ('PKT', ''))
        self.assertEquals(double_metaphone('Billings'), ('PLNKS', ''))
        self.assertEquals(double_metaphone('Bimper'), ('PMPR', ''))
        self.assertEquals(double_metaphone('Binker'), ('PNKR', ''))
        self.assertEquals(double_metaphone('Birdsill'), ('PRTSL', ''))
        self.assertEquals(double_metaphone('Bishop'), ('PXP', ''))
        self.assertEquals(double_metaphone('Black'), ('PLK', ''))
        self.assertEquals(double_metaphone('Blagge'), ('PLK', ''))
        self.assertEquals(double_metaphone('Blake'), ('PLK', ''))
        self.assertEquals(double_metaphone('Blanck'), ('PLNK', ''))
        self.assertEquals(double_metaphone('Bledsoe'), ('PLTS', ''))
        self.assertEquals(double_metaphone('Blennerhasset'), ('PLNRST', ''))
        self.assertEquals(double_metaphone('Blessing'), ('PLSNK', ''))
        self.assertEquals(double_metaphone('Blewett'), ('PLT', ''))
        self.assertEquals(double_metaphone('Bloctgoed'), ('PLKTKT', ''))
        self.assertEquals(double_metaphone('Bloetgoet'), ('PLTKT', ''))
        self.assertEquals(double_metaphone('Bloodgood'), ('PLTKT', ''))
        self.assertEquals(double_metaphone('Blossom'), ('PLSM', ''))
        self.assertEquals(double_metaphone('Blount'), ('PLNT', ''))
        self.assertEquals(double_metaphone('Bodine'), ('PTN', ''))
        self.assertEquals(double_metaphone('Bodman'), ('PTMN', ''))
        self.assertEquals(double_metaphone('BonCoeur'), ('PNKR', ''))
        self.assertEquals(double_metaphone('Bond'), ('PNT', ''))
        self.assertEquals(double_metaphone('Boscawen'), ('PSKN', ''))
        self.assertEquals(double_metaphone('Bosworth'), ('PSR0', 'PSRT'))
        self.assertEquals(double_metaphone('Bouchier'), ('PX', 'PKR'))
        self.assertEquals(double_metaphone('Bowne'), ('PN', ''))
        self.assertEquals(double_metaphone('Bradbury'), ('PRTPR', ''))
        self.assertEquals(double_metaphone('Bradder'), ('PRTR', ''))
        self.assertEquals(double_metaphone('Bradford'), ('PRTFRT', ''))
        self.assertEquals(double_metaphone('Bradstreet'), ('PRTSTRT', ''))
        self.assertEquals(double_metaphone('Braham'), ('PRHM', ''))
        self.assertEquals(double_metaphone('Brailsford'), ('PRLSFRT', ''))
        self.assertEquals(double_metaphone('Brainard'), ('PRNRT', ''))
        self.assertEquals(double_metaphone('Brandish'), ('PRNTX', ''))
        self.assertEquals(double_metaphone('Braun'), ('PRN', ''))
        self.assertEquals(double_metaphone('Brecc'), ('PRK', ''))
        self.assertEquals(double_metaphone('Brent'), ('PRNT', ''))
        self.assertEquals(double_metaphone('Brenton'), ('PRNTN', ''))
        self.assertEquals(double_metaphone('Briggs'), ('PRKS', ''))
        self.assertEquals(double_metaphone('Brigham'), ('PRM', ''))
        self.assertEquals(double_metaphone('Brobst'), ('PRPST', ''))
        self.assertEquals(double_metaphone('Brome'), ('PRM', ''))
        self.assertEquals(double_metaphone('Bronson'), ('PRNSN', ''))
        self.assertEquals(double_metaphone('Brooks'), ('PRKS', ''))
        self.assertEquals(double_metaphone('Brouillard'), ('PRLRT', ''))
        self.assertEquals(double_metaphone('Brown'), ('PRN', ''))
        self.assertEquals(double_metaphone('Browne'), ('PRN', ''))
        self.assertEquals(double_metaphone('Brownell'), ('PRNL', ''))
        self.assertEquals(double_metaphone('Bruley'), ('PRL', ''))
        self.assertEquals(double_metaphone('Bryant'), ('PRNT', ''))
        self.assertEquals(double_metaphone('Brzozowski'), ('PRSSSK', 'PRTSTSFSK'))
        self.assertEquals(double_metaphone('Buide'), ('PT', ''))
        self.assertEquals(double_metaphone('Bulmer'), ('PLMR', ''))
        self.assertEquals(double_metaphone('Bunker'), ('PNKR', ''))
        self.assertEquals(double_metaphone('Burden'), ('PRTN', ''))
        self.assertEquals(double_metaphone('Burge'), ('PRJ', 'PRK'))
        self.assertEquals(double_metaphone('Burgoyne'), ('PRKN', ''))
        self.assertEquals(double_metaphone('Burke'), ('PRK', ''))
        self.assertEquals(double_metaphone('Burnett'), ('PRNT', ''))
        self.assertEquals(double_metaphone('Burpee'), ('PRP', ''))
        self.assertEquals(double_metaphone('Bursley'), ('PRSL', ''))
        self.assertEquals(double_metaphone('Burton'), ('PRTN', ''))
        self.assertEquals(double_metaphone('Bushnell'), ('PXNL', ''))
        self.assertEquals(double_metaphone('Buss'), ('PS', ''))
        self.assertEquals(double_metaphone('Buswell'), ('PSL', ''))
        self.assertEquals(double_metaphone('Butler'), ('PTLR', ''))
        self.assertEquals(double_metaphone('Calkin'), ('KLKN', ''))
        self.assertEquals(double_metaphone('Canada'), ('KNT', ''))
        self.assertEquals(double_metaphone('Canmore'), ('KNMR', ''))
        self.assertEquals(double_metaphone('Canney'), ('KN', ''))
        self.assertEquals(double_metaphone('Capet'), ('KPT', ''))
        self.assertEquals(double_metaphone('Card'), ('KRT', ''))
        self.assertEquals(double_metaphone('Carman'), ('KRMN', ''))
        self.assertEquals(double_metaphone('Carpenter'), ('KRPNTR', ''))
        self.assertEquals(double_metaphone('Cartwright'), ('KRTRT', ''))
        self.assertEquals(double_metaphone('Casey'), ('KS', ''))
        self.assertEquals(double_metaphone('Catterfield'), ('KTRFLT', ''))
        self.assertEquals(double_metaphone('Ceeley'), ('SL', ''))
        self.assertEquals(double_metaphone('Chambers'), ('XMPRS', ''))
        self.assertEquals(double_metaphone('Champion'), ('XMPN', ''))
        self.assertEquals(double_metaphone('Chapman'), ('XPMN', ''))
        self.assertEquals(double_metaphone('Chase'), ('XS', ''))
        self.assertEquals(double_metaphone('Cheney'), ('XN', ''))
        self.assertEquals(double_metaphone('Chetwynd'), ('XTNT', ''))
        self.assertEquals(double_metaphone('Chevalier'), ('XFL', 'XFLR'))
        self.assertEquals(double_metaphone('Chillingsworth'), ('XLNKSR0', 'XLNKSRT'))
        self.assertEquals(double_metaphone('Christie'), ('KRST', ''))
        self.assertEquals(double_metaphone('Chubbuck'), ('XPK', ''))
        self.assertEquals(double_metaphone('Church'), ('XRX', 'XRK'))
        self.assertEquals(double_metaphone('Clark'), ('KLRK', ''))
        self.assertEquals(double_metaphone('Clarke'), ('KLRK', ''))
        self.assertEquals(double_metaphone('Cleare'), ('KLR', ''))
        self.assertEquals(double_metaphone('Clement'), ('KLMNT', ''))
        self.assertEquals(double_metaphone('Clerke'), ('KLRK', ''))
        self.assertEquals(double_metaphone('Clibben'), ('KLPN', ''))
        self.assertEquals(double_metaphone('Clifford'), ('KLFRT', ''))
        self.assertEquals(double_metaphone('Clivedon'), ('KLFTN', ''))
        self.assertEquals(double_metaphone('Close'), ('KLS', ''))
        self.assertEquals(double_metaphone('Clothilde'), ('KL0LT', 'KLTLT'))
        self.assertEquals(double_metaphone('Cobb'), ('KP', ''))
        self.assertEquals(double_metaphone('Coburn'), ('KPRN', ''))
        self.assertEquals(double_metaphone('Coburne'), ('KPRN', ''))
        self.assertEquals(double_metaphone('Cocke'), ('KK', ''))
        self.assertEquals(double_metaphone('Coffin'), ('KFN', ''))
        self.assertEquals(double_metaphone('Coffyn'), ('KFN', ''))
        self.assertEquals(double_metaphone('Colborne'), ('KLPRN', ''))
        self.assertEquals(double_metaphone('Colby'), ('KLP', ''))
        self.assertEquals(double_metaphone('Cole'), ('KL', ''))
        self.assertEquals(double_metaphone('Coleman'), ('KLMN', ''))
        self.assertEquals(double_metaphone('Collier'), ('KL', 'KLR'))
        self.assertEquals(double_metaphone('Compton'), ('KMPTN', ''))
        self.assertEquals(double_metaphone('Cone'), ('KN', ''))
        self.assertEquals(double_metaphone('Cook'), ('KK', ''))
        self.assertEquals(double_metaphone('Cooke'), ('KK', ''))
        self.assertEquals(double_metaphone('Cooper'), ('KPR', ''))
        self.assertEquals(double_metaphone('Copperthwaite'), ('KPR0T', 'KPRTT'))
        self.assertEquals(double_metaphone('Corbet'), ('KRPT', ''))
        self.assertEquals(double_metaphone('Corell'), ('KRL', ''))
        self.assertEquals(double_metaphone('Corey'), ('KR', ''))
        self.assertEquals(double_metaphone('Corlies'), ('KRLS', ''))
        self.assertEquals(double_metaphone('Corneliszen'), ('KRNLSN', 'KRNLXN'))
        self.assertEquals(double_metaphone('Cornelius'), ('KRNLS', ''))
        self.assertEquals(double_metaphone('Cornwallis'), ('KRNLS', ''))
        self.assertEquals(double_metaphone('Cosgrove'), ('KSKRF', ''))
        self.assertEquals(double_metaphone('Count of Brionne'), ('KNTFPRN', ''))
        self.assertEquals(double_metaphone('Covill'), ('KFL', ''))
        self.assertEquals(double_metaphone('Cowperthwaite'), ('KPR0T', 'KPRTT'))
        self.assertEquals(double_metaphone('Cowperwaite'), ('KPRT', ''))
        self.assertEquals(double_metaphone('Crane'), ('KRN', ''))
        self.assertEquals(double_metaphone('Creagmile'), ('KRKML', ''))
        self.assertEquals(double_metaphone('Crew'), ('KR', 'KRF'))
        self.assertEquals(double_metaphone('Crispin'), ('KRSPN', ''))
        self.assertEquals(double_metaphone('Crocker'), ('KRKR', ''))
        self.assertEquals(double_metaphone('Crockett'), ('KRKT', ''))
        self.assertEquals(double_metaphone('Crosby'), ('KRSP', ''))
        self.assertEquals(double_metaphone('Crump'), ('KRMP', ''))
        self.assertEquals(double_metaphone('Cunningham'), ('KNNKM', ''))
        self.assertEquals(double_metaphone('Curtis'), ('KRTS', ''))
        self.assertEquals(double_metaphone('Cutha'), ('K0', 'KT'))
        self.assertEquals(double_metaphone('Cutter'), ('KTR', ''))
        self.assertEquals(double_metaphone('D\'Aubigny'), ('TPN', 'TPKN'))
        self.assertEquals(double_metaphone('DAVIS'), ('TFS', ''))
        self.assertEquals(double_metaphone('Dabinott'), ('TPNT', ''))
        self.assertEquals(double_metaphone('Dacre'), ('TKR', ''))
        self.assertEquals(double_metaphone('Daggett'), ('TKT', ''))
        self.assertEquals(double_metaphone('Danvers'), ('TNFRS', ''))
        self.assertEquals(double_metaphone('Darcy'), ('TRS', ''))
        self.assertEquals(double_metaphone('Davis'), ('TFS', ''))
        self.assertEquals(double_metaphone('Dawn'), ('TN', ''))
        self.assertEquals(double_metaphone('Dawson'), ('TSN', ''))
        self.assertEquals(double_metaphone('Day'), ('T', ''))
        self.assertEquals(double_metaphone('Daye'), ('T', ''))
        self.assertEquals(double_metaphone('DeGrenier'), ('TKRN', 'TKRNR'))
        self.assertEquals(double_metaphone('Dean'), ('TN', ''))
        self.assertEquals(double_metaphone('Deekindaugh'), ('TKNT', ''))
        self.assertEquals(double_metaphone('Dennis'), ('TNS', ''))
        self.assertEquals(double_metaphone('Denny'), ('TN', ''))
        self.assertEquals(double_metaphone('Denton'), ('TNTN', ''))
        self.assertEquals(double_metaphone('Desborough'), ('TSPRF', ''))
        self.assertEquals(double_metaphone('Despenser'), ('TSPNSR', ''))
        self.assertEquals(double_metaphone('Deverill'), ('TFRL', ''))
        self.assertEquals(double_metaphone('Devine'), ('TFN', ''))
        self.assertEquals(double_metaphone('Dexter'), ('TKSTR', ''))
        self.assertEquals(double_metaphone('Dillaway'), ('TL', ''))
        self.assertEquals(double_metaphone('Dimmick'), ('TMK', ''))
        self.assertEquals(double_metaphone('Dinan'), ('TNN', ''))
        self.assertEquals(double_metaphone('Dix'), ('TKS', ''))
        self.assertEquals(double_metaphone('Doggett'), ('TKT', ''))
        self.assertEquals(double_metaphone('Donahue'), ('TNH', ''))
        self.assertEquals(double_metaphone('Dorfman'), ('TRFMN', ''))
        self.assertEquals(double_metaphone('Dorris'), ('TRS', ''))
        self.assertEquals(double_metaphone('Dow'), ('T', 'TF'))
        self.assertEquals(double_metaphone('Downey'), ('TN', ''))
        self.assertEquals(double_metaphone('Downing'), ('TNNK', ''))
        self.assertEquals(double_metaphone('Dowsett'), ('TST', ''))
        self.assertEquals(double_metaphone('Duck?'), ('TK', ''))
        self.assertEquals(double_metaphone('Dudley'), ('TTL', ''))
        self.assertEquals(double_metaphone('Duffy'), ('TF', ''))
        self.assertEquals(double_metaphone('Dunn'), ('TN', ''))
        self.assertEquals(double_metaphone('Dunsterville'), ('TNSTRFL', ''))
        self.assertEquals(double_metaphone('Durrant'), ('TRNT', ''))
        self.assertEquals(double_metaphone('Durrin'), ('TRN', ''))
        self.assertEquals(double_metaphone('Dustin'), ('TSTN', ''))
        self.assertEquals(double_metaphone('Duston'), ('TSTN', ''))
        self.assertEquals(double_metaphone('Eames'), ('AMS', ''))
        self.assertEquals(double_metaphone('Early'), ('ARL', ''))
        self.assertEquals(double_metaphone('Easty'), ('AST', ''))
        self.assertEquals(double_metaphone('Ebbett'), ('APT', ''))
        self.assertEquals(double_metaphone('Eberbach'), ('APRPK', ''))
        self.assertEquals(double_metaphone('Eberhard'), ('APRRT', ''))
        self.assertEquals(double_metaphone('Eddy'), ('AT', ''))
        self.assertEquals(double_metaphone('Edenden'), ('ATNTN', ''))
        self.assertEquals(double_metaphone('Edwards'), ('ATRTS', ''))
        self.assertEquals(double_metaphone('Eglinton'), ('AKLNTN', 'ALNTN'))
        self.assertEquals(double_metaphone('Eliot'), ('ALT', ''))
        self.assertEquals(double_metaphone('Elizabeth'), ('ALSP0', 'ALSPT'))
        self.assertEquals(double_metaphone('Ellis'), ('ALS', ''))
        self.assertEquals(double_metaphone('Ellison'), ('ALSN', ''))
        self.assertEquals(double_metaphone('Ellot'), ('ALT', ''))
        self.assertEquals(double_metaphone('Elny'), ('ALN', ''))
        self.assertEquals(double_metaphone('Elsner'), ('ALSNR', ''))
        self.assertEquals(double_metaphone('Emerson'), ('AMRSN', ''))
        self.assertEquals(double_metaphone('Empson'), ('AMPSN', ''))
        self.assertEquals(double_metaphone('Est'), ('AST', ''))
        self.assertEquals(double_metaphone('Estabrook'), ('ASTPRK', ''))
        self.assertEquals(double_metaphone('Estes'), ('ASTS', ''))
        self.assertEquals(double_metaphone('Estey'), ('AST', ''))
        self.assertEquals(double_metaphone('Evans'), ('AFNS', ''))
        self.assertEquals(double_metaphone('Fallowell'), ('FLL', ''))
        self.assertEquals(double_metaphone('Farnsworth'), ('FRNSR0', 'FRNSRT'))
        self.assertEquals(double_metaphone('Feake'), ('FK', ''))
        self.assertEquals(double_metaphone('Feke'), ('FK', ''))
        self.assertEquals(double_metaphone('Fellows'), ('FLS', ''))
        self.assertEquals(double_metaphone('Fettiplace'), ('FTPLS', ''))
        self.assertEquals(double_metaphone('Finney'), ('FN', ''))
        self.assertEquals(double_metaphone('Fischer'), ('FXR', 'FSKR'))
        self.assertEquals(double_metaphone('Fisher'), ('FXR', ''))
        self.assertEquals(double_metaphone('Fisk'), ('FSK', ''))
        self.assertEquals(double_metaphone('Fiske'), ('FSK', ''))
        self.assertEquals(double_metaphone('Fletcher'), ('FLXR', ''))
        self.assertEquals(double_metaphone('Folger'), ('FLKR', 'FLJR'))
        self.assertEquals(double_metaphone('Foliot'), ('FLT', ''))
        self.assertEquals(double_metaphone('Folyot'), ('FLT', ''))
        self.assertEquals(double_metaphone('Fones'), ('FNS', ''))
        self.assertEquals(double_metaphone('Fordham'), ('FRTM', ''))
        self.assertEquals(double_metaphone('Forstner'), ('FRSTNR', ''))
        self.assertEquals(double_metaphone('Fosten'), ('FSTN', ''))
        self.assertEquals(double_metaphone('Foster'), ('FSTR', ''))
        self.assertEquals(double_metaphone('Foulke'), ('FLK', ''))
        self.assertEquals(double_metaphone('Fowler'), ('FLR', ''))
        self.assertEquals(double_metaphone('Foxwell'), ('FKSL', ''))
        self.assertEquals(double_metaphone('Fraley'), ('FRL', ''))
        self.assertEquals(double_metaphone('Franceys'), ('FRNSS', ''))
        self.assertEquals(double_metaphone('Franke'), ('FRNK', ''))
        self.assertEquals(double_metaphone('Frascella'), ('FRSL', ''))
        self.assertEquals(double_metaphone('Frazer'), ('FRSR', ''))
        self.assertEquals(double_metaphone('Fredd'), ('FRT', ''))
        self.assertEquals(double_metaphone('Freeman'), ('FRMN', ''))
        self.assertEquals(double_metaphone('French'), ('FRNX', 'FRNK'))
        self.assertEquals(double_metaphone('Freville'), ('FRFL', ''))
        self.assertEquals(double_metaphone('Frey'), ('FR', ''))
        self.assertEquals(double_metaphone('Frick'), ('FRK', ''))
        self.assertEquals(double_metaphone('Frier'), ('FR', 'FRR'))
        self.assertEquals(double_metaphone('Froe'), ('FR', ''))
        self.assertEquals(double_metaphone('Frorer'), ('FRRR', ''))
        self.assertEquals(double_metaphone('Frost'), ('FRST', ''))
        self.assertEquals(double_metaphone('Frothingham'), ('FR0NKM', 'FRTNKM'))
        self.assertEquals(double_metaphone('Fry'), ('FR', ''))
        self.assertEquals(double_metaphone('Gaffney'), ('KFN', ''))
        self.assertEquals(double_metaphone('Gage'), ('KJ', 'KK'))
        self.assertEquals(double_metaphone('Gallion'), ('KLN', ''))
        self.assertEquals(double_metaphone('Gallishan'), ('KLXN', ''))
        self.assertEquals(double_metaphone('Gamble'), ('KMPL', ''))
        self.assertEquals(double_metaphone('Garbrand'), ('KRPRNT', ''))
        self.assertEquals(double_metaphone('Gardner'), ('KRTNR', ''))
        self.assertEquals(double_metaphone('Garrett'), ('KRT', ''))
        self.assertEquals(double_metaphone('Gassner'), ('KSNR', ''))
        self.assertEquals(double_metaphone('Gater'), ('KTR', ''))
        self.assertEquals(double_metaphone('Gaunt'), ('KNT', ''))
        self.assertEquals(double_metaphone('Gayer'), ('KR', ''))
        self.assertEquals(double_metaphone('Gerken'), ('KRKN', 'JRKN'))
        self.assertEquals(double_metaphone('Gerritsen'), ('KRTSN', 'JRTSN'))
        self.assertEquals(double_metaphone('Gibbs'), ('KPS', 'JPS'))
        self.assertEquals(double_metaphone('Giffard'), ('JFRT', 'KFRT'))
        self.assertEquals(double_metaphone('Gilbert'), ('KLPRT', 'JLPRT'))
        self.assertEquals(double_metaphone('Gill'), ('KL', 'JL'))
        self.assertEquals(double_metaphone('Gilman'), ('KLMN', 'JLMN'))
        self.assertEquals(double_metaphone('Glass'), ('KLS', ''))
        self.assertEquals(double_metaphone('GoddardGifford'), ('KTRJFRT', ''))
        self.assertEquals(double_metaphone('Godfrey'), ('KTFR', ''))
        self.assertEquals(double_metaphone('Godwin'), ('KTN', ''))
        self.assertEquals(double_metaphone('Goodale'), ('KTL', ''))
        self.assertEquals(double_metaphone('Goodnow'), ('KTN', 'KTNF'))
        self.assertEquals(double_metaphone('Gorham'), ('KRM', ''))
        self.assertEquals(double_metaphone('Goseline'), ('KSLN', ''))
        self.assertEquals(double_metaphone('Gott'), ('KT', ''))
        self.assertEquals(double_metaphone('Gould'), ('KLT', ''))
        self.assertEquals(double_metaphone('Grafton'), ('KRFTN', ''))
        self.assertEquals(double_metaphone('Grant'), ('KRNT', ''))
        self.assertEquals(double_metaphone('Gray'), ('KR', ''))
        self.assertEquals(double_metaphone('Green'), ('KRN', ''))
        self.assertEquals(double_metaphone('Griffin'), ('KRFN', ''))
        self.assertEquals(double_metaphone('Grill'), ('KRL', ''))
        self.assertEquals(double_metaphone('Grim'), ('KRM', ''))
        self.assertEquals(double_metaphone('Grisgonelle'), ('KRSKNL', ''))
        self.assertEquals(double_metaphone('Gross'), ('KRS', ''))
        self.assertEquals(double_metaphone('Guba'), ('KP', ''))
        self.assertEquals(double_metaphone('Gybbes'), ('KPS', 'JPS'))
        self.assertEquals(double_metaphone('Haburne'), ('HPRN', ''))
        self.assertEquals(double_metaphone('Hackburne'), ('HKPRN', ''))
        self.assertEquals(double_metaphone('Haddon?'), ('HTN', ''))
        self.assertEquals(double_metaphone('Haines'), ('HNS', ''))
        self.assertEquals(double_metaphone('Hale'), ('HL', ''))
        self.assertEquals(double_metaphone('Hall'), ('HL', ''))
        self.assertEquals(double_metaphone('Hallet'), ('HLT', ''))
        self.assertEquals(double_metaphone('Hallock'), ('HLK', ''))
        self.assertEquals(double_metaphone('Halstead'), ('HLSTT', ''))
        self.assertEquals(double_metaphone('Hammond'), ('HMNT', ''))
        self.assertEquals(double_metaphone('Hance'), ('HNS', ''))
        self.assertEquals(double_metaphone('Handy'), ('HNT', ''))
        self.assertEquals(double_metaphone('Hanson'), ('HNSN', ''))
        self.assertEquals(double_metaphone('Harasek'), ('HRSK', ''))
        self.assertEquals(double_metaphone('Harcourt'), ('HRKRT', ''))
        self.assertEquals(double_metaphone('Hardy'), ('HRT', ''))
        self.assertEquals(double_metaphone('Harlock'), ('HRLK', ''))
        self.assertEquals(double_metaphone('Harris'), ('HRS', ''))
        self.assertEquals(double_metaphone('Hartley'), ('HRTL', ''))
        self.assertEquals(double_metaphone('Harvey'), ('HRF', ''))
        self.assertEquals(double_metaphone('Harvie'), ('HRF', ''))
        self.assertEquals(double_metaphone('Harwood'), ('HRT', ''))
        self.assertEquals(double_metaphone('Hathaway'), ('H0', 'HT'))
        self.assertEquals(double_metaphone('Haukeness'), ('HKNS', ''))
        self.assertEquals(double_metaphone('Hawkes'), ('HKS', ''))
        self.assertEquals(double_metaphone('Hawkhurst'), ('HKRST', ''))
        self.assertEquals(double_metaphone('Hawkins'), ('HKNS', ''))
        self.assertEquals(double_metaphone('Hawley'), ('HL', ''))
        self.assertEquals(double_metaphone('Heald'), ('HLT', ''))
        self.assertEquals(double_metaphone('Helsdon'), ('HLSTN', ''))
        self.assertEquals(double_metaphone('Hemenway'), ('HMN', ''))
        self.assertEquals(double_metaphone('Hemmenway'), ('HMN', ''))
        self.assertEquals(double_metaphone('Henck'), ('HNK', ''))
        self.assertEquals(double_metaphone('Henderson'), ('HNTRSN', ''))
        self.assertEquals(double_metaphone('Hendricks'), ('HNTRKS', ''))
        self.assertEquals(double_metaphone('Hersey'), ('HRS', ''))
        self.assertEquals(double_metaphone('Hewes'), ('HS', ''))
        self.assertEquals(double_metaphone('Heyman'), ('HMN', ''))
        self.assertEquals(double_metaphone('Hicks'), ('HKS', ''))
        self.assertEquals(double_metaphone('Hidden'), ('HTN', ''))
        self.assertEquals(double_metaphone('Higgs'), ('HKS', ''))
        self.assertEquals(double_metaphone('Hill'), ('HL', ''))
        self.assertEquals(double_metaphone('Hills'), ('HLS', ''))
        self.assertEquals(double_metaphone('Hinckley'), ('HNKL', ''))
        self.assertEquals(double_metaphone('Hipwell'), ('HPL', ''))
        self.assertEquals(double_metaphone('Hobart'), ('HPRT', ''))
        self.assertEquals(double_metaphone('Hoben'), ('HPN', ''))
        self.assertEquals(double_metaphone('Hoffmann'), ('HFMN', ''))
        self.assertEquals(double_metaphone('Hogan'), ('HKN', ''))
        self.assertEquals(double_metaphone('Holmes'), ('HLMS', ''))
        self.assertEquals(double_metaphone('Hoo'), ('H', ''))
        self.assertEquals(double_metaphone('Hooker'), ('HKR', ''))
        self.assertEquals(double_metaphone('Hopcott'), ('HPKT', ''))
        self.assertEquals(double_metaphone('Hopkins'), ('HPKNS', ''))
        self.assertEquals(double_metaphone('Hopkinson'), ('HPKNSN', ''))
        self.assertEquals(double_metaphone('Hornsey'), ('HRNS', ''))
        self.assertEquals(double_metaphone('Houckgeest'), ('HKJST', 'HKKST'))
        self.assertEquals(double_metaphone('Hough'), ('H', ''))
        self.assertEquals(double_metaphone('Houstin'), ('HSTN', ''))
        self.assertEquals(double_metaphone('How'), ('H', 'HF'))
        self.assertEquals(double_metaphone('Howe'), ('H', ''))
        self.assertEquals(double_metaphone('Howland'), ('HLNT', ''))
        self.assertEquals(double_metaphone('Hubner'), ('HPNR', ''))
        self.assertEquals(double_metaphone('Hudnut'), ('HTNT', ''))
        self.assertEquals(double_metaphone('Hughes'), ('HS', ''))
        self.assertEquals(double_metaphone('Hull'), ('HL', ''))
        self.assertEquals(double_metaphone('Hulme'), ('HLM', ''))
        self.assertEquals(double_metaphone('Hume'), ('HM', ''))
        self.assertEquals(double_metaphone('Hundertumark'), ('HNTRTMRK', ''))
        self.assertEquals(double_metaphone('Hundley'), ('HNTL', ''))
        self.assertEquals(double_metaphone('Hungerford'), ('HNKRFRT', 'HNJRFRT'))
        self.assertEquals(double_metaphone('Hunt'), ('HNT', ''))
        self.assertEquals(double_metaphone('Hurst'), ('HRST', ''))
        self.assertEquals(double_metaphone('Husbands'), ('HSPNTS', ''))
        self.assertEquals(double_metaphone('Hussey'), ('HS', ''))
        self.assertEquals(double_metaphone('Husted'), ('HSTT', ''))
        self.assertEquals(double_metaphone('Hutchins'), ('HXNS', ''))
        self.assertEquals(double_metaphone('Hutchinson'), ('HXNSN', ''))
        self.assertEquals(double_metaphone('Huttinger'), ('HTNKR', 'HTNJR'))
        self.assertEquals(double_metaphone('Huybertsen'), ('HPRTSN', ''))
        self.assertEquals(double_metaphone('Iddenden'), ('ATNTN', ''))
        self.assertEquals(double_metaphone('Ingraham'), ('ANKRHM', ''))
        self.assertEquals(double_metaphone('Ives'), ('AFS', ''))
        self.assertEquals(double_metaphone('Jackson'), ('JKSN', 'AKSN'))
        self.assertEquals(double_metaphone('Jacob'), ('JKP', 'AKP'))
        self.assertEquals(double_metaphone('Jans'), ('JNS', 'ANS'))
        self.assertEquals(double_metaphone('Jenkins'), ('JNKNS', 'ANKNS'))
        self.assertEquals(double_metaphone('Jewett'), ('JT', 'AT'))
        self.assertEquals(double_metaphone('Jewitt'), ('JT', 'AT'))
        self.assertEquals(double_metaphone('Johnson'), ('JNSN', 'ANSN'))
        self.assertEquals(double_metaphone('Jones'), ('JNS', 'ANS'))
        self.assertEquals(double_metaphone('Josephine'), ('JSFN', 'HSFN'))
        self.assertEquals(double_metaphone('Judd'), ('JT', 'AT'))
        self.assertEquals(double_metaphone('June'), ('JN', 'AN'))
        self.assertEquals(double_metaphone('Kamarowska'), ('KMRSK', ''))
        self.assertEquals(double_metaphone('Kay'), ('K', ''))
        self.assertEquals(double_metaphone('Kelley'), ('KL', ''))
        self.assertEquals(double_metaphone('Kelly'), ('KL', ''))
        self.assertEquals(double_metaphone('Keymber'), ('KMPR', ''))
        self.assertEquals(double_metaphone('Keynes'), ('KNS', ''))
        self.assertEquals(double_metaphone('Kilham'), ('KLM', ''))
        self.assertEquals(double_metaphone('Kim'), ('KM', ''))
        self.assertEquals(double_metaphone('Kimball'), ('KMPL', ''))
        self.assertEquals(double_metaphone('King'), ('KNK', ''))
        self.assertEquals(double_metaphone('Kinsey'), ('KNS', ''))
        self.assertEquals(double_metaphone('Kirk'), ('KRK', ''))
        self.assertEquals(double_metaphone('Kirton'), ('KRTN', ''))
        self.assertEquals(double_metaphone('Kistler'), ('KSTLR', ''))
        self.assertEquals(double_metaphone('Kitchen'), ('KXN', ''))
        self.assertEquals(double_metaphone('Kitson'), ('KTSN', ''))
        self.assertEquals(double_metaphone('Klett'), ('KLT', ''))
        self.assertEquals(double_metaphone('Kline'), ('KLN', ''))
        self.assertEquals(double_metaphone('Knapp'), ('NP', ''))
        self.assertEquals(double_metaphone('Knight'), ('NT', ''))
        self.assertEquals(double_metaphone('Knote'), ('NT', ''))
        self.assertEquals(double_metaphone('Knott'), ('NT', ''))
        self.assertEquals(double_metaphone('Knox'), ('NKS', ''))
        self.assertEquals(double_metaphone('Koeller'), ('KLR', ''))
        self.assertEquals(double_metaphone('La Pointe'), ('LPNT', ''))
        self.assertEquals(double_metaphone('LaPlante'), ('LPLNT', ''))
        self.assertEquals(double_metaphone('Laimbeer'), ('LMPR', ''))
        self.assertEquals(double_metaphone('Lamb'), ('LMP', ''))
        self.assertEquals(double_metaphone('Lambertson'), ('LMPRTSN', ''))
        self.assertEquals(double_metaphone('Lancto'), ('LNKT', ''))
        self.assertEquals(double_metaphone('Landry'), ('LNTR', ''))
        self.assertEquals(double_metaphone('Lane'), ('LN', ''))
        self.assertEquals(double_metaphone('Langendyck'), ('LNJNTK', 'LNKNTK'))
        self.assertEquals(double_metaphone('Langer'), ('LNKR', 'LNJR'))
        self.assertEquals(double_metaphone('Langford'), ('LNKFRT', ''))
        self.assertEquals(double_metaphone('Lantersee'), ('LNTRS', ''))
        self.assertEquals(double_metaphone('Laquer'), ('LKR', ''))
        self.assertEquals(double_metaphone('Larkin'), ('LRKN', ''))
        self.assertEquals(double_metaphone('Latham'), ('LTM', ''))
        self.assertEquals(double_metaphone('Lathrop'), ('L0RP', 'LTRP'))
        self.assertEquals(double_metaphone('Lauter'), ('LTR', ''))
        self.assertEquals(double_metaphone('Lawrence'), ('LRNS', ''))
        self.assertEquals(double_metaphone('Leach'), ('LK', ''))
        self.assertEquals(double_metaphone('Leager'), ('LKR', 'LJR'))
        self.assertEquals(double_metaphone('Learned'), ('LRNT', ''))
        self.assertEquals(double_metaphone('Leavitt'), ('LFT', ''))
        self.assertEquals(double_metaphone('Lee'), ('L', ''))
        self.assertEquals(double_metaphone('Leete'), ('LT', ''))
        self.assertEquals(double_metaphone('Leggett'), ('LKT', ''))
        self.assertEquals(double_metaphone('Leland'), ('LLNT', ''))
        self.assertEquals(double_metaphone('Leonard'), ('LNRT', ''))
        self.assertEquals(double_metaphone('Lester'), ('LSTR', ''))
        self.assertEquals(double_metaphone('Lestrange'), ('LSTRNJ', 'LSTRNK'))
        self.assertEquals(double_metaphone('Lethem'), ('L0M', 'LTM'))
        self.assertEquals(double_metaphone('Levine'), ('LFN', ''))
        self.assertEquals(double_metaphone('Lewes'), ('LS', ''))
        self.assertEquals(double_metaphone('Lewis'), ('LS', ''))
        self.assertEquals(double_metaphone('Lincoln'), ('LNKLN', ''))
        self.assertEquals(double_metaphone('Lindsey'), ('LNTS', ''))
        self.assertEquals(double_metaphone('Linher'), ('LNR', ''))
        self.assertEquals(double_metaphone('Lippet'), ('LPT', ''))
        self.assertEquals(double_metaphone('Lippincott'), ('LPNKT', ''))
        self.assertEquals(double_metaphone('Lockwood'), ('LKT', ''))
        self.assertEquals(double_metaphone('Loines'), ('LNS', ''))
        self.assertEquals(double_metaphone('Lombard'), ('LMPRT', ''))
        self.assertEquals(double_metaphone('Long'), ('LNK', ''))
        self.assertEquals(double_metaphone('Longespee'), ('LNJSP', 'LNKSP'))
        self.assertEquals(double_metaphone('Look'), ('LK', ''))
        self.assertEquals(double_metaphone('Lounsberry'), ('LNSPR', ''))
        self.assertEquals(double_metaphone('Lounsbury'), ('LNSPR', ''))
        self.assertEquals(double_metaphone('Louthe'), ('L0', 'LT'))
        self.assertEquals(double_metaphone('Loveyne'), ('LFN', ''))
        self.assertEquals(double_metaphone('Lowe'), ('L', ''))
        self.assertEquals(double_metaphone('Ludlam'), ('LTLM', ''))
        self.assertEquals(double_metaphone('Lumbard'), ('LMPRT', ''))
        self.assertEquals(double_metaphone('Lund'), ('LNT', ''))
        self.assertEquals(double_metaphone('Luno'), ('LN', ''))
        self.assertEquals(double_metaphone('Lutz'), ('LTS', ''))
        self.assertEquals(double_metaphone('Lydia'), ('LT', ''))
        self.assertEquals(double_metaphone('Lynne'), ('LN', ''))
        self.assertEquals(double_metaphone('Lyon'), ('LN', ''))
        self.assertEquals(double_metaphone('MacAlpin'), ('MKLPN', ''))
        self.assertEquals(double_metaphone('MacBricc'), ('MKPRK', ''))
        self.assertEquals(double_metaphone('MacCrinan'), ('MKRNN', ''))
        self.assertEquals(double_metaphone('MacKenneth'), ('MKN0', 'MKNT'))
        self.assertEquals(double_metaphone('MacMael nam Bo'), ('MKMLNMP', ''))
        self.assertEquals(double_metaphone('MacMurchada'), ('MKMRXT', 'MKMRKT'))
        self.assertEquals(double_metaphone('Macomber'), ('MKMPR', ''))
        self.assertEquals(double_metaphone('Macy'), ('MS', ''))
        self.assertEquals(double_metaphone('Magnus'), ('MNS', 'MKNS'))
        self.assertEquals(double_metaphone('Mahien'), ('MHN', ''))
        self.assertEquals(double_metaphone('Malmains'), ('MLMNS', ''))
        self.assertEquals(double_metaphone('Malory'), ('MLR', ''))
        self.assertEquals(double_metaphone('Mancinelli'), ('MNSNL', ''))
        self.assertEquals(double_metaphone('Mancini'), ('MNSN', ''))
        self.assertEquals(double_metaphone('Mann'), ('MN', ''))
        self.assertEquals(double_metaphone('Manning'), ('MNNK', ''))
        self.assertEquals(double_metaphone('Manter'), ('MNTR', ''))
        self.assertEquals(double_metaphone('Marion'), ('MRN', ''))
        self.assertEquals(double_metaphone('Marley'), ('MRL', ''))
        self.assertEquals(double_metaphone('Marmion'), ('MRMN', ''))
        self.assertEquals(double_metaphone('Marquart'), ('MRKRT', ''))
        self.assertEquals(double_metaphone('Marsh'), ('MRX', ''))
        self.assertEquals(double_metaphone('Marshal'), ('MRXL', ''))
        self.assertEquals(double_metaphone('Marshall'), ('MRXL', ''))
        self.assertEquals(double_metaphone('Martel'), ('MRTL', ''))
        self.assertEquals(double_metaphone('Martha'), ('MR0', 'MRT'))
        self.assertEquals(double_metaphone('Martin'), ('MRTN', ''))
        self.assertEquals(double_metaphone('Marturano'), ('MRTRN', ''))
        self.assertEquals(double_metaphone('Marvin'), ('MRFN', ''))
        self.assertEquals(double_metaphone('Mary'), ('MR', ''))
        self.assertEquals(double_metaphone('Mason'), ('MSN', ''))
        self.assertEquals(double_metaphone('Maxwell'), ('MKSL', ''))
        self.assertEquals(double_metaphone('Mayhew'), ('MH', 'MHF'))
        self.assertEquals(double_metaphone('McAllaster'), ('MKLSTR', ''))
        self.assertEquals(double_metaphone('McAllister'), ('MKLSTR', ''))
        self.assertEquals(double_metaphone('McConnell'), ('MKNL', ''))
        self.assertEquals(double_metaphone('McFarland'), ('MKFRLNT', ''))
        self.assertEquals(double_metaphone('McIlroy'), ('MSLR', ''))
        self.assertEquals(double_metaphone('McNair'), ('MKNR', ''))
        self.assertEquals(double_metaphone('McNair-Landry'), ('MKNRLNTR', ''))
        self.assertEquals(double_metaphone('McRaven'), ('MKRFN', ''))
        self.assertEquals(double_metaphone('Mead'), ('MT', ''))
        self.assertEquals(double_metaphone('Meade'), ('MT', ''))
        self.assertEquals(double_metaphone('Meck'), ('MK', ''))
        self.assertEquals(double_metaphone('Melton'), ('MLTN', ''))
        self.assertEquals(double_metaphone('Mendenhall'), ('MNTNL', ''))
        self.assertEquals(double_metaphone('Mering'), ('MRNK', ''))
        self.assertEquals(double_metaphone('Merrick'), ('MRK', ''))
        self.assertEquals(double_metaphone('Merry'), ('MR', ''))
        self.assertEquals(double_metaphone('Mighill'), ('ML', ''))
        self.assertEquals(double_metaphone('Miller'), ('MLR', ''))
        self.assertEquals(double_metaphone('Milton'), ('MLTN', ''))
        self.assertEquals(double_metaphone('Mohun'), ('MHN', ''))
        self.assertEquals(double_metaphone('Montague'), ('MNTK', ''))
        self.assertEquals(double_metaphone('Montboucher'), ('MNTPXR', 'MNTPKR'))
        self.assertEquals(double_metaphone('Moore'), ('MR', ''))
        self.assertEquals(double_metaphone('Morrel'), ('MRL', ''))
        self.assertEquals(double_metaphone('Morrill'), ('MRL', ''))
        self.assertEquals(double_metaphone('Morris'), ('MRS', ''))
        self.assertEquals(double_metaphone('Morton'), ('MRTN', ''))
        self.assertEquals(double_metaphone('Moton'), ('MTN', ''))
        self.assertEquals(double_metaphone('Muir'), ('MR', ''))
        self.assertEquals(double_metaphone('Mulferd'), ('MLFRT', ''))
        self.assertEquals(double_metaphone('Mullins'), ('MLNS', ''))
        self.assertEquals(double_metaphone('Mulso'), ('MLS', ''))
        self.assertEquals(double_metaphone('Munger'), ('MNKR', 'MNJR'))
        self.assertEquals(double_metaphone('Munt'), ('MNT', ''))
        self.assertEquals(double_metaphone('Murchad'), ('MRXT', 'MRKT'))
        self.assertEquals(double_metaphone('Murdock'), ('MRTK', ''))
        self.assertEquals(double_metaphone('Murray'), ('MR', ''))
        self.assertEquals(double_metaphone('Muskett'), ('MSKT', ''))
        self.assertEquals(double_metaphone('Myers'), ('MRS', ''))
        self.assertEquals(double_metaphone('Myrick'), ('MRK', ''))
        self.assertEquals(double_metaphone('NORRIS'), ('NRS', ''))
        self.assertEquals(double_metaphone('Nayle'), ('NL', ''))
        self.assertEquals(double_metaphone('Newcomb'), ('NKMP', ''))
        self.assertEquals(double_metaphone('Newcomb(e)'), ('NKMP', ''))
        self.assertEquals(double_metaphone('Newkirk'), ('NKRK', ''))
        self.assertEquals(double_metaphone('Newton'), ('NTN', ''))
        self.assertEquals(double_metaphone('Niles'), ('NLS', ''))
        self.assertEquals(double_metaphone('Noble'), ('NPL', ''))
        self.assertEquals(double_metaphone('Noel'), ('NL', ''))
        self.assertEquals(double_metaphone('Northend'), ('NR0NT', 'NRTNT'))
        self.assertEquals(double_metaphone('Norton'), ('NRTN', ''))
        self.assertEquals(double_metaphone('Nutter'), ('NTR', ''))
        self.assertEquals(double_metaphone('Odding'), ('ATNK', ''))
        self.assertEquals(double_metaphone('Odenbaugh'), ('ATNP', ''))
        self.assertEquals(double_metaphone('Ogborn'), ('AKPRN', ''))
        self.assertEquals(double_metaphone('Oppenheimer'), ('APNMR', ''))
        self.assertEquals(double_metaphone('Otis'), ('ATS', ''))
        self.assertEquals(double_metaphone('Oviatt'), ('AFT', ''))
        self.assertEquals(double_metaphone('PRUST?'), ('PRST', ''))
        self.assertEquals(double_metaphone('Paddock'), ('PTK', ''))
        self.assertEquals(double_metaphone('Page'), ('PJ', 'PK'))
        self.assertEquals(double_metaphone('Paine'), ('PN', ''))
        self.assertEquals(double_metaphone('Paist'), ('PST', ''))
        self.assertEquals(double_metaphone('Palmer'), ('PLMR', ''))
        self.assertEquals(double_metaphone('Park'), ('PRK', ''))
        self.assertEquals(double_metaphone('Parker'), ('PRKR', ''))
        self.assertEquals(double_metaphone('Parkhurst'), ('PRKRST', ''))
        self.assertEquals(double_metaphone('Parrat'), ('PRT', ''))
        self.assertEquals(double_metaphone('Parsons'), ('PRSNS', ''))
        self.assertEquals(double_metaphone('Partridge'), ('PRTRJ', ''))
        self.assertEquals(double_metaphone('Pashley'), ('PXL', ''))
        self.assertEquals(double_metaphone('Pasley'), ('PSL', ''))
        self.assertEquals(double_metaphone('Patrick'), ('PTRK', ''))
        self.assertEquals(double_metaphone('Pattee'), ('PT', ''))
        self.assertEquals(double_metaphone('Patten'), ('PTN', ''))
        self.assertEquals(double_metaphone('Pawley'), ('PL', ''))
        self.assertEquals(double_metaphone('Payne'), ('PN', ''))
        self.assertEquals(double_metaphone('Peabody'), ('PPT', ''))
        self.assertEquals(double_metaphone('Peake'), ('PK', ''))
        self.assertEquals(double_metaphone('Pearson'), ('PRSN', ''))
        self.assertEquals(double_metaphone('Peat'), ('PT', ''))
        self.assertEquals(double_metaphone('Pedersen'), ('PTRSN', ''))
        self.assertEquals(double_metaphone('Percy'), ('PRS', ''))
        self.assertEquals(double_metaphone('Perkins'), ('PRKNS', ''))
        self.assertEquals(double_metaphone('Perrine'), ('PRN', ''))
        self.assertEquals(double_metaphone('Perry'), ('PR', ''))
        self.assertEquals(double_metaphone('Peson'), ('PSN', ''))
        self.assertEquals(double_metaphone('Peterson'), ('PTRSN', ''))
        self.assertEquals(double_metaphone('Peyton'), ('PTN', ''))
        self.assertEquals(double_metaphone('Phinney'), ('FN', ''))
        self.assertEquals(double_metaphone('Pickard'), ('PKRT', ''))
        self.assertEquals(double_metaphone('Pierce'), ('PRS', ''))
        self.assertEquals(double_metaphone('Pierrepont'), ('PRPNT', ''))
        self.assertEquals(double_metaphone('Pike'), ('PK', ''))
        self.assertEquals(double_metaphone('Pinkham'), ('PNKM', ''))
        self.assertEquals(double_metaphone('Pitman'), ('PTMN', ''))
        self.assertEquals(double_metaphone('Pitt'), ('PT', ''))
        self.assertEquals(double_metaphone('Pitts'), ('PTS', ''))
        self.assertEquals(double_metaphone('Plantagenet'), ('PLNTJNT', 'PLNTKNT'))
        self.assertEquals(double_metaphone('Platt'), ('PLT', ''))
        self.assertEquals(double_metaphone('Platts'), ('PLTS', ''))
        self.assertEquals(double_metaphone('Pleis'), ('PLS', ''))
        self.assertEquals(double_metaphone('Pleiss'), ('PLS', ''))
        self.assertEquals(double_metaphone('Plisko'), ('PLSK', ''))
        self.assertEquals(double_metaphone('Pliskovitch'), ('PLSKFX', ''))
        self.assertEquals(double_metaphone('Plum'), ('PLM', ''))
        self.assertEquals(double_metaphone('Plume'), ('PLM', ''))
        self.assertEquals(double_metaphone('Poitou'), ('PT', ''))
        self.assertEquals(double_metaphone('Pomeroy'), ('PMR', ''))
        self.assertEquals(double_metaphone('Poretiers'), ('PRTRS', ''))
        self.assertEquals(double_metaphone('Pote'), ('PT', ''))
        self.assertEquals(double_metaphone('Potter'), ('PTR', ''))
        self.assertEquals(double_metaphone('Potts'), ('PTS', ''))
        self.assertEquals(double_metaphone('Powell'), ('PL', ''))
        self.assertEquals(double_metaphone('Pratt'), ('PRT', ''))
        self.assertEquals(double_metaphone('Presbury'), ('PRSPR', ''))
        self.assertEquals(double_metaphone('Priest'), ('PRST', ''))
        self.assertEquals(double_metaphone('Prindle'), ('PRNTL', ''))
        self.assertEquals(double_metaphone('Prior'), ('PRR', ''))
        self.assertEquals(double_metaphone('Profumo'), ('PRFM', ''))
        self.assertEquals(double_metaphone('Purdy'), ('PRT', ''))
        self.assertEquals(double_metaphone('Purefoy'), ('PRF', ''))
        self.assertEquals(double_metaphone('Pury'), ('PR', ''))
        self.assertEquals(double_metaphone('Quinter'), ('KNTR', ''))
        self.assertEquals(double_metaphone('Rachel'), ('RXL', 'RKL'))
        self.assertEquals(double_metaphone('Rand'), ('RNT', ''))
        self.assertEquals(double_metaphone('Rankin'), ('RNKN', ''))
        self.assertEquals(double_metaphone('Ravenscroft'), ('RFNSKFT', ''))
        self.assertEquals(double_metaphone('Raynsford'), ('RNSFRT', ''))
        self.assertEquals(double_metaphone('Reakirt'), ('RKRT', ''))
        self.assertEquals(double_metaphone('Reaves'), ('RFS', ''))
        self.assertEquals(double_metaphone('Reeves'), ('RFS', ''))
        self.assertEquals(double_metaphone('Reichert'), ('RXRT', 'RKRT'))
        self.assertEquals(double_metaphone('Remmele'), ('RML', ''))
        self.assertEquals(double_metaphone('Reynolds'), ('RNLTS', ''))
        self.assertEquals(double_metaphone('Rhodes'), ('RTS', ''))
        self.assertEquals(double_metaphone('Richards'), ('RXRTS', 'RKRTS'))
        self.assertEquals(double_metaphone('Richardson'), ('RXRTSN', 'RKRTSN'))
        self.assertEquals(double_metaphone('Ring'), ('RNK', ''))
        self.assertEquals(double_metaphone('Roberts'), ('RPRTS', ''))
        self.assertEquals(double_metaphone('Robertson'), ('RPRTSN', ''))
        self.assertEquals(double_metaphone('Robson'), ('RPSN', ''))
        self.assertEquals(double_metaphone('Rodie'), ('RT', ''))
        self.assertEquals(double_metaphone('Rody'), ('RT', ''))
        self.assertEquals(double_metaphone('Rogers'), ('RKRS', 'RJRS'))
        self.assertEquals(double_metaphone('Ross'), ('RS', ''))
        self.assertEquals(double_metaphone('Rosslevin'), ('RSLFN', ''))
        self.assertEquals(double_metaphone('Rowland'), ('RLNT', ''))
        self.assertEquals(double_metaphone('Ruehl'), ('RL', ''))
        self.assertEquals(double_metaphone('Russell'), ('RSL', ''))
        self.assertEquals(double_metaphone('Ruth'), ('R0', 'RT'))
        self.assertEquals(double_metaphone('Ryan'), ('RN', ''))
        self.assertEquals(double_metaphone('Rysse'), ('RS', ''))
        self.assertEquals(double_metaphone('Sadler'), ('STLR', ''))
        self.assertEquals(double_metaphone('Salmon'), ('SLMN', ''))
        self.assertEquals(double_metaphone('Salter'), ('SLTR', ''))
        self.assertEquals(double_metaphone('Salvatore'), ('SLFTR', ''))
        self.assertEquals(double_metaphone('Sanders'), ('SNTRS', ''))
        self.assertEquals(double_metaphone('Sands'), ('SNTS', ''))
        self.assertEquals(double_metaphone('Sanford'), ('SNFRT', ''))
        self.assertEquals(double_metaphone('Sanger'), ('SNKR', 'SNJR'))
        self.assertEquals(double_metaphone('Sargent'), ('SRJNT', 'SRKNT'))
        self.assertEquals(double_metaphone('Saunders'), ('SNTRS', ''))
        self.assertEquals(double_metaphone('Schilling'), ('XLNK', ''))
        self.assertEquals(double_metaphone('Schlegel'), ('XLKL', 'SLKL'))
        self.assertEquals(double_metaphone('Scott'), ('SKT', ''))
        self.assertEquals(double_metaphone('Sears'), ('SRS', ''))
        self.assertEquals(double_metaphone('Segersall'), ('SJRSL', 'SKRSL'))
        self.assertEquals(double_metaphone('Senecal'), ('SNKL', ''))
        self.assertEquals(double_metaphone('Sergeaux'), ('SRJ', 'SRK'))
        self.assertEquals(double_metaphone('Severance'), ('SFRNS', ''))
        self.assertEquals(double_metaphone('Sharp'), ('XRP', ''))
        self.assertEquals(double_metaphone('Sharpe'), ('XRP', ''))
        self.assertEquals(double_metaphone('Sharply'), ('XRPL', ''))
        self.assertEquals(double_metaphone('Shatswell'), ('XTSL', ''))
        self.assertEquals(double_metaphone('Shattack'), ('XTK', ''))
        self.assertEquals(double_metaphone('Shattock'), ('XTK', ''))
        self.assertEquals(double_metaphone('Shattuck'), ('XTK', ''))
        self.assertEquals(double_metaphone('Shaw'), ('X', 'XF'))
        self.assertEquals(double_metaphone('Sheldon'), ('XLTN', ''))
        self.assertEquals(double_metaphone('Sherman'), ('XRMN', ''))
        self.assertEquals(double_metaphone('Shinn'), ('XN', ''))
        self.assertEquals(double_metaphone('Shirford'), ('XRFRT', ''))
        self.assertEquals(double_metaphone('Shirley'), ('XRL', ''))
        self.assertEquals(double_metaphone('Shively'), ('XFL', ''))
        self.assertEquals(double_metaphone('Shoemaker'), ('XMKR', ''))
        self.assertEquals(double_metaphone('Short'), ('XRT', ''))
        self.assertEquals(double_metaphone('Shotwell'), ('XTL', ''))
        self.assertEquals(double_metaphone('Shute'), ('XT', ''))
        self.assertEquals(double_metaphone('Sibley'), ('SPL', ''))
        self.assertEquals(double_metaphone('Silver'), ('SLFR', ''))
        self.assertEquals(double_metaphone('Simes'), ('SMS', ''))
        self.assertEquals(double_metaphone('Sinken'), ('SNKN', ''))
        self.assertEquals(double_metaphone('Sinn'), ('SN', ''))
        self.assertEquals(double_metaphone('Skelton'), ('SKLTN', ''))
        self.assertEquals(double_metaphone('Skiffe'), ('SKF', ''))
        self.assertEquals(double_metaphone('Skotkonung'), ('SKTKNNK', ''))
        self.assertEquals(double_metaphone('Slade'), ('SLT', 'XLT'))
        self.assertEquals(double_metaphone('Slye'), ('SL', 'XL'))
        self.assertEquals(double_metaphone('Smedley'), ('SMTL', 'XMTL'))
        self.assertEquals(double_metaphone('Smith'), ('SM0', 'XMT'))
        self.assertEquals(double_metaphone('Snow'), ('SN', 'XNF'))
        self.assertEquals(double_metaphone('Soole'), ('SL', ''))
        self.assertEquals(double_metaphone('Soule'), ('SL', ''))
        self.assertEquals(double_metaphone('Southworth'), ('S0R0', 'STRT'))
        self.assertEquals(double_metaphone('Sowles'), ('SLS', ''))
        self.assertEquals(double_metaphone('Spalding'), ('SPLTNK', ''))
        self.assertEquals(double_metaphone('Spark'), ('SPRK', ''))
        self.assertEquals(double_metaphone('Spencer'), ('SPNSR', ''))
        self.assertEquals(double_metaphone('Sperry'), ('SPR', ''))
        self.assertEquals(double_metaphone('Spofford'), ('SPFRT', ''))
        self.assertEquals(double_metaphone('Spooner'), ('SPNR', ''))
        self.assertEquals(double_metaphone('Sprague'), ('SPRK', ''))
        self.assertEquals(double_metaphone('Springer'), ('SPRNKR', 'SPRNJR'))
        self.assertEquals(double_metaphone('St. Clair'), ('STKLR', ''))
        self.assertEquals(double_metaphone('St. Claire'), ('STKLR', ''))
        self.assertEquals(double_metaphone('St. Leger'), ('STLJR', 'STLKR'))
        self.assertEquals(double_metaphone('St. Omer'), ('STMR', ''))
        self.assertEquals(double_metaphone('Stafferton'), ('STFRTN', ''))
        self.assertEquals(double_metaphone('Stafford'), ('STFRT', ''))
        self.assertEquals(double_metaphone('Stalham'), ('STLM', ''))
        self.assertEquals(double_metaphone('Stanford'), ('STNFRT', ''))
        self.assertEquals(double_metaphone('Stanton'), ('STNTN', ''))
        self.assertEquals(double_metaphone('Star'), ('STR', ''))
        self.assertEquals(double_metaphone('Starbuck'), ('STRPK', ''))
        self.assertEquals(double_metaphone('Starkey'), ('STRK', ''))
        self.assertEquals(double_metaphone('Starkweather'), ('STRK0R', 'STRKTR'))
        self.assertEquals(double_metaphone('Stearns'), ('STRNS', ''))
        self.assertEquals(double_metaphone('Stebbins'), ('STPNS', ''))
        self.assertEquals(double_metaphone('Steele'), ('STL', ''))
        self.assertEquals(double_metaphone('Stephenson'), ('STFNSN', ''))
        self.assertEquals(double_metaphone('Stevens'), ('STFNS', ''))
        self.assertEquals(double_metaphone('Stoddard'), ('STTRT', ''))
        self.assertEquals(double_metaphone('Stodder'), ('STTR', ''))
        self.assertEquals(double_metaphone('Stone'), ('STN', ''))
        self.assertEquals(double_metaphone('Storey'), ('STR', ''))
        self.assertEquals(double_metaphone('Storrada'), ('STRT', ''))
        self.assertEquals(double_metaphone('Story'), ('STR', ''))
        self.assertEquals(double_metaphone('Stoughton'), ('STFTN', ''))
        self.assertEquals(double_metaphone('Stout'), ('STT', ''))
        self.assertEquals(double_metaphone('Stow'), ('ST', 'STF'))
        self.assertEquals(double_metaphone('Strong'), ('STRNK', ''))
        self.assertEquals(double_metaphone('Strutt'), ('STRT', ''))
        self.assertEquals(double_metaphone('Stryker'), ('STRKR', ''))
        self.assertEquals(double_metaphone('Stuckeley'), ('STKL', ''))
        self.assertEquals(double_metaphone('Sturges'), ('STRJS', 'STRKS'))
        self.assertEquals(double_metaphone('Sturgess'), ('STRJS', 'STRKS'))
        self.assertEquals(double_metaphone('Sturgis'), ('STRJS', 'STRKS'))
        self.assertEquals(double_metaphone('Suevain'), ('SFN', ''))
        self.assertEquals(double_metaphone('Sulyard'), ('SLRT', ''))
        self.assertEquals(double_metaphone('Sutton'), ('STN', ''))
        self.assertEquals(double_metaphone('Swain'), ('SN', 'XN'))
        self.assertEquals(double_metaphone('Swayne'), ('SN', 'XN'))
        self.assertEquals(double_metaphone('Swayze'), ('SS', 'XTS'))
        self.assertEquals(double_metaphone('Swift'), ('SFT', 'XFT'))
        self.assertEquals(double_metaphone('Taber'), ('TPR', ''))
        self.assertEquals(double_metaphone('Talcott'), ('TLKT', ''))
        self.assertEquals(double_metaphone('Tarne'), ('TRN', ''))
        self.assertEquals(double_metaphone('Tatum'), ('TTM', ''))
        self.assertEquals(double_metaphone('Taverner'), ('TFRNR', ''))
        self.assertEquals(double_metaphone('Taylor'), ('TLR', ''))
        self.assertEquals(double_metaphone('Tenney'), ('TN', ''))
        self.assertEquals(double_metaphone('Thayer'), ('0R', 'TR'))
        self.assertEquals(double_metaphone('Thember'), ('0MPR', 'TMPR'))
        self.assertEquals(double_metaphone('Thomas'), ('TMS', ''))
        self.assertEquals(double_metaphone('Thompson'), ('TMPSN', ''))
        self.assertEquals(double_metaphone('Thorne'), ('0RN', 'TRN'))
        self.assertEquals(double_metaphone('Thornycraft'), ('0RNKRFT', 'TRNKRFT'))
        self.assertEquals(double_metaphone('Threlkeld'), ('0RLKLT', 'TRLKLT'))
        self.assertEquals(double_metaphone('Throckmorton'), ('0RKMRTN', 'TRKMRTN'))
        self.assertEquals(double_metaphone('Thwaits'), ('0TS', 'TTS'))
        self.assertEquals(double_metaphone('Tibbetts'), ('TPTS', ''))
        self.assertEquals(double_metaphone('Tidd'), ('TT', ''))
        self.assertEquals(double_metaphone('Tierney'), ('TRN', ''))
        self.assertEquals(double_metaphone('Tilley'), ('TL', ''))
        self.assertEquals(double_metaphone('Tillieres'), ('TLRS', ''))
        self.assertEquals(double_metaphone('Tilly'), ('TL', ''))
        self.assertEquals(double_metaphone('Tisdale'), ('TSTL', ''))
        self.assertEquals(double_metaphone('Titus'), ('TTS', ''))
        self.assertEquals(double_metaphone('Tobey'), ('TP', ''))
        self.assertEquals(double_metaphone('Tooker'), ('TKR', ''))
        self.assertEquals(double_metaphone('Towle'), ('TL', ''))
        self.assertEquals(double_metaphone('Towne'), ('TN', ''))
        self.assertEquals(double_metaphone('Townsend'), ('TNSNT', ''))
        self.assertEquals(double_metaphone('Treadway'), ('TRT', ''))
        self.assertEquals(double_metaphone('Trelawney'), ('TRLN', ''))
        self.assertEquals(double_metaphone('Trinder'), ('TRNTR', ''))
        self.assertEquals(double_metaphone('Tripp'), ('TRP', ''))
        self.assertEquals(double_metaphone('Trippe'), ('TRP', ''))
        self.assertEquals(double_metaphone('Trott'), ('TRT', ''))
        self.assertEquals(double_metaphone('True'), ('TR', ''))
        self.assertEquals(double_metaphone('Trussebut'), ('TRSPT', ''))
        self.assertEquals(double_metaphone('Tucker'), ('TKR', ''))
        self.assertEquals(double_metaphone('Turgeon'), ('TRJN', 'TRKN'))
        self.assertEquals(double_metaphone('Turner'), ('TRNR', ''))
        self.assertEquals(double_metaphone('Tuttle'), ('TTL', ''))
        self.assertEquals(double_metaphone('Tyler'), ('TLR', ''))
        self.assertEquals(double_metaphone('Tylle'), ('TL', ''))
        self.assertEquals(double_metaphone('Tyrrel'), ('TRL', ''))
        self.assertEquals(double_metaphone('Ua Tuathail'), ('AT0L', 'ATTL'))
        self.assertEquals(double_metaphone('Ulrich'), ('ALRX', 'ALRK'))
        self.assertEquals(double_metaphone('Underhill'), ('ANTRL', ''))
        self.assertEquals(double_metaphone('Underwood'), ('ANTRT', ''))
        self.assertEquals(double_metaphone('Unknown'), ('ANKNN', ''))
        self.assertEquals(double_metaphone('Valentine'), ('FLNTN', ''))
        self.assertEquals(double_metaphone('Van Egmond'), ('FNKMNT', ''))
        self.assertEquals(double_metaphone('Van der Beek'), ('FNTRPK', ''))
        self.assertEquals(double_metaphone('Vaughan'), ('FKN', ''))
        self.assertEquals(double_metaphone('Vermenlen'), ('FRMNLN', ''))
        self.assertEquals(double_metaphone('Vincent'), ('FNSNT', ''))
        self.assertEquals(double_metaphone('Volentine'), ('FLNTN', ''))
        self.assertEquals(double_metaphone('Wagner'), ('AKNR', 'FKNR'))
        self.assertEquals(double_metaphone('Waite'), ('AT', 'FT'))
        self.assertEquals(double_metaphone('Walker'), ('ALKR', 'FLKR'))
        self.assertEquals(double_metaphone('Walter'), ('ALTR', 'FLTR'))
        self.assertEquals(double_metaphone('Wandell'), ('ANTL', 'FNTL'))
        self.assertEquals(double_metaphone('Wandesford'), ('ANTSFRT', 'FNTSFRT'))
        self.assertEquals(double_metaphone('Warbleton'), ('ARPLTN', 'FRPLTN'))
        self.assertEquals(double_metaphone('Ward'), ('ART', 'FRT'))
        self.assertEquals(double_metaphone('Warde'), ('ART', 'FRT'))
        self.assertEquals(double_metaphone('Ware'), ('AR', 'FR'))
        self.assertEquals(double_metaphone('Wareham'), ('ARHM', 'FRHM'))
        self.assertEquals(double_metaphone('Warner'), ('ARNR', 'FRNR'))
        self.assertEquals(double_metaphone('Warren'), ('ARN', 'FRN'))
        self.assertEquals(double_metaphone('Washburne'), ('AXPRN', 'FXPRN'))
        self.assertEquals(double_metaphone('Waterbury'), ('ATRPR', 'FTRPR'))
        self.assertEquals(double_metaphone('Watson'), ('ATSN', 'FTSN'))
        self.assertEquals(double_metaphone('WatsonEllithorpe'), ('ATSNL0RP', 'FTSNLTRP'))
        self.assertEquals(double_metaphone('Watts'), ('ATS', 'FTS'))
        self.assertEquals(double_metaphone('Wayne'), ('AN', 'FN'))
        self.assertEquals(double_metaphone('Webb'), ('AP', 'FP'))
        self.assertEquals(double_metaphone('Weber'), ('APR', 'FPR'))
        self.assertEquals(double_metaphone('Webster'), ('APSTR', 'FPSTR'))
        self.assertEquals(double_metaphone('Weed'), ('AT', 'FT'))
        self.assertEquals(double_metaphone('Weeks'), ('AKS', 'FKS'))
        self.assertEquals(double_metaphone('Wells'), ('ALS', 'FLS'))
        self.assertEquals(double_metaphone('Wenzell'), ('ANSL', 'FNTSL'))
        self.assertEquals(double_metaphone('West'), ('AST', 'FST'))
        self.assertEquals(double_metaphone('Westbury'), ('ASTPR', 'FSTPR'))
        self.assertEquals(double_metaphone('Whatlocke'), ('ATLK', ''))
        self.assertEquals(double_metaphone('Wheeler'), ('ALR', ''))
        self.assertEquals(double_metaphone('Whiston'), ('ASTN', ''))
        self.assertEquals(double_metaphone('White'), ('AT', ''))
        self.assertEquals(double_metaphone('Whitman'), ('ATMN', ''))
        self.assertEquals(double_metaphone('Whiton'), ('ATN', ''))
        self.assertEquals(double_metaphone('Whitson'), ('ATSN', ''))
        self.assertEquals(double_metaphone('Wickes'), ('AKS', 'FKS'))
        self.assertEquals(double_metaphone('Wilbur'), ('ALPR', 'FLPR'))
        self.assertEquals(double_metaphone('Wilcotes'), ('ALKTS', 'FLKTS'))
        self.assertEquals(double_metaphone('Wilkinson'), ('ALKNSN', 'FLKNSN'))
        self.assertEquals(double_metaphone('Willets'), ('ALTS', 'FLTS'))
        self.assertEquals(double_metaphone('Willett'), ('ALT', 'FLT'))
        self.assertEquals(double_metaphone('Willey'), ('AL', 'FL'))
        self.assertEquals(double_metaphone('Williams'), ('ALMS', 'FLMS'))
        self.assertEquals(double_metaphone('Williston'), ('ALSTN', 'FLSTN'))
        self.assertEquals(double_metaphone('Wilson'), ('ALSN', 'FLSN'))
        self.assertEquals(double_metaphone('Wimes'), ('AMS', 'FMS'))
        self.assertEquals(double_metaphone('Winch'), ('ANX', 'FNK'))
        self.assertEquals(double_metaphone('Winegar'), ('ANKR', 'FNKR'))
        self.assertEquals(double_metaphone('Wing'), ('ANK', 'FNK'))
        self.assertEquals(double_metaphone('Winsley'), ('ANSL', 'FNSL'))
        self.assertEquals(double_metaphone('Winslow'), ('ANSL', 'FNSLF'))
        self.assertEquals(double_metaphone('Winthrop'), ('AN0RP', 'FNTRP'))
        self.assertEquals(double_metaphone('Wise'), ('AS', 'FS'))
        self.assertEquals(double_metaphone('Wood'), ('AT', 'FT'))
        self.assertEquals(double_metaphone('Woodbridge'), ('ATPRJ', 'FTPRJ'))
        self.assertEquals(double_metaphone('Woodward'), ('ATRT', 'FTRT'))
        self.assertEquals(double_metaphone('Wooley'), ('AL', 'FL'))
        self.assertEquals(double_metaphone('Woolley'), ('AL', 'FL'))
        self.assertEquals(double_metaphone('Worth'), ('AR0', 'FRT'))
        self.assertEquals(double_metaphone('Worthen'), ('AR0N', 'FRTN'))
        self.assertEquals(double_metaphone('Worthley'), ('AR0L', 'FRTL'))
        self.assertEquals(double_metaphone('Wright'), ('RT', ''))
        self.assertEquals(double_metaphone('Wyer'), ('AR', 'FR'))
        self.assertEquals(double_metaphone('Wyere'), ('AR', 'FR'))
        self.assertEquals(double_metaphone('Wynkoop'), ('ANKP', 'FNKP'))
        self.assertEquals(double_metaphone('Yarnall'), ('ARNL', ''))
        self.assertEquals(double_metaphone('Yeoman'), ('AMN', ''))
        self.assertEquals(double_metaphone('Yorke'), ('ARK', ''))
        self.assertEquals(double_metaphone('Young'), ('ANK', ''))
        self.assertEquals(double_metaphone('ab Wennonwen'), ('APNNN', ''))
        self.assertEquals(double_metaphone('ap Llewellyn'), ('APLLN', ''))
        self.assertEquals(double_metaphone('ap Lorwerth'), ('APLRR0', 'APLRRT'))
        self.assertEquals(double_metaphone('d\'Angouleme'), ('TNKLM', ''))
        self.assertEquals(double_metaphone('de Audeham'), ('TTHM', ''))
        self.assertEquals(double_metaphone('de Bavant'), ('TPFNT', ''))
        self.assertEquals(double_metaphone('de Beauchamp'), ('TPXMP', 'TPKMP'))
        self.assertEquals(double_metaphone('de Beaumont'), ('TPMNT', ''))
        self.assertEquals(double_metaphone('de Bolbec'), ('TPLPK', ''))
        self.assertEquals(double_metaphone('de Braiose'), ('TPRS', ''))
        self.assertEquals(double_metaphone('de Braose'), ('TPRS', ''))
        self.assertEquals(double_metaphone('de Briwere'), ('TPRR', ''))
        self.assertEquals(double_metaphone('de Cantelou'), ('TKNTL', ''))
        self.assertEquals(double_metaphone('de Cherelton'), ('TXRLTN', 'TKRLTN'))
        self.assertEquals(double_metaphone('de Cherleton'), ('TXRLTN', 'TKRLTN'))
        self.assertEquals(double_metaphone('de Clare'), ('TKLR', ''))
        self.assertEquals(double_metaphone('de Claremont'), ('TKLRMNT', ''))
        self.assertEquals(double_metaphone('de Clifford'), ('TKLFRT', ''))
        self.assertEquals(double_metaphone('de Colville'), ('TKLFL', ''))
        self.assertEquals(double_metaphone('de Courtenay'), ('TKRTN', ''))
        self.assertEquals(double_metaphone('de Fauconberg'), ('TFKNPRK', ''))
        self.assertEquals(double_metaphone('de Forest'), ('TFRST', ''))
        self.assertEquals(double_metaphone('de Gai'), ('TK', ''))
        self.assertEquals(double_metaphone('de Grey'), ('TKR', ''))
        self.assertEquals(double_metaphone('de Guernons'), ('TKRNNS', ''))
        self.assertEquals(double_metaphone('de Haia'), ('T', ''))
        self.assertEquals(double_metaphone('de Harcourt'), ('TRKRT', ''))
        self.assertEquals(double_metaphone('de Hastings'), ('TSTNKS', ''))
        self.assertEquals(double_metaphone('de Hoke'), ('TK', ''))
        self.assertEquals(double_metaphone('de Hooch'), ('TK', ''))
        self.assertEquals(double_metaphone('de Hugelville'), ('TJLFL', 'TKLFL'))
        self.assertEquals(double_metaphone('de Huntingdon'), ('TNTNKTN', ''))
        self.assertEquals(double_metaphone('de Insula'), ('TNSL', ''))
        self.assertEquals(double_metaphone('de Keynes'), ('TKNS', ''))
        self.assertEquals(double_metaphone('de Lacy'), ('TLS', ''))
        self.assertEquals(double_metaphone('de Lexington'), ('TLKSNKTN', ''))
        self.assertEquals(double_metaphone('de Lusignan'), ('TLSNN', 'TLSKNN'))
        self.assertEquals(double_metaphone('de Manvers'), ('TMNFRS', ''))
        self.assertEquals(double_metaphone('de Montagu'), ('TMNTK', ''))
        self.assertEquals(double_metaphone('de Montault'), ('TMNTLT', ''))
        self.assertEquals(double_metaphone('de Montfort'), ('TMNTFRT', ''))
        self.assertEquals(double_metaphone('de Mortimer'), ('TMRTMR', ''))
        self.assertEquals(double_metaphone('de Morville'), ('TMRFL', ''))
        self.assertEquals(double_metaphone('de Morvois'), ('TMRF', 'TMRFS'))
        self.assertEquals(double_metaphone('de Neufmarche'), ('TNFMRX', 'TNFMRK'))
        self.assertEquals(double_metaphone('de Odingsells'), ('TTNKSLS', ''))
        self.assertEquals(double_metaphone('de Odyngsells'), ('TTNKSLS', ''))
        self.assertEquals(double_metaphone('de Percy'), ('TPRS', ''))
        self.assertEquals(double_metaphone('de Pierrepont'), ('TPRPNT', ''))
        self.assertEquals(double_metaphone('de Plessetis'), ('TPLSTS', ''))
        self.assertEquals(double_metaphone('de Porhoet'), ('TPRT', ''))
        self.assertEquals(double_metaphone('de Prouz'), ('TPRS', ''))
        self.assertEquals(double_metaphone('de Quincy'), ('TKNS', ''))
        self.assertEquals(double_metaphone('de Ripellis'), ('TRPLS', ''))
        self.assertEquals(double_metaphone('de Ros'), ('TRS', ''))
        self.assertEquals(double_metaphone('de Salisbury'), ('TSLSPR', ''))
        self.assertEquals(double_metaphone('de Sanford'), ('TSNFRT', ''))
        self.assertEquals(double_metaphone('de Somery'), ('TSMR', ''))
        self.assertEquals(double_metaphone('de St. Hilary'), ('TSTLR', ''))
        self.assertEquals(double_metaphone('de St. Liz'), ('TSTLS', ''))
        self.assertEquals(double_metaphone('de Sutton'), ('TSTN', ''))
        self.assertEquals(double_metaphone('de Toeni'), ('TTN', ''))
        self.assertEquals(double_metaphone('de Tony'), ('TTN', ''))
        self.assertEquals(double_metaphone('de Umfreville'), ('TMFRFL', ''))
        self.assertEquals(double_metaphone('de Valognes'), ('TFLNS', 'TFLKNS'))
        self.assertEquals(double_metaphone('de Vaux'), ('TF', ''))
        self.assertEquals(double_metaphone('de Vere'), ('TFR', ''))
        self.assertEquals(double_metaphone('de Vermandois'), ('TFRMNT', 'TFRMNTS'))
        self.assertEquals(double_metaphone('de Vernon'), ('TFRNN', ''))
        self.assertEquals(double_metaphone('de Vexin'), ('TFKSN', ''))
        self.assertEquals(double_metaphone('de Vitre'), ('TFTR', ''))
        self.assertEquals(double_metaphone('de Wandesford'), ('TNTSFRT', ''))
        self.assertEquals(double_metaphone('de Warenne'), ('TRN', ''))
        self.assertEquals(double_metaphone('de Westbury'), ('TSTPR', ''))
        self.assertEquals(double_metaphone('di Saluzzo'), ('TSLS', 'TSLTS'))
        self.assertEquals(double_metaphone('fitz Alan'), ('FTSLN', ''))
        self.assertEquals(double_metaphone('fitz Geoffrey'), ('FTSJFR', 'FTSKFR'))
        self.assertEquals(double_metaphone('fitz Herbert'), ('FTSRPRT', ''))
        self.assertEquals(double_metaphone('fitz John'), ('FTSJN', ''))
        self.assertEquals(double_metaphone('fitz Patrick'), ('FTSPTRK', ''))
        self.assertEquals(double_metaphone('fitz Payn'), ('FTSPN', ''))
        self.assertEquals(double_metaphone('fitz Piers'), ('FTSPRS', ''))
        self.assertEquals(double_metaphone('fitz Randolph'), ('FTSRNTLF', ''))
        self.assertEquals(double_metaphone('fitz Richard'), ('FTSRXRT', 'FTSRKRT'))
        self.assertEquals(double_metaphone('fitz Robert'), ('FTSRPRT', ''))
        self.assertEquals(double_metaphone('fitz Roy'), ('FTSR', ''))
        self.assertEquals(double_metaphone('fitz Scrob'), ('FTSSKP', ''))
        self.assertEquals(double_metaphone('fitz Walter'), ('FTSLTR', ''))
        self.assertEquals(double_metaphone('fitz Warin'), ('FTSRN', ''))
        self.assertEquals(double_metaphone('fitz Williams'), ('FTSLMS', ''))
        self.assertEquals(double_metaphone('la Zouche'), ('LSX', 'LSK'))
        self.assertEquals(double_metaphone('le Botiller'), ('LPTLR', ''))
        self.assertEquals(double_metaphone('le Despenser'), ('LTSPNSR', ''))
        self.assertEquals(double_metaphone('le deSpencer'), ('LTSPNSR', ''))
        self.assertEquals(double_metaphone('of Allendale'), ('AFLNTL', ''))
        self.assertEquals(double_metaphone('of Angouleme'), ('AFNKLM', ''))
        self.assertEquals(double_metaphone('of Anjou'), ('AFNJ', ''))
        self.assertEquals(double_metaphone('of Aquitaine'), ('AFKTN', ''))
        self.assertEquals(double_metaphone('of Aumale'), ('AFML', ''))
        self.assertEquals(double_metaphone('of Bavaria'), ('AFPFR', ''))
        self.assertEquals(double_metaphone('of Boulogne'), ('AFPLN', 'AFPLKN'))
        self.assertEquals(double_metaphone('of Brittany'), ('AFPRTN', ''))
        self.assertEquals(double_metaphone('of Brittary'), ('AFPRTR', ''))
        self.assertEquals(double_metaphone('of Castile'), ('AFKSTL', ''))
        self.assertEquals(double_metaphone('of Chester'), ('AFXSTR', 'AFKSTR'))
        self.assertEquals(double_metaphone('of Clermont'), ('AFKLRMNT', ''))
        self.assertEquals(double_metaphone('of Cologne'), ('AFKLN', 'AFKLKN'))
        self.assertEquals(double_metaphone('of Dinan'), ('AFTNN', ''))
        self.assertEquals(double_metaphone('of Dunbar'), ('AFTNPR', ''))
        self.assertEquals(double_metaphone('of England'), ('AFNKLNT', ''))
        self.assertEquals(double_metaphone('of Essex'), ('AFSKS', ''))
        self.assertEquals(double_metaphone('of Falaise'), ('AFFLS', ''))
        self.assertEquals(double_metaphone('of Flanders'), ('AFFLNTRS', ''))
        self.assertEquals(double_metaphone('of Galloway'), ('AFKL', ''))
        self.assertEquals(double_metaphone('of Germany'), ('AFKRMN', 'AFJRMN'))
        self.assertEquals(double_metaphone('of Gloucester'), ('AFKLSSTR', ''))
        self.assertEquals(double_metaphone('of Heristal'), ('AFRSTL', ''))
        self.assertEquals(double_metaphone('of Hungary'), ('AFNKR', ''))
        self.assertEquals(double_metaphone('of Huntington'), ('AFNTNKTN', ''))
        self.assertEquals(double_metaphone('of Kiev'), ('AFKF', ''))
        self.assertEquals(double_metaphone('of Kuno'), ('AFKN', ''))
        self.assertEquals(double_metaphone('of Landen'), ('AFLNTN', ''))
        self.assertEquals(double_metaphone('of Laon'), ('AFLN', ''))
        self.assertEquals(double_metaphone('of Leinster'), ('AFLNSTR', ''))
        self.assertEquals(double_metaphone('of Lens'), ('AFLNS', ''))
        self.assertEquals(double_metaphone('of Lorraine'), ('AFLRN', ''))
        self.assertEquals(double_metaphone('of Louvain'), ('AFLFN', ''))
        self.assertEquals(double_metaphone('of Mercia'), ('AFMRS', 'AFMRX'))
        self.assertEquals(double_metaphone('of Metz'), ('AFMTS', ''))
        self.assertEquals(double_metaphone('of Meulan'), ('AFMLN', ''))
        self.assertEquals(double_metaphone('of Nass'), ('AFNS', ''))
        self.assertEquals(double_metaphone('of Normandy'), ('AFNRMNT', ''))
        self.assertEquals(double_metaphone('of Ohningen'), ('AFNNJN', 'AFNNKN'))
        self.assertEquals(double_metaphone('of Orleans'), ('AFRLNS', ''))
        self.assertEquals(double_metaphone('of Poitou'), ('AFPT', ''))
        self.assertEquals(double_metaphone('of Polotzk'), ('AFPLTSK', ''))
        self.assertEquals(double_metaphone('of Provence'), ('AFPRFNS', ''))
        self.assertEquals(double_metaphone('of Ringelheim'), ('AFRNJLM', 'AFRNKLM'))
        self.assertEquals(double_metaphone('of Salisbury'), ('AFSLSPR', ''))
        self.assertEquals(double_metaphone('of Saxony'), ('AFSKSN', ''))
        self.assertEquals(double_metaphone('of Scotland'), ('AFSKTLNT', ''))
        self.assertEquals(double_metaphone('of Senlis'), ('AFSNLS', ''))
        self.assertEquals(double_metaphone('of Stafford'), ('AFSTFRT', ''))
        self.assertEquals(double_metaphone('of Swabia'), ('AFSP', ''))
        self.assertEquals(double_metaphone('of Tongres'), ('AFTNKRS', ''))
        self.assertEquals(double_metaphone('of the Tributes'), ('AF0TRPTS', 'AFTTRPTS'))
        self.assertEquals(double_metaphone('unknown'), ('ANKNN', ''))
        self.assertEquals(double_metaphone('van der Gouda'), ('FNTRKT', ''))
        self.assertEquals(double_metaphone('von Adenbaugh'), ('FNTNP', ''))
        self.assertEquals(double_metaphone('ARCHITure'), ('ARKTR', ''))
        self.assertEquals(double_metaphone('Arnoff'), ('ARNF', ''))
        self.assertEquals(double_metaphone('Arnow'), ('ARN', 'ARNF'))
        self.assertEquals(double_metaphone('DANGER'), ('TNJR', 'TNKR'))
        self.assertEquals(double_metaphone('Jankelowicz'), ('JNKLTS', 'ANKLFX'))
        self.assertEquals(double_metaphone('MANGER'), ('MNJR', 'MNKR'))
        self.assertEquals(double_metaphone('McClellan'), ('MKLLN', ''))
        self.assertEquals(double_metaphone('McHugh'), ('MK', ''))
        self.assertEquals(double_metaphone('McLaughlin'), ('MKLFLN', ''))
        self.assertEquals(double_metaphone('ORCHEStra'), ('ARKSTR', ''))
        self.assertEquals(double_metaphone('ORCHID'), ('ARKT', ''))
        self.assertEquals(double_metaphone('Pierce'), ('PRS', ''))
        self.assertEquals(double_metaphone('RANGER'), ('RNJR', 'RNKR'))
        self.assertEquals(double_metaphone('Schlesinger'), ('XLSNKR', 'SLSNJR'))
        self.assertEquals(double_metaphone('Uomo'), ('AM', ''))
        self.assertEquals(double_metaphone('Vasserman'), ('FSRMN', ''))
        self.assertEquals(double_metaphone('Wasserman'), ('ASRMN', 'FSRMN'))
        self.assertEquals(double_metaphone('Womo'), ('AM', 'FM'))
        self.assertEquals(double_metaphone('Yankelovich'), ('ANKLFX', 'ANKLFK'))
        self.assertEquals(double_metaphone('accede'), ('AKST', ''))
        self.assertEquals(double_metaphone('accident'), ('AKSTNT', ''))
        self.assertEquals(double_metaphone('adelsheim'), ('ATLSM', ''))
        self.assertEquals(double_metaphone('aged'), ('AJT', 'AKT'))
        self.assertEquals(double_metaphone('ageless'), ('AJLS', 'AKLS'))
        self.assertEquals(double_metaphone('agency'), ('AJNS', 'AKNS'))
        self.assertEquals(double_metaphone('aghast'), ('AKST', ''))
        self.assertEquals(double_metaphone('agio'), ('AJ', 'AK'))
        self.assertEquals(double_metaphone('agrimony'), ('AKRMN', ''))
        self.assertEquals(double_metaphone('album'), ('ALPM', ''))
        self.assertEquals(double_metaphone('alcmene'), ('ALKMN', ''))
        self.assertEquals(double_metaphone('alehouse'), ('ALHS', ''))
        self.assertEquals(double_metaphone('antique'), ('ANTK', ''))
        self.assertEquals(double_metaphone('artois'), ('ART', 'ARTS'))
        self.assertEquals(double_metaphone('automation'), ('ATMXN', ''))
        self.assertEquals(double_metaphone('bacchus'), ('PKS', ''))
        self.assertEquals(double_metaphone('bacci'), ('PX', ''))
        self.assertEquals(double_metaphone('bajador'), ('PJTR', 'PHTR'))
        self.assertEquals(double_metaphone('bellocchio'), ('PLX', ''))
        self.assertEquals(double_metaphone('bertucci'), ('PRTX', ''))
        self.assertEquals(double_metaphone('biaggi'), ('PJ', 'PK'))
        self.assertEquals(double_metaphone('bough'), ('P', ''))
        self.assertEquals(double_metaphone('breaux'), ('PR', ''))
        self.assertEquals(double_metaphone('broughton'), ('PRTN', ''))
        self.assertEquals(double_metaphone('cabrillo'), ('KPRL', 'KPR'))
        self.assertEquals(double_metaphone('caesar'), ('SSR', ''))
        self.assertEquals(double_metaphone('cagney'), ('KKN', ''))
        self.assertEquals(double_metaphone('campbell'), ('KMPL', ''))
        self.assertEquals(double_metaphone('carlisle'), ('KRLL', ''))
        self.assertEquals(double_metaphone('carlysle'), ('KRLL', ''))
        self.assertEquals(double_metaphone('chemistry'), ('KMSTR', ''))
        self.assertEquals(double_metaphone('chianti'), ('KNT', ''))
        self.assertEquals(double_metaphone('chorus'), ('KRS', ''))
        self.assertEquals(double_metaphone('cough'), ('KF', ''))
        self.assertEquals(double_metaphone('czerny'), ('SRN', 'XRN'))
        self.assertEquals(double_metaphone('deffenbacher'), ('TFNPKR', ''))
        self.assertEquals(double_metaphone('dumb'), ('TM', ''))
        self.assertEquals(double_metaphone('edgar'), ('ATKR', ''))
        self.assertEquals(double_metaphone('edge'), ('AJ', ''))
        self.assertEquals(double_metaphone('filipowicz'), ('FLPTS', 'FLPFX'))
        self.assertEquals(double_metaphone('focaccia'), ('FKX', ''))
        self.assertEquals(double_metaphone('gallegos'), ('KLKS', 'KKS'))
        self.assertEquals(double_metaphone('gambrelli'), ('KMPRL', ''))
        self.assertEquals(double_metaphone('geithain'), ('K0N', 'JTN'))
        self.assertEquals(double_metaphone('ghiradelli'), ('JRTL', ''))
        self.assertEquals(double_metaphone('ghislane'), ('JLN', ''))
        self.assertEquals(double_metaphone('gough'), ('KF', ''))
        self.assertEquals(double_metaphone('hartheim'), ('HR0M', 'HRTM'))
        self.assertEquals(double_metaphone('heimsheim'), ('HMSM', ''))
        self.assertEquals(double_metaphone('hochmeier'), ('HKMR', ''))
        self.assertEquals(double_metaphone('hugh'), ('H', ''))
        self.assertEquals(double_metaphone('hunger'), ('HNKR', 'HNJR'))
        self.assertEquals(double_metaphone('hungry'), ('HNKR', ''))
        self.assertEquals(double_metaphone('island'), ('ALNT', ''))
        self.assertEquals(double_metaphone('isle'), ('AL', ''))
        self.assertEquals(double_metaphone('jose'), ('HS', ''))
        self.assertEquals(double_metaphone('laugh'), ('LF', ''))
        self.assertEquals(double_metaphone('mac caffrey'), ('MKFR', ''))
        self.assertEquals(double_metaphone('mac gregor'), ('MKRKR', ''))
        self.assertEquals(double_metaphone('pegnitz'), ('PNTS', 'PKNTS'))
        self.assertEquals(double_metaphone('piskowitz'), ('PSKTS', 'PSKFX'))
        self.assertEquals(double_metaphone('queen'), ('KN', ''))
        self.assertEquals(double_metaphone('raspberry'), ('RSPR', ''))
        self.assertEquals(double_metaphone('resnais'), ('RSN', 'RSNS'))
        self.assertEquals(double_metaphone('rogier'), ('RJ', 'RJR'))
        self.assertEquals(double_metaphone('rough'), ('RF', ''))
        self.assertEquals(double_metaphone('san jacinto'), ('SNHSNT', ''))
        self.assertEquals(double_metaphone('schenker'), ('XNKR', 'SKNKR'))
        self.assertEquals(double_metaphone('schermerhorn'), ('XRMRRN', 'SKRMRRN'))
        self.assertEquals(double_metaphone('schmidt'), ('XMT', 'SMT'))
        self.assertEquals(double_metaphone('schneider'), ('XNTR', 'SNTR'))
        self.assertEquals(double_metaphone('school'), ('SKL', ''))
        self.assertEquals(double_metaphone('schooner'), ('SKNR', ''))
        self.assertEquals(double_metaphone('schrozberg'), ('XRSPRK', 'SRSPRK'))
        self.assertEquals(double_metaphone('schulman'), ('XLMN', ''))
        self.assertEquals(double_metaphone('schwabach'), ('XPK', 'XFPK'))
        self.assertEquals(double_metaphone('schwarzach'), ('XRSK', 'XFRTSK'))
        self.assertEquals(double_metaphone('smith'), ('SM0', 'XMT'))
        self.assertEquals(double_metaphone('snider'), ('SNTR', 'XNTR'))
        self.assertEquals(double_metaphone('succeed'), ('SKST', ''))
        self.assertEquals(double_metaphone('sugarcane'), ('XKRKN', 'SKRKN'))
        self.assertEquals(double_metaphone('svobodka'), ('SFPTK', ''))
        self.assertEquals(double_metaphone('tagliaro'), ('TKLR', 'TLR'))
        self.assertEquals(double_metaphone('thames'), ('TMS', ''))
        self.assertEquals(double_metaphone('theilheim'), ('0LM', 'TLM'))
        self.assertEquals(double_metaphone('thomas'), ('TMS', ''))
        self.assertEquals(double_metaphone('thumb'), ('0M', 'TM'))
        self.assertEquals(double_metaphone('tichner'), ('TXNR', 'TKNR'))
        self.assertEquals(double_metaphone('tough'), ('TF', ''))
        self.assertEquals(double_metaphone('umbrella'), ('AMPRL', ''))
        self.assertEquals(double_metaphone('vilshofen'), ('FLXFN', ''))
        self.assertEquals(double_metaphone('von schuller'), ('FNXLR', ''))
        self.assertEquals(double_metaphone('wachtler'), ('AKTLR', 'FKTLR'))
        self.assertEquals(double_metaphone('wechsler'), ('AKSLR', 'FKSLR'))
        self.assertEquals(double_metaphone('weikersheim'), ('AKRSM', 'FKRSM'))
        self.assertEquals(double_metaphone('zhao'), ('J', ''))

    def test_double_metaphone_surnames4(self):
        self.assertEquals(double_metaphone('', 4), ('', ''))
        self.assertEquals(double_metaphone('ALLERTON', 4), ('ALRT', ''))
        self.assertEquals(double_metaphone('Acton', 4), ('AKTN', ''))
        self.assertEquals(double_metaphone('Adams', 4), ('ATMS', ''))
        self.assertEquals(double_metaphone('Aggar', 4), ('AKR', ''))
        self.assertEquals(double_metaphone('Ahl', 4), ('AL', ''))
        self.assertEquals(double_metaphone('Aiken', 4), ('AKN', ''))
        self.assertEquals(double_metaphone('Alan', 4), ('ALN', ''))
        self.assertEquals(double_metaphone('Alcock', 4), ('ALKK', ''))
        self.assertEquals(double_metaphone('Alden', 4), ('ALTN', ''))
        self.assertEquals(double_metaphone('Aldham', 4), ('ALTM', ''))
        self.assertEquals(double_metaphone('Allen', 4), ('ALN', ''))
        self.assertEquals(double_metaphone('Allerton', 4), ('ALRT', ''))
        self.assertEquals(double_metaphone('Alsop', 4), ('ALSP', ''))
        self.assertEquals(double_metaphone('Alwein', 4), ('ALN', ''))
        self.assertEquals(double_metaphone('Ambler', 4), ('AMPL', ''))
        self.assertEquals(double_metaphone('Andevill', 4), ('ANTF', ''))
        self.assertEquals(double_metaphone('Andrews', 4), ('ANTR', ''))
        self.assertEquals(double_metaphone('Andreyco', 4), ('ANTR', ''))
        self.assertEquals(double_metaphone('Andriesse', 4), ('ANTR', ''))
        self.assertEquals(double_metaphone('Angier', 4), ('ANJ', 'ANJR'))
        self.assertEquals(double_metaphone('Annabel', 4), ('ANPL', ''))
        self.assertEquals(double_metaphone('Anne', 4), ('AN', ''))
        self.assertEquals(double_metaphone('Anstye', 4), ('ANST', ''))
        self.assertEquals(double_metaphone('Appling', 4), ('APLN', ''))
        self.assertEquals(double_metaphone('Apuke', 4), ('APK', ''))
        self.assertEquals(double_metaphone('Arnold', 4), ('ARNL', ''))
        self.assertEquals(double_metaphone('Ashby', 4), ('AXP', ''))
        self.assertEquals(double_metaphone('Astwood', 4), ('ASTT', ''))
        self.assertEquals(double_metaphone('Atkinson', 4), ('ATKN', ''))
        self.assertEquals(double_metaphone('Audley', 4), ('ATL', ''))
        self.assertEquals(double_metaphone('Austin', 4), ('ASTN', ''))
        self.assertEquals(double_metaphone('Avenal', 4), ('AFNL', ''))
        self.assertEquals(double_metaphone('Ayer', 4), ('AR', ''))
        self.assertEquals(double_metaphone('Ayot', 4), ('AT', ''))
        self.assertEquals(double_metaphone('Babbitt', 4), ('PPT', ''))
        self.assertEquals(double_metaphone('Bachelor', 4), ('PXLR', 'PKLR'))
        self.assertEquals(double_metaphone('Bachelour', 4), ('PXLR', 'PKLR'))
        self.assertEquals(double_metaphone('Bailey', 4), ('PL', ''))
        self.assertEquals(double_metaphone('Baivel', 4), ('PFL', ''))
        self.assertEquals(double_metaphone('Baker', 4), ('PKR', ''))
        self.assertEquals(double_metaphone('Baldwin', 4), ('PLTN', ''))
        self.assertEquals(double_metaphone('Balsley', 4), ('PLSL', ''))
        self.assertEquals(double_metaphone('Barber', 4), ('PRPR', ''))
        self.assertEquals(double_metaphone('Barker', 4), ('PRKR', ''))
        self.assertEquals(double_metaphone('Barlow', 4), ('PRL', 'PRLF'))
        self.assertEquals(double_metaphone('Barnard', 4), ('PRNR', ''))
        self.assertEquals(double_metaphone('Barnes', 4), ('PRNS', ''))
        self.assertEquals(double_metaphone('Barnsley', 4), ('PRNS', ''))
        self.assertEquals(double_metaphone('Barouxis', 4), ('PRKS', ''))
        self.assertEquals(double_metaphone('Bartlet', 4), ('PRTL', ''))
        self.assertEquals(double_metaphone('Basley', 4), ('PSL', ''))
        self.assertEquals(double_metaphone('Basset', 4), ('PST', ''))
        self.assertEquals(double_metaphone('Bassett', 4), ('PST', ''))
        self.assertEquals(double_metaphone('Batchlor', 4), ('PXLR', ''))
        self.assertEquals(double_metaphone('Bates', 4), ('PTS', ''))
        self.assertEquals(double_metaphone('Batson', 4), ('PTSN', ''))
        self.assertEquals(double_metaphone('Bayes', 4), ('PS', ''))
        self.assertEquals(double_metaphone('Bayley', 4), ('PL', ''))
        self.assertEquals(double_metaphone('Beale', 4), ('PL', ''))
        self.assertEquals(double_metaphone('Beauchamp', 4), ('PXMP', 'PKMP'))
        self.assertEquals(double_metaphone('Beauclerc', 4), ('PKLR', ''))
        self.assertEquals(double_metaphone('Beech', 4), ('PK', ''))
        self.assertEquals(double_metaphone('Beers', 4), ('PRS', ''))
        self.assertEquals(double_metaphone('Beke', 4), ('PK', ''))
        self.assertEquals(double_metaphone('Belcher', 4), ('PLXR', 'PLKR'))
        self.assertEquals(double_metaphone('Benjamin', 4), ('PNJM', ''))
        self.assertEquals(double_metaphone('Benningham', 4), ('PNNK', ''))
        self.assertEquals(double_metaphone('Bereford', 4), ('PRFR', ''))
        self.assertEquals(double_metaphone('Bergen', 4), ('PRJN', 'PRKN'))
        self.assertEquals(double_metaphone('Berkeley', 4), ('PRKL', ''))
        self.assertEquals(double_metaphone('Berry', 4), ('PR', ''))
        self.assertEquals(double_metaphone('Besse', 4), ('PS', ''))
        self.assertEquals(double_metaphone('Bessey', 4), ('PS', ''))
        self.assertEquals(double_metaphone('Bessiles', 4), ('PSLS', ''))
        self.assertEquals(double_metaphone('Bigelow', 4), ('PJL', 'PKLF'))
        self.assertEquals(double_metaphone('Bigg', 4), ('PK', ''))
        self.assertEquals(double_metaphone('Bigod', 4), ('PKT', ''))
        self.assertEquals(double_metaphone('Billings', 4), ('PLNK', ''))
        self.assertEquals(double_metaphone('Bimper', 4), ('PMPR', ''))
        self.assertEquals(double_metaphone('Binker', 4), ('PNKR', ''))
        self.assertEquals(double_metaphone('Birdsill', 4), ('PRTS', ''))
        self.assertEquals(double_metaphone('Bishop', 4), ('PXP', ''))
        self.assertEquals(double_metaphone('Black', 4), ('PLK', ''))
        self.assertEquals(double_metaphone('Blagge', 4), ('PLK', ''))
        self.assertEquals(double_metaphone('Blake', 4), ('PLK', ''))
        self.assertEquals(double_metaphone('Blanck', 4), ('PLNK', ''))
        self.assertEquals(double_metaphone('Bledsoe', 4), ('PLTS', ''))
        self.assertEquals(double_metaphone('Blennerhasset', 4), ('PLNR', ''))
        self.assertEquals(double_metaphone('Blessing', 4), ('PLSN', ''))
        self.assertEquals(double_metaphone('Blewett', 4), ('PLT', ''))
        self.assertEquals(double_metaphone('Bloctgoed', 4), ('PLKT', ''))
        self.assertEquals(double_metaphone('Bloetgoet', 4), ('PLTK', ''))
        self.assertEquals(double_metaphone('Bloodgood', 4), ('PLTK', ''))
        self.assertEquals(double_metaphone('Blossom', 4), ('PLSM', ''))
        self.assertEquals(double_metaphone('Blount', 4), ('PLNT', ''))
        self.assertEquals(double_metaphone('Bodine', 4), ('PTN', ''))
        self.assertEquals(double_metaphone('Bodman', 4), ('PTMN', ''))
        self.assertEquals(double_metaphone('BonCoeur', 4), ('PNKR', ''))
        self.assertEquals(double_metaphone('Bond', 4), ('PNT', ''))
        self.assertEquals(double_metaphone('Boscawen', 4), ('PSKN', ''))
        self.assertEquals(double_metaphone('Bosworth', 4), ('PSR0', 'PSRT'))
        self.assertEquals(double_metaphone('Bouchier', 4), ('PX', 'PKR'))
        self.assertEquals(double_metaphone('Bowne', 4), ('PN', ''))
        self.assertEquals(double_metaphone('Bradbury', 4), ('PRTP', ''))
        self.assertEquals(double_metaphone('Bradder', 4), ('PRTR', ''))
        self.assertEquals(double_metaphone('Bradford', 4), ('PRTF', ''))
        self.assertEquals(double_metaphone('Bradstreet', 4), ('PRTS', ''))
        self.assertEquals(double_metaphone('Braham', 4), ('PRHM', ''))
        self.assertEquals(double_metaphone('Brailsford', 4), ('PRLS', ''))
        self.assertEquals(double_metaphone('Brainard', 4), ('PRNR', ''))
        self.assertEquals(double_metaphone('Brandish', 4), ('PRNT', ''))
        self.assertEquals(double_metaphone('Braun', 4), ('PRN', ''))
        self.assertEquals(double_metaphone('Brecc', 4), ('PRK', ''))
        self.assertEquals(double_metaphone('Brent', 4), ('PRNT', ''))
        self.assertEquals(double_metaphone('Brenton', 4), ('PRNT', ''))
        self.assertEquals(double_metaphone('Briggs', 4), ('PRKS', ''))
        self.assertEquals(double_metaphone('Brigham', 4), ('PRM', ''))
        self.assertEquals(double_metaphone('Brobst', 4), ('PRPS', ''))
        self.assertEquals(double_metaphone('Brome', 4), ('PRM', ''))
        self.assertEquals(double_metaphone('Bronson', 4), ('PRNS', ''))
        self.assertEquals(double_metaphone('Brooks', 4), ('PRKS', ''))
        self.assertEquals(double_metaphone('Brouillard', 4), ('PRLR', ''))
        self.assertEquals(double_metaphone('Brown', 4), ('PRN', ''))
        self.assertEquals(double_metaphone('Browne', 4), ('PRN', ''))
        self.assertEquals(double_metaphone('Brownell', 4), ('PRNL', ''))
        self.assertEquals(double_metaphone('Bruley', 4), ('PRL', ''))
        self.assertEquals(double_metaphone('Bryant', 4), ('PRNT', ''))
        self.assertEquals(double_metaphone('Brzozowski', 4), ('PRSS', 'PRTS'))
        self.assertEquals(double_metaphone('Buide', 4), ('PT', ''))
        self.assertEquals(double_metaphone('Bulmer', 4), ('PLMR', ''))
        self.assertEquals(double_metaphone('Bunker', 4), ('PNKR', ''))
        self.assertEquals(double_metaphone('Burden', 4), ('PRTN', ''))
        self.assertEquals(double_metaphone('Burge', 4), ('PRJ', 'PRK'))
        self.assertEquals(double_metaphone('Burgoyne', 4), ('PRKN', ''))
        self.assertEquals(double_metaphone('Burke', 4), ('PRK', ''))
        self.assertEquals(double_metaphone('Burnett', 4), ('PRNT', ''))
        self.assertEquals(double_metaphone('Burpee', 4), ('PRP', ''))
        self.assertEquals(double_metaphone('Bursley', 4), ('PRSL', ''))
        self.assertEquals(double_metaphone('Burton', 4), ('PRTN', ''))
        self.assertEquals(double_metaphone('Bushnell', 4), ('PXNL', ''))
        self.assertEquals(double_metaphone('Buss', 4), ('PS', ''))
        self.assertEquals(double_metaphone('Buswell', 4), ('PSL', ''))
        self.assertEquals(double_metaphone('Butler', 4), ('PTLR', ''))
        self.assertEquals(double_metaphone('Calkin', 4), ('KLKN', ''))
        self.assertEquals(double_metaphone('Canada', 4), ('KNT', ''))
        self.assertEquals(double_metaphone('Canmore', 4), ('KNMR', ''))
        self.assertEquals(double_metaphone('Canney', 4), ('KN', ''))
        self.assertEquals(double_metaphone('Capet', 4), ('KPT', ''))
        self.assertEquals(double_metaphone('Card', 4), ('KRT', ''))
        self.assertEquals(double_metaphone('Carman', 4), ('KRMN', ''))
        self.assertEquals(double_metaphone('Carpenter', 4), ('KRPN', ''))
        self.assertEquals(double_metaphone('Cartwright', 4), ('KRTR', ''))
        self.assertEquals(double_metaphone('Casey', 4), ('KS', ''))
        self.assertEquals(double_metaphone('Catterfield', 4), ('KTRF', ''))
        self.assertEquals(double_metaphone('Ceeley', 4), ('SL', ''))
        self.assertEquals(double_metaphone('Chambers', 4), ('XMPR', ''))
        self.assertEquals(double_metaphone('Champion', 4), ('XMPN', ''))
        self.assertEquals(double_metaphone('Chapman', 4), ('XPMN', ''))
        self.assertEquals(double_metaphone('Chase', 4), ('XS', ''))
        self.assertEquals(double_metaphone('Cheney', 4), ('XN', ''))
        self.assertEquals(double_metaphone('Chetwynd', 4), ('XTNT', ''))
        self.assertEquals(double_metaphone('Chevalier', 4), ('XFL', 'XFLR'))
        self.assertEquals(double_metaphone('Chillingsworth', 4), ('XLNK', ''))
        self.assertEquals(double_metaphone('Christie', 4), ('KRST', ''))
        self.assertEquals(double_metaphone('Chubbuck', 4), ('XPK', ''))
        self.assertEquals(double_metaphone('Church', 4), ('XRX', 'XRK'))
        self.assertEquals(double_metaphone('Clark', 4), ('KLRK', ''))
        self.assertEquals(double_metaphone('Clarke', 4), ('KLRK', ''))
        self.assertEquals(double_metaphone('Cleare', 4), ('KLR', ''))
        self.assertEquals(double_metaphone('Clement', 4), ('KLMN', ''))
        self.assertEquals(double_metaphone('Clerke', 4), ('KLRK', ''))
        self.assertEquals(double_metaphone('Clibben', 4), ('KLPN', ''))
        self.assertEquals(double_metaphone('Clifford', 4), ('KLFR', ''))
        self.assertEquals(double_metaphone('Clivedon', 4), ('KLFT', ''))
        self.assertEquals(double_metaphone('Close', 4), ('KLS', ''))
        self.assertEquals(double_metaphone('Clothilde', 4), ('KL0L', 'KLTL'))
        self.assertEquals(double_metaphone('Cobb', 4), ('KP', ''))
        self.assertEquals(double_metaphone('Coburn', 4), ('KPRN', ''))
        self.assertEquals(double_metaphone('Coburne', 4), ('KPRN', ''))
        self.assertEquals(double_metaphone('Cocke', 4), ('KK', ''))
        self.assertEquals(double_metaphone('Coffin', 4), ('KFN', ''))
        self.assertEquals(double_metaphone('Coffyn', 4), ('KFN', ''))
        self.assertEquals(double_metaphone('Colborne', 4), ('KLPR', ''))
        self.assertEquals(double_metaphone('Colby', 4), ('KLP', ''))
        self.assertEquals(double_metaphone('Cole', 4), ('KL', ''))
        self.assertEquals(double_metaphone('Coleman', 4), ('KLMN', ''))
        self.assertEquals(double_metaphone('Collier', 4), ('KL', 'KLR'))
        self.assertEquals(double_metaphone('Compton', 4), ('KMPT', ''))
        self.assertEquals(double_metaphone('Cone', 4), ('KN', ''))
        self.assertEquals(double_metaphone('Cook', 4), ('KK', ''))
        self.assertEquals(double_metaphone('Cooke', 4), ('KK', ''))
        self.assertEquals(double_metaphone('Cooper', 4), ('KPR', ''))
        self.assertEquals(double_metaphone('Copperthwaite', 4), ('KPR0', 'KPRT'))
        self.assertEquals(double_metaphone('Corbet', 4), ('KRPT', ''))
        self.assertEquals(double_metaphone('Corell', 4), ('KRL', ''))
        self.assertEquals(double_metaphone('Corey', 4), ('KR', ''))
        self.assertEquals(double_metaphone('Corlies', 4), ('KRLS', ''))
        self.assertEquals(double_metaphone('Corneliszen', 4), ('KRNL', ''))
        self.assertEquals(double_metaphone('Cornelius', 4), ('KRNL', ''))
        self.assertEquals(double_metaphone('Cornwallis', 4), ('KRNL', ''))
        self.assertEquals(double_metaphone('Cosgrove', 4), ('KSKR', ''))
        self.assertEquals(double_metaphone('Count of Brionne', 4), ('KNTF', ''))
        self.assertEquals(double_metaphone('Covill', 4), ('KFL', ''))
        self.assertEquals(double_metaphone('Cowperthwaite', 4), ('KPR0', 'KPRT'))
        self.assertEquals(double_metaphone('Cowperwaite', 4), ('KPRT', ''))
        self.assertEquals(double_metaphone('Crane', 4), ('KRN', ''))
        self.assertEquals(double_metaphone('Creagmile', 4), ('KRKM', ''))
        self.assertEquals(double_metaphone('Crew', 4), ('KR', 'KRF'))
        self.assertEquals(double_metaphone('Crispin', 4), ('KRSP', ''))
        self.assertEquals(double_metaphone('Crocker', 4), ('KRKR', ''))
        self.assertEquals(double_metaphone('Crockett', 4), ('KRKT', ''))
        self.assertEquals(double_metaphone('Crosby', 4), ('KRSP', ''))
        self.assertEquals(double_metaphone('Crump', 4), ('KRMP', ''))
        self.assertEquals(double_metaphone('Cunningham', 4), ('KNNK', ''))
        self.assertEquals(double_metaphone('Curtis', 4), ('KRTS', ''))
        self.assertEquals(double_metaphone('Cutha', 4), ('K0', 'KT'))
        self.assertEquals(double_metaphone('Cutter', 4), ('KTR', ''))
        self.assertEquals(double_metaphone('D\'Aubigny', 4), ('TPN', 'TPKN'))
        self.assertEquals(double_metaphone('DAVIS', 4), ('TFS', ''))
        self.assertEquals(double_metaphone('Dabinott', 4), ('TPNT', ''))
        self.assertEquals(double_metaphone('Dacre', 4), ('TKR', ''))
        self.assertEquals(double_metaphone('Daggett', 4), ('TKT', ''))
        self.assertEquals(double_metaphone('Danvers', 4), ('TNFR', ''))
        self.assertEquals(double_metaphone('Darcy', 4), ('TRS', ''))
        self.assertEquals(double_metaphone('Davis', 4), ('TFS', ''))
        self.assertEquals(double_metaphone('Dawn', 4), ('TN', ''))
        self.assertEquals(double_metaphone('Dawson', 4), ('TSN', ''))
        self.assertEquals(double_metaphone('Day', 4), ('T', ''))
        self.assertEquals(double_metaphone('Daye', 4), ('T', ''))
        self.assertEquals(double_metaphone('DeGrenier', 4), ('TKRN', ''))
        self.assertEquals(double_metaphone('Dean', 4), ('TN', ''))
        self.assertEquals(double_metaphone('Deekindaugh', 4), ('TKNT', ''))
        self.assertEquals(double_metaphone('Dennis', 4), ('TNS', ''))
        self.assertEquals(double_metaphone('Denny', 4), ('TN', ''))
        self.assertEquals(double_metaphone('Denton', 4), ('TNTN', ''))
        self.assertEquals(double_metaphone('Desborough', 4), ('TSPR', ''))
        self.assertEquals(double_metaphone('Despenser', 4), ('TSPN', ''))
        self.assertEquals(double_metaphone('Deverill', 4), ('TFRL', ''))
        self.assertEquals(double_metaphone('Devine', 4), ('TFN', ''))
        self.assertEquals(double_metaphone('Dexter', 4), ('TKST', ''))
        self.assertEquals(double_metaphone('Dillaway', 4), ('TL', ''))
        self.assertEquals(double_metaphone('Dimmick', 4), ('TMK', ''))
        self.assertEquals(double_metaphone('Dinan', 4), ('TNN', ''))
        self.assertEquals(double_metaphone('Dix', 4), ('TKS', ''))
        self.assertEquals(double_metaphone('Doggett', 4), ('TKT', ''))
        self.assertEquals(double_metaphone('Donahue', 4), ('TNH', ''))
        self.assertEquals(double_metaphone('Dorfman', 4), ('TRFM', ''))
        self.assertEquals(double_metaphone('Dorris', 4), ('TRS', ''))
        self.assertEquals(double_metaphone('Dow', 4), ('T', 'TF'))
        self.assertEquals(double_metaphone('Downey', 4), ('TN', ''))
        self.assertEquals(double_metaphone('Downing', 4), ('TNNK', ''))
        self.assertEquals(double_metaphone('Dowsett', 4), ('TST', ''))
        self.assertEquals(double_metaphone('Duck?', 4), ('TK', ''))
        self.assertEquals(double_metaphone('Dudley', 4), ('TTL', ''))
        self.assertEquals(double_metaphone('Duffy', 4), ('TF', ''))
        self.assertEquals(double_metaphone('Dunn', 4), ('TN', ''))
        self.assertEquals(double_metaphone('Dunsterville', 4), ('TNST', ''))
        self.assertEquals(double_metaphone('Durrant', 4), ('TRNT', ''))
        self.assertEquals(double_metaphone('Durrin', 4), ('TRN', ''))
        self.assertEquals(double_metaphone('Dustin', 4), ('TSTN', ''))
        self.assertEquals(double_metaphone('Duston', 4), ('TSTN', ''))
        self.assertEquals(double_metaphone('Eames', 4), ('AMS', ''))
        self.assertEquals(double_metaphone('Early', 4), ('ARL', ''))
        self.assertEquals(double_metaphone('Easty', 4), ('AST', ''))
        self.assertEquals(double_metaphone('Ebbett', 4), ('APT', ''))
        self.assertEquals(double_metaphone('Eberbach', 4), ('APRP', ''))
        self.assertEquals(double_metaphone('Eberhard', 4), ('APRR', ''))
        self.assertEquals(double_metaphone('Eddy', 4), ('AT', ''))
        self.assertEquals(double_metaphone('Edenden', 4), ('ATNT', ''))
        self.assertEquals(double_metaphone('Edwards', 4), ('ATRT', ''))
        self.assertEquals(double_metaphone('Eglinton', 4), ('AKLN', 'ALNT'))
        self.assertEquals(double_metaphone('Eliot', 4), ('ALT', ''))
        self.assertEquals(double_metaphone('Elizabeth', 4), ('ALSP', ''))
        self.assertEquals(double_metaphone('Ellis', 4), ('ALS', ''))
        self.assertEquals(double_metaphone('Ellison', 4), ('ALSN', ''))
        self.assertEquals(double_metaphone('Ellot', 4), ('ALT', ''))
        self.assertEquals(double_metaphone('Elny', 4), ('ALN', ''))
        self.assertEquals(double_metaphone('Elsner', 4), ('ALSN', ''))
        self.assertEquals(double_metaphone('Emerson', 4), ('AMRS', ''))
        self.assertEquals(double_metaphone('Empson', 4), ('AMPS', ''))
        self.assertEquals(double_metaphone('Est', 4), ('AST', ''))
        self.assertEquals(double_metaphone('Estabrook', 4), ('ASTP', ''))
        self.assertEquals(double_metaphone('Estes', 4), ('ASTS', ''))
        self.assertEquals(double_metaphone('Estey', 4), ('AST', ''))
        self.assertEquals(double_metaphone('Evans', 4), ('AFNS', ''))
        self.assertEquals(double_metaphone('Fallowell', 4), ('FLL', ''))
        self.assertEquals(double_metaphone('Farnsworth', 4), ('FRNS', ''))
        self.assertEquals(double_metaphone('Feake', 4), ('FK', ''))
        self.assertEquals(double_metaphone('Feke', 4), ('FK', ''))
        self.assertEquals(double_metaphone('Fellows', 4), ('FLS', ''))
        self.assertEquals(double_metaphone('Fettiplace', 4), ('FTPL', ''))
        self.assertEquals(double_metaphone('Finney', 4), ('FN', ''))
        self.assertEquals(double_metaphone('Fischer', 4), ('FXR', 'FSKR'))
        self.assertEquals(double_metaphone('Fisher', 4), ('FXR', ''))
        self.assertEquals(double_metaphone('Fisk', 4), ('FSK', ''))
        self.assertEquals(double_metaphone('Fiske', 4), ('FSK', ''))
        self.assertEquals(double_metaphone('Fletcher', 4), ('FLXR', ''))
        self.assertEquals(double_metaphone('Folger', 4), ('FLKR', 'FLJR'))
        self.assertEquals(double_metaphone('Foliot', 4), ('FLT', ''))
        self.assertEquals(double_metaphone('Folyot', 4), ('FLT', ''))
        self.assertEquals(double_metaphone('Fones', 4), ('FNS', ''))
        self.assertEquals(double_metaphone('Fordham', 4), ('FRTM', ''))
        self.assertEquals(double_metaphone('Forstner', 4), ('FRST', ''))
        self.assertEquals(double_metaphone('Fosten', 4), ('FSTN', ''))
        self.assertEquals(double_metaphone('Foster', 4), ('FSTR', ''))
        self.assertEquals(double_metaphone('Foulke', 4), ('FLK', ''))
        self.assertEquals(double_metaphone('Fowler', 4), ('FLR', ''))
        self.assertEquals(double_metaphone('Foxwell', 4), ('FKSL', ''))
        self.assertEquals(double_metaphone('Fraley', 4), ('FRL', ''))
        self.assertEquals(double_metaphone('Franceys', 4), ('FRNS', ''))
        self.assertEquals(double_metaphone('Franke', 4), ('FRNK', ''))
        self.assertEquals(double_metaphone('Frascella', 4), ('FRSL', ''))
        self.assertEquals(double_metaphone('Frazer', 4), ('FRSR', ''))
        self.assertEquals(double_metaphone('Fredd', 4), ('FRT', ''))
        self.assertEquals(double_metaphone('Freeman', 4), ('FRMN', ''))
        self.assertEquals(double_metaphone('French', 4), ('FRNX', 'FRNK'))
        self.assertEquals(double_metaphone('Freville', 4), ('FRFL', ''))
        self.assertEquals(double_metaphone('Frey', 4), ('FR', ''))
        self.assertEquals(double_metaphone('Frick', 4), ('FRK', ''))
        self.assertEquals(double_metaphone('Frier', 4), ('FR', 'FRR'))
        self.assertEquals(double_metaphone('Froe', 4), ('FR', ''))
        self.assertEquals(double_metaphone('Frorer', 4), ('FRRR', ''))
        self.assertEquals(double_metaphone('Frost', 4), ('FRST', ''))
        self.assertEquals(double_metaphone('Frothingham', 4), ('FR0N', 'FRTN'))
        self.assertEquals(double_metaphone('Fry', 4), ('FR', ''))
        self.assertEquals(double_metaphone('Gaffney', 4), ('KFN', ''))
        self.assertEquals(double_metaphone('Gage', 4), ('KJ', 'KK'))
        self.assertEquals(double_metaphone('Gallion', 4), ('KLN', ''))
        self.assertEquals(double_metaphone('Gallishan', 4), ('KLXN', ''))
        self.assertEquals(double_metaphone('Gamble', 4), ('KMPL', ''))
        self.assertEquals(double_metaphone('Garbrand', 4), ('KRPR', ''))
        self.assertEquals(double_metaphone('Gardner', 4), ('KRTN', ''))
        self.assertEquals(double_metaphone('Garrett', 4), ('KRT', ''))
        self.assertEquals(double_metaphone('Gassner', 4), ('KSNR', ''))
        self.assertEquals(double_metaphone('Gater', 4), ('KTR', ''))
        self.assertEquals(double_metaphone('Gaunt', 4), ('KNT', ''))
        self.assertEquals(double_metaphone('Gayer', 4), ('KR', ''))
        self.assertEquals(double_metaphone('Gerken', 4), ('KRKN', 'JRKN'))
        self.assertEquals(double_metaphone('Gerritsen', 4), ('KRTS', 'JRTS'))
        self.assertEquals(double_metaphone('Gibbs', 4), ('KPS', 'JPS'))
        self.assertEquals(double_metaphone('Giffard', 4), ('JFRT', 'KFRT'))
        self.assertEquals(double_metaphone('Gilbert', 4), ('KLPR', 'JLPR'))
        self.assertEquals(double_metaphone('Gill', 4), ('KL', 'JL'))
        self.assertEquals(double_metaphone('Gilman', 4), ('KLMN', 'JLMN'))
        self.assertEquals(double_metaphone('Glass', 4), ('KLS', ''))
        self.assertEquals(double_metaphone('GoddardGifford', 4), ('KTRJ', ''))
        self.assertEquals(double_metaphone('Godfrey', 4), ('KTFR', ''))
        self.assertEquals(double_metaphone('Godwin', 4), ('KTN', ''))
        self.assertEquals(double_metaphone('Goodale', 4), ('KTL', ''))
        self.assertEquals(double_metaphone('Goodnow', 4), ('KTN', 'KTNF'))
        self.assertEquals(double_metaphone('Gorham', 4), ('KRM', ''))
        self.assertEquals(double_metaphone('Goseline', 4), ('KSLN', ''))
        self.assertEquals(double_metaphone('Gott', 4), ('KT', ''))
        self.assertEquals(double_metaphone('Gould', 4), ('KLT', ''))
        self.assertEquals(double_metaphone('Grafton', 4), ('KRFT', ''))
        self.assertEquals(double_metaphone('Grant', 4), ('KRNT', ''))
        self.assertEquals(double_metaphone('Gray', 4), ('KR', ''))
        self.assertEquals(double_metaphone('Green', 4), ('KRN', ''))
        self.assertEquals(double_metaphone('Griffin', 4), ('KRFN', ''))
        self.assertEquals(double_metaphone('Grill', 4), ('KRL', ''))
        self.assertEquals(double_metaphone('Grim', 4), ('KRM', ''))
        self.assertEquals(double_metaphone('Grisgonelle', 4), ('KRSK', ''))
        self.assertEquals(double_metaphone('Gross', 4), ('KRS', ''))
        self.assertEquals(double_metaphone('Guba', 4), ('KP', ''))
        self.assertEquals(double_metaphone('Gybbes', 4), ('KPS', 'JPS'))
        self.assertEquals(double_metaphone('Haburne', 4), ('HPRN', ''))
        self.assertEquals(double_metaphone('Hackburne', 4), ('HKPR', ''))
        self.assertEquals(double_metaphone('Haddon?', 4), ('HTN', ''))
        self.assertEquals(double_metaphone('Haines', 4), ('HNS', ''))
        self.assertEquals(double_metaphone('Hale', 4), ('HL', ''))
        self.assertEquals(double_metaphone('Hall', 4), ('HL', ''))
        self.assertEquals(double_metaphone('Hallet', 4), ('HLT', ''))
        self.assertEquals(double_metaphone('Hallock', 4), ('HLK', ''))
        self.assertEquals(double_metaphone('Halstead', 4), ('HLST', ''))
        self.assertEquals(double_metaphone('Hammond', 4), ('HMNT', ''))
        self.assertEquals(double_metaphone('Hance', 4), ('HNS', ''))
        self.assertEquals(double_metaphone('Handy', 4), ('HNT', ''))
        self.assertEquals(double_metaphone('Hanson', 4), ('HNSN', ''))
        self.assertEquals(double_metaphone('Harasek', 4), ('HRSK', ''))
        self.assertEquals(double_metaphone('Harcourt', 4), ('HRKR', ''))
        self.assertEquals(double_metaphone('Hardy', 4), ('HRT', ''))
        self.assertEquals(double_metaphone('Harlock', 4), ('HRLK', ''))
        self.assertEquals(double_metaphone('Harris', 4), ('HRS', ''))
        self.assertEquals(double_metaphone('Hartley', 4), ('HRTL', ''))
        self.assertEquals(double_metaphone('Harvey', 4), ('HRF', ''))
        self.assertEquals(double_metaphone('Harvie', 4), ('HRF', ''))
        self.assertEquals(double_metaphone('Harwood', 4), ('HRT', ''))
        self.assertEquals(double_metaphone('Hathaway', 4), ('H0', 'HT'))
        self.assertEquals(double_metaphone('Haukeness', 4), ('HKNS', ''))
        self.assertEquals(double_metaphone('Hawkes', 4), ('HKS', ''))
        self.assertEquals(double_metaphone('Hawkhurst', 4), ('HKRS', ''))
        self.assertEquals(double_metaphone('Hawkins', 4), ('HKNS', ''))
        self.assertEquals(double_metaphone('Hawley', 4), ('HL', ''))
        self.assertEquals(double_metaphone('Heald', 4), ('HLT', ''))
        self.assertEquals(double_metaphone('Helsdon', 4), ('HLST', ''))
        self.assertEquals(double_metaphone('Hemenway', 4), ('HMN', ''))
        self.assertEquals(double_metaphone('Hemmenway', 4), ('HMN', ''))
        self.assertEquals(double_metaphone('Henck', 4), ('HNK', ''))
        self.assertEquals(double_metaphone('Henderson', 4), ('HNTR', ''))
        self.assertEquals(double_metaphone('Hendricks', 4), ('HNTR', ''))
        self.assertEquals(double_metaphone('Hersey', 4), ('HRS', ''))
        self.assertEquals(double_metaphone('Hewes', 4), ('HS', ''))
        self.assertEquals(double_metaphone('Heyman', 4), ('HMN', ''))
        self.assertEquals(double_metaphone('Hicks', 4), ('HKS', ''))
        self.assertEquals(double_metaphone('Hidden', 4), ('HTN', ''))
        self.assertEquals(double_metaphone('Higgs', 4), ('HKS', ''))
        self.assertEquals(double_metaphone('Hill', 4), ('HL', ''))
        self.assertEquals(double_metaphone('Hills', 4), ('HLS', ''))
        self.assertEquals(double_metaphone('Hinckley', 4), ('HNKL', ''))
        self.assertEquals(double_metaphone('Hipwell', 4), ('HPL', ''))
        self.assertEquals(double_metaphone('Hobart', 4), ('HPRT', ''))
        self.assertEquals(double_metaphone('Hoben', 4), ('HPN', ''))
        self.assertEquals(double_metaphone('Hoffmann', 4), ('HFMN', ''))
        self.assertEquals(double_metaphone('Hogan', 4), ('HKN', ''))
        self.assertEquals(double_metaphone('Holmes', 4), ('HLMS', ''))
        self.assertEquals(double_metaphone('Hoo', 4), ('H', ''))
        self.assertEquals(double_metaphone('Hooker', 4), ('HKR', ''))
        self.assertEquals(double_metaphone('Hopcott', 4), ('HPKT', ''))
        self.assertEquals(double_metaphone('Hopkins', 4), ('HPKN', ''))
        self.assertEquals(double_metaphone('Hopkinson', 4), ('HPKN', ''))
        self.assertEquals(double_metaphone('Hornsey', 4), ('HRNS', ''))
        self.assertEquals(double_metaphone('Houckgeest', 4), ('HKJS', 'HKKS'))
        self.assertEquals(double_metaphone('Hough', 4), ('H', ''))
        self.assertEquals(double_metaphone('Houstin', 4), ('HSTN', ''))
        self.assertEquals(double_metaphone('How', 4), ('H', 'HF'))
        self.assertEquals(double_metaphone('Howe', 4), ('H', ''))
        self.assertEquals(double_metaphone('Howland', 4), ('HLNT', ''))
        self.assertEquals(double_metaphone('Hubner', 4), ('HPNR', ''))
        self.assertEquals(double_metaphone('Hudnut', 4), ('HTNT', ''))
        self.assertEquals(double_metaphone('Hughes', 4), ('HS', ''))
        self.assertEquals(double_metaphone('Hull', 4), ('HL', ''))
        self.assertEquals(double_metaphone('Hulme', 4), ('HLM', ''))
        self.assertEquals(double_metaphone('Hume', 4), ('HM', ''))
        self.assertEquals(double_metaphone('Hundertumark', 4), ('HNTR', ''))
        self.assertEquals(double_metaphone('Hundley', 4), ('HNTL', ''))
        self.assertEquals(double_metaphone('Hungerford', 4), ('HNKR', 'HNJR'))
        self.assertEquals(double_metaphone('Hunt', 4), ('HNT', ''))
        self.assertEquals(double_metaphone('Hurst', 4), ('HRST', ''))
        self.assertEquals(double_metaphone('Husbands', 4), ('HSPN', ''))
        self.assertEquals(double_metaphone('Hussey', 4), ('HS', ''))
        self.assertEquals(double_metaphone('Husted', 4), ('HSTT', ''))
        self.assertEquals(double_metaphone('Hutchins', 4), ('HXNS', ''))
        self.assertEquals(double_metaphone('Hutchinson', 4), ('HXNS', ''))
        self.assertEquals(double_metaphone('Huttinger', 4), ('HTNK', 'HTNJ'))
        self.assertEquals(double_metaphone('Huybertsen', 4), ('HPRT', ''))
        self.assertEquals(double_metaphone('Iddenden', 4), ('ATNT', ''))
        self.assertEquals(double_metaphone('Ingraham', 4), ('ANKR', ''))
        self.assertEquals(double_metaphone('Ives', 4), ('AFS', ''))
        self.assertEquals(double_metaphone('Jackson', 4), ('JKSN', 'AKSN'))
        self.assertEquals(double_metaphone('Jacob', 4), ('JKP', 'AKP'))
        self.assertEquals(double_metaphone('Jans', 4), ('JNS', 'ANS'))
        self.assertEquals(double_metaphone('Jenkins', 4), ('JNKN', 'ANKN'))
        self.assertEquals(double_metaphone('Jewett', 4), ('JT', 'AT'))
        self.assertEquals(double_metaphone('Jewitt', 4), ('JT', 'AT'))
        self.assertEquals(double_metaphone('Johnson', 4), ('JNSN', 'ANSN'))
        self.assertEquals(double_metaphone('Jones', 4), ('JNS', 'ANS'))
        self.assertEquals(double_metaphone('Josephine', 4), ('JSFN', 'HSFN'))
        self.assertEquals(double_metaphone('Judd', 4), ('JT', 'AT'))
        self.assertEquals(double_metaphone('June', 4), ('JN', 'AN'))
        self.assertEquals(double_metaphone('Kamarowska', 4), ('KMRS', ''))
        self.assertEquals(double_metaphone('Kay', 4), ('K', ''))
        self.assertEquals(double_metaphone('Kelley', 4), ('KL', ''))
        self.assertEquals(double_metaphone('Kelly', 4), ('KL', ''))
        self.assertEquals(double_metaphone('Keymber', 4), ('KMPR', ''))
        self.assertEquals(double_metaphone('Keynes', 4), ('KNS', ''))
        self.assertEquals(double_metaphone('Kilham', 4), ('KLM', ''))
        self.assertEquals(double_metaphone('Kim', 4), ('KM', ''))
        self.assertEquals(double_metaphone('Kimball', 4), ('KMPL', ''))
        self.assertEquals(double_metaphone('King', 4), ('KNK', ''))
        self.assertEquals(double_metaphone('Kinsey', 4), ('KNS', ''))
        self.assertEquals(double_metaphone('Kirk', 4), ('KRK', ''))
        self.assertEquals(double_metaphone('Kirton', 4), ('KRTN', ''))
        self.assertEquals(double_metaphone('Kistler', 4), ('KSTL', ''))
        self.assertEquals(double_metaphone('Kitchen', 4), ('KXN', ''))
        self.assertEquals(double_metaphone('Kitson', 4), ('KTSN', ''))
        self.assertEquals(double_metaphone('Klett', 4), ('KLT', ''))
        self.assertEquals(double_metaphone('Kline', 4), ('KLN', ''))
        self.assertEquals(double_metaphone('Knapp', 4), ('NP', ''))
        self.assertEquals(double_metaphone('Knight', 4), ('NT', ''))
        self.assertEquals(double_metaphone('Knote', 4), ('NT', ''))
        self.assertEquals(double_metaphone('Knott', 4), ('NT', ''))
        self.assertEquals(double_metaphone('Knox', 4), ('NKS', ''))
        self.assertEquals(double_metaphone('Koeller', 4), ('KLR', ''))
        self.assertEquals(double_metaphone('La Pointe', 4), ('LPNT', ''))
        self.assertEquals(double_metaphone('LaPlante', 4), ('LPLN', ''))
        self.assertEquals(double_metaphone('Laimbeer', 4), ('LMPR', ''))
        self.assertEquals(double_metaphone('Lamb', 4), ('LMP', ''))
        self.assertEquals(double_metaphone('Lambertson', 4), ('LMPR', ''))
        self.assertEquals(double_metaphone('Lancto', 4), ('LNKT', ''))
        self.assertEquals(double_metaphone('Landry', 4), ('LNTR', ''))
        self.assertEquals(double_metaphone('Lane', 4), ('LN', ''))
        self.assertEquals(double_metaphone('Langendyck', 4), ('LNJN', 'LNKN'))
        self.assertEquals(double_metaphone('Langer', 4), ('LNKR', 'LNJR'))
        self.assertEquals(double_metaphone('Langford', 4), ('LNKF', ''))
        self.assertEquals(double_metaphone('Lantersee', 4), ('LNTR', ''))
        self.assertEquals(double_metaphone('Laquer', 4), ('LKR', ''))
        self.assertEquals(double_metaphone('Larkin', 4), ('LRKN', ''))
        self.assertEquals(double_metaphone('Latham', 4), ('LTM', ''))
        self.assertEquals(double_metaphone('Lathrop', 4), ('L0RP', 'LTRP'))
        self.assertEquals(double_metaphone('Lauter', 4), ('LTR', ''))
        self.assertEquals(double_metaphone('Lawrence', 4), ('LRNS', ''))
        self.assertEquals(double_metaphone('Leach', 4), ('LK', ''))
        self.assertEquals(double_metaphone('Leager', 4), ('LKR', 'LJR'))
        self.assertEquals(double_metaphone('Learned', 4), ('LRNT', ''))
        self.assertEquals(double_metaphone('Leavitt', 4), ('LFT', ''))
        self.assertEquals(double_metaphone('Lee', 4), ('L', ''))
        self.assertEquals(double_metaphone('Leete', 4), ('LT', ''))
        self.assertEquals(double_metaphone('Leggett', 4), ('LKT', ''))
        self.assertEquals(double_metaphone('Leland', 4), ('LLNT', ''))
        self.assertEquals(double_metaphone('Leonard', 4), ('LNRT', ''))
        self.assertEquals(double_metaphone('Lester', 4), ('LSTR', ''))
        self.assertEquals(double_metaphone('Lestrange', 4), ('LSTR', ''))
        self.assertEquals(double_metaphone('Lethem', 4), ('L0M', 'LTM'))
        self.assertEquals(double_metaphone('Levine', 4), ('LFN', ''))
        self.assertEquals(double_metaphone('Lewes', 4), ('LS', ''))
        self.assertEquals(double_metaphone('Lewis', 4), ('LS', ''))
        self.assertEquals(double_metaphone('Lincoln', 4), ('LNKL', ''))
        self.assertEquals(double_metaphone('Lindsey', 4), ('LNTS', ''))
        self.assertEquals(double_metaphone('Linher', 4), ('LNR', ''))
        self.assertEquals(double_metaphone('Lippet', 4), ('LPT', ''))
        self.assertEquals(double_metaphone('Lippincott', 4), ('LPNK', ''))
        self.assertEquals(double_metaphone('Lockwood', 4), ('LKT', ''))
        self.assertEquals(double_metaphone('Loines', 4), ('LNS', ''))
        self.assertEquals(double_metaphone('Lombard', 4), ('LMPR', ''))
        self.assertEquals(double_metaphone('Long', 4), ('LNK', ''))
        self.assertEquals(double_metaphone('Longespee', 4), ('LNJS', 'LNKS'))
        self.assertEquals(double_metaphone('Look', 4), ('LK', ''))
        self.assertEquals(double_metaphone('Lounsberry', 4), ('LNSP', ''))
        self.assertEquals(double_metaphone('Lounsbury', 4), ('LNSP', ''))
        self.assertEquals(double_metaphone('Louthe', 4), ('L0', 'LT'))
        self.assertEquals(double_metaphone('Loveyne', 4), ('LFN', ''))
        self.assertEquals(double_metaphone('Lowe', 4), ('L', ''))
        self.assertEquals(double_metaphone('Ludlam', 4), ('LTLM', ''))
        self.assertEquals(double_metaphone('Lumbard', 4), ('LMPR', ''))
        self.assertEquals(double_metaphone('Lund', 4), ('LNT', ''))
        self.assertEquals(double_metaphone('Luno', 4), ('LN', ''))
        self.assertEquals(double_metaphone('Lutz', 4), ('LTS', ''))
        self.assertEquals(double_metaphone('Lydia', 4), ('LT', ''))
        self.assertEquals(double_metaphone('Lynne', 4), ('LN', ''))
        self.assertEquals(double_metaphone('Lyon', 4), ('LN', ''))
        self.assertEquals(double_metaphone('MacAlpin', 4), ('MKLP', ''))
        self.assertEquals(double_metaphone('MacBricc', 4), ('MKPR', ''))
        self.assertEquals(double_metaphone('MacCrinan', 4), ('MKRN', ''))
        self.assertEquals(double_metaphone('MacKenneth', 4), ('MKN0', 'MKNT'))
        self.assertEquals(double_metaphone('MacMael nam Bo', 4), ('MKML', ''))
        self.assertEquals(double_metaphone('MacMurchada', 4), ('MKMR', ''))
        self.assertEquals(double_metaphone('Macomber', 4), ('MKMP', ''))
        self.assertEquals(double_metaphone('Macy', 4), ('MS', ''))
        self.assertEquals(double_metaphone('Magnus', 4), ('MNS', 'MKNS'))
        self.assertEquals(double_metaphone('Mahien', 4), ('MHN', ''))
        self.assertEquals(double_metaphone('Malmains', 4), ('MLMN', ''))
        self.assertEquals(double_metaphone('Malory', 4), ('MLR', ''))
        self.assertEquals(double_metaphone('Mancinelli', 4), ('MNSN', ''))
        self.assertEquals(double_metaphone('Mancini', 4), ('MNSN', ''))
        self.assertEquals(double_metaphone('Mann', 4), ('MN', ''))
        self.assertEquals(double_metaphone('Manning', 4), ('MNNK', ''))
        self.assertEquals(double_metaphone('Manter', 4), ('MNTR', ''))
        self.assertEquals(double_metaphone('Marion', 4), ('MRN', ''))
        self.assertEquals(double_metaphone('Marley', 4), ('MRL', ''))
        self.assertEquals(double_metaphone('Marmion', 4), ('MRMN', ''))
        self.assertEquals(double_metaphone('Marquart', 4), ('MRKR', ''))
        self.assertEquals(double_metaphone('Marsh', 4), ('MRX', ''))
        self.assertEquals(double_metaphone('Marshal', 4), ('MRXL', ''))
        self.assertEquals(double_metaphone('Marshall', 4), ('MRXL', ''))
        self.assertEquals(double_metaphone('Martel', 4), ('MRTL', ''))
        self.assertEquals(double_metaphone('Martha', 4), ('MR0', 'MRT'))
        self.assertEquals(double_metaphone('Martin', 4), ('MRTN', ''))
        self.assertEquals(double_metaphone('Marturano', 4), ('MRTR', ''))
        self.assertEquals(double_metaphone('Marvin', 4), ('MRFN', ''))
        self.assertEquals(double_metaphone('Mary', 4), ('MR', ''))
        self.assertEquals(double_metaphone('Mason', 4), ('MSN', ''))
        self.assertEquals(double_metaphone('Maxwell', 4), ('MKSL', ''))
        self.assertEquals(double_metaphone('Mayhew', 4), ('MH', 'MHF'))
        self.assertEquals(double_metaphone('McAllaster', 4), ('MKLS', ''))
        self.assertEquals(double_metaphone('McAllister', 4), ('MKLS', ''))
        self.assertEquals(double_metaphone('McConnell', 4), ('MKNL', ''))
        self.assertEquals(double_metaphone('McFarland', 4), ('MKFR', ''))
        self.assertEquals(double_metaphone('McIlroy', 4), ('MSLR', ''))
        self.assertEquals(double_metaphone('McNair', 4), ('MKNR', ''))
        self.assertEquals(double_metaphone('McNair-Landry', 4), ('MKNR', ''))
        self.assertEquals(double_metaphone('McRaven', 4), ('MKRF', ''))
        self.assertEquals(double_metaphone('Mead', 4), ('MT', ''))
        self.assertEquals(double_metaphone('Meade', 4), ('MT', ''))
        self.assertEquals(double_metaphone('Meck', 4), ('MK', ''))
        self.assertEquals(double_metaphone('Melton', 4), ('MLTN', ''))
        self.assertEquals(double_metaphone('Mendenhall', 4), ('MNTN', ''))
        self.assertEquals(double_metaphone('Mering', 4), ('MRNK', ''))
        self.assertEquals(double_metaphone('Merrick', 4), ('MRK', ''))
        self.assertEquals(double_metaphone('Merry', 4), ('MR', ''))
        self.assertEquals(double_metaphone('Mighill', 4), ('ML', ''))
        self.assertEquals(double_metaphone('Miller', 4), ('MLR', ''))
        self.assertEquals(double_metaphone('Milton', 4), ('MLTN', ''))
        self.assertEquals(double_metaphone('Mohun', 4), ('MHN', ''))
        self.assertEquals(double_metaphone('Montague', 4), ('MNTK', ''))
        self.assertEquals(double_metaphone('Montboucher', 4), ('MNTP', ''))
        self.assertEquals(double_metaphone('Moore', 4), ('MR', ''))
        self.assertEquals(double_metaphone('Morrel', 4), ('MRL', ''))
        self.assertEquals(double_metaphone('Morrill', 4), ('MRL', ''))
        self.assertEquals(double_metaphone('Morris', 4), ('MRS', ''))
        self.assertEquals(double_metaphone('Morton', 4), ('MRTN', ''))
        self.assertEquals(double_metaphone('Moton', 4), ('MTN', ''))
        self.assertEquals(double_metaphone('Muir', 4), ('MR', ''))
        self.assertEquals(double_metaphone('Mulferd', 4), ('MLFR', ''))
        self.assertEquals(double_metaphone('Mullins', 4), ('MLNS', ''))
        self.assertEquals(double_metaphone('Mulso', 4), ('MLS', ''))
        self.assertEquals(double_metaphone('Munger', 4), ('MNKR', 'MNJR'))
        self.assertEquals(double_metaphone('Munt', 4), ('MNT', ''))
        self.assertEquals(double_metaphone('Murchad', 4), ('MRXT', 'MRKT'))
        self.assertEquals(double_metaphone('Murdock', 4), ('MRTK', ''))
        self.assertEquals(double_metaphone('Murray', 4), ('MR', ''))
        self.assertEquals(double_metaphone('Muskett', 4), ('MSKT', ''))
        self.assertEquals(double_metaphone('Myers', 4), ('MRS', ''))
        self.assertEquals(double_metaphone('Myrick', 4), ('MRK', ''))
        self.assertEquals(double_metaphone('NORRIS', 4), ('NRS', ''))
        self.assertEquals(double_metaphone('Nayle', 4), ('NL', ''))
        self.assertEquals(double_metaphone('Newcomb', 4), ('NKMP', ''))
        self.assertEquals(double_metaphone('Newcomb(e)', 4), ('NKMP', ''))
        self.assertEquals(double_metaphone('Newkirk', 4), ('NKRK', ''))
        self.assertEquals(double_metaphone('Newton', 4), ('NTN', ''))
        self.assertEquals(double_metaphone('Niles', 4), ('NLS', ''))
        self.assertEquals(double_metaphone('Noble', 4), ('NPL', ''))
        self.assertEquals(double_metaphone('Noel', 4), ('NL', ''))
        self.assertEquals(double_metaphone('Northend', 4), ('NR0N', 'NRTN'))
        self.assertEquals(double_metaphone('Norton', 4), ('NRTN', ''))
        self.assertEquals(double_metaphone('Nutter', 4), ('NTR', ''))
        self.assertEquals(double_metaphone('Odding', 4), ('ATNK', ''))
        self.assertEquals(double_metaphone('Odenbaugh', 4), ('ATNP', ''))
        self.assertEquals(double_metaphone('Ogborn', 4), ('AKPR', ''))
        self.assertEquals(double_metaphone('Oppenheimer', 4), ('APNM', ''))
        self.assertEquals(double_metaphone('Otis', 4), ('ATS', ''))
        self.assertEquals(double_metaphone('Oviatt', 4), ('AFT', ''))
        self.assertEquals(double_metaphone('PRUST?', 4), ('PRST', ''))
        self.assertEquals(double_metaphone('Paddock', 4), ('PTK', ''))
        self.assertEquals(double_metaphone('Page', 4), ('PJ', 'PK'))
        self.assertEquals(double_metaphone('Paine', 4), ('PN', ''))
        self.assertEquals(double_metaphone('Paist', 4), ('PST', ''))
        self.assertEquals(double_metaphone('Palmer', 4), ('PLMR', ''))
        self.assertEquals(double_metaphone('Park', 4), ('PRK', ''))
        self.assertEquals(double_metaphone('Parker', 4), ('PRKR', ''))
        self.assertEquals(double_metaphone('Parkhurst', 4), ('PRKR', ''))
        self.assertEquals(double_metaphone('Parrat', 4), ('PRT', ''))
        self.assertEquals(double_metaphone('Parsons', 4), ('PRSN', ''))
        self.assertEquals(double_metaphone('Partridge', 4), ('PRTR', ''))
        self.assertEquals(double_metaphone('Pashley', 4), ('PXL', ''))
        self.assertEquals(double_metaphone('Pasley', 4), ('PSL', ''))
        self.assertEquals(double_metaphone('Patrick', 4), ('PTRK', ''))
        self.assertEquals(double_metaphone('Pattee', 4), ('PT', ''))
        self.assertEquals(double_metaphone('Patten', 4), ('PTN', ''))
        self.assertEquals(double_metaphone('Pawley', 4), ('PL', ''))
        self.assertEquals(double_metaphone('Payne', 4), ('PN', ''))
        self.assertEquals(double_metaphone('Peabody', 4), ('PPT', ''))
        self.assertEquals(double_metaphone('Peake', 4), ('PK', ''))
        self.assertEquals(double_metaphone('Pearson', 4), ('PRSN', ''))
        self.assertEquals(double_metaphone('Peat', 4), ('PT', ''))
        self.assertEquals(double_metaphone('Pedersen', 4), ('PTRS', ''))
        self.assertEquals(double_metaphone('Percy', 4), ('PRS', ''))
        self.assertEquals(double_metaphone('Perkins', 4), ('PRKN', ''))
        self.assertEquals(double_metaphone('Perrine', 4), ('PRN', ''))
        self.assertEquals(double_metaphone('Perry', 4), ('PR', ''))
        self.assertEquals(double_metaphone('Peson', 4), ('PSN', ''))
        self.assertEquals(double_metaphone('Peterson', 4), ('PTRS', ''))
        self.assertEquals(double_metaphone('Peyton', 4), ('PTN', ''))
        self.assertEquals(double_metaphone('Phinney', 4), ('FN', ''))
        self.assertEquals(double_metaphone('Pickard', 4), ('PKRT', ''))
        self.assertEquals(double_metaphone('Pierce', 4), ('PRS', ''))
        self.assertEquals(double_metaphone('Pierrepont', 4), ('PRPN', ''))
        self.assertEquals(double_metaphone('Pike', 4), ('PK', ''))
        self.assertEquals(double_metaphone('Pinkham', 4), ('PNKM', ''))
        self.assertEquals(double_metaphone('Pitman', 4), ('PTMN', ''))
        self.assertEquals(double_metaphone('Pitt', 4), ('PT', ''))
        self.assertEquals(double_metaphone('Pitts', 4), ('PTS', ''))
        self.assertEquals(double_metaphone('Plantagenet', 4), ('PLNT', ''))
        self.assertEquals(double_metaphone('Platt', 4), ('PLT', ''))
        self.assertEquals(double_metaphone('Platts', 4), ('PLTS', ''))
        self.assertEquals(double_metaphone('Pleis', 4), ('PLS', ''))
        self.assertEquals(double_metaphone('Pleiss', 4), ('PLS', ''))
        self.assertEquals(double_metaphone('Plisko', 4), ('PLSK', ''))
        self.assertEquals(double_metaphone('Pliskovitch', 4), ('PLSK', ''))
        self.assertEquals(double_metaphone('Plum', 4), ('PLM', ''))
        self.assertEquals(double_metaphone('Plume', 4), ('PLM', ''))
        self.assertEquals(double_metaphone('Poitou', 4), ('PT', ''))
        self.assertEquals(double_metaphone('Pomeroy', 4), ('PMR', ''))
        self.assertEquals(double_metaphone('Poretiers', 4), ('PRTR', ''))
        self.assertEquals(double_metaphone('Pote', 4), ('PT', ''))
        self.assertEquals(double_metaphone('Potter', 4), ('PTR', ''))
        self.assertEquals(double_metaphone('Potts', 4), ('PTS', ''))
        self.assertEquals(double_metaphone('Powell', 4), ('PL', ''))
        self.assertEquals(double_metaphone('Pratt', 4), ('PRT', ''))
        self.assertEquals(double_metaphone('Presbury', 4), ('PRSP', ''))
        self.assertEquals(double_metaphone('Priest', 4), ('PRST', ''))
        self.assertEquals(double_metaphone('Prindle', 4), ('PRNT', ''))
        self.assertEquals(double_metaphone('Prior', 4), ('PRR', ''))
        self.assertEquals(double_metaphone('Profumo', 4), ('PRFM', ''))
        self.assertEquals(double_metaphone('Purdy', 4), ('PRT', ''))
        self.assertEquals(double_metaphone('Purefoy', 4), ('PRF', ''))
        self.assertEquals(double_metaphone('Pury', 4), ('PR', ''))
        self.assertEquals(double_metaphone('Quinter', 4), ('KNTR', ''))
        self.assertEquals(double_metaphone('Rachel', 4), ('RXL', 'RKL'))
        self.assertEquals(double_metaphone('Rand', 4), ('RNT', ''))
        self.assertEquals(double_metaphone('Rankin', 4), ('RNKN', ''))
        self.assertEquals(double_metaphone('Ravenscroft', 4), ('RFNS', ''))
        self.assertEquals(double_metaphone('Raynsford', 4), ('RNSF', ''))
        self.assertEquals(double_metaphone('Reakirt', 4), ('RKRT', ''))
        self.assertEquals(double_metaphone('Reaves', 4), ('RFS', ''))
        self.assertEquals(double_metaphone('Reeves', 4), ('RFS', ''))
        self.assertEquals(double_metaphone('Reichert', 4), ('RXRT', 'RKRT'))
        self.assertEquals(double_metaphone('Remmele', 4), ('RML', ''))
        self.assertEquals(double_metaphone('Reynolds', 4), ('RNLT', ''))
        self.assertEquals(double_metaphone('Rhodes', 4), ('RTS', ''))
        self.assertEquals(double_metaphone('Richards', 4), ('RXRT', 'RKRT'))
        self.assertEquals(double_metaphone('Richardson', 4), ('RXRT', 'RKRT'))
        self.assertEquals(double_metaphone('Ring', 4), ('RNK', ''))
        self.assertEquals(double_metaphone('Roberts', 4), ('RPRT', ''))
        self.assertEquals(double_metaphone('Robertson', 4), ('RPRT', ''))
        self.assertEquals(double_metaphone('Robson', 4), ('RPSN', ''))
        self.assertEquals(double_metaphone('Rodie', 4), ('RT', ''))
        self.assertEquals(double_metaphone('Rody', 4), ('RT', ''))
        self.assertEquals(double_metaphone('Rogers', 4), ('RKRS', 'RJRS'))
        self.assertEquals(double_metaphone('Ross', 4), ('RS', ''))
        self.assertEquals(double_metaphone('Rosslevin', 4), ('RSLF', ''))
        self.assertEquals(double_metaphone('Rowland', 4), ('RLNT', ''))
        self.assertEquals(double_metaphone('Ruehl', 4), ('RL', ''))
        self.assertEquals(double_metaphone('Russell', 4), ('RSL', ''))
        self.assertEquals(double_metaphone('Ruth', 4), ('R0', 'RT'))
        self.assertEquals(double_metaphone('Ryan', 4), ('RN', ''))
        self.assertEquals(double_metaphone('Rysse', 4), ('RS', ''))
        self.assertEquals(double_metaphone('Sadler', 4), ('STLR', ''))
        self.assertEquals(double_metaphone('Salmon', 4), ('SLMN', ''))
        self.assertEquals(double_metaphone('Salter', 4), ('SLTR', ''))
        self.assertEquals(double_metaphone('Salvatore', 4), ('SLFT', ''))
        self.assertEquals(double_metaphone('Sanders', 4), ('SNTR', ''))
        self.assertEquals(double_metaphone('Sands', 4), ('SNTS', ''))
        self.assertEquals(double_metaphone('Sanford', 4), ('SNFR', ''))
        self.assertEquals(double_metaphone('Sanger', 4), ('SNKR', 'SNJR'))
        self.assertEquals(double_metaphone('Sargent', 4), ('SRJN', 'SRKN'))
        self.assertEquals(double_metaphone('Saunders', 4), ('SNTR', ''))
        self.assertEquals(double_metaphone('Schilling', 4), ('XLNK', ''))
        self.assertEquals(double_metaphone('Schlegel', 4), ('XLKL', 'SLKL'))
        self.assertEquals(double_metaphone('Scott', 4), ('SKT', ''))
        self.assertEquals(double_metaphone('Sears', 4), ('SRS', ''))
        self.assertEquals(double_metaphone('Segersall', 4), ('SJRS', 'SKRS'))
        self.assertEquals(double_metaphone('Senecal', 4), ('SNKL', ''))
        self.assertEquals(double_metaphone('Sergeaux', 4), ('SRJ', 'SRK'))
        self.assertEquals(double_metaphone('Severance', 4), ('SFRN', ''))
        self.assertEquals(double_metaphone('Sharp', 4), ('XRP', ''))
        self.assertEquals(double_metaphone('Sharpe', 4), ('XRP', ''))
        self.assertEquals(double_metaphone('Sharply', 4), ('XRPL', ''))
        self.assertEquals(double_metaphone('Shatswell', 4), ('XTSL', ''))
        self.assertEquals(double_metaphone('Shattack', 4), ('XTK', ''))
        self.assertEquals(double_metaphone('Shattock', 4), ('XTK', ''))
        self.assertEquals(double_metaphone('Shattuck', 4), ('XTK', ''))
        self.assertEquals(double_metaphone('Shaw', 4), ('X', 'XF'))
        self.assertEquals(double_metaphone('Sheldon', 4), ('XLTN', ''))
        self.assertEquals(double_metaphone('Sherman', 4), ('XRMN', ''))
        self.assertEquals(double_metaphone('Shinn', 4), ('XN', ''))
        self.assertEquals(double_metaphone('Shirford', 4), ('XRFR', ''))
        self.assertEquals(double_metaphone('Shirley', 4), ('XRL', ''))
        self.assertEquals(double_metaphone('Shively', 4), ('XFL', ''))
        self.assertEquals(double_metaphone('Shoemaker', 4), ('XMKR', ''))
        self.assertEquals(double_metaphone('Short', 4), ('XRT', ''))
        self.assertEquals(double_metaphone('Shotwell', 4), ('XTL', ''))
        self.assertEquals(double_metaphone('Shute', 4), ('XT', ''))
        self.assertEquals(double_metaphone('Sibley', 4), ('SPL', ''))
        self.assertEquals(double_metaphone('Silver', 4), ('SLFR', ''))
        self.assertEquals(double_metaphone('Simes', 4), ('SMS', ''))
        self.assertEquals(double_metaphone('Sinken', 4), ('SNKN', ''))
        self.assertEquals(double_metaphone('Sinn', 4), ('SN', ''))
        self.assertEquals(double_metaphone('Skelton', 4), ('SKLT', ''))
        self.assertEquals(double_metaphone('Skiffe', 4), ('SKF', ''))
        self.assertEquals(double_metaphone('Skotkonung', 4), ('SKTK', ''))
        self.assertEquals(double_metaphone('Slade', 4), ('SLT', 'XLT'))
        self.assertEquals(double_metaphone('Slye', 4), ('SL', 'XL'))
        self.assertEquals(double_metaphone('Smedley', 4), ('SMTL', 'XMTL'))
        self.assertEquals(double_metaphone('Smith', 4), ('SM0', 'XMT'))
        self.assertEquals(double_metaphone('Snow', 4), ('SN', 'XNF'))
        self.assertEquals(double_metaphone('Soole', 4), ('SL', ''))
        self.assertEquals(double_metaphone('Soule', 4), ('SL', ''))
        self.assertEquals(double_metaphone('Southworth', 4), ('S0R0', 'STRT'))
        self.assertEquals(double_metaphone('Sowles', 4), ('SLS', ''))
        self.assertEquals(double_metaphone('Spalding', 4), ('SPLT', ''))
        self.assertEquals(double_metaphone('Spark', 4), ('SPRK', ''))
        self.assertEquals(double_metaphone('Spencer', 4), ('SPNS', ''))
        self.assertEquals(double_metaphone('Sperry', 4), ('SPR', ''))
        self.assertEquals(double_metaphone('Spofford', 4), ('SPFR', ''))
        self.assertEquals(double_metaphone('Spooner', 4), ('SPNR', ''))
        self.assertEquals(double_metaphone('Sprague', 4), ('SPRK', ''))
        self.assertEquals(double_metaphone('Springer', 4), ('SPRN', ''))
        self.assertEquals(double_metaphone('St. Clair', 4), ('STKL', ''))
        self.assertEquals(double_metaphone('St. Claire', 4), ('STKL', ''))
        self.assertEquals(double_metaphone('St. Leger', 4), ('STLJ', 'STLK'))
        self.assertEquals(double_metaphone('St. Omer', 4), ('STMR', ''))
        self.assertEquals(double_metaphone('Stafferton', 4), ('STFR', ''))
        self.assertEquals(double_metaphone('Stafford', 4), ('STFR', ''))
        self.assertEquals(double_metaphone('Stalham', 4), ('STLM', ''))
        self.assertEquals(double_metaphone('Stanford', 4), ('STNF', ''))
        self.assertEquals(double_metaphone('Stanton', 4), ('STNT', ''))
        self.assertEquals(double_metaphone('Star', 4), ('STR', ''))
        self.assertEquals(double_metaphone('Starbuck', 4), ('STRP', ''))
        self.assertEquals(double_metaphone('Starkey', 4), ('STRK', ''))
        self.assertEquals(double_metaphone('Starkweather', 4), ('STRK', ''))
        self.assertEquals(double_metaphone('Stearns', 4), ('STRN', ''))
        self.assertEquals(double_metaphone('Stebbins', 4), ('STPN', ''))
        self.assertEquals(double_metaphone('Steele', 4), ('STL', ''))
        self.assertEquals(double_metaphone('Stephenson', 4), ('STFN', ''))
        self.assertEquals(double_metaphone('Stevens', 4), ('STFN', ''))
        self.assertEquals(double_metaphone('Stoddard', 4), ('STTR', ''))
        self.assertEquals(double_metaphone('Stodder', 4), ('STTR', ''))
        self.assertEquals(double_metaphone('Stone', 4), ('STN', ''))
        self.assertEquals(double_metaphone('Storey', 4), ('STR', ''))
        self.assertEquals(double_metaphone('Storrada', 4), ('STRT', ''))
        self.assertEquals(double_metaphone('Story', 4), ('STR', ''))
        self.assertEquals(double_metaphone('Stoughton', 4), ('STFT', ''))
        self.assertEquals(double_metaphone('Stout', 4), ('STT', ''))
        self.assertEquals(double_metaphone('Stow', 4), ('ST', 'STF'))
        self.assertEquals(double_metaphone('Strong', 4), ('STRN', ''))
        self.assertEquals(double_metaphone('Strutt', 4), ('STRT', ''))
        self.assertEquals(double_metaphone('Stryker', 4), ('STRK', ''))
        self.assertEquals(double_metaphone('Stuckeley', 4), ('STKL', ''))
        self.assertEquals(double_metaphone('Sturges', 4), ('STRJ', 'STRK'))
        self.assertEquals(double_metaphone('Sturgess', 4), ('STRJ', 'STRK'))
        self.assertEquals(double_metaphone('Sturgis', 4), ('STRJ', 'STRK'))
        self.assertEquals(double_metaphone('Suevain', 4), ('SFN', ''))
        self.assertEquals(double_metaphone('Sulyard', 4), ('SLRT', ''))
        self.assertEquals(double_metaphone('Sutton', 4), ('STN', ''))
        self.assertEquals(double_metaphone('Swain', 4), ('SN', 'XN'))
        self.assertEquals(double_metaphone('Swayne', 4), ('SN', 'XN'))
        self.assertEquals(double_metaphone('Swayze', 4), ('SS', 'XTS'))
        self.assertEquals(double_metaphone('Swift', 4), ('SFT', 'XFT'))
        self.assertEquals(double_metaphone('Taber', 4), ('TPR', ''))
        self.assertEquals(double_metaphone('Talcott', 4), ('TLKT', ''))
        self.assertEquals(double_metaphone('Tarne', 4), ('TRN', ''))
        self.assertEquals(double_metaphone('Tatum', 4), ('TTM', ''))
        self.assertEquals(double_metaphone('Taverner', 4), ('TFRN', ''))
        self.assertEquals(double_metaphone('Taylor', 4), ('TLR', ''))
        self.assertEquals(double_metaphone('Tenney', 4), ('TN', ''))
        self.assertEquals(double_metaphone('Thayer', 4), ('0R', 'TR'))
        self.assertEquals(double_metaphone('Thember', 4), ('0MPR', 'TMPR'))
        self.assertEquals(double_metaphone('Thomas', 4), ('TMS', ''))
        self.assertEquals(double_metaphone('Thompson', 4), ('TMPS', ''))
        self.assertEquals(double_metaphone('Thorne', 4), ('0RN', 'TRN'))
        self.assertEquals(double_metaphone('Thornycraft', 4), ('0RNK', 'TRNK'))
        self.assertEquals(double_metaphone('Threlkeld', 4), ('0RLK', 'TRLK'))
        self.assertEquals(double_metaphone('Throckmorton', 4), ('0RKM', 'TRKM'))
        self.assertEquals(double_metaphone('Thwaits', 4), ('0TS', 'TTS'))
        self.assertEquals(double_metaphone('Tibbetts', 4), ('TPTS', ''))
        self.assertEquals(double_metaphone('Tidd', 4), ('TT', ''))
        self.assertEquals(double_metaphone('Tierney', 4), ('TRN', ''))
        self.assertEquals(double_metaphone('Tilley', 4), ('TL', ''))
        self.assertEquals(double_metaphone('Tillieres', 4), ('TLRS', ''))
        self.assertEquals(double_metaphone('Tilly', 4), ('TL', ''))
        self.assertEquals(double_metaphone('Tisdale', 4), ('TSTL', ''))
        self.assertEquals(double_metaphone('Titus', 4), ('TTS', ''))
        self.assertEquals(double_metaphone('Tobey', 4), ('TP', ''))
        self.assertEquals(double_metaphone('Tooker', 4), ('TKR', ''))
        self.assertEquals(double_metaphone('Towle', 4), ('TL', ''))
        self.assertEquals(double_metaphone('Towne', 4), ('TN', ''))
        self.assertEquals(double_metaphone('Townsend', 4), ('TNSN', ''))
        self.assertEquals(double_metaphone('Treadway', 4), ('TRT', ''))
        self.assertEquals(double_metaphone('Trelawney', 4), ('TRLN', ''))
        self.assertEquals(double_metaphone('Trinder', 4), ('TRNT', ''))
        self.assertEquals(double_metaphone('Tripp', 4), ('TRP', ''))
        self.assertEquals(double_metaphone('Trippe', 4), ('TRP', ''))
        self.assertEquals(double_metaphone('Trott', 4), ('TRT', ''))
        self.assertEquals(double_metaphone('True', 4), ('TR', ''))
        self.assertEquals(double_metaphone('Trussebut', 4), ('TRSP', ''))
        self.assertEquals(double_metaphone('Tucker', 4), ('TKR', ''))
        self.assertEquals(double_metaphone('Turgeon', 4), ('TRJN', 'TRKN'))
        self.assertEquals(double_metaphone('Turner', 4), ('TRNR', ''))
        self.assertEquals(double_metaphone('Tuttle', 4), ('TTL', ''))
        self.assertEquals(double_metaphone('Tyler', 4), ('TLR', ''))
        self.assertEquals(double_metaphone('Tylle', 4), ('TL', ''))
        self.assertEquals(double_metaphone('Tyrrel', 4), ('TRL', ''))
        self.assertEquals(double_metaphone('Ua Tuathail', 4), ('AT0L', 'ATTL'))
        self.assertEquals(double_metaphone('Ulrich', 4), ('ALRX', 'ALRK'))
        self.assertEquals(double_metaphone('Underhill', 4), ('ANTR', ''))
        self.assertEquals(double_metaphone('Underwood', 4), ('ANTR', ''))
        self.assertEquals(double_metaphone('Unknown', 4), ('ANKN', ''))
        self.assertEquals(double_metaphone('Valentine', 4), ('FLNT', ''))
        self.assertEquals(double_metaphone('Van Egmond', 4), ('FNKM', ''))
        self.assertEquals(double_metaphone('Van der Beek', 4), ('FNTR', ''))
        self.assertEquals(double_metaphone('Vaughan', 4), ('FKN', ''))
        self.assertEquals(double_metaphone('Vermenlen', 4), ('FRMN', ''))
        self.assertEquals(double_metaphone('Vincent', 4), ('FNSN', ''))
        self.assertEquals(double_metaphone('Volentine', 4), ('FLNT', ''))
        self.assertEquals(double_metaphone('Wagner', 4), ('AKNR', 'FKNR'))
        self.assertEquals(double_metaphone('Waite', 4), ('AT', 'FT'))
        self.assertEquals(double_metaphone('Walker', 4), ('ALKR', 'FLKR'))
        self.assertEquals(double_metaphone('Walter', 4), ('ALTR', 'FLTR'))
        self.assertEquals(double_metaphone('Wandell', 4), ('ANTL', 'FNTL'))
        self.assertEquals(double_metaphone('Wandesford', 4), ('ANTS', 'FNTS'))
        self.assertEquals(double_metaphone('Warbleton', 4), ('ARPL', 'FRPL'))
        self.assertEquals(double_metaphone('Ward', 4), ('ART', 'FRT'))
        self.assertEquals(double_metaphone('Warde', 4), ('ART', 'FRT'))
        self.assertEquals(double_metaphone('Ware', 4), ('AR', 'FR'))
        self.assertEquals(double_metaphone('Wareham', 4), ('ARHM', 'FRHM'))
        self.assertEquals(double_metaphone('Warner', 4), ('ARNR', 'FRNR'))
        self.assertEquals(double_metaphone('Warren', 4), ('ARN', 'FRN'))
        self.assertEquals(double_metaphone('Washburne', 4), ('AXPR', 'FXPR'))
        self.assertEquals(double_metaphone('Waterbury', 4), ('ATRP', 'FTRP'))
        self.assertEquals(double_metaphone('Watson', 4), ('ATSN', 'FTSN'))
        self.assertEquals(double_metaphone('WatsonEllithorpe', 4), ('ATSN', 'FTSN'))
        self.assertEquals(double_metaphone('Watts', 4), ('ATS', 'FTS'))
        self.assertEquals(double_metaphone('Wayne', 4), ('AN', 'FN'))
        self.assertEquals(double_metaphone('Webb', 4), ('AP', 'FP'))
        self.assertEquals(double_metaphone('Weber', 4), ('APR', 'FPR'))
        self.assertEquals(double_metaphone('Webster', 4), ('APST', 'FPST'))
        self.assertEquals(double_metaphone('Weed', 4), ('AT', 'FT'))
        self.assertEquals(double_metaphone('Weeks', 4), ('AKS', 'FKS'))
        self.assertEquals(double_metaphone('Wells', 4), ('ALS', 'FLS'))
        self.assertEquals(double_metaphone('Wenzell', 4), ('ANSL', 'FNTS'))
        self.assertEquals(double_metaphone('West', 4), ('AST', 'FST'))
        self.assertEquals(double_metaphone('Westbury', 4), ('ASTP', 'FSTP'))
        self.assertEquals(double_metaphone('Whatlocke', 4), ('ATLK', ''))
        self.assertEquals(double_metaphone('Wheeler', 4), ('ALR', ''))
        self.assertEquals(double_metaphone('Whiston', 4), ('ASTN', ''))
        self.assertEquals(double_metaphone('White', 4), ('AT', ''))
        self.assertEquals(double_metaphone('Whitman', 4), ('ATMN', ''))
        self.assertEquals(double_metaphone('Whiton', 4), ('ATN', ''))
        self.assertEquals(double_metaphone('Whitson', 4), ('ATSN', ''))
        self.assertEquals(double_metaphone('Wickes', 4), ('AKS', 'FKS'))
        self.assertEquals(double_metaphone('Wilbur', 4), ('ALPR', 'FLPR'))
        self.assertEquals(double_metaphone('Wilcotes', 4), ('ALKT', 'FLKT'))
        self.assertEquals(double_metaphone('Wilkinson', 4), ('ALKN', 'FLKN'))
        self.assertEquals(double_metaphone('Willets', 4), ('ALTS', 'FLTS'))
        self.assertEquals(double_metaphone('Willett', 4), ('ALT', 'FLT'))
        self.assertEquals(double_metaphone('Willey', 4), ('AL', 'FL'))
        self.assertEquals(double_metaphone('Williams', 4), ('ALMS', 'FLMS'))
        self.assertEquals(double_metaphone('Williston', 4), ('ALST', 'FLST'))
        self.assertEquals(double_metaphone('Wilson', 4), ('ALSN', 'FLSN'))
        self.assertEquals(double_metaphone('Wimes', 4), ('AMS', 'FMS'))
        self.assertEquals(double_metaphone('Winch', 4), ('ANX', 'FNK'))
        self.assertEquals(double_metaphone('Winegar', 4), ('ANKR', 'FNKR'))
        self.assertEquals(double_metaphone('Wing', 4), ('ANK', 'FNK'))
        self.assertEquals(double_metaphone('Winsley', 4), ('ANSL', 'FNSL'))
        self.assertEquals(double_metaphone('Winslow', 4), ('ANSL', 'FNSL'))
        self.assertEquals(double_metaphone('Winthrop', 4), ('AN0R', 'FNTR'))
        self.assertEquals(double_metaphone('Wise', 4), ('AS', 'FS'))
        self.assertEquals(double_metaphone('Wood', 4), ('AT', 'FT'))
        self.assertEquals(double_metaphone('Woodbridge', 4), ('ATPR', 'FTPR'))
        self.assertEquals(double_metaphone('Woodward', 4), ('ATRT', 'FTRT'))
        self.assertEquals(double_metaphone('Wooley', 4), ('AL', 'FL'))
        self.assertEquals(double_metaphone('Woolley', 4), ('AL', 'FL'))
        self.assertEquals(double_metaphone('Worth', 4), ('AR0', 'FRT'))
        self.assertEquals(double_metaphone('Worthen', 4), ('AR0N', 'FRTN'))
        self.assertEquals(double_metaphone('Worthley', 4), ('AR0L', 'FRTL'))
        self.assertEquals(double_metaphone('Wright', 4), ('RT', ''))
        self.assertEquals(double_metaphone('Wyer', 4), ('AR', 'FR'))
        self.assertEquals(double_metaphone('Wyere', 4), ('AR', 'FR'))
        self.assertEquals(double_metaphone('Wynkoop', 4), ('ANKP', 'FNKP'))
        self.assertEquals(double_metaphone('Yarnall', 4), ('ARNL', ''))
        self.assertEquals(double_metaphone('Yeoman', 4), ('AMN', ''))
        self.assertEquals(double_metaphone('Yorke', 4), ('ARK', ''))
        self.assertEquals(double_metaphone('Young', 4), ('ANK', ''))
        self.assertEquals(double_metaphone('ab Wennonwen', 4), ('APNN', ''))
        self.assertEquals(double_metaphone('ap Llewellyn', 4), ('APLL', ''))
        self.assertEquals(double_metaphone('ap Lorwerth', 4), ('APLR', ''))
        self.assertEquals(double_metaphone('d\'Angouleme', 4), ('TNKL', ''))
        self.assertEquals(double_metaphone('de Audeham', 4), ('TTHM', ''))
        self.assertEquals(double_metaphone('de Bavant', 4), ('TPFN', ''))
        self.assertEquals(double_metaphone('de Beauchamp', 4), ('TPXM', 'TPKM'))
        self.assertEquals(double_metaphone('de Beaumont', 4), ('TPMN', ''))
        self.assertEquals(double_metaphone('de Bolbec', 4), ('TPLP', ''))
        self.assertEquals(double_metaphone('de Braiose', 4), ('TPRS', ''))
        self.assertEquals(double_metaphone('de Braose', 4), ('TPRS', ''))
        self.assertEquals(double_metaphone('de Briwere', 4), ('TPRR', ''))
        self.assertEquals(double_metaphone('de Cantelou', 4), ('TKNT', ''))
        self.assertEquals(double_metaphone('de Cherelton', 4), ('TXRL', 'TKRL'))
        self.assertEquals(double_metaphone('de Cherleton', 4), ('TXRL', 'TKRL'))
        self.assertEquals(double_metaphone('de Clare', 4), ('TKLR', ''))
        self.assertEquals(double_metaphone('de Claremont', 4), ('TKLR', ''))
        self.assertEquals(double_metaphone('de Clifford', 4), ('TKLF', ''))
        self.assertEquals(double_metaphone('de Colville', 4), ('TKLF', ''))
        self.assertEquals(double_metaphone('de Courtenay', 4), ('TKRT', ''))
        self.assertEquals(double_metaphone('de Fauconberg', 4), ('TFKN', ''))
        self.assertEquals(double_metaphone('de Forest', 4), ('TFRS', ''))
        self.assertEquals(double_metaphone('de Gai', 4), ('TK', ''))
        self.assertEquals(double_metaphone('de Grey', 4), ('TKR', ''))
        self.assertEquals(double_metaphone('de Guernons', 4), ('TKRN', ''))
        self.assertEquals(double_metaphone('de Haia', 4), ('T', ''))
        self.assertEquals(double_metaphone('de Harcourt', 4), ('TRKR', ''))
        self.assertEquals(double_metaphone('de Hastings', 4), ('TSTN', ''))
        self.assertEquals(double_metaphone('de Hoke', 4), ('TK', ''))
        self.assertEquals(double_metaphone('de Hooch', 4), ('TK', ''))
        self.assertEquals(double_metaphone('de Hugelville', 4), ('TJLF', 'TKLF'))
        self.assertEquals(double_metaphone('de Huntingdon', 4), ('TNTN', ''))
        self.assertEquals(double_metaphone('de Insula', 4), ('TNSL', ''))
        self.assertEquals(double_metaphone('de Keynes', 4), ('TKNS', ''))
        self.assertEquals(double_metaphone('de Lacy', 4), ('TLS', ''))
        self.assertEquals(double_metaphone('de Lexington', 4), ('TLKS', ''))
        self.assertEquals(double_metaphone('de Lusignan', 4), ('TLSN', 'TLSK'))
        self.assertEquals(double_metaphone('de Manvers', 4), ('TMNF', ''))
        self.assertEquals(double_metaphone('de Montagu', 4), ('TMNT', ''))
        self.assertEquals(double_metaphone('de Montault', 4), ('TMNT', ''))
        self.assertEquals(double_metaphone('de Montfort', 4), ('TMNT', ''))
        self.assertEquals(double_metaphone('de Mortimer', 4), ('TMRT', ''))
        self.assertEquals(double_metaphone('de Morville', 4), ('TMRF', ''))
        self.assertEquals(double_metaphone('de Morvois', 4), ('TMRF', ''))
        self.assertEquals(double_metaphone('de Neufmarche', 4), ('TNFM', ''))
        self.assertEquals(double_metaphone('de Odingsells', 4), ('TTNK', ''))
        self.assertEquals(double_metaphone('de Odyngsells', 4), ('TTNK', ''))
        self.assertEquals(double_metaphone('de Percy', 4), ('TPRS', ''))
        self.assertEquals(double_metaphone('de Pierrepont', 4), ('TPRP', ''))
        self.assertEquals(double_metaphone('de Plessetis', 4), ('TPLS', ''))
        self.assertEquals(double_metaphone('de Porhoet', 4), ('TPRT', ''))
        self.assertEquals(double_metaphone('de Prouz', 4), ('TPRS', ''))
        self.assertEquals(double_metaphone('de Quincy', 4), ('TKNS', ''))
        self.assertEquals(double_metaphone('de Ripellis', 4), ('TRPL', ''))
        self.assertEquals(double_metaphone('de Ros', 4), ('TRS', ''))
        self.assertEquals(double_metaphone('de Salisbury', 4), ('TSLS', ''))
        self.assertEquals(double_metaphone('de Sanford', 4), ('TSNF', ''))
        self.assertEquals(double_metaphone('de Somery', 4), ('TSMR', ''))
        self.assertEquals(double_metaphone('de St. Hilary', 4), ('TSTL', ''))
        self.assertEquals(double_metaphone('de St. Liz', 4), ('TSTL', ''))
        self.assertEquals(double_metaphone('de Sutton', 4), ('TSTN', ''))
        self.assertEquals(double_metaphone('de Toeni', 4), ('TTN', ''))
        self.assertEquals(double_metaphone('de Tony', 4), ('TTN', ''))
        self.assertEquals(double_metaphone('de Umfreville', 4), ('TMFR', ''))
        self.assertEquals(double_metaphone('de Valognes', 4), ('TFLN', 'TFLK'))
        self.assertEquals(double_metaphone('de Vaux', 4), ('TF', ''))
        self.assertEquals(double_metaphone('de Vere', 4), ('TFR', ''))
        self.assertEquals(double_metaphone('de Vermandois', 4), ('TFRM', ''))
        self.assertEquals(double_metaphone('de Vernon', 4), ('TFRN', ''))
        self.assertEquals(double_metaphone('de Vexin', 4), ('TFKS', ''))
        self.assertEquals(double_metaphone('de Vitre', 4), ('TFTR', ''))
        self.assertEquals(double_metaphone('de Wandesford', 4), ('TNTS', ''))
        self.assertEquals(double_metaphone('de Warenne', 4), ('TRN', ''))
        self.assertEquals(double_metaphone('de Westbury', 4), ('TSTP', ''))
        self.assertEquals(double_metaphone('di Saluzzo', 4), ('TSLS', 'TSLT'))
        self.assertEquals(double_metaphone('fitz Alan', 4), ('FTSL', ''))
        self.assertEquals(double_metaphone('fitz Geoffrey', 4), ('FTSJ', 'FTSK'))
        self.assertEquals(double_metaphone('fitz Herbert', 4), ('FTSR', ''))
        self.assertEquals(double_metaphone('fitz John', 4), ('FTSJ', ''))
        self.assertEquals(double_metaphone('fitz Patrick', 4), ('FTSP', ''))
        self.assertEquals(double_metaphone('fitz Payn', 4), ('FTSP', ''))
        self.assertEquals(double_metaphone('fitz Piers', 4), ('FTSP', ''))
        self.assertEquals(double_metaphone('fitz Randolph', 4), ('FTSR', ''))
        self.assertEquals(double_metaphone('fitz Richard', 4), ('FTSR', ''))
        self.assertEquals(double_metaphone('fitz Robert', 4), ('FTSR', ''))
        self.assertEquals(double_metaphone('fitz Roy', 4), ('FTSR', ''))
        self.assertEquals(double_metaphone('fitz Scrob', 4), ('FTSS', ''))
        self.assertEquals(double_metaphone('fitz Walter', 4), ('FTSL', ''))
        self.assertEquals(double_metaphone('fitz Warin', 4), ('FTSR', ''))
        self.assertEquals(double_metaphone('fitz Williams', 4), ('FTSL', ''))
        self.assertEquals(double_metaphone('la Zouche', 4), ('LSX', 'LSK'))
        self.assertEquals(double_metaphone('le Botiller', 4), ('LPTL', ''))
        self.assertEquals(double_metaphone('le Despenser', 4), ('LTSP', ''))
        self.assertEquals(double_metaphone('le deSpencer', 4), ('LTSP', ''))
        self.assertEquals(double_metaphone('of Allendale', 4), ('AFLN', ''))
        self.assertEquals(double_metaphone('of Angouleme', 4), ('AFNK', ''))
        self.assertEquals(double_metaphone('of Anjou', 4), ('AFNJ', ''))
        self.assertEquals(double_metaphone('of Aquitaine', 4), ('AFKT', ''))
        self.assertEquals(double_metaphone('of Aumale', 4), ('AFML', ''))
        self.assertEquals(double_metaphone('of Bavaria', 4), ('AFPF', ''))
        self.assertEquals(double_metaphone('of Boulogne', 4), ('AFPL', ''))
        self.assertEquals(double_metaphone('of Brittany', 4), ('AFPR', ''))
        self.assertEquals(double_metaphone('of Brittary', 4), ('AFPR', ''))
        self.assertEquals(double_metaphone('of Castile', 4), ('AFKS', ''))
        self.assertEquals(double_metaphone('of Chester', 4), ('AFXS', 'AFKS'))
        self.assertEquals(double_metaphone('of Clermont', 4), ('AFKL', ''))
        self.assertEquals(double_metaphone('of Cologne', 4), ('AFKL', ''))
        self.assertEquals(double_metaphone('of Dinan', 4), ('AFTN', ''))
        self.assertEquals(double_metaphone('of Dunbar', 4), ('AFTN', ''))
        self.assertEquals(double_metaphone('of England', 4), ('AFNK', ''))
        self.assertEquals(double_metaphone('of Essex', 4), ('AFSK', ''))
        self.assertEquals(double_metaphone('of Falaise', 4), ('AFFL', ''))
        self.assertEquals(double_metaphone('of Flanders', 4), ('AFFL', ''))
        self.assertEquals(double_metaphone('of Galloway', 4), ('AFKL', ''))
        self.assertEquals(double_metaphone('of Germany', 4), ('AFKR', 'AFJR'))
        self.assertEquals(double_metaphone('of Gloucester', 4), ('AFKL', ''))
        self.assertEquals(double_metaphone('of Heristal', 4), ('AFRS', ''))
        self.assertEquals(double_metaphone('of Hungary', 4), ('AFNK', ''))
        self.assertEquals(double_metaphone('of Huntington', 4), ('AFNT', ''))
        self.assertEquals(double_metaphone('of Kiev', 4), ('AFKF', ''))
        self.assertEquals(double_metaphone('of Kuno', 4), ('AFKN', ''))
        self.assertEquals(double_metaphone('of Landen', 4), ('AFLN', ''))
        self.assertEquals(double_metaphone('of Laon', 4), ('AFLN', ''))
        self.assertEquals(double_metaphone('of Leinster', 4), ('AFLN', ''))
        self.assertEquals(double_metaphone('of Lens', 4), ('AFLN', ''))
        self.assertEquals(double_metaphone('of Lorraine', 4), ('AFLR', ''))
        self.assertEquals(double_metaphone('of Louvain', 4), ('AFLF', ''))
        self.assertEquals(double_metaphone('of Mercia', 4), ('AFMR', ''))
        self.assertEquals(double_metaphone('of Metz', 4), ('AFMT', ''))
        self.assertEquals(double_metaphone('of Meulan', 4), ('AFML', ''))
        self.assertEquals(double_metaphone('of Nass', 4), ('AFNS', ''))
        self.assertEquals(double_metaphone('of Normandy', 4), ('AFNR', ''))
        self.assertEquals(double_metaphone('of Ohningen', 4), ('AFNN', ''))
        self.assertEquals(double_metaphone('of Orleans', 4), ('AFRL', ''))
        self.assertEquals(double_metaphone('of Poitou', 4), ('AFPT', ''))
        self.assertEquals(double_metaphone('of Polotzk', 4), ('AFPL', ''))
        self.assertEquals(double_metaphone('of Provence', 4), ('AFPR', ''))
        self.assertEquals(double_metaphone('of Ringelheim', 4), ('AFRN', ''))
        self.assertEquals(double_metaphone('of Salisbury', 4), ('AFSL', ''))
        self.assertEquals(double_metaphone('of Saxony', 4), ('AFSK', ''))
        self.assertEquals(double_metaphone('of Scotland', 4), ('AFSK', ''))
        self.assertEquals(double_metaphone('of Senlis', 4), ('AFSN', ''))
        self.assertEquals(double_metaphone('of Stafford', 4), ('AFST', ''))
        self.assertEquals(double_metaphone('of Swabia', 4), ('AFSP', ''))
        self.assertEquals(double_metaphone('of Tongres', 4), ('AFTN', ''))
        self.assertEquals(double_metaphone('of the Tributes', 4), ('AF0T', 'AFTT'))
        self.assertEquals(double_metaphone('unknown', 4), ('ANKN', ''))
        self.assertEquals(double_metaphone('van der Gouda', 4), ('FNTR', ''))
        self.assertEquals(double_metaphone('von Adenbaugh', 4), ('FNTN', ''))
        self.assertEquals(double_metaphone('ARCHITure', 4), ('ARKT', ''))
        self.assertEquals(double_metaphone('Arnoff', 4), ('ARNF', ''))
        self.assertEquals(double_metaphone('Arnow', 4), ('ARN', 'ARNF'))
        self.assertEquals(double_metaphone('DANGER', 4), ('TNJR', 'TNKR'))
        self.assertEquals(double_metaphone('Jankelowicz', 4), ('JNKL', 'ANKL'))
        self.assertEquals(double_metaphone('MANGER', 4), ('MNJR', 'MNKR'))
        self.assertEquals(double_metaphone('McClellan', 4), ('MKLL', ''))
        self.assertEquals(double_metaphone('McHugh', 4), ('MK', ''))
        self.assertEquals(double_metaphone('McLaughlin', 4), ('MKLF', ''))
        self.assertEquals(double_metaphone('ORCHEStra', 4), ('ARKS', ''))
        self.assertEquals(double_metaphone('ORCHID', 4), ('ARKT', ''))
        self.assertEquals(double_metaphone('Pierce', 4), ('PRS', ''))
        self.assertEquals(double_metaphone('RANGER', 4), ('RNJR', 'RNKR'))
        self.assertEquals(double_metaphone('Schlesinger', 4), ('XLSN', 'SLSN'))
        self.assertEquals(double_metaphone('Uomo', 4), ('AM', ''))
        self.assertEquals(double_metaphone('Vasserman', 4), ('FSRM', ''))
        self.assertEquals(double_metaphone('Wasserman', 4), ('ASRM', 'FSRM'))
        self.assertEquals(double_metaphone('Womo', 4), ('AM', 'FM'))
        self.assertEquals(double_metaphone('Yankelovich', 4), ('ANKL', ''))
        self.assertEquals(double_metaphone('accede', 4), ('AKST', ''))
        self.assertEquals(double_metaphone('accident', 4), ('AKST', ''))
        self.assertEquals(double_metaphone('adelsheim', 4), ('ATLS', ''))
        self.assertEquals(double_metaphone('aged', 4), ('AJT', 'AKT'))
        self.assertEquals(double_metaphone('ageless', 4), ('AJLS', 'AKLS'))
        self.assertEquals(double_metaphone('agency', 4), ('AJNS', 'AKNS'))
        self.assertEquals(double_metaphone('aghast', 4), ('AKST', ''))
        self.assertEquals(double_metaphone('agio', 4), ('AJ', 'AK'))
        self.assertEquals(double_metaphone('agrimony', 4), ('AKRM', ''))
        self.assertEquals(double_metaphone('album', 4), ('ALPM', ''))
        self.assertEquals(double_metaphone('alcmene', 4), ('ALKM', ''))
        self.assertEquals(double_metaphone('alehouse', 4), ('ALHS', ''))
        self.assertEquals(double_metaphone('antique', 4), ('ANTK', ''))
        self.assertEquals(double_metaphone('artois', 4), ('ART', 'ARTS'))
        self.assertEquals(double_metaphone('automation', 4), ('ATMX', ''))
        self.assertEquals(double_metaphone('bacchus', 4), ('PKS', ''))
        self.assertEquals(double_metaphone('bacci', 4), ('PX', ''))
        self.assertEquals(double_metaphone('bajador', 4), ('PJTR', 'PHTR'))
        self.assertEquals(double_metaphone('bellocchio', 4), ('PLX', ''))
        self.assertEquals(double_metaphone('bertucci', 4), ('PRTX', ''))
        self.assertEquals(double_metaphone('biaggi', 4), ('PJ', 'PK'))
        self.assertEquals(double_metaphone('bough', 4), ('P', ''))
        self.assertEquals(double_metaphone('breaux', 4), ('PR', ''))
        self.assertEquals(double_metaphone('broughton', 4), ('PRTN', ''))
        self.assertEquals(double_metaphone('cabrillo', 4), ('KPRL', 'KPR'))
        self.assertEquals(double_metaphone('caesar', 4), ('SSR', ''))
        self.assertEquals(double_metaphone('cagney', 4), ('KKN', ''))
        self.assertEquals(double_metaphone('campbell', 4), ('KMPL', ''))
        self.assertEquals(double_metaphone('carlisle', 4), ('KRLL', ''))
        self.assertEquals(double_metaphone('carlysle', 4), ('KRLL', ''))
        self.assertEquals(double_metaphone('chemistry', 4), ('KMST', ''))
        self.assertEquals(double_metaphone('chianti', 4), ('KNT', ''))
        self.assertEquals(double_metaphone('chorus', 4), ('KRS', ''))
        self.assertEquals(double_metaphone('cough', 4), ('KF', ''))
        self.assertEquals(double_metaphone('czerny', 4), ('SRN', 'XRN'))
        self.assertEquals(double_metaphone('deffenbacher', 4), ('TFNP', ''))
        self.assertEquals(double_metaphone('dumb', 4), ('TM', ''))
        self.assertEquals(double_metaphone('edgar', 4), ('ATKR', ''))
        self.assertEquals(double_metaphone('edge', 4), ('AJ', ''))
        self.assertEquals(double_metaphone('filipowicz', 4), ('FLPT', 'FLPF'))
        self.assertEquals(double_metaphone('focaccia', 4), ('FKX', ''))
        self.assertEquals(double_metaphone('gallegos', 4), ('KLKS', 'KKS'))
        self.assertEquals(double_metaphone('gambrelli', 4), ('KMPR', ''))
        self.assertEquals(double_metaphone('geithain', 4), ('K0N', 'JTN'))
        self.assertEquals(double_metaphone('ghiradelli', 4), ('JRTL', ''))
        self.assertEquals(double_metaphone('ghislane', 4), ('JLN', ''))
        self.assertEquals(double_metaphone('gough', 4), ('KF', ''))
        self.assertEquals(double_metaphone('hartheim', 4), ('HR0M', 'HRTM'))
        self.assertEquals(double_metaphone('heimsheim', 4), ('HMSM', ''))
        self.assertEquals(double_metaphone('hochmeier', 4), ('HKMR', ''))
        self.assertEquals(double_metaphone('hugh', 4), ('H', ''))
        self.assertEquals(double_metaphone('hunger', 4), ('HNKR', 'HNJR'))
        self.assertEquals(double_metaphone('hungry', 4), ('HNKR', ''))
        self.assertEquals(double_metaphone('island', 4), ('ALNT', ''))
        self.assertEquals(double_metaphone('isle', 4), ('AL', ''))
        self.assertEquals(double_metaphone('jose', 4), ('HS', ''))
        self.assertEquals(double_metaphone('laugh', 4), ('LF', ''))
        self.assertEquals(double_metaphone('mac caffrey', 4), ('MKFR', ''))
        self.assertEquals(double_metaphone('mac gregor', 4), ('MKRK', ''))
        self.assertEquals(double_metaphone('pegnitz', 4), ('PNTS', 'PKNT'))
        self.assertEquals(double_metaphone('piskowitz', 4), ('PSKT', 'PSKF'))
        self.assertEquals(double_metaphone('queen', 4), ('KN', ''))
        self.assertEquals(double_metaphone('raspberry', 4), ('RSPR', ''))
        self.assertEquals(double_metaphone('resnais', 4), ('RSN', 'RSNS'))
        self.assertEquals(double_metaphone('rogier', 4), ('RJ', 'RJR'))
        self.assertEquals(double_metaphone('rough', 4), ('RF', ''))
        self.assertEquals(double_metaphone('san jacinto', 4), ('SNHS', ''))
        self.assertEquals(double_metaphone('schenker', 4), ('XNKR', 'SKNK'))
        self.assertEquals(double_metaphone('schermerhorn', 4), ('XRMR', 'SKRM'))
        self.assertEquals(double_metaphone('schmidt', 4), ('XMT', 'SMT'))
        self.assertEquals(double_metaphone('schneider', 4), ('XNTR', 'SNTR'))
        self.assertEquals(double_metaphone('school', 4), ('SKL', ''))
        self.assertEquals(double_metaphone('schooner', 4), ('SKNR', ''))
        self.assertEquals(double_metaphone('schrozberg', 4), ('XRSP', 'SRSP'))
        self.assertEquals(double_metaphone('schulman', 4), ('XLMN', ''))
        self.assertEquals(double_metaphone('schwabach', 4), ('XPK', 'XFPK'))
        self.assertEquals(double_metaphone('schwarzach', 4), ('XRSK', 'XFRT'))
        self.assertEquals(double_metaphone('smith', 4), ('SM0', 'XMT'))
        self.assertEquals(double_metaphone('snider', 4), ('SNTR', 'XNTR'))
        self.assertEquals(double_metaphone('succeed', 4), ('SKST', ''))
        self.assertEquals(double_metaphone('sugarcane', 4), ('XKRK', 'SKRK'))
        self.assertEquals(double_metaphone('svobodka', 4), ('SFPT', ''))
        self.assertEquals(double_metaphone('tagliaro', 4), ('TKLR', 'TLR'))
        self.assertEquals(double_metaphone('thames', 4), ('TMS', ''))
        self.assertEquals(double_metaphone('theilheim', 4), ('0LM', 'TLM'))
        self.assertEquals(double_metaphone('thomas', 4), ('TMS', ''))
        self.assertEquals(double_metaphone('thumb', 4), ('0M', 'TM'))
        self.assertEquals(double_metaphone('tichner', 4), ('TXNR', 'TKNR'))
        self.assertEquals(double_metaphone('tough', 4), ('TF', ''))
        self.assertEquals(double_metaphone('umbrella', 4), ('AMPR', ''))
        self.assertEquals(double_metaphone('vilshofen', 4), ('FLXF', ''))
        self.assertEquals(double_metaphone('von schuller', 4), ('FNXL', ''))
        self.assertEquals(double_metaphone('wachtler', 4), ('AKTL', 'FKTL'))
        self.assertEquals(double_metaphone('wechsler', 4), ('AKSL', 'FKSL'))
        self.assertEquals(double_metaphone('weikersheim', 4), ('AKRS', 'FKRS'))
        self.assertEquals(double_metaphone('zhao', 4), ('J', ''))


class caverphone_test_cases(unittest.TestCase):
    def test_caverphone2(self):
        self.assertEquals(caverphone(''), '1111111111')
        self.assertEquals(caverphone('', 2), '1111111111')
        self.assertEquals(caverphone('', version=2), '1111111111')

        # http://ntz-develop.blogspot.com/2011/03/phonetic-algorithms.html
        self.assertEquals(caverphone('Henrichsen'), 'ANRKSN1111')
        self.assertEquals(caverphone('Henricsson'), 'ANRKSN1111')
        self.assertEquals(caverphone('Henriksson'), 'ANRKSN1111')
        self.assertEquals(caverphone('Hinrichsen'), 'ANRKSN1111')
        self.assertEquals(caverphone('Izchaki'), 'ASKKA11111')
        self.assertEquals(caverphone('Maclaverty'), 'MKLFTA1111')
        self.assertEquals(caverphone('Mccleverty'), 'MKLFTA1111')
        self.assertEquals(caverphone('Mcclifferty'), 'MKLFTA1111')
        self.assertEquals(caverphone('Mclafferty'), 'MKLFTA1111')
        self.assertEquals(caverphone('Mclaverty'), 'MKLFTA1111')
        self.assertEquals(caverphone('Slocomb'), 'SLKMP11111')
        self.assertEquals(caverphone('Slocombe'), 'SLKMP11111')
        self.assertEquals(caverphone('Slocumb'), 'SLKMP11111')
        self.assertEquals(caverphone('Whitlam'), 'WTLM111111')

        # http://caversham.otago.ac.nz/files/working/ctp150804.pdf
        self.assertEquals(caverphone('Stevenson'), 'STFNSN1111')
        self.assertEquals(caverphone('Peter'), 'PTA1111111')
        for w in ('Darda', 'Datha', 'Dedie', 'Deedee', 'Deerdre', 'Deidre',
                  'Deirdre', 'Detta', 'Didi', 'Didier', 'Dido', 'Dierdre',
                  'Dieter', 'Dita', 'Ditter', 'Dodi', 'Dodie', 'Dody',
                  'Doherty', 'Dorthea', 'Dorthy', 'Doti', 'Dotti', 'Dottie',
                  'Dotty', 'Doty', 'Doughty', 'Douty', 'Dowdell', 'Duthie',
                  'Tada', 'Taddeo', 'Tadeo', 'Tadio', 'Tati', 'Teador', 'Tedda',
                  'Tedder', 'Teddi', 'Teddie', 'Teddy', 'Tedi', 'Tedie',
                  'Teeter', 'Teodoor', 'Teodor', 'Terti', 'Theda', 'Theodor',
                  'Theodore', 'Theta', 'Thilda', 'Thordia', 'Tilda', 'Tildi',
                  'Tildie', 'Tildy', 'Tita', 'Tito', 'Tjader', 'Toddie',
                  'Toddy', 'Torto', 'Tuddor', 'Tudor', 'Turtle', 'Tuttle',
                  'Tutto'):
            self.assertEqual(caverphone(w), 'TTA1111111')
            self.assertEqual(caverphone(w, 2), 'TTA1111111')
            self.assertEqual(caverphone(w, version=2), 'TTA1111111')
        for w in ('Cailean', 'Calan', 'Calen', 'Callahan', 'Callan', 'Callean',
                  'Carleen', 'Carlen', 'Carlene', 'Carlin', 'Carline', 'Carlyn',
                  'Carlynn', 'Carlynne', 'Charlean', 'Charleen', 'Charlene',
                  'Charline', 'Cherlyn', 'Chirlin', 'Clein', 'Cleon', 'Cline',
                  'Cohleen', 'Colan', 'Coleen', 'Colene', 'Colin', 'Colleen',
                  'Collen', 'Collin', 'Colline', 'Colon', 'Cullan', 'Cullen',
                  'Cullin', 'Gaelan', 'Galan', 'Galen', 'Garlan', 'Garlen',
                  'Gaulin', 'Gayleen', 'Gaylene', 'Giliane', 'Gillan',
                  'Gillian', 'Glen', 'Glenn', 'Glyn', 'Glynn', 'Gollin',
                  'Gorlin', 'Kalin', 'Karlan', 'Karleen', 'Karlen', 'Karlene',
                  'Karlin', 'Karlyn', 'Kaylyn', 'Keelin', 'Kellen', 'Kellene',
                  'Kellyann', 'Kellyn', 'Khalin', 'Kilan', 'Kilian', 'Killen',
                  'Killian', 'Killion', 'Klein', 'Kleon', 'Kline', 'Koerlin',
                  'Kylen', 'Kylynn', 'Quillan', 'Quillon', 'Qulllon', 'Xylon'):
            self.assertEqual(caverphone(w), 'KLN1111111')
            self.assertEqual(caverphone(w, 2), 'KLN1111111')
            self.assertEqual(caverphone(w, version=2), 'KLN1111111')
        for w in ('Dan', 'Dane', 'Dann', 'Darn', 'Daune', 'Dawn', 'Ddene',
                  'Dean', 'Deane', 'Deanne', 'DeeAnn', 'Deeann', 'Deeanne',
                  'Deeyn', 'Den', 'Dene', 'Denn', 'Deonne', 'Diahann', 'Dian',
                  'Diane', 'Diann', 'Dianne', 'Diannne', 'Dine', 'Dion',
                  'Dione', 'Dionne', 'Doane', 'Doehne', 'Don', 'Donn', 'Doone',
                  'Dorn', 'Down', 'Downe', 'Duane', 'Dun', 'Dunn', 'Duyne',
                  'Dyan', 'Dyane', 'Dyann', 'Dyanne', 'Dyun', 'Tan', 'Tann',
                  'Teahan', 'Ten', 'Tenn', 'Terhune', 'Thain', 'Thaine',
                  'Thane', 'Thanh', 'Thayne', 'Theone', 'Thin', 'Thorn',
                  'Thorne', 'Thun', 'Thynne', 'Tien', 'Tine', 'Tjon', 'Town',
                  'Towne', 'Turne', 'Tyne'):
            self.assertEqual(caverphone(w), 'TN11111111')
            self.assertEqual(caverphone(w, 2), 'TN11111111')
            self.assertEqual(caverphone(w, version=2), 'TN11111111')

    def test_caverphone2_php_testset(self):
        # https://raw.githubusercontent.com/kiphughes/caverphone/master/unit_tests.php
        self.assertEquals(caverphone('aaron'), 'ARN1111111')
        self.assertEquals(caverphone('abby'), 'APA1111111')
        self.assertEquals(caverphone('abdo'), 'APTA111111')
        self.assertEquals(caverphone('abel'), 'APA1111111')
        self.assertEquals(caverphone('abigail'), 'APKA111111')
        self.assertEquals(caverphone('abina'), 'APNA111111')
        self.assertEquals(caverphone('abool'), 'APA1111111')
        self.assertEquals(caverphone('abraham'), 'APRM111111')
        self.assertEquals(caverphone('absalom'), 'APSLM11111')
        self.assertEquals(caverphone('ada'), 'ATA1111111')
        self.assertEquals(caverphone('adalbert'), 'ATPT111111')
        self.assertEquals(caverphone('adaline'), 'ATLN111111')
        self.assertEquals(caverphone('adam'), 'ATM1111111')
        self.assertEquals(caverphone('adela'), 'ATLA111111')
        self.assertEquals(caverphone('adelaide'), 'ATLT111111')
        self.assertEquals(caverphone('adeleen'), 'ATLN111111')
        self.assertEquals(caverphone('adelene'), 'ATLN111111')
        self.assertEquals(caverphone('adelina'), 'ATLNA11111')
        self.assertEquals(caverphone('adeline'), 'ATLN111111')
        self.assertEquals(caverphone('adolarious'), 'ATLRS11111')
        self.assertEquals(caverphone('adolph'), 'ATF1111111')
        self.assertEquals(caverphone('adolphe'), 'ATF1111111')
        self.assertEquals(caverphone('adolphus'), 'ATFS111111')
        self.assertEquals(caverphone('adonia'), 'ATNA111111')
        self.assertEquals(caverphone('adrian'), 'ATRN111111')
        self.assertEquals(caverphone('aeneas'), 'ANS1111111')
        self.assertEquals(caverphone('afred'), 'AFRT111111')
        self.assertEquals(caverphone('agatha'), 'AKTA111111')
        self.assertEquals(caverphone('aggie'), 'AKA1111111')
        self.assertEquals(caverphone('agnes'), 'AKNS111111')
        self.assertEquals(caverphone('agness'), 'AKNS111111')
        self.assertEquals(caverphone('ah'), 'A111111111')
        self.assertEquals(caverphone('ahira'), 'ARA1111111')
        self.assertEquals(caverphone('aida'), 'ATA1111111')
        self.assertEquals(caverphone('aidan'), 'ATN1111111')
        self.assertEquals(caverphone('aileen'), 'ALN1111111')
        self.assertEquals(caverphone('ailsa'), 'ASA1111111')
        self.assertEquals(caverphone('aimee'), 'AMA1111111')
        self.assertEquals(caverphone('aimie'), 'AMA1111111')
        self.assertEquals(caverphone('aird'), 'AT11111111')
        self.assertEquals(caverphone('airini'), 'ARNA111111')
        self.assertEquals(caverphone('alak'), 'ALK1111111')
        self.assertEquals(caverphone('alan'), 'ALN1111111')
        self.assertEquals(caverphone('alasdair'), 'ALSTA11111')
        self.assertEquals(caverphone('alastair'), 'ALSTA11111')
        self.assertEquals(caverphone('alban'), 'APN1111111')
        self.assertEquals(caverphone('albany'), 'APNA111111')
        self.assertEquals(caverphone('albert'), 'APT1111111')
        self.assertEquals(caverphone('alberta'), 'APTA111111')
        self.assertEquals(caverphone('alberthina'), 'APTNA11111')
        self.assertEquals(caverphone('albertina'), 'APTNA11111')
        self.assertEquals(caverphone('albertus'), 'APTS111111')
        self.assertEquals(caverphone('albina'), 'APNA111111')
        self.assertEquals(caverphone('aldolf'), 'ATF1111111')
        self.assertEquals(caverphone('aldwyn'), 'ATWN111111')
        self.assertEquals(caverphone('aleatha'), 'ALTA111111')
        self.assertEquals(caverphone('alec'), 'ALK1111111')
        self.assertEquals(caverphone('alex'), 'ALK1111111')
        self.assertEquals(caverphone('alexander'), 'ALKNTA1111')
        self.assertEquals(caverphone('alexanderina'), 'ALKNTRNA11')
        self.assertEquals(caverphone('alexandra'), 'ALKNTRA111')
        self.assertEquals(caverphone('alexandrena'), 'ALKNTRNA11')
        self.assertEquals(caverphone('alexandrew'), 'ALKNTRA111')
        self.assertEquals(caverphone('alexandria'), 'ALKNTRA111')
        self.assertEquals(caverphone('alexandrina'), 'ALKNTRNA11')
        self.assertEquals(caverphone('alexina'), 'ALKNA11111')
        self.assertEquals(caverphone('alexius'), 'ALKS111111')
        self.assertEquals(caverphone('alf'), 'AF11111111')
        self.assertEquals(caverphone('alfred'), 'AFRT111111')
        self.assertEquals(caverphone('alfreda'), 'AFRTA11111')
        self.assertEquals(caverphone('alfrerd'), 'AFRT111111')
        self.assertEquals(caverphone('algernon'), 'AKNN111111')
        self.assertEquals(caverphone('algier'), 'AKA1111111')
        self.assertEquals(caverphone('alice'), 'ALK1111111')
        self.assertEquals(caverphone('alicia'), 'ALSA111111')
        self.assertEquals(caverphone('alick'), 'ALK1111111')
        self.assertEquals(caverphone('aline'), 'ALN1111111')
        self.assertEquals(caverphone('alinie'), 'ALNA111111')
        self.assertEquals(caverphone('alison'), 'ALSN111111')
        self.assertEquals(caverphone('alister'), 'ALSTA11111')
        self.assertEquals(caverphone('alixe'), 'ALK1111111')
        self.assertEquals(caverphone('allan'), 'ALN1111111')
        self.assertEquals(caverphone('allen'), 'ALN1111111')
        self.assertEquals(caverphone('allison'), 'ALSN111111')
        self.assertEquals(caverphone('allon'), 'ALN1111111')
        self.assertEquals(caverphone('alma'), 'AMA1111111')
        self.assertEquals(caverphone('alnie'), 'ANA1111111')
        self.assertEquals(caverphone('aloysius'), 'ALSS111111')
        self.assertEquals(caverphone('alpheus'), 'AFS1111111')
        self.assertEquals(caverphone('alphonso'), 'AFNSA11111')
        self.assertEquals(caverphone('alphonsos'), 'AFNSS11111')
        self.assertEquals(caverphone('alphonsus'), 'AFNSS11111')
        self.assertEquals(caverphone('alston'), 'ASTN111111')
        self.assertEquals(caverphone('althea'), 'ATA1111111')
        self.assertEquals(caverphone('alva'), 'AFA1111111')
        self.assertEquals(caverphone('alvan'), 'AFN1111111')
        self.assertEquals(caverphone('alvia'), 'AFA1111111')
        self.assertEquals(caverphone('alvida'), 'AFTA111111')
        self.assertEquals(caverphone('alvin'), 'AFN1111111')
        self.assertEquals(caverphone('alvina'), 'AFNA111111')
        self.assertEquals(caverphone('alvirie'), 'AFRA111111')
        self.assertEquals(caverphone('alwin'), 'AWN1111111')
        self.assertEquals(caverphone('alwyn'), 'AWN1111111')
        self.assertEquals(caverphone('alys'), 'ALS1111111')
        self.assertEquals(caverphone('amanda'), 'AMNTA11111')
        self.assertEquals(caverphone('ambrose'), 'AMPRS11111')
        self.assertEquals(caverphone('amelia'), 'AMLA111111')
        self.assertEquals(caverphone('amida'), 'AMTA111111')
        self.assertEquals(caverphone('amie'), 'AMA1111111')
        self.assertEquals(caverphone('amos'), 'AMS1111111')
        self.assertEquals(caverphone('amy'), 'AMA1111111')
        self.assertEquals(caverphone('anabella'), 'ANPLA11111')
        self.assertEquals(caverphone('anastasia'), 'ANSTSA1111')
        self.assertEquals(caverphone('andarena'), 'ANTRNA1111')
        self.assertEquals(caverphone('andereanie'), 'ANTRNA1111')
        self.assertEquals(caverphone('anderena'), 'ANTRNA1111')
        self.assertEquals(caverphone('anderina'), 'ANTRNA1111')
        self.assertEquals(caverphone('anders'), 'ANTS111111')
        self.assertEquals(caverphone('anderson'), 'ANTSN11111')
        self.assertEquals(caverphone('andes'), 'ANTS111111')
        self.assertEquals(caverphone('andis'), 'ANTS111111')
        self.assertEquals(caverphone('andrea'), 'ANTRA11111')
        self.assertEquals(caverphone('andreas'), 'ANTRS11111')
        self.assertEquals(caverphone('andreen'), 'ANTRN11111')
        self.assertEquals(caverphone('andrena'), 'ANTRNA1111')
        self.assertEquals(caverphone('andrew'), 'ANTRA11111')
        self.assertEquals(caverphone('andrewetta'), 'ANTRWTA111')
        self.assertEquals(caverphone('andrewina'), 'ANTRWNA111')
        self.assertEquals(caverphone('andriana'), 'ANTRNA1111')
        self.assertEquals(caverphone('andrina'), 'ANTRNA1111')
        self.assertEquals(caverphone('angela'), 'ANKLA11111')
        self.assertEquals(caverphone('angelina'), 'ANKLNA1111')
        self.assertEquals(caverphone('anges'), 'ANKS111111')
        self.assertEquals(caverphone('angnetta'), 'ANKNTA1111')
        self.assertEquals(caverphone('angus'), 'ANKS111111')
        self.assertEquals(caverphone('angustus'), 'ANKSTS1111')
        self.assertEquals(caverphone('angy'), 'ANKA111111')
        self.assertEquals(caverphone('anita'), 'ANTA111111')
        self.assertEquals(caverphone('anmore'), 'ANMA111111')
        self.assertEquals(caverphone('ann'), 'AN11111111')
        self.assertEquals(caverphone('anna'), 'ANA1111111')
        self.assertEquals(caverphone('annabel'), 'ANPA111111')
        self.assertEquals(caverphone('annabell'), 'ANPA111111')
        self.assertEquals(caverphone('annabella'), 'ANPLA11111')
        self.assertEquals(caverphone('annastasia'), 'ANSTSA1111')
        self.assertEquals(caverphone('anne'), 'AN11111111')
        self.assertEquals(caverphone('anners'), 'ANS1111111')
        self.assertEquals(caverphone('annetta'), 'ANTA111111')
        self.assertEquals(caverphone('annette'), 'ANT1111111')
        self.assertEquals(caverphone('annettta'), 'ANTA111111')
        self.assertEquals(caverphone('annie'), 'ANA1111111')
        self.assertEquals(caverphone('annis'), 'ANS1111111')
        self.assertEquals(caverphone('anorah'), 'ANRA111111')
        self.assertEquals(caverphone('ansley'), 'ANSLA11111')
        self.assertEquals(caverphone('antcliffe'), 'ANTKLF1111')
        self.assertEquals(caverphone('anthony'), 'ANTNA11111')
        self.assertEquals(caverphone('antiss'), 'ANTS111111')
        self.assertEquals(caverphone('anton'), 'ANTN111111')
        self.assertEquals(caverphone('antonica'), 'ANTNKA1111')
        self.assertEquals(caverphone('antonie'), 'ANTNA11111')
        self.assertEquals(caverphone('antonio'), 'ANTNA11111')
        self.assertEquals(caverphone('antony'), 'ANTNA11111')
        self.assertEquals(caverphone('aquila'), 'AKLA111111')
        self.assertEquals(caverphone('ara'), 'ARA1111111')
        self.assertEquals(caverphone('arabella'), 'ARPLA11111')
        self.assertEquals(caverphone('archibald'), 'AKPT111111')
        self.assertEquals(caverphone('archie'), 'AKA1111111')
        self.assertEquals(caverphone('archina'), 'AKNA111111')
        self.assertEquals(caverphone('archur'), 'AKA1111111')
        self.assertEquals(caverphone('areta'), 'ARTA111111')
        self.assertEquals(caverphone('argles'), 'AKLS111111')
        self.assertEquals(caverphone('argyle'), 'AKA1111111')
        self.assertEquals(caverphone('aria'), 'ARA1111111')
        self.assertEquals(caverphone('ariana'), 'ARNA111111')
        self.assertEquals(caverphone('ariti'), 'ARTA111111')
        self.assertEquals(caverphone('arlene'), 'ALN1111111')
        self.assertEquals(caverphone('arnold'), 'ANT1111111')
        self.assertEquals(caverphone('aroha'), 'ARA1111111')
        self.assertEquals(caverphone('arowie'), 'ARWA111111')
        self.assertEquals(caverphone('arthur'), 'ATA1111111')
        self.assertEquals(caverphone('asenath'), 'ASNT111111')
        self.assertEquals(caverphone('ashburn'), 'ASPN111111')
        self.assertEquals(caverphone('asher'), 'ASA1111111')
        self.assertEquals(caverphone('ashley'), 'ASLA111111')
        self.assertEquals(caverphone('ashton'), 'ASTN111111')
        self.assertEquals(caverphone('atalanta'), 'ATLNTA1111')
        self.assertEquals(caverphone('athel'), 'ATA1111111')
        self.assertEquals(caverphone('athol'), 'ATA1111111')
        self.assertEquals(caverphone('atkinson'), 'ATKNSN1111')
        self.assertEquals(caverphone('aubrer'), 'APRA111111')
        self.assertEquals(caverphone('aubrey'), 'APRA111111')
        self.assertEquals(caverphone('audrew'), 'ATRA111111')
        self.assertEquals(caverphone('audrey'), 'ATRA111111')
        self.assertEquals(caverphone('audrina'), 'ATRNA11111')
        self.assertEquals(caverphone('aufrere'), 'AFRA111111')
        self.assertEquals(caverphone('augus'), 'AKS1111111')
        self.assertEquals(caverphone('august'), 'AKST111111')
        self.assertEquals(caverphone('augusta'), 'AKSTA11111')
        self.assertEquals(caverphone('augustine'), 'AKSTN11111')
        self.assertEquals(caverphone('augustus'), 'AKSTS11111')
        self.assertEquals(caverphone('aurora'), 'ARRA111111')
        self.assertEquals(caverphone('austen'), 'ASTN111111')
        self.assertEquals(caverphone('austin'), 'ASTN111111')
        self.assertEquals(caverphone('ava'), 'AFA1111111')
        self.assertEquals(caverphone('avery'), 'AFRA111111')
        self.assertEquals(caverphone('avice'), 'AFK1111111')
        self.assertEquals(caverphone('avis'), 'AFS1111111')
        self.assertEquals(caverphone('avondale'), 'AFNTA11111')
        self.assertEquals(caverphone('awdry'), 'ATRA111111')
        self.assertEquals(caverphone('axel'), 'AKA1111111')
        self.assertEquals(caverphone('azel'), 'ASA1111111')
        self.assertEquals(caverphone('azella'), 'ASLA111111')
        self.assertEquals(caverphone('baden'), 'PTN1111111')
        self.assertEquals(caverphone('bailey'), 'PLA1111111')
        self.assertEquals(caverphone('balfour'), 'PFA1111111')
        self.assertEquals(caverphone('barbara'), 'PPRA111111')
        self.assertEquals(caverphone('barnett'), 'PNT1111111')
        self.assertEquals(caverphone('barry'), 'PRA1111111')
        self.assertEquals(caverphone('bartholomew'), 'PTLMA11111')
        self.assertEquals(caverphone('bartlet'), 'PTLT111111')
        self.assertEquals(caverphone('bartlett'), 'PTLT111111')
        self.assertEquals(caverphone('basil'), 'PSA1111111')
        self.assertEquals(caverphone('beaton'), 'PTN1111111')
        self.assertEquals(caverphone('beatrice'), 'PTRK111111')
        self.assertEquals(caverphone('beatrix'), 'PTRK111111')
        self.assertEquals(caverphone('bedelia'), 'PTLA111111')
        self.assertEquals(caverphone('belina'), 'PLNA111111')
        self.assertEquals(caverphone('belinda'), 'PLNTA11111')
        self.assertEquals(caverphone('bella'), 'PLA1111111')
        self.assertEquals(caverphone('ben'), 'PN11111111')
        self.assertEquals(caverphone('benetta'), 'PNTA111111')
        self.assertEquals(caverphone('benita'), 'PNTA111111')
        self.assertEquals(caverphone('benjamin'), 'PNMN111111')
        self.assertEquals(caverphone('bennet'), 'PNT1111111')
        self.assertEquals(caverphone('benson'), 'PNSN111111')
        self.assertEquals(caverphone('bernadette'), 'PNTT111111')
        self.assertEquals(caverphone('bernard'), 'PNT1111111')
        self.assertEquals(caverphone('bernhard'), 'PNT1111111')
        self.assertEquals(caverphone('bernhardt'), 'PNT1111111')
        self.assertEquals(caverphone('bernice'), 'PNK1111111')
        self.assertEquals(caverphone('berrie'), 'PRA1111111')
        self.assertEquals(caverphone('bert'), 'PT11111111')
        self.assertEquals(caverphone('berta'), 'PTA1111111')
        self.assertEquals(caverphone('bertetta'), 'PTTA111111')
        self.assertEquals(caverphone('bertha'), 'PTA1111111')
        self.assertEquals(caverphone('berthia'), 'PTA1111111')
        self.assertEquals(caverphone('bertie'), 'PTA1111111')
        self.assertEquals(caverphone('bertina'), 'PTNA111111')
        self.assertEquals(caverphone('bertram'), 'PTRM111111')
        self.assertEquals(caverphone('bertrand'), 'PTRNT11111')
        self.assertEquals(caverphone('berty'), 'PTA1111111')
        self.assertEquals(caverphone('bertzow'), 'PTSA111111')
        self.assertEquals(caverphone('beryl'), 'PRA1111111')
        self.assertEquals(caverphone('bessie'), 'PSA1111111')
        self.assertEquals(caverphone('bessy'), 'PSA1111111')
        self.assertEquals(caverphone('beter'), 'PTA1111111')
        self.assertEquals(caverphone('beth'), 'PT11111111')
        self.assertEquals(caverphone('bethea'), 'PTA1111111')
        self.assertEquals(caverphone('bethia'), 'PTA1111111')
        self.assertEquals(caverphone('betsey'), 'PTSA111111')
        self.assertEquals(caverphone('betsy'), 'PTSA111111')
        self.assertEquals(caverphone('bettie'), 'PTA1111111')
        self.assertEquals(caverphone('bettina'), 'PTNA111111')
        self.assertEquals(caverphone('betty'), 'PTA1111111')
        self.assertEquals(caverphone('beulah'), 'PLA1111111')
        self.assertEquals(caverphone('billy'), 'PLA1111111')
        self.assertEquals(caverphone('bina'), 'PNA1111111')
        self.assertEquals(caverphone('binah'), 'PNA1111111')
        self.assertEquals(caverphone('birdie'), 'PTA1111111')
        self.assertEquals(caverphone('blair'), 'PLA1111111')
        self.assertEquals(caverphone('blanch'), 'PLNK111111')
        self.assertEquals(caverphone('blanche'), 'PLNK111111')
        self.assertEquals(caverphone('blenard'), 'PLNT111111')
        self.assertEquals(caverphone('bodil'), 'PTA1111111')
        self.assertEquals(caverphone('bollettie'), 'PLTA111111')
        self.assertEquals(caverphone('bordix'), 'PTK1111111')
        self.assertEquals(caverphone('bowman'), 'PMN1111111')
        self.assertEquals(caverphone('boyd'), 'PT11111111')
        self.assertEquals(caverphone('brazil'), 'PRSA111111')
        self.assertEquals(caverphone('breatne'), 'PRTN111111')
        self.assertEquals(caverphone('breezetta'), 'PRSTA11111')
        self.assertEquals(caverphone('brenda'), 'PRNTA11111')
        self.assertEquals(caverphone('brian'), 'PRN1111111')
        self.assertEquals(caverphone('bridget'), 'PRKT111111')
        self.assertEquals(caverphone('bridie'), 'PRTA111111')
        self.assertEquals(caverphone('brigid'), 'PRKT111111')
        self.assertEquals(caverphone('browne'), 'PRN1111111')
        self.assertEquals(caverphone('bruce'), 'PRK1111111')
        self.assertEquals(caverphone('bryan'), 'PRN1111111')
        self.assertEquals(caverphone('bryda'), 'PRTA111111')
        self.assertEquals(caverphone('buchanan'), 'PKNN111111')
        self.assertEquals(caverphone('bulimba'), 'PLMPA11111')
        self.assertEquals(caverphone('burma'), 'PMA1111111')
        self.assertEquals(caverphone('burt'), 'PT11111111')
        self.assertEquals(caverphone('burton'), 'PTN1111111')
        self.assertEquals(caverphone('bussorah'), 'PSRA111111')
        self.assertEquals(caverphone('byrel'), 'PRA1111111')
        self.assertEquals(caverphone('byrl'), 'PA11111111')
        self.assertEquals(caverphone('camelia'), 'KMLA111111')
        self.assertEquals(caverphone('camellia'), 'KMLA111111')
        self.assertEquals(caverphone('campbell'), 'KMPA111111')
        self.assertEquals(caverphone('carden'), 'KTN1111111')
        self.assertEquals(caverphone('caren'), 'KRN1111111')
        self.assertEquals(caverphone('carew'), 'KRA1111111')
        self.assertEquals(caverphone('carita'), 'KRTA111111')
        self.assertEquals(caverphone('carl'), 'KA11111111')
        self.assertEquals(caverphone('carlile'), 'KLA1111111')
        self.assertEquals(caverphone('carlin'), 'KLN1111111')
        self.assertEquals(caverphone('carlton'), 'KTN1111111')
        self.assertEquals(caverphone('carmen'), 'KMN1111111')
        self.assertEquals(caverphone('carmichael'), 'KMKA111111')
        self.assertEquals(caverphone('carnegie'), 'KNKA111111')
        self.assertEquals(caverphone('carole'), 'KRA1111111')
        self.assertEquals(caverphone('carolina'), 'KRLNA11111')
        self.assertEquals(caverphone('caroline'), 'KRLN111111')
        self.assertEquals(caverphone('carona'), 'KRNA111111')
        self.assertEquals(caverphone('carra'), 'KRA1111111')
        self.assertEquals(caverphone('carrie'), 'KRA1111111')
        self.assertEquals(caverphone('carrington'), 'KRNKTN1111')
        self.assertEquals(caverphone('cassandra'), 'KSNTRA1111')
        self.assertEquals(caverphone('cassie'), 'KSA1111111')
        self.assertEquals(caverphone('catharine'), 'KTRN111111')
        self.assertEquals(caverphone('cathelus'), 'KTLS111111')
        self.assertEquals(caverphone('catherina'), 'KTRNA11111')
        self.assertEquals(caverphone('catherine'), 'KTRN111111')
        self.assertEquals(caverphone('cathilus'), 'KTLS111111')
        self.assertEquals(caverphone('cathleen'), 'KTLN111111')
        self.assertEquals(caverphone('cathrien'), 'KTRN111111')
        self.assertEquals(caverphone('cathrine'), 'KTRN111111')
        self.assertEquals(caverphone('catrina'), 'KTRNA11111')
        self.assertEquals(caverphone('cecelia'), 'SSLA111111')
        self.assertEquals(caverphone('cecil'), 'SSA1111111')
        self.assertEquals(caverphone('cecile'), 'SSA1111111')
        self.assertEquals(caverphone('cecilia'), 'SSLA111111')
        self.assertEquals(caverphone('cecily'), 'SSLA111111')
        self.assertEquals(caverphone('cedric'), 'STRK111111')
        self.assertEquals(caverphone('cedrie'), 'STRA111111')
        self.assertEquals(caverphone('celestine'), 'SLSTN11111')
        self.assertEquals(caverphone('celia'), 'SLA1111111')
        self.assertEquals(caverphone('cessford'), 'SSFT111111')
        self.assertEquals(caverphone('chalmers'), 'KMS1111111')
        self.assertEquals(caverphone('chapman'), 'KPMN111111')
        self.assertEquals(caverphone('charia'), 'KRA1111111')
        self.assertEquals(caverphone('charitable'), 'KRTPA11111')
        self.assertEquals(caverphone('charles'), 'KLS1111111')
        self.assertEquals(caverphone('charlesclarence'), 'KLSKLRNK11')
        self.assertEquals(caverphone('charleswilliam'), 'KLSWLM1111')
        self.assertEquals(caverphone('charley'), 'KLA1111111')
        self.assertEquals(caverphone('charlie'), 'KLA1111111')
        self.assertEquals(caverphone('charlott'), 'KLT1111111')
        self.assertEquals(caverphone('charlotte'), 'KLT1111111')
        self.assertEquals(caverphone('chas'), 'KS11111111')
        self.assertEquals(caverphone('chatles'), 'KTLS111111')
        self.assertEquals(caverphone('chester'), 'KSTA111111')
        self.assertEquals(caverphone('chistopher'), 'KSTFA11111')
        self.assertEquals(caverphone('chrarles'), 'KRLS111111')
        self.assertEquals(caverphone('chrest'), 'KRST111111')
        self.assertEquals(caverphone('chrissie'), 'KRSA111111')
        self.assertEquals(caverphone('chrissy'), 'KRSA111111')
        self.assertEquals(caverphone('christabel'), 'KRSTPA1111')
        self.assertEquals(caverphone('christabella'), 'KRSTPLA111')
        self.assertEquals(caverphone('christen'), 'KRSTN11111')
        self.assertEquals(caverphone('christena'), 'KRSTNA1111')
        self.assertEquals(caverphone('christian'), 'KRSN111111')
        self.assertEquals(caverphone('christiana'), 'KRSNA11111')
        self.assertEquals(caverphone('christie'), 'KRSTA11111')
        self.assertEquals(caverphone('christina'), 'KRSTNA1111')
        self.assertEquals(caverphone('christine'), 'KRSTN11111')
        self.assertEquals(caverphone('christinn'), 'KRSTN11111')
        self.assertEquals(caverphone('christobel'), 'KRSTPA1111')
        self.assertEquals(caverphone('christopher'), 'KRSTFA1111')
        self.assertEquals(caverphone('cicely'), 'SSLA111111')
        self.assertEquals(caverphone('cicil'), 'SSA1111111')
        self.assertEquals(caverphone('cissie'), 'SSA1111111')
        self.assertEquals(caverphone('cissy'), 'SSA1111111')
        self.assertEquals(caverphone('claire'), 'KLA1111111')
        self.assertEquals(caverphone('clalence'), 'KLLNK11111')
        self.assertEquals(caverphone('clance'), 'KLNK111111')
        self.assertEquals(caverphone('clara'), 'KLRA111111')
        self.assertEquals(caverphone('clarance'), 'KLRNK11111')
        self.assertEquals(caverphone('clare'), 'KLA1111111')
        self.assertEquals(caverphone('clarels'), 'KLRS111111')
        self.assertEquals(caverphone('clarence'), 'KLRNK11111')
        self.assertEquals(caverphone('clarenda'), 'KLRNTA1111')
        self.assertEquals(caverphone('clarenee'), 'KLRNA11111')
        self.assertEquals(caverphone('claretta'), 'KLRTA11111')
        self.assertEquals(caverphone('claribel'), 'KLRPA11111')
        self.assertEquals(caverphone('clarice'), 'KLRK111111')
        self.assertEquals(caverphone('clarinda'), 'KLRNTA1111')
        self.assertEquals(caverphone('clarissa'), 'KLRSA11111')
        self.assertEquals(caverphone('claritta'), 'KLRTA11111')
        self.assertEquals(caverphone('clarkson'), 'KLKSN11111')
        self.assertEquals(caverphone('clarles'), 'KLLS111111')
        self.assertEquals(caverphone('claud'), 'KLT1111111')
        self.assertEquals(caverphone('claude'), 'KLT1111111')
        self.assertEquals(caverphone('claudia'), 'KLTA111111')
        self.assertEquals(caverphone('clement'), 'KLMNT11111')
        self.assertEquals(caverphone('clementina'), 'KLMNTNA111')
        self.assertEquals(caverphone('clementine'), 'KLMNTN1111')
        self.assertEquals(caverphone('clemont'), 'KLMNT11111')
        self.assertEquals(caverphone('clifford'), 'KLFT111111')
        self.assertEquals(caverphone('cliford'), 'KLFT111111')
        self.assertEquals(caverphone('clifton'), 'KLFTN11111')
        self.assertEquals(caverphone('clina'), 'KLNA111111')
        self.assertEquals(caverphone('clive'), 'KLF1111111')
        self.assertEquals(caverphone('cllarles'), 'KLLS111111')
        self.assertEquals(caverphone('clrarles'), 'KRLS111111')
        self.assertEquals(caverphone('clunnie'), 'KLNA111111')
        self.assertEquals(caverphone('clyde'), 'KLT1111111')
        self.assertEquals(caverphone('clym'), 'KLM1111111')
        self.assertEquals(caverphone('cochrane'), 'KKRN111111')
        self.assertEquals(caverphone('coila'), 'KLA1111111')
        self.assertEquals(caverphone('coleman'), 'KLMN111111')
        self.assertEquals(caverphone('colena'), 'KLNA111111')
        self.assertEquals(caverphone('colin'), 'KLN1111111')
        self.assertEquals(caverphone('colina'), 'KLNA111111')
        self.assertEquals(caverphone('colville'), 'KFA1111111')
        self.assertEquals(caverphone('comrie'), 'KMRA111111')
        self.assertEquals(caverphone('connie'), 'KNA1111111')
        self.assertEquals(caverphone('conrad'), 'KNRT111111')
        self.assertEquals(caverphone('conroy'), 'KNRA111111')
        self.assertEquals(caverphone('constance'), 'KNSTNK1111')
        self.assertEquals(caverphone('conway'), 'KNWA111111')
        self.assertEquals(caverphone('conwy'), 'KNWA111111')
        self.assertEquals(caverphone('cora'), 'KRA1111111')
        self.assertEquals(caverphone('coral'), 'KRA1111111')
        self.assertEquals(caverphone('coralie'), 'KRLA111111')
        self.assertEquals(caverphone('coraline'), 'KRLN111111')
        self.assertEquals(caverphone('corbett'), 'KPT1111111')
        self.assertEquals(caverphone('cordelia'), 'KTLA111111')
        self.assertEquals(caverphone('cordon'), 'KTN1111111')
        self.assertEquals(caverphone('corinna'), 'KRNA111111')
        self.assertEquals(caverphone('cornelia'), 'KNLA111111')
        self.assertEquals(caverphone('cornelius'), 'KNLS111111')
        self.assertEquals(caverphone('corona'), 'KRNA111111')
        self.assertEquals(caverphone('correll'), 'KRA1111111')
        self.assertEquals(caverphone('corrie'), 'KRA1111111')
        self.assertEquals(caverphone('coverly'), 'KFLA111111')
        self.assertEquals(caverphone('cowan'), 'KWN1111111')
        self.assertEquals(caverphone('crace'), 'KRK1111111')
        self.assertEquals(caverphone('craigie'), 'KRKA111111')
        self.assertEquals(caverphone('cranley'), 'KRNLA11111')
        self.assertEquals(caverphone('crawford'), 'KRFT111111')
        self.assertEquals(caverphone('cresser'), 'KRSA111111')
        self.assertEquals(caverphone('crissie'), 'KRSA111111')
        self.assertEquals(caverphone('crissy'), 'KRSA111111')
        self.assertEquals(caverphone('croydon'), 'KRTN111111')
        self.assertEquals(caverphone('cumming'), 'KMNK111111')
        self.assertEquals(caverphone('curle'), 'KA11111111')
        self.assertEquals(caverphone('cusack'), 'KSK1111111')
        self.assertEquals(caverphone('cushla'), 'KSLA111111')
        self.assertEquals(caverphone('cuthbert'), 'KTPT111111')
        self.assertEquals(caverphone('cvrus'), 'KFRS111111')
        self.assertEquals(caverphone('cynthia'), 'SNTA111111')
        self.assertEquals(caverphone('cyprian'), 'SPRN111111')
        self.assertEquals(caverphone('cyri1'), 'SRA1111111')
        self.assertEquals(caverphone('cyril'), 'SRA1111111')
        self.assertEquals(caverphone('d\'arcy'), 'TSA1111111')
        self.assertEquals(caverphone('dagald'), 'TKT1111111')
        self.assertEquals(caverphone('dagmar'), 'TKMA111111')
        self.assertEquals(caverphone('daisy'), 'TSA1111111')
        self.assertEquals(caverphone('dalia'), 'TLA1111111')
        self.assertEquals(caverphone('dallas'), 'TLS1111111')
        self.assertEquals(caverphone('dan'), 'TN11111111')
        self.assertEquals(caverphone('dand'), 'TNT1111111')
        self.assertEquals(caverphone('dane'), 'TN11111111')
        self.assertEquals(caverphone('danes'), 'TNS1111111')
        self.assertEquals(caverphone('daniel'), 'TNA1111111')
        self.assertEquals(caverphone('daphne'), 'TFN1111111')
        self.assertEquals(caverphone('darcey'), 'TSA1111111')
        self.assertEquals(caverphone('darcy'), 'TSA1111111')
        self.assertEquals(caverphone('dardanella'), 'TTNLA11111')
        self.assertEquals(caverphone('darwent'), 'TWNT111111')
        self.assertEquals(caverphone('dave'), 'TF11111111')
        self.assertEquals(caverphone('davey'), 'TFA1111111')
        self.assertEquals(caverphone('davicl'), 'TFKA111111')
        self.assertEquals(caverphone('david'), 'TFT1111111')
        self.assertEquals(caverphone('davida'), 'TFTA111111')
        self.assertEquals(caverphone('davidena'), 'TFTNA11111')
        self.assertEquals(caverphone('davina'), 'TFNA111111')
        self.assertEquals(caverphone('davis'), 'TFS1111111')
        self.assertEquals(caverphone('davitl'), 'TFTA111111')
        self.assertEquals(caverphone('dawson'), 'TSN1111111')
        self.assertEquals(caverphone('deab'), 'TP11111111')
        self.assertEquals(caverphone('deane'), 'TN11111111')
        self.assertEquals(caverphone('deborah'), 'TPRA111111')
        self.assertEquals(caverphone('decima'), 'TSMA111111')
        self.assertEquals(caverphone('decimus'), 'TSMS111111')
        self.assertEquals(caverphone('deia'), 'TA11111111')
        self.assertEquals(caverphone('delcia'), 'TSA1111111')
        self.assertEquals(caverphone('delcie'), 'TSA1111111')
        self.assertEquals(caverphone('delia'), 'TLA1111111')
        self.assertEquals(caverphone('delice'), 'TLK1111111')
        self.assertEquals(caverphone('delilah'), 'TLLA111111')
        self.assertEquals(caverphone('della'), 'TLA1111111')
        self.assertEquals(caverphone('delsie'), 'TSA1111111')
        self.assertEquals(caverphone('denis'), 'TNS1111111')
        self.assertEquals(caverphone('denise'), 'TNS1111111')
        self.assertEquals(caverphone('dennis'), 'TNS1111111')
        self.assertEquals(caverphone('denzil'), 'TNSA111111')
        self.assertEquals(caverphone('derice'), 'TRK1111111')
        self.assertEquals(caverphone('derry'), 'TRA1111111')
        self.assertEquals(caverphone('desmond'), 'TSMNT11111')
        self.assertEquals(caverphone('devina'), 'TFNA111111')
        self.assertEquals(caverphone('diana'), 'TNA1111111')
        self.assertEquals(caverphone('dibb'), 'TP11111111')
        self.assertEquals(caverphone('dick'), 'TK11111111')
        self.assertEquals(caverphone('digby'), 'TKPA111111')
        self.assertEquals(caverphone('dina'), 'TNA1111111')
        self.assertEquals(caverphone('dinah'), 'TNA1111111')
        self.assertEquals(caverphone('dnniel'), 'TNA1111111')
        self.assertEquals(caverphone('docy'), 'TSA1111111')
        self.assertEquals(caverphone('dod'), 'TT11111111')
        self.assertEquals(caverphone('dolce'), 'TK11111111')
        self.assertEquals(caverphone('dolina'), 'TLNA111111')
        self.assertEquals(caverphone('dollena'), 'TLNA111111')
        self.assertEquals(caverphone('dolly'), 'TLA1111111')
        self.assertEquals(caverphone('dolores'), 'TLRS111111')
        self.assertEquals(caverphone('dominic'), 'TMNK111111')
        self.assertEquals(caverphone('dominick'), 'TMNK111111')
        self.assertEquals(caverphone('domonic'), 'TMNK111111')
        self.assertEquals(caverphone('don'), 'TN11111111')
        self.assertEquals(caverphone('donah'), 'TNA1111111')
        self.assertEquals(caverphone('donald'), 'TNT1111111')
        self.assertEquals(caverphone('donaldina'), 'TNTNA11111')
        self.assertEquals(caverphone('donalena'), 'TNLNA11111')
        self.assertEquals(caverphone('donella'), 'TNLA111111')
        self.assertEquals(caverphone('dora'), 'TRA1111111')
        self.assertEquals(caverphone('dorathea'), 'TRTA111111')
        self.assertEquals(caverphone('dorcas'), 'TKS1111111')
        self.assertEquals(caverphone('doreen'), 'TRN1111111')
        self.assertEquals(caverphone('dorice'), 'TRK1111111')
        self.assertEquals(caverphone('doris'), 'TRS1111111')
        self.assertEquals(caverphone('dorles'), 'TLS1111111')
        self.assertEquals(caverphone('dorothea'), 'TRTA111111')
        self.assertEquals(caverphone('dorothy'), 'TRTA111111')
        self.assertEquals(caverphone('dorree'), 'TRA1111111')
        self.assertEquals(caverphone('dorris'), 'TRS1111111')
        self.assertEquals(caverphone('douald'), 'TT11111111')
        self.assertEquals(caverphone('dougal'), 'TKA1111111')
        self.assertEquals(caverphone('dougald'), 'TKT1111111')
        self.assertEquals(caverphone('douglas'), 'TKLS111111')
        self.assertEquals(caverphone('dryden'), 'TRTN111111')
        self.assertEquals(caverphone('dsmond'), 'TSMNT11111')
        self.assertEquals(caverphone('dudley'), 'TTLA111111')
        self.assertEquals(caverphone('dugald'), 'TKT1111111')
        self.assertEquals(caverphone('dugall'), 'TKA1111111')
        self.assertEquals(caverphone('dulcie'), 'TSA1111111')
        self.assertEquals(caverphone('duncan'), 'TNKN111111')
        self.assertEquals(caverphone('dunncan'), 'TNKN111111')
        self.assertEquals(caverphone('dunstan'), 'TNSTN11111')
        self.assertEquals(caverphone('e'), '1111111111')
        self.assertEquals(caverphone('eaber'), 'APA1111111')
        self.assertEquals(caverphone('eadly'), 'ATLA111111')
        self.assertEquals(caverphone('earl'), 'AA11111111')
        self.assertEquals(caverphone('earle'), 'AA11111111')
        self.assertEquals(caverphone('earnest'), 'ANST111111')
        self.assertEquals(caverphone('earold'), 'ART1111111')
        self.assertEquals(caverphone('earry'), 'ARA1111111')
        self.assertEquals(caverphone('eary'), 'ARA1111111')
        self.assertEquals(caverphone('easther'), 'ASTA111111')
        self.assertEquals(caverphone('ebb'), 'AP11111111')
        self.assertEquals(caverphone('ebbie'), 'APA1111111')
        self.assertEquals(caverphone('ebdom'), 'APTM111111')
        self.assertEquals(caverphone('ebdon'), 'APTN111111')
        self.assertEquals(caverphone('eben'), 'APN1111111')
        self.assertEquals(caverphone('ebenezer'), 'APNSA11111')
        self.assertEquals(caverphone('eccles'), 'AKLS111111')
        self.assertEquals(caverphone('eda'), 'ATA1111111')
        self.assertEquals(caverphone('eden'), 'ATN1111111')
        self.assertEquals(caverphone('edgal'), 'AKA1111111')
        self.assertEquals(caverphone('edgar'), 'AKA1111111')
        self.assertEquals(caverphone('edifer'), 'ATFA111111')
        self.assertEquals(caverphone('edifu'), 'ATFA111111')
        self.assertEquals(caverphone('edith'), 'ATT1111111')
        self.assertEquals(caverphone('edla'), 'ATLA111111')
        self.assertEquals(caverphone('edmond'), 'ATMNT11111')
        self.assertEquals(caverphone('edmund'), 'ATMNT11111')
        self.assertEquals(caverphone('edna'), 'ATNA111111')
        self.assertEquals(caverphone('edolph'), 'ATF1111111')
        self.assertEquals(caverphone('edric'), 'ATRK111111')
        self.assertEquals(caverphone('edvina'), 'ATFNA11111')
        self.assertEquals(caverphone('edvward'), 'ATFWT11111')
        self.assertEquals(caverphone('edwald'), 'ATWT111111')
        self.assertEquals(caverphone('edwarcl'), 'ATWKA11111')
        self.assertEquals(caverphone('edward'), 'ATWT111111')
        self.assertEquals(caverphone('edwardd'), 'ATWT111111')
        self.assertEquals(caverphone('edwardi'), 'ATWTA11111')
        self.assertEquals(caverphone('edwardl'), 'ATWTA11111')
        self.assertEquals(caverphone('edwards'), 'ATWTS11111')
        self.assertEquals(caverphone('edwin'), 'ATWN111111')
        self.assertEquals(caverphone('edwina'), 'ATWNA11111')
        self.assertEquals(caverphone('edyth'), 'ATT1111111')
        self.assertEquals(caverphone('edythe'), 'ATT1111111')
        self.assertEquals(caverphone('eenry'), 'ANRA111111')
        self.assertEquals(caverphone('eerbert'), 'APT1111111')
        self.assertEquals(caverphone('effie'), 'AFA1111111')
        self.assertEquals(caverphone('effield'), 'AFT1111111')
        self.assertEquals(caverphone('efiza'), 'AFSA111111')
        self.assertEquals(caverphone('eflie'), 'AFLA111111')
        self.assertEquals(caverphone('egbert'), 'AKPT111111')
        self.assertEquals(caverphone('eglentine'), 'AKLNTN1111')
        self.assertEquals(caverphone('ehler'), 'ALA1111111')
        self.assertEquals(caverphone('eila'), 'ALA1111111')
        self.assertEquals(caverphone('eileen'), 'ALN1111111')
        self.assertEquals(caverphone('eileena'), 'ALNA111111')
        self.assertEquals(caverphone('eilene'), 'ALN1111111')
        self.assertEquals(caverphone('eilzabeth'), 'ASPT111111')
        self.assertEquals(caverphone('eion'), 'AN11111111')
        self.assertEquals(caverphone('eirene'), 'ARN1111111')
        self.assertEquals(caverphone('elaine'), 'ALN1111111')
        self.assertEquals(caverphone('eldorado'), 'ATRTA11111')
        self.assertEquals(caverphone('eldrid'), 'ATRT111111')
        self.assertEquals(caverphone('eleana'), 'ALNA111111')
        self.assertEquals(caverphone('eleanor'), 'ALNA111111')
        self.assertEquals(caverphone('eleanora'), 'ALNRA11111')
        self.assertEquals(caverphone('eleanore'), 'ALNA111111')
        self.assertEquals(caverphone('eleazar'), 'ALSA111111')
        self.assertEquals(caverphone('elena'), 'ALNA111111')
        self.assertEquals(caverphone('elenor'), 'ALNA111111')
        self.assertEquals(caverphone('elenora'), 'ALNRA11111')
        self.assertEquals(caverphone('eleonora'), 'ALNRA11111')
        self.assertEquals(caverphone('eleonore'), 'ALNA111111')
        self.assertEquals(caverphone('elephalet'), 'ALFLT11111')
        self.assertEquals(caverphone('elezeard'), 'ALST111111')
        self.assertEquals(caverphone('elfreda'), 'AFRTA11111')
        self.assertEquals(caverphone('elfrida'), 'AFRTA11111')
        self.assertEquals(caverphone('eli'), 'ALA1111111')
        self.assertEquals(caverphone('elias'), 'ALS1111111')
        self.assertEquals(caverphone('eliezer'), 'ALSA111111')
        self.assertEquals(caverphone('elijah'), 'ALA1111111')
        self.assertEquals(caverphone('elinor'), 'ALNA111111')
        self.assertEquals(caverphone('eliot'), 'ALT1111111')
        self.assertEquals(caverphone('eliphalet'), 'ALFLT11111')
        self.assertEquals(caverphone('elisabeth'), 'ALSPT11111')
        self.assertEquals(caverphone('elise'), 'ALS1111111')
        self.assertEquals(caverphone('elisha'), 'ALSA111111')
        self.assertEquals(caverphone('elishe'), 'ALS1111111')
        self.assertEquals(caverphone('elison'), 'ALSN111111')
        self.assertEquals(caverphone('eliza'), 'ALSA111111')
        self.assertEquals(caverphone('elizabel'), 'ALSPA11111')
        self.assertEquals(caverphone('elizabeth'), 'ALSPT11111')
        self.assertEquals(caverphone('elizie'), 'ALSA111111')
        self.assertEquals(caverphone('ella'), 'ALA1111111')
        self.assertEquals(caverphone('ellaline'), 'ALLN111111')
        self.assertEquals(caverphone('ellanor'), 'ALNA111111')
        self.assertEquals(caverphone('elleana'), 'ALNA111111')
        self.assertEquals(caverphone('elleanor'), 'ALNA111111')
        self.assertEquals(caverphone('ellen'), 'ALN1111111')
        self.assertEquals(caverphone('ellenor'), 'ALNA111111')
        self.assertEquals(caverphone('ellenora'), 'ALNRA11111')
        self.assertEquals(caverphone('elleston'), 'ALSTN11111')
        self.assertEquals(caverphone('ellie'), 'ALA1111111')
        self.assertEquals(caverphone('ellien'), 'ALN1111111')
        self.assertEquals(caverphone('ellinor'), 'ALNA111111')
        self.assertEquals(caverphone('elliott'), 'ALT1111111')
        self.assertEquals(caverphone('ellis'), 'ALS1111111')
        self.assertEquals(caverphone('ellison'), 'ALSN111111')
        self.assertEquals(caverphone('elliston'), 'ALSTN11111')
        self.assertEquals(caverphone('ellsmere'), 'ASMA111111')
        self.assertEquals(caverphone('elma'), 'AMA1111111')
        self.assertEquals(caverphone('elmira'), 'AMRA111111')
        self.assertEquals(caverphone('elsa'), 'ASA1111111')
        self.assertEquals(caverphone('elsie'), 'ASA1111111')
        self.assertEquals(caverphone('elsinore'), 'ASNA111111')
        self.assertEquals(caverphone('elspeth'), 'ASPT111111')
        self.assertEquals(caverphone('eluburt'), 'ALPT111111')
        self.assertEquals(caverphone('elva'), 'AFA1111111')
        self.assertEquals(caverphone('elvena'), 'AFNA111111')
        self.assertEquals(caverphone('elvene'), 'AFN1111111')
        self.assertEquals(caverphone('elvia'), 'AFA1111111')
        self.assertEquals(caverphone('elvie'), 'AFA1111111')
        self.assertEquals(caverphone('elvina'), 'AFNA111111')
        self.assertEquals(caverphone('elvira'), 'AFRA111111')
        self.assertEquals(caverphone('emanuel'), 'AMNA111111')
        self.assertEquals(caverphone('emela'), 'AMLA111111')
        self.assertEquals(caverphone('emelia'), 'AMLA111111')
        self.assertEquals(caverphone('emelie'), 'AMLA111111')
        self.assertEquals(caverphone('emeline'), 'AMLN111111')
        self.assertEquals(caverphone('emely'), 'AMLA111111')
        self.assertEquals(caverphone('emest'), 'AMST111111')
        self.assertEquals(caverphone('emil'), 'AMA1111111')
        self.assertEquals(caverphone('emile'), 'AMA1111111')
        self.assertEquals(caverphone('emiley'), 'AMLA111111')
        self.assertEquals(caverphone('emilie'), 'AMLA111111')
        self.assertEquals(caverphone('emilina'), 'AMLNA11111')
        self.assertEquals(caverphone('emiline'), 'AMLN111111')
        self.assertEquals(caverphone('emilio'), 'AMLA111111')
        self.assertEquals(caverphone('emily'), 'AMLA111111')
        self.assertEquals(caverphone('emma'), 'AMA1111111')
        self.assertEquals(caverphone('emmanuel'), 'AMNA111111')
        self.assertEquals(caverphone('emmeline'), 'AMLN111111')
        self.assertEquals(caverphone('emmie'), 'AMA1111111')
        self.assertEquals(caverphone('emmy'), 'AMA1111111')
        self.assertEquals(caverphone('ena'), 'ANA1111111')
        self.assertEquals(caverphone('eneas'), 'ANS1111111')
        self.assertEquals(caverphone('english'), 'ANKLS11111')
        self.assertEquals(caverphone('engo'), 'ANKA111111')
        self.assertEquals(caverphone('enid'), 'ANT1111111')
        self.assertEquals(caverphone('enny'), 'ANA1111111')
        self.assertEquals(caverphone('enoch'), 'ANK1111111')
        self.assertEquals(caverphone('ephraim'), 'AFRM111111')
        self.assertEquals(caverphone('ephrain'), 'AFRN111111')
        self.assertEquals(caverphone('ephriam'), 'AFRM111111')
        self.assertEquals(caverphone('erana'), 'ARNA111111')
        self.assertEquals(caverphone('erancis'), 'ARNSS11111')
        self.assertEquals(caverphone('erasmus'), 'ARSMS11111')
        self.assertEquals(caverphone('erederick'), 'ARTRK11111')
        self.assertEquals(caverphone('erek'), 'ARK1111111')
        self.assertEquals(caverphone('erenest'), 'ARNST11111')
        self.assertEquals(caverphone('eric'), 'ARK1111111')
        self.assertEquals(caverphone('erich'), 'ARK1111111')
        self.assertEquals(caverphone('erie'), 'ARA1111111')
        self.assertEquals(caverphone('erik'), 'ARK1111111')
        self.assertEquals(caverphone('erin'), 'ARN1111111')
        self.assertEquals(caverphone('erle'), 'AA11111111')
        self.assertEquals(caverphone('ermina'), 'AMNA111111')
        self.assertEquals(caverphone('ern'), 'AN11111111')
        self.assertEquals(caverphone('ernelst'), 'ANST111111')
        self.assertEquals(caverphone('ernest'), 'ANST111111')
        self.assertEquals(caverphone('ernestina'), 'ANSTNA1111')
        self.assertEquals(caverphone('ernestine'), 'ANSTN11111')
        self.assertEquals(caverphone('ernestreetfrancis'), 'ANSTRTFRNS')
        self.assertEquals(caverphone('ernett'), 'ANT1111111')
        self.assertEquals(caverphone('ernie'), 'ANA1111111')
        self.assertEquals(caverphone('ernma'), 'ANMA111111')
        self.assertEquals(caverphone('ernst'), 'ANST111111')
        self.assertEquals(caverphone('errol'), 'ARA1111111')
        self.assertEquals(caverphone('erwin'), 'AWN1111111')
        self.assertEquals(caverphone('esdaile'), 'ASTA111111')
        self.assertEquals(caverphone('esdale'), 'ASTA111111')
        self.assertEquals(caverphone('esher'), 'ASA1111111')
        self.assertEquals(caverphone('esma'), 'ASMA111111')
        self.assertEquals(caverphone('esme'), 'ASM1111111')
        self.assertEquals(caverphone('esmond'), 'ASMNT11111')
        self.assertEquals(caverphone('essie'), 'ASA1111111')
        self.assertEquals(caverphone('estella'), 'ASTLA11111')
        self.assertEquals(caverphone('estelle'), 'ASTA111111')
        self.assertEquals(caverphone('ester'), 'ASTA111111')
        self.assertEquals(caverphone('esther'), 'ASTA111111')
        self.assertEquals(caverphone('ethel'), 'ATA1111111')
        self.assertEquals(caverphone('ethelbert'), 'ATPT111111')
        self.assertEquals(caverphone('ethelinda'), 'ATLNTA1111')
        self.assertEquals(caverphone('ethelwin'), 'ATWN111111')
        self.assertEquals(caverphone('ethelwyn'), 'ATWN111111')
        self.assertEquals(caverphone('ethie'), 'ATA1111111')
        self.assertEquals(caverphone('etta'), 'ATA1111111')
        self.assertEquals(caverphone('ettie'), 'ATA1111111')
        self.assertEquals(caverphone('ettrick'), 'ATRK111111')
        self.assertEquals(caverphone('etty'), 'ATA1111111')
        self.assertEquals(caverphone('eubert'), 'APT1111111')
        self.assertEquals(caverphone('eugene'), 'AKN1111111')
        self.assertEquals(caverphone('eugenie'), 'AKNA111111')
        self.assertEquals(caverphone('eugh'), 'AA11111111')
        self.assertEquals(caverphone('eulla'), 'ALA1111111')
        self.assertEquals(caverphone('eunice'), 'ANK1111111')
        self.assertEquals(caverphone('euphemia'), 'AFMA111111')
        self.assertEquals(caverphone('eurice'), 'ARK1111111')
        self.assertEquals(caverphone('eustace'), 'ASTK111111')
        self.assertEquals(caverphone('eva'), 'AFA1111111')
        self.assertEquals(caverphone('evaline'), 'AFLN111111')
        self.assertEquals(caverphone('evalyn'), 'AFLN111111')
        self.assertEquals(caverphone('evan'), 'AFN1111111')
        self.assertEquals(caverphone('evander'), 'AFNTA11111')
        self.assertEquals(caverphone('evandrina'), 'AFNTRNA111')
        self.assertEquals(caverphone('evanelina'), 'AFNLNA1111')
        self.assertEquals(caverphone('evangaline'), 'AFNKLN1111')
        self.assertEquals(caverphone('evangelina'), 'AFNKLNA111')
        self.assertEquals(caverphone('evangeline'), 'AFNKLN1111')
        self.assertEquals(caverphone('evans'), 'AFNS111111')
        self.assertEquals(caverphone('evarard'), 'AFRT111111')
        self.assertEquals(caverphone('eve'), 'AF11111111')
        self.assertEquals(caverphone('eveleen'), 'AFLN111111')
        self.assertEquals(caverphone('evelina'), 'AFLNA11111')
        self.assertEquals(caverphone('eveline'), 'AFLN111111')
        self.assertEquals(caverphone('evelyn'), 'AFLN111111')
        self.assertEquals(caverphone('evelyne'), 'AFLN111111')
        self.assertEquals(caverphone('everard'), 'AFRT111111')
        self.assertEquals(caverphone('eveyleen'), 'AFLN111111')
        self.assertEquals(caverphone('evin'), 'AFN1111111')
        self.assertEquals(caverphone('evinda'), 'AFNTA11111')
        self.assertEquals(caverphone('ewan'), 'AWN1111111')
        self.assertEquals(caverphone('eward'), 'AWT1111111')
        self.assertEquals(caverphone('ewart'), 'AWT1111111')
        self.assertEquals(caverphone('ewen'), 'AWN1111111')
        self.assertEquals(caverphone('ezekiel'), 'ASKA111111')
        self.assertEquals(caverphone('ezra'), 'ASRA111111')
        self.assertEquals(caverphone('faa'), 'FA11111111')
        self.assertEquals(caverphone('fabian'), 'FPN1111111')
        self.assertEquals(caverphone('fairey'), 'FRA1111111')
        self.assertEquals(caverphone('faith'), 'FT11111111')
        self.assertEquals(caverphone('fancis'), 'FNSS111111')
        self.assertEquals(caverphone('fannie'), 'FNA1111111')
        self.assertEquals(caverphone('fanny'), 'FNA1111111')
        self.assertEquals(caverphone('farnham'), 'FNM1111111')
        self.assertEquals(caverphone('farquhar'), 'FKA1111111')
        self.assertEquals(caverphone('fashoda'), 'FSTA111111')
        self.assertEquals(caverphone('fay'), 'FA11111111')
        self.assertEquals(caverphone('felicha'), 'FLKA111111')
        self.assertEquals(caverphone('felicia'), 'FLSA111111')
        self.assertEquals(caverphone('felix'), 'FLK1111111')
        self.assertEquals(caverphone('fenwick'), 'FNWK111111')
        self.assertEquals(caverphone('ferdeanand'), 'FTNNT11111')
        self.assertEquals(caverphone('ferdinand'), 'FTNNT11111')
        self.assertEquals(caverphone('ferdinnnd'), 'FTNT111111')
        self.assertEquals(caverphone('fergus'), 'FKS1111111')
        self.assertEquals(caverphone('fergusson'), 'FKSN111111')
        self.assertEquals(caverphone('ferme'), 'FM11111111')
        self.assertEquals(caverphone('ferne'), 'FN11111111')
        self.assertEquals(caverphone('fides'), 'FTS1111111')
        self.assertEquals(caverphone('findlay'), 'FNTLA11111')
        self.assertEquals(caverphone('finlay'), 'FNLA111111')
        self.assertEquals(caverphone('finley'), 'FNLA111111')
        self.assertEquals(caverphone('fitzclarence'), 'FTSKLRNK11')
        self.assertEquals(caverphone('fitzelarence'), 'FTSLRNK111')
        self.assertEquals(caverphone('fitzgerald'), 'FTSKRT1111')
        self.assertEquals(caverphone('fitzroy'), 'FTSRA11111')
        self.assertEquals(caverphone('flank'), 'FLNK111111')
        self.assertEquals(caverphone('fleming'), 'FLMNK11111')
        self.assertEquals(caverphone('fletcher'), 'FLKA111111')
        self.assertEquals(caverphone('flora'), 'FLRA111111')
        self.assertEquals(caverphone('florabelle'), 'FLRPA11111')
        self.assertEquals(caverphone('florann'), 'FLRN111111')
        self.assertEquals(caverphone('florencc'), 'FLRNK11111')
        self.assertEquals(caverphone('florence'), 'FLRNK11111')
        self.assertEquals(caverphone('florice'), 'FLRK111111')
        self.assertEquals(caverphone('floris'), 'FLRS111111')
        self.assertEquals(caverphone('florisse'), 'FLRS111111')
        self.assertEquals(caverphone('florita'), 'FLRTA11111')
        self.assertEquals(caverphone('florrie'), 'FLRA111111')
        self.assertEquals(caverphone('flossie'), 'FLSA111111')
        self.assertEquals(caverphone('forbes'), 'FPS1111111')
        self.assertEquals(caverphone('fordham'), 'FTM1111111')
        self.assertEquals(caverphone('forrest'), 'FRST111111')
        self.assertEquals(caverphone('forrester'), 'FRSTA11111')
        self.assertEquals(caverphone('forrestina'), 'FRSTNA1111')
        self.assertEquals(caverphone('forsyth'), 'FST1111111')
        self.assertEquals(caverphone('fosbery'), 'FSPRA11111')
        self.assertEquals(caverphone('fracis'), 'FRSS111111')
        self.assertEquals(caverphone('fraicis'), 'FRSS111111')
        self.assertEquals(caverphone('france'), 'FRNK111111')
        self.assertEquals(caverphone('frances'), 'FRNSS11111')
        self.assertEquals(caverphone('franchise'), 'FRNKS11111')
        self.assertEquals(caverphone('francie'), 'FRNSA11111')
        self.assertEquals(caverphone('francis'), 'FRNSS11111')
        self.assertEquals(caverphone('francisca'), 'FRNSSKA111')
        self.assertEquals(caverphone('francois'), 'FRNKS11111')
        self.assertEquals(caverphone('francusess'), 'FRNKSS1111')
        self.assertEquals(caverphone('frank'), 'FRNK111111')
        self.assertEquals(caverphone('franklin'), 'FRNKLN1111')
        self.assertEquals(caverphone('franklyn'), 'FRNKLN1111')
        self.assertEquals(caverphone('franz'), 'FRNS111111')
        self.assertEquals(caverphone('frarnk'), 'FRNK111111')
        self.assertEquals(caverphone('fraser'), 'FRSA111111')
        self.assertEquals(caverphone('frcderick'), 'FKTRK11111')
        self.assertEquals(caverphone('fred'), 'FRT1111111')
        self.assertEquals(caverphone('freda'), 'FRTA111111')
        self.assertEquals(caverphone('fredeick'), 'FRTK111111')
        self.assertEquals(caverphone('fredelick'), 'FRTLK11111')
        self.assertEquals(caverphone('fredercik'), 'FRTSK11111')
        self.assertEquals(caverphone('frederic'), 'FRTRK11111')
        self.assertEquals(caverphone('frederica'), 'FRTRKA1111')
        self.assertEquals(caverphone('frederich'), 'FRTRK11111')
        self.assertEquals(caverphone('frederick'), 'FRTRK11111')
        self.assertEquals(caverphone('fredericka'), 'FRTRKA1111')
        self.assertEquals(caverphone('fredericld'), 'FRTRKT1111')
        self.assertEquals(caverphone('frederidck'), 'FRTRTK1111')
        self.assertEquals(caverphone('frederiek'), 'FRTRK11111')
        self.assertEquals(caverphone('frederik'), 'FRTRK11111')
        self.assertEquals(caverphone('frederlck'), 'FRTK111111')
        self.assertEquals(caverphone('fredierick'), 'FRTRK11111')
        self.assertEquals(caverphone('fredk'), 'FRTK111111')
        self.assertEquals(caverphone('fredric'), 'FRTRK11111')
        self.assertEquals(caverphone('fredrica'), 'FRTRKA1111')
        self.assertEquals(caverphone('fredrich'), 'FRTRK11111')
        self.assertEquals(caverphone('fredrick'), 'FRTRK11111')
        self.assertEquals(caverphone('fredrik'), 'FRTRK11111')
        self.assertEquals(caverphone('freid'), 'FRT1111111')
        self.assertEquals(caverphone('fric'), 'FRK1111111')
        self.assertEquals(caverphone('friderick'), 'FRTRK11111')
        self.assertEquals(caverphone('fullenia'), 'FLNA111111')
        self.assertEquals(caverphone('fulton'), 'FTN1111111')
        self.assertEquals(caverphone('gabriel'), 'KPRA111111')
        self.assertEquals(caverphone('gabrielle'), 'KPRA111111')
        self.assertEquals(caverphone('gallacher'), 'KLKA111111')
        self.assertEquals(caverphone('gamet'), 'KMT1111111')
        self.assertEquals(caverphone('gara'), 'KRA1111111')
        self.assertEquals(caverphone('gardiner'), 'KTNA111111')
        self.assertEquals(caverphone('garibaldi'), 'KRPTA11111')
        self.assertEquals(caverphone('garnet'), 'KNT1111111')
        self.assertEquals(caverphone('garrett'), 'KRT1111111')
        self.assertEquals(caverphone('garry'), 'KRA1111111')
        self.assertEquals(caverphone('garth'), 'KT11111111')
        self.assertEquals(caverphone('gary'), 'KRA1111111')
        self.assertEquals(caverphone('gavin'), 'KFN1111111')
        self.assertEquals(caverphone('gaynor'), 'KNA1111111')
        self.assertEquals(caverphone('gcorge'), 'KK11111111')
        self.assertEquals(caverphone('gebrge'), 'KPK1111111')
        self.assertEquals(caverphone('gecrge'), 'KKK1111111')
        self.assertEquals(caverphone('geeorge'), 'KK11111111')
        self.assertEquals(caverphone('genrie'), 'KNRA111111')
        self.assertEquals(caverphone('geo'), 'KA11111111')
        self.assertEquals(caverphone('geoffrev'), 'KFRF111111')
        self.assertEquals(caverphone('geoffrey'), 'KFRA111111')
        self.assertEquals(caverphone('geoffry'), 'KFRA111111')
        self.assertEquals(caverphone('geonge'), 'KNK1111111')
        self.assertEquals(caverphone('george'), 'KK11111111')
        self.assertEquals(caverphone('georgei'), 'KKA1111111')
        self.assertEquals(caverphone('georgel'), 'KKA1111111')
        self.assertEquals(caverphone('georger'), 'KKA1111111')
        self.assertEquals(caverphone('georgia'), 'KKA1111111')
        self.assertEquals(caverphone('georgina'), 'KKNA111111')
        self.assertEquals(caverphone('georgo'), 'KKA1111111')
        self.assertEquals(caverphone('georgte'), 'KKT1111111')
        self.assertEquals(caverphone('geortre'), 'KTA1111111')
        self.assertEquals(caverphone('gerald'), 'KRT1111111')
        self.assertEquals(caverphone('geraldine'), 'KRTN111111')
        self.assertEquals(caverphone('gerard'), 'KRT1111111')
        self.assertEquals(caverphone('gerge'), 'KK11111111')
        self.assertEquals(caverphone('gershon'), 'KSN1111111')
        self.assertEquals(caverphone('gertie'), 'KTA1111111')
        self.assertEquals(caverphone('gertrude'), 'KTRT111111')
        self.assertEquals(caverphone('gessenox'), 'KSNK111111')
        self.assertEquals(caverphone('geytha'), 'KTA1111111')
        self.assertEquals(caverphone('geziena'), 'KSNA111111')
        self.assertEquals(caverphone('gharles'), 'LS11111111')
        self.assertEquals(caverphone('gibson'), 'KPSN111111')
        self.assertEquals(caverphone('gideon'), 'KTN1111111')
        self.assertEquals(caverphone('giener'), 'KNA1111111')
        self.assertEquals(caverphone('gieorge'), 'KK11111111')
        self.assertEquals(caverphone('gilbert'), 'KPT1111111')
        self.assertEquals(caverphone('gilberta'), 'KPTA111111')
        self.assertEquals(caverphone('gilhert'), 'KT11111111')
        self.assertEquals(caverphone('girdwood'), 'KTWT111111')
        self.assertEquals(caverphone('gisella'), 'KSLA111111')
        self.assertEquals(caverphone('gladstone'), 'KLTSTN1111')
        self.assertEquals(caverphone('gladwys'), 'KLTWS11111')
        self.assertEquals(caverphone('gladys'), 'KLTS111111')
        self.assertEquals(caverphone('glen'), 'KLN1111111')
        self.assertEquals(caverphone('gleorga'), 'KLKA111111')
        self.assertEquals(caverphone('gleorge'), 'KLK1111111')
        self.assertEquals(caverphone('gleorgina'), 'KLKNA11111')
        self.assertEquals(caverphone('gleurge'), 'KLK1111111')
        self.assertEquals(caverphone('glladys'), 'KLTS111111')
        self.assertEquals(caverphone('glordon'), 'KLTN111111')
        self.assertEquals(caverphone('glover'), 'KLFA111111')
        self.assertEquals(caverphone('glrace'), 'KRK1111111')
        self.assertEquals(caverphone('godfrey'), 'KTFRA11111')
        self.assertEquals(caverphone('godwin'), 'KTWN111111')
        self.assertEquals(caverphone('golda'), 'KTA1111111')
        self.assertEquals(caverphone('gonzaga'), 'KNSKA11111')
        self.assertEquals(caverphone('goorge'), 'KK11111111')
        self.assertEquals(caverphone('gordon'), 'KTN1111111')
        self.assertEquals(caverphone('gorge'), 'KK11111111')
        self.assertEquals(caverphone('gottfred'), 'KTFRT11111')
        self.assertEquals(caverphone('govan'), 'KFN1111111')
        self.assertEquals(caverphone('gowan'), 'KWN1111111')
        self.assertEquals(caverphone('grace'), 'KRK1111111')
        self.assertEquals(caverphone('gracie'), 'KRSA111111')
        self.assertEquals(caverphone('graham'), 'KRM1111111')
        self.assertEquals(caverphone('grahame'), 'KRM1111111')
        self.assertEquals(caverphone('grainger'), 'KRNKA11111')
        self.assertEquals(caverphone('grange'), 'KRNK111111')
        self.assertEquals(caverphone('grant'), 'KRNT111111')
        self.assertEquals(caverphone('grattan'), 'KRTN111111')
        self.assertEquals(caverphone('gratton'), 'KRTN111111')
        self.assertEquals(caverphone('gray'), 'KRA1111111')
        self.assertEquals(caverphone('grayce'), 'KRK1111111')
        self.assertEquals(caverphone('greer'), 'KRA1111111')
        self.assertEquals(caverphone('greshon'), 'KRSN111111')
        self.assertEquals(caverphone('greta'), 'KRTA111111')
        self.assertEquals(caverphone('gretchen'), 'KRKN111111')
        self.assertEquals(caverphone('gretta'), 'KRTA111111')
        self.assertEquals(caverphone('griffith'), 'KRFT111111')
        self.assertEquals(caverphone('griffiths'), 'KRFTS11111')
        self.assertEquals(caverphone('griselda'), 'KRSTA11111')
        self.assertEquals(caverphone('grosvenor'), 'KRSFNA1111')
        self.assertEquals(caverphone('grover'), 'KRFA111111')
        self.assertEquals(caverphone('gteorge'), 'KTK1111111')
        self.assertEquals(caverphone('guinevere'), 'KNFA111111')
        self.assertEquals(caverphone('gustav'), 'KSTF111111')
        self.assertEquals(caverphone('gustava'), 'KSTFA11111')
        self.assertEquals(caverphone('gustave'), 'KSTF111111')
        self.assertEquals(caverphone('guthrie'), 'KTRA111111')
        self.assertEquals(caverphone('guy'), 'KA11111111')
        self.assertEquals(caverphone('gwen'), 'KWN1111111')
        self.assertEquals(caverphone('gwenath'), 'KWNT111111')
        self.assertEquals(caverphone('gwenda'), 'KWNTA11111')
        self.assertEquals(caverphone('gwendaline'), 'KWNTLN1111')
        self.assertEquals(caverphone('gwendelyne'), 'KWNTLN1111')
        self.assertEquals(caverphone('gwendolen'), 'KWNTLN1111')
        self.assertEquals(caverphone('gwendolene'), 'KWNTLN1111')
        self.assertEquals(caverphone('gwendolin'), 'KWNTLN1111')
        self.assertEquals(caverphone('gwendoline'), 'KWNTLN1111')
        self.assertEquals(caverphone('gwendolyn'), 'KWNTLN1111')
        self.assertEquals(caverphone('gweneth'), 'KWNT111111')
        self.assertEquals(caverphone('gwenifer'), 'KWNFA11111')
        self.assertEquals(caverphone('gwenoth'), 'KWNT111111')
        self.assertEquals(caverphone('gwenyth'), 'KWNT111111')
        self.assertEquals(caverphone('gwladys'), 'KLTS111111')
        self.assertEquals(caverphone('gwyndoline'), 'KWNTLN1111')
        self.assertEquals(caverphone('gwynneth'), 'KWNT111111')
        self.assertEquals(caverphone('gytha'), 'KTA1111111')
        self.assertEquals(caverphone('gythar'), 'KTA1111111')
        self.assertEquals(caverphone('ha'), 'AA11111111')
        self.assertEquals(caverphone('haas'), 'AS11111111')
        self.assertEquals(caverphone('hadley'), 'ATLA111111')
        self.assertEquals(caverphone('haidee'), 'ATA1111111')
        self.assertEquals(caverphone('hamilton'), 'AMTN111111')
        self.assertEquals(caverphone('hamish'), 'AMS1111111')
        self.assertEquals(caverphone('hamlin'), 'AMLN111111')
        self.assertEquals(caverphone('hammond'), 'AMNT111111')
        self.assertEquals(caverphone('hampton'), 'AMPTN11111')
        self.assertEquals(caverphone('hanley'), 'ANLA111111')
        self.assertEquals(caverphone('hanna'), 'ANA1111111')
        self.assertEquals(caverphone('hannah'), 'ANA1111111')
        self.assertEquals(caverphone('hannora'), 'ANRA111111')
        self.assertEquals(caverphone('hanora'), 'ANRA111111')
        self.assertEquals(caverphone('hanorah'), 'ANRA111111')
        self.assertEquals(caverphone('hanoura'), 'ANRA111111')
        self.assertEquals(caverphone('hans'), 'ANS1111111')
        self.assertEquals(caverphone('hansen'), 'ANSN111111')
        self.assertEquals(caverphone('hanson'), 'ANSN111111')
        self.assertEquals(caverphone('harace'), 'ARK1111111')
        self.assertEquals(caverphone('harah'), 'ARA1111111')
        self.assertEquals(caverphone('harbert'), 'APT1111111')
        self.assertEquals(caverphone('harion'), 'ARN1111111')
        self.assertEquals(caverphone('harlold'), 'ALT1111111')
        self.assertEquals(caverphone('harly'), 'ALA1111111')
        self.assertEquals(caverphone('harman'), 'AMN1111111')
        self.assertEquals(caverphone('harold'), 'ART1111111')
        self.assertEquals(caverphone('harper'), 'APA1111111')
        self.assertEquals(caverphone('harriet'), 'ART1111111')
        self.assertEquals(caverphone('harriett'), 'ART1111111')
        self.assertEquals(caverphone('harrietta'), 'ARTA111111')
        self.assertEquals(caverphone('harriette'), 'ART1111111')
        self.assertEquals(caverphone('harriot'), 'ART1111111')
        self.assertEquals(caverphone('harriott'), 'ART1111111')
        self.assertEquals(caverphone('harrv'), 'AF11111111')
        self.assertEquals(caverphone('harry'), 'ARA1111111')
        self.assertEquals(caverphone('hartha'), 'ATA1111111')
        self.assertEquals(caverphone('hartley'), 'ATLA111111')
        self.assertEquals(caverphone('harvey'), 'AFA1111111')
        self.assertEquals(caverphone('hastings'), 'ASTNKS1111')
        self.assertEquals(caverphone('hatold'), 'ATT1111111')
        self.assertEquals(caverphone('havilah'), 'AFLA111111')
        self.assertEquals(caverphone('havilland'), 'AFLNT11111')
        self.assertEquals(caverphone('hayden'), 'ATN1111111')
        self.assertEquals(caverphone('haydn'), 'ATN1111111')
        self.assertEquals(caverphone('hazel'), 'ASA1111111')
        self.assertEquals(caverphone('headley'), 'ATLA111111')
        self.assertEquals(caverphone('hearstell'), 'ASTA111111')
        self.assertEquals(caverphone('heather'), 'ATA1111111')
        self.assertEquals(caverphone('hebert'), 'APT1111111')
        self.assertEquals(caverphone('hector'), 'AKTA111111')
        self.assertEquals(caverphone('hectorina'), 'AKTRNA1111')
        self.assertEquals(caverphone('hedley'), 'ATLA111111')
        self.assertEquals(caverphone('hedwig'), 'ATWK111111')
        self.assertEquals(caverphone('heena'), 'ANA1111111')
        self.assertEquals(caverphone('heinrich'), 'ANRK111111')
        self.assertEquals(caverphone('helan'), 'ALN1111111')
        self.assertEquals(caverphone('helell'), 'ALA1111111')
        self.assertEquals(caverphone('helen'), 'ALN1111111')
        self.assertEquals(caverphone('helena'), 'ALNA111111')
        self.assertEquals(caverphone('helene'), 'ALN1111111')
        self.assertEquals(caverphone('helier'), 'ALA1111111')
        self.assertEquals(caverphone('hella'), 'ALA1111111')
        self.assertEquals(caverphone('hellen'), 'ALN1111111')
        self.assertEquals(caverphone('hellurietta'), 'ALRTA11111')
        self.assertEquals(caverphone('hemi'), 'AMA1111111')
        self.assertEquals(caverphone('hemingway'), 'AMNKWA1111')
        self.assertEquals(caverphone('hemmingway'), 'AMNKWA1111')
        self.assertEquals(caverphone('hendry'), 'ANTRA11111')
        self.assertEquals(caverphone('henery'), 'ANRA111111')
        self.assertEquals(caverphone('henn'), 'AN11111111')
        self.assertEquals(caverphone('hennerrietta'), 'ANRTA11111')
        self.assertEquals(caverphone('henness'), 'ANS1111111')
        self.assertEquals(caverphone('henrick'), 'ANRK111111')
        self.assertEquals(caverphone('henricus'), 'ANRKS11111')
        self.assertEquals(caverphone('henrietta'), 'ANRTA11111')
        self.assertEquals(caverphone('henriette'), 'ANRT111111')
        self.assertEquals(caverphone('henrv'), 'ANF1111111')
        self.assertEquals(caverphone('henry'), 'ANRA111111')
        self.assertEquals(caverphone('henton'), 'ANTN111111')
        self.assertEquals(caverphone('henty'), 'ANTA111111')
        self.assertEquals(caverphone('hephzibah'), 'AFSPA11111')
        self.assertEquals(caverphone('hera'), 'ARA1111111')
        self.assertEquals(caverphone('herbert'), 'APT1111111')
        self.assertEquals(caverphone('herbrt'), 'APT1111111')
        self.assertEquals(caverphone('hercules'), 'AKLS111111')
        self.assertEquals(caverphone('herman'), 'AMN1111111')
        self.assertEquals(caverphone('hermione'), 'AMN1111111')
        self.assertEquals(caverphone('herry'), 'ARA1111111')
        self.assertEquals(caverphone('hersee'), 'ASA1111111')
        self.assertEquals(caverphone('hessie'), 'ASA1111111')
        self.assertEquals(caverphone('hester'), 'ASTA111111')
        self.assertEquals(caverphone('hettie'), 'ATA1111111')
        self.assertEquals(caverphone('hetty'), 'ATA1111111')
        self.assertEquals(caverphone('heury'), 'ARA1111111')
        self.assertEquals(caverphone('hezio'), 'ASA1111111')
        self.assertEquals(caverphone('hilary'), 'ALRA111111')
        self.assertEquals(caverphone('hilda'), 'ATA1111111')
        self.assertEquals(caverphone('hildegarde'), 'ATKT111111')
        self.assertEquals(caverphone('hillary'), 'ALRA111111')
        self.assertEquals(caverphone('hilma'), 'AMA1111111')
        self.assertEquals(caverphone('hilton'), 'ATN1111111')
        self.assertEquals(caverphone('hinemoa'), 'ANMA111111')
        self.assertEquals(caverphone('hinimoa'), 'ANMA111111')
        self.assertEquals(caverphone('hira'), 'ARA1111111')
        self.assertEquals(caverphone('hiram'), 'ARM1111111')
        self.assertEquals(caverphone('hobart'), 'APT1111111')
        self.assertEquals(caverphone('hobert'), 'APT1111111')
        self.assertEquals(caverphone('holly'), 'ALA1111111')
        self.assertEquals(caverphone('honor'), 'ANA1111111')
        self.assertEquals(caverphone('honora'), 'ANRA111111')
        self.assertEquals(caverphone('honoria'), 'ANRA111111')
        self.assertEquals(caverphone('honriotte'), 'ANRT111111')
        self.assertEquals(caverphone('hope'), 'AP11111111')
        self.assertEquals(caverphone('horace'), 'ARK1111111')
        self.assertEquals(caverphone('horatia'), 'ARSA111111')
        self.assertEquals(caverphone('horatio'), 'ARSA111111')
        self.assertEquals(caverphone('horatius'), 'ARTS111111')
        self.assertEquals(caverphone('hortense'), 'ATNS111111')
        self.assertEquals(caverphone('hosdell'), 'ASTA111111')
        self.assertEquals(caverphone('howard'), 'AWT1111111')
        self.assertEquals(caverphone('howitt'), 'AWT1111111')
        self.assertEquals(caverphone('hua'), 'AA11111111')
        self.assertEquals(caverphone('hubert'), 'APT1111111')
        self.assertEquals(caverphone('hugh'), 'AA11111111')
        self.assertEquals(caverphone('hughina'), 'AKNA111111')
        self.assertEquals(caverphone('huh'), 'AA11111111')
        self.assertEquals(caverphone('huia'), 'AA11111111')
        self.assertEquals(caverphone('hume'), 'AM11111111')
        self.assertEquals(caverphone('humphrey'), 'AMFRA11111')
        self.assertEquals(caverphone('hunry'), 'ANRA111111')
        self.assertEquals(caverphone('huntley'), 'ANTLA11111')
        self.assertEquals(caverphone('huron'), 'ARN1111111')
        self.assertEquals(caverphone('hy'), 'AA11111111')
        self.assertEquals(caverphone('hyacinth'), 'ASNT111111')
        self.assertEquals(caverphone('hylton'), 'ATN1111111')
        self.assertEquals(caverphone('hyman'), 'AMN1111111')
        self.assertEquals(caverphone('ian'), 'AN11111111')
        self.assertEquals(caverphone('ianthe'), 'ANT1111111')
        self.assertEquals(caverphone('iary'), 'ARA1111111')
        self.assertEquals(caverphone('ida'), 'ATA1111111')
        self.assertEquals(caverphone('idean'), 'ATN1111111')
        self.assertEquals(caverphone('idelia'), 'ATLA111111')
        self.assertEquals(caverphone('ieslie'), 'ASLA111111')
        self.assertEquals(caverphone('iirederick'), 'ARTRK11111')
        self.assertEquals(caverphone('ilar'), 'ALA1111111')
        self.assertEquals(caverphone('ilena'), 'ALNA111111')
        self.assertEquals(caverphone('ilma'), 'AMA1111111')
        self.assertEquals(caverphone('ima'), 'AMA1111111')
        self.assertEquals(caverphone('imelda'), 'AMTA111111')
        self.assertEquals(caverphone('immaculate'), 'AMKLT11111')
        self.assertEquals(caverphone('ina'), 'ANA1111111')
        self.assertEquals(caverphone('ineawa'), 'ANWA111111')
        self.assertEquals(caverphone('inez'), 'ANS1111111')
        self.assertEquals(caverphone('ingo'), 'ANKA111111')
        self.assertEquals(caverphone('ion'), 'AN11111111')
        self.assertEquals(caverphone('iona'), 'ANA1111111')
        self.assertEquals(caverphone('ira'), 'ARA1111111')
        self.assertEquals(caverphone('irene'), 'ARN1111111')
        self.assertEquals(caverphone('irine'), 'ARN1111111')
        self.assertEquals(caverphone('iris'), 'ARS1111111')
        self.assertEquals(caverphone('irma'), 'AMA1111111')
        self.assertEquals(caverphone('irvine'), 'AFN1111111')
        self.assertEquals(caverphone('irving'), 'AFNK111111')
        self.assertEquals(caverphone('irwin'), 'AWN1111111')
        self.assertEquals(caverphone('isa'), 'ASA1111111')
        self.assertEquals(caverphone('isaac'), 'ASK1111111')
        self.assertEquals(caverphone('isabel'), 'ASPA111111')
        self.assertEquals(caverphone('isabela'), 'ASPLA11111')
        self.assertEquals(caverphone('isabell'), 'ASPA111111')
        self.assertEquals(caverphone('isabella'), 'ASPLA11111')
        self.assertEquals(caverphone('isabelle'), 'ASPA111111')
        self.assertEquals(caverphone('isadore'), 'ASTA111111')
        self.assertEquals(caverphone('isaiah'), 'ASA1111111')
        self.assertEquals(caverphone('isalella'), 'ASLLA11111')
        self.assertEquals(caverphone('isbella'), 'ASPLA11111')
        self.assertEquals(caverphone('ishmael'), 'ASMA111111')
        self.assertEquals(caverphone('isibelle'), 'ASPA111111')
        self.assertEquals(caverphone('isita'), 'ASTA111111')
        self.assertEquals(caverphone('isla'), 'ASLA111111')
        self.assertEquals(caverphone('islay'), 'ASLA111111')
        self.assertEquals(caverphone('ismay'), 'ASMA111111')
        self.assertEquals(caverphone('ismene'), 'ASMN111111')
        self.assertEquals(caverphone('isobel'), 'ASPA111111')
        self.assertEquals(caverphone('isobella'), 'ASPLA11111')
        self.assertEquals(caverphone('isola'), 'ASLA111111')
        self.assertEquals(caverphone('iton'), 'ATN1111111')
        self.assertEquals(caverphone('iva'), 'AFA1111111')
        self.assertEquals(caverphone('ivan'), 'AFN1111111')
        self.assertEquals(caverphone('ivie'), 'AFA1111111')
        self.assertEquals(caverphone('ivine'), 'AFN1111111')
        self.assertEquals(caverphone('ivo'), 'AFA1111111')
        self.assertEquals(caverphone('ivon'), 'AFN1111111')
        self.assertEquals(caverphone('ivor'), 'AFA1111111')
        self.assertEquals(caverphone('ivy'), 'AFA1111111')
        self.assertEquals(caverphone('iza'), 'ASA1111111')
        self.assertEquals(caverphone('j'), 'A111111111')
        self.assertEquals(caverphone('ja1es'), 'YS11111111')
        self.assertEquals(caverphone('jabez'), 'YPS1111111')
        self.assertEquals(caverphone('jack'), 'YK11111111')
        self.assertEquals(caverphone('jacob'), 'YKP1111111')
        self.assertEquals(caverphone('jacobina'), 'YKPNA11111')
        self.assertEquals(caverphone('jacues'), 'YKS1111111')
        self.assertEquals(caverphone('jaimes'), 'YMS1111111')
        self.assertEquals(caverphone('jake'), 'YK11111111')
        self.assertEquals(caverphone('jam'), 'YM11111111')
        self.assertEquals(caverphone('jamcs'), 'YMKS111111')
        self.assertEquals(caverphone('jame'), 'YM11111111')
        self.assertEquals(caverphone('jamee'), 'YMA1111111')
        self.assertEquals(caverphone('james'), 'YMS1111111')
        self.assertEquals(caverphone('jamesalbany'), 'YMSPNA1111')
        self.assertEquals(caverphone('jamesina'), 'YMSNA11111')
        self.assertEquals(caverphone('jamesines'), 'YMSNS11111')
        self.assertEquals(caverphone('jamies'), 'YMS1111111')
        self.assertEquals(caverphone('jamos'), 'YMS1111111')
        self.assertEquals(caverphone('janbe'), 'YNP1111111')
        self.assertEquals(caverphone('jane'), 'YN11111111')
        self.assertEquals(caverphone('janes'), 'YNS1111111')
        self.assertEquals(caverphone('janet'), 'YNT1111111')
        self.assertEquals(caverphone('janetta'), 'YNTA111111')
        self.assertEquals(caverphone('janette'), 'YNT1111111')
        self.assertEquals(caverphone('janie'), 'YNA1111111')
        self.assertEquals(caverphone('janies'), 'YNS1111111')
        self.assertEquals(caverphone('janthe'), 'YNT1111111')
        self.assertEquals(caverphone('jardine'), 'YTN1111111')
        self.assertEquals(caverphone('jarlies'), 'YLS1111111')
        self.assertEquals(caverphone('jarmes'), 'YMS1111111')
        self.assertEquals(caverphone('jarnes'), 'YNS1111111')
        self.assertEquals(caverphone('jarrtes'), 'YTS1111111')
        self.assertEquals(caverphone('jas'), 'YS11111111')
        self.assertEquals(caverphone('jason'), 'YSN1111111')
        self.assertEquals(caverphone('jaspeh'), 'YSPA111111')
        self.assertEquals(caverphone('jasper'), 'YSPA111111')
        self.assertEquals(caverphone('jean'), 'YN11111111')
        self.assertEquals(caverphone('jeane'), 'YN11111111')
        self.assertEquals(caverphone('jeanet'), 'YNT1111111')
        self.assertEquals(caverphone('jeanetta'), 'YNTA111111')
        self.assertEquals(caverphone('jeanette'), 'YNT1111111')
        self.assertEquals(caverphone('jeanie'), 'YNA1111111')
        self.assertEquals(caverphone('jeanne'), 'YN11111111')
        self.assertEquals(caverphone('jeannetta'), 'YNTA111111')
        self.assertEquals(caverphone('jeannette'), 'YNT1111111')
        self.assertEquals(caverphone('jeannie'), 'YNA1111111')
        self.assertEquals(caverphone('jeesie'), 'YSA1111111')
        self.assertEquals(caverphone('jeffery'), 'YFRA111111')
        self.assertEquals(caverphone('jeffrey'), 'YFRA111111')
        self.assertEquals(caverphone('jemima'), 'YMMA111111')
        self.assertEquals(caverphone('jemina'), 'YMNA111111')
        self.assertEquals(caverphone('jen'), 'YN11111111')
        self.assertEquals(caverphone('jenetta'), 'YNTA111111')
        self.assertEquals(caverphone('jenette'), 'YNT1111111')
        self.assertEquals(caverphone('jenn'), 'YN11111111')
        self.assertEquals(caverphone('jennet'), 'YNT1111111')
        self.assertEquals(caverphone('jennie'), 'YNA1111111')
        self.assertEquals(caverphone('jenny'), 'YNA1111111')
        self.assertEquals(caverphone('jens'), 'YNS1111111')
        self.assertEquals(caverphone('jeoffrey'), 'YFRA111111')
        self.assertEquals(caverphone('jephthah'), 'YFTA111111')
        self.assertEquals(caverphone('jeremiah'), 'YRMA111111')
        self.assertEquals(caverphone('jervis'), 'YFS1111111')
        self.assertEquals(caverphone('jeseie'), 'YSA1111111')
        self.assertEquals(caverphone('jesoph'), 'YSF1111111')
        self.assertEquals(caverphone('jess'), 'YS11111111')
        self.assertEquals(caverphone('jessa'), 'YSA1111111')
        self.assertEquals(caverphone('jesse'), 'YS11111111')
        self.assertEquals(caverphone('jessica'), 'YSKA111111')
        self.assertEquals(caverphone('jessie'), 'YSA1111111')
        self.assertEquals(caverphone('jessy'), 'YSA1111111')
        self.assertEquals(caverphone('jethro'), 'YTRA111111')
        self.assertEquals(caverphone('jewel'), 'YWA1111111')
        self.assertEquals(caverphone('jillian'), 'YLN1111111')
        self.assertEquals(caverphone('jim'), 'YM11111111')
        self.assertEquals(caverphone('jinnie'), 'YNA1111111')
        self.assertEquals(caverphone('joan'), 'YN11111111')
        self.assertEquals(caverphone('joann'), 'YN11111111')
        self.assertEquals(caverphone('joanna'), 'YNA1111111')
        self.assertEquals(caverphone('joannie'), 'YNA1111111')
        self.assertEquals(caverphone('job'), 'YP11111111')
        self.assertEquals(caverphone('jocelyn'), 'YSLN111111')
        self.assertEquals(caverphone('joe'), 'YA11111111')
        self.assertEquals(caverphone('joffre'), 'YFA1111111')
        self.assertEquals(caverphone('johan'), 'YN11111111')
        self.assertEquals(caverphone('johann'), 'YN11111111')
        self.assertEquals(caverphone('johanna'), 'YNA1111111')
        self.assertEquals(caverphone('johannah'), 'YNA1111111')
        self.assertEquals(caverphone('johannes'), 'YNS1111111')
        self.assertEquals(caverphone('johh'), 'YA11111111')
        self.assertEquals(caverphone('john'), 'YN11111111')
        self.assertEquals(caverphone('johnann'), 'YNN1111111')
        self.assertEquals(caverphone('johnanna'), 'YNNA111111')
        self.assertEquals(caverphone('johnina'), 'YNNA111111')
        self.assertEquals(caverphone('johnpatrick'), 'YNPTRK1111')
        self.assertEquals(caverphone('johnson'), 'YNSN111111')
        self.assertEquals(caverphone('johnthomas'), 'YNTMS11111')
        self.assertEquals(caverphone('johnwilliam'), 'YNWLM11111')
        self.assertEquals(caverphone('johr'), 'YA11111111')
        self.assertEquals(caverphone('johrl'), 'YA11111111')
        self.assertEquals(caverphone('johu'), 'YA11111111')
        self.assertEquals(caverphone('joiln'), 'YN11111111')
        self.assertEquals(caverphone('jollanna'), 'YLNA111111')
        self.assertEquals(caverphone('jolm'), 'YM11111111')
        self.assertEquals(caverphone('joln'), 'YN11111111')
        self.assertEquals(caverphone('jon'), 'YN11111111')
        self.assertEquals(caverphone('jonah'), 'YNA1111111')
        self.assertEquals(caverphone('jonas'), 'YNS1111111')
        self.assertEquals(caverphone('jonathan'), 'YNTN111111')
        self.assertEquals(caverphone('jones'), 'YNS1111111')
        self.assertEquals(caverphone('jonl'), 'YNA1111111')
        self.assertEquals(caverphone('jonn'), 'YN11111111')
        self.assertEquals(caverphone('jorgen'), 'YKN1111111')
        self.assertEquals(caverphone('josep'), 'YSP1111111')
        self.assertEquals(caverphone('joseph'), 'YSF1111111')
        self.assertEquals(caverphone('josephgeorge'), 'YSFKK11111')
        self.assertEquals(caverphone('josephia'), 'YSFA111111')
        self.assertEquals(caverphone('josephine'), 'YSFN111111')
        self.assertEquals(caverphone('josh'), 'YS11111111')
        self.assertEquals(caverphone('joshua'), 'YSA1111111')
        self.assertEquals(caverphone('josiah'), 'YSA1111111')
        self.assertEquals(caverphone('josie'), 'YSA1111111')
        self.assertEquals(caverphone('josieph'), 'YSF1111111')
        self.assertEquals(caverphone('josoph'), 'YSF1111111')
        self.assertEquals(caverphone('jospeh'), 'YSPA111111')
        self.assertEquals(caverphone('joy'), 'YA11111111')
        self.assertEquals(caverphone('joyce'), 'YK11111111')
        self.assertEquals(caverphone('juanita'), 'YNTA111111')
        self.assertEquals(caverphone('jules'), 'YLS1111111')
        self.assertEquals(caverphone('julia'), 'YLA1111111')
        self.assertEquals(caverphone('julian'), 'YLN1111111')
        self.assertEquals(caverphone('juliana'), 'YLNA111111')
        self.assertEquals(caverphone('juliann'), 'YLN1111111')
        self.assertEquals(caverphone('julianna'), 'YLNA111111')
        self.assertEquals(caverphone('julie'), 'YLA1111111')
        self.assertEquals(caverphone('julius'), 'YLS1111111')
        self.assertEquals(caverphone('june'), 'YN11111111')
        self.assertEquals(caverphone('justin'), 'YSTN111111')
        self.assertEquals(caverphone('justina'), 'YSTNA11111')
        self.assertEquals(caverphone('kaiserin'), 'KSRN111111')
        self.assertEquals(caverphone('karen'), 'KRN1111111')
        self.assertEquals(caverphone('karl'), 'KA11111111')
        self.assertEquals(caverphone('kate'), 'KT11111111')
        self.assertEquals(caverphone('katern'), 'KTN1111111')
        self.assertEquals(caverphone('kath'), 'KT11111111')
        self.assertEquals(caverphone('katharine'), 'KTRN111111')
        self.assertEquals(caverphone('katherine'), 'KTRN111111')
        self.assertEquals(caverphone('kathleen'), 'KTLN111111')
        self.assertEquals(caverphone('katie'), 'KTA1111111')
        self.assertEquals(caverphone('katrine'), 'KTRN111111')
        self.assertEquals(caverphone('kay'), 'KA11111111')
        self.assertEquals(caverphone('keith'), 'KT11111111')
        self.assertEquals(caverphone('keitha'), 'KTA1111111')
        self.assertEquals(caverphone('kelburne'), 'KPN1111111')
        self.assertEquals(caverphone('kendal'), 'KNTA111111')
        self.assertEquals(caverphone('kennedy'), 'KNTA111111')
        self.assertEquals(caverphone('kenneth'), 'KNT1111111')
        self.assertEquals(caverphone('kenny'), 'KNA1111111')
        self.assertEquals(caverphone('keren'), 'KRN1111111')
        self.assertEquals(caverphone('keriah'), 'KRA1111111')
        self.assertEquals(caverphone('kessel'), 'KSA1111111')
        self.assertEquals(caverphone('keturah'), 'KTRA111111')
        self.assertEquals(caverphone('kezia'), 'KSA1111111')
        self.assertEquals(caverphone('keziah'), 'KSA1111111')
        self.assertEquals(caverphone('king'), 'KNK1111111')
        self.assertEquals(caverphone('kingsley'), 'KNKSLA1111')
        self.assertEquals(caverphone('kinnear'), 'KNA1111111')
        self.assertEquals(caverphone('kittie'), 'KTA1111111')
        self.assertEquals(caverphone('kitty'), 'KTA1111111')
        self.assertEquals(caverphone('koa'), 'KA11111111')
        self.assertEquals(caverphone('koren'), 'KRN1111111')
        self.assertEquals(caverphone('kuff'), 'KF11111111')
        self.assertEquals(caverphone('kum'), 'KM11111111')
        self.assertEquals(caverphone('kurt'), 'KT11111111')
        self.assertEquals(caverphone('kyra'), 'KRA1111111')
        self.assertEquals(caverphone('l'), 'A111111111')
        self.assertEquals(caverphone('lachlan'), 'LKLN111111')
        self.assertEquals(caverphone('ladislas'), 'LTSLS11111')
        self.assertEquals(caverphone('lallah'), 'LLA1111111')
        self.assertEquals(caverphone('lamsel'), 'LMSA111111')
        self.assertEquals(caverphone('lan'), 'LN11111111')
        self.assertEquals(caverphone('lance'), 'LNK1111111')
        self.assertEquals(caverphone('lancelot'), 'LNSLT11111')
        self.assertEquals(caverphone('langford'), 'LNKFT11111')
        self.assertEquals(caverphone('langley'), 'LNKLA11111')
        self.assertEquals(caverphone('langlow'), 'LNKLA11111')
        self.assertEquals(caverphone('lansley'), 'LNSLA11111')
        self.assertEquals(caverphone('lars'), 'LS11111111')
        self.assertEquals(caverphone('lauchlan'), 'LKLN111111')
        self.assertEquals(caverphone('lauder'), 'LTA1111111')
        self.assertEquals(caverphone('launa'), 'LNA1111111')
        self.assertEquals(caverphone('launcelot'), 'LNSLT11111')
        self.assertEquals(caverphone('laura'), 'LRA1111111')
        self.assertEquals(caverphone('laurel'), 'LRA1111111')
        self.assertEquals(caverphone('laurena'), 'LRNA111111')
        self.assertEquals(caverphone('laurence'), 'LRNK111111')
        self.assertEquals(caverphone('laurencia'), 'LRNSA11111')
        self.assertEquals(caverphone('laurentine'), 'LRNTN11111')
        self.assertEquals(caverphone('lauri'), 'LRA1111111')
        self.assertEquals(caverphone('laurie'), 'LRA1111111')
        self.assertEquals(caverphone('laurinda'), 'LRNTA11111')
        self.assertEquals(caverphone('lauris'), 'LRS1111111')
        self.assertEquals(caverphone('laveana'), 'LFNA111111')
        self.assertEquals(caverphone('lavender'), 'LFNTA11111')
        self.assertEquals(caverphone('lavina'), 'LFNA111111')
        self.assertEquals(caverphone('lavinia'), 'LFNA111111')
        self.assertEquals(caverphone('lavinla'), 'LFNLA11111')
        self.assertEquals(caverphone('lawford'), 'LFT1111111')
        self.assertEquals(caverphone('lawrance'), 'LRNK111111')
        self.assertEquals(caverphone('lawrence'), 'LRNK111111')
        self.assertEquals(caverphone('lawson'), 'LSN1111111')
        self.assertEquals(caverphone('leah'), 'LA11111111')
        self.assertEquals(caverphone('ledestian'), 'LTSN111111')
        self.assertEquals(caverphone('lee'), 'LA11111111')
        self.assertEquals(caverphone('leicester'), 'LSSTA11111')
        self.assertEquals(caverphone('leila'), 'LLA1111111')
        self.assertEquals(caverphone('leith'), 'LT11111111')
        self.assertEquals(caverphone('lelia'), 'LLA1111111')
        self.assertEquals(caverphone('lella'), 'LLA1111111')
        self.assertEquals(caverphone('lena'), 'LNA1111111')
        self.assertEquals(caverphone('lenard'), 'LNT1111111')
        self.assertEquals(caverphone('lennie'), 'LNA1111111')
        self.assertEquals(caverphone('lennox'), 'LNK1111111')
        self.assertEquals(caverphone('lenora'), 'LNRA111111')
        self.assertEquals(caverphone('lenton'), 'LNTN111111')
        self.assertEquals(caverphone('leo'), 'LA11111111')
        self.assertEquals(caverphone('leocadia'), 'LKTA111111')
        self.assertEquals(caverphone('leon'), 'LN11111111')
        self.assertEquals(caverphone('leona'), 'LNA1111111')
        self.assertEquals(caverphone('leonard'), 'LNT1111111')
        self.assertEquals(caverphone('leonia'), 'LNA1111111')
        self.assertEquals(caverphone('leonie'), 'LNA1111111')
        self.assertEquals(caverphone('leonora'), 'LNRA111111')
        self.assertEquals(caverphone('leontine'), 'LNTN111111')
        self.assertEquals(caverphone('leopold'), 'LPT1111111')
        self.assertEquals(caverphone('lerleine'), 'LLN1111111')
        self.assertEquals(caverphone('lesla'), 'LSLA111111')
        self.assertEquals(caverphone('lesle'), 'LSA1111111')
        self.assertEquals(caverphone('lesley'), 'LSLA111111')
        self.assertEquals(caverphone('leslie'), 'LSLA111111')
        self.assertEquals(caverphone('leslle'), 'LSA1111111')
        self.assertEquals(caverphone('lesney'), 'LSNA111111')
        self.assertEquals(caverphone('lester'), 'LSTA111111')
        self.assertEquals(caverphone('leta'), 'LTA1111111')
        self.assertEquals(caverphone('letiris'), 'LTRS111111')
        self.assertEquals(caverphone('letita'), 'LTTA111111')
        self.assertEquals(caverphone('letitia'), 'LTSA111111')
        self.assertEquals(caverphone('lettia'), 'LTSA111111')
        self.assertEquals(caverphone('lettice'), 'LTK1111111')
        self.assertEquals(caverphone('lettie'), 'LTA1111111')
        self.assertEquals(caverphone('letty'), 'LTA1111111')
        self.assertEquals(caverphone('levenia'), 'LFNA111111')
        self.assertEquals(caverphone('levina'), 'LFNA111111')
        self.assertEquals(caverphone('levinia'), 'LFNA111111')
        self.assertEquals(caverphone('levy'), 'LFA1111111')
        self.assertEquals(caverphone('lewellyn'), 'LWLN111111')
        self.assertEquals(caverphone('lewis'), 'LWS1111111')
        self.assertEquals(caverphone('leyson'), 'LSN1111111')
        self.assertEquals(caverphone('lezlie'), 'LSLA111111')
        self.assertEquals(caverphone('lil'), 'LA11111111')
        self.assertEquals(caverphone('lila'), 'LLA1111111')
        self.assertEquals(caverphone('lilas'), 'LLS1111111')
        self.assertEquals(caverphone('lileth'), 'LLT1111111')
        self.assertEquals(caverphone('lilia'), 'LLA1111111')
        self.assertEquals(caverphone('liliam'), 'LLM1111111')
        self.assertEquals(caverphone('lilian'), 'LLN1111111')
        self.assertEquals(caverphone('lilias'), 'LLS1111111')
        self.assertEquals(caverphone('lilla'), 'LLA1111111')
        self.assertEquals(caverphone('lillan'), 'LLN1111111')
        self.assertEquals(caverphone('lillas'), 'LLS1111111')
        self.assertEquals(caverphone('lilley'), 'LLA1111111')
        self.assertEquals(caverphone('lillia'), 'LLA1111111')
        self.assertEquals(caverphone('lillian'), 'LLN1111111')
        self.assertEquals(caverphone('lillias'), 'LLS1111111')
        self.assertEquals(caverphone('lillie'), 'LLA1111111')
        self.assertEquals(caverphone('lillingstone'), 'LLNKSTN111')
        self.assertEquals(caverphone('lillis'), 'LLS1111111')
        self.assertEquals(caverphone('lilly'), 'LLA1111111')
        self.assertEquals(caverphone('lilv'), 'LF11111111')
        self.assertEquals(caverphone('lily'), 'LLA1111111')
        self.assertEquals(caverphone('lina'), 'LNA1111111')
        self.assertEquals(caverphone('lincoln'), 'LNKN111111')
        self.assertEquals(caverphone('linda'), 'LNTA111111')
        self.assertEquals(caverphone('lindo'), 'LNTA111111')
        self.assertEquals(caverphone('lindsay'), 'LNTSA11111')
        self.assertEquals(caverphone('linford'), 'LNFT111111')
        self.assertEquals(caverphone('linnet'), 'LNT1111111')
        self.assertEquals(caverphone('lionel'), 'LNA1111111')
        self.assertEquals(caverphone('lionella'), 'LNLA111111')
        self.assertEquals(caverphone('lionelle'), 'LNA1111111')
        self.assertEquals(caverphone('lisette'), 'LST1111111')
        self.assertEquals(caverphone('lizzie'), 'LSA1111111')
        self.assertEquals(caverphone('llewellyn'), 'LWLN111111')
        self.assertEquals(caverphone('llewelyn'), 'LWLN111111')
        self.assertEquals(caverphone('lloyd'), 'LT11111111')
        self.assertEquals(caverphone('lna'), 'NA11111111')
        self.assertEquals(caverphone('loftus'), 'LFTS111111')
        self.assertEquals(caverphone('lois'), 'LS11111111')
        self.assertEquals(caverphone('loma'), 'LMA1111111')
        self.assertEquals(caverphone('lona'), 'LNA1111111')
        self.assertEquals(caverphone('long'), 'LNK1111111')
        self.assertEquals(caverphone('lora'), 'LRA1111111')
        self.assertEquals(caverphone('loreen'), 'LRN1111111')
        self.assertEquals(caverphone('loris'), 'LRS1111111')
        self.assertEquals(caverphone('lorna'), 'LNA1111111')
        self.assertEquals(caverphone('lorraine'), 'LRN1111111')
        self.assertEquals(caverphone('lot'), 'LT11111111')
        self.assertEquals(caverphone('lott'), 'LT11111111')
        self.assertEquals(caverphone('lottia'), 'LTSA111111')
        self.assertEquals(caverphone('lottie'), 'LTA1111111')
        self.assertEquals(caverphone('lotty'), 'LTA1111111')
        self.assertEquals(caverphone('louia'), 'LA11111111')
        self.assertEquals(caverphone('louie'), 'LA11111111')
        self.assertEquals(caverphone('louis'), 'LS11111111')
        self.assertEquals(caverphone('louisa'), 'LSA1111111')
        self.assertEquals(caverphone('louise'), 'LS11111111')
        self.assertEquals(caverphone('lrene'), 'RN11111111')
        self.assertEquals(caverphone('lsaac'), 'SK11111111')
        self.assertEquals(caverphone('lsabel'), 'SPA1111111')
        self.assertEquals(caverphone('lsabella'), 'SPLA111111')
        self.assertEquals(caverphone('luanna'), 'LNA1111111')
        self.assertEquals(caverphone('lucerne'), 'LSN1111111')
        self.assertEquals(caverphone('lucey'), 'LSA1111111')
        self.assertEquals(caverphone('lucie'), 'LSA1111111')
        self.assertEquals(caverphone('lucilla'), 'LSLA111111')
        self.assertEquals(caverphone('lucille'), 'LSA1111111')
        self.assertEquals(caverphone('lucina'), 'LSNA111111')
        self.assertEquals(caverphone('lucius'), 'LSS1111111')
        self.assertEquals(caverphone('lucretia'), 'LKRSA11111')
        self.assertEquals(caverphone('lucy'), 'LSA1111111')
        self.assertEquals(caverphone('ludwig'), 'LTWK111111')
        self.assertEquals(caverphone('luella'), 'LLA1111111')
        self.assertEquals(caverphone('luke'), 'LK11111111')
        self.assertEquals(caverphone('lulu'), 'LLA1111111')
        self.assertEquals(caverphone('lurline'), 'LLN1111111')
        self.assertEquals(caverphone('lva'), 'FA11111111')
        self.assertEquals(caverphone('lvy'), 'FA11111111')
        self.assertEquals(caverphone('lyda'), 'LTA1111111')
        self.assertEquals(caverphone('lydia'), 'LTA1111111')
        self.assertEquals(caverphone('lyell'), 'LA11111111')
        self.assertEquals(caverphone('lygia'), 'LKA1111111')
        self.assertEquals(caverphone('lyla'), 'LLA1111111')
        self.assertEquals(caverphone('lylah'), 'LLA1111111')
        self.assertEquals(caverphone('lyle'), 'LA11111111')
        self.assertEquals(caverphone('lylie'), 'LLA1111111')
        self.assertEquals(caverphone('lylo'), 'LLA1111111')
        self.assertEquals(caverphone('lynass'), 'LNS1111111')
        self.assertEquals(caverphone('lynda'), 'LNTA111111')
        self.assertEquals(caverphone('lynden'), 'LNTN111111')
        self.assertEquals(caverphone('lyndon'), 'LNTN111111')
        self.assertEquals(caverphone('lyndsay'), 'LNTSA11111')
        self.assertEquals(caverphone('lyndsey'), 'LNTSA11111')
        self.assertEquals(caverphone('mabel'), 'MPA1111111')
        self.assertEquals(caverphone('mabelle'), 'MPA1111111')
        self.assertEquals(caverphone('mable'), 'MPA1111111')
        self.assertEquals(caverphone('machell'), 'MKA1111111')
        self.assertEquals(caverphone('madalene'), 'MTLN111111')
        self.assertEquals(caverphone('madaline'), 'MTLN111111')
        self.assertEquals(caverphone('maddie'), 'MTA1111111')
        self.assertEquals(caverphone('madeleine'), 'MTLN111111')
        self.assertEquals(caverphone('madeline'), 'MTLN111111')
        self.assertEquals(caverphone('madge'), 'MK11111111')
        self.assertEquals(caverphone('madglene'), 'MKLN111111')
        self.assertEquals(caverphone('mae'), 'MA11111111')
        self.assertEquals(caverphone('magdalen'), 'MKTLN11111')
        self.assertEquals(caverphone('magdalena'), 'MKTLNA1111')
        self.assertEquals(caverphone('magdalene'), 'MKTLN11111')
        self.assertEquals(caverphone('magdaline'), 'MKTLN11111')
        self.assertEquals(caverphone('magdeline'), 'MKTLN11111')
        self.assertEquals(caverphone('maggie'), 'MKA1111111')
        self.assertEquals(caverphone('magnus'), 'MKNS111111')
        self.assertEquals(caverphone('magnustina'), 'MKNSTNA111')
        self.assertEquals(caverphone('mahala'), 'MLA1111111')
        self.assertEquals(caverphone('mai'), 'MA11111111')
        self.assertEquals(caverphone('maida'), 'MTA1111111')
        self.assertEquals(caverphone('maie'), 'MA11111111')
        self.assertEquals(caverphone('maine'), 'MN11111111')
        self.assertEquals(caverphone('maira'), 'MRA1111111')
        self.assertEquals(caverphone('maisie'), 'MSA1111111')
        self.assertEquals(caverphone('maitland'), 'MTLNT11111')
        self.assertEquals(caverphone('majorie'), 'MRA1111111')
        self.assertEquals(caverphone('majory'), 'MRA1111111')
        self.assertEquals(caverphone('malachi'), 'MLKA111111')
        self.assertEquals(caverphone('malcolm'), 'MKM1111111')
        self.assertEquals(caverphone('maltravers'), 'MTRFS11111')
        self.assertEquals(caverphone('malvena'), 'MFNA111111')
        self.assertEquals(caverphone('mamie'), 'MMA1111111')
        self.assertEquals(caverphone('mana'), 'MNA1111111')
        self.assertEquals(caverphone('manes'), 'MNS1111111')
        self.assertEquals(caverphone('manie'), 'MNA1111111')
        self.assertEquals(caverphone('mann'), 'MN11111111')
        self.assertEquals(caverphone('mano'), 'MNA1111111')
        self.assertEquals(caverphone('mansfield'), 'MNSFT11111')
        self.assertEquals(caverphone('marah'), 'MRA1111111')
        self.assertEquals(caverphone('marama'), 'MRMA111111')
        self.assertEquals(caverphone('maraval'), 'MRFA111111')
        self.assertEquals(caverphone('marcella'), 'MSLA111111')
        self.assertEquals(caverphone('marcelle'), 'MSA1111111')
        self.assertEquals(caverphone('marcia'), 'MSA1111111')
        self.assertEquals(caverphone('marcus'), 'MKS1111111')
        self.assertEquals(caverphone('maree'), 'MRA1111111')
        self.assertEquals(caverphone('maretta'), 'MRTA111111')
        self.assertEquals(caverphone('margaret'), 'MKRT111111')
        self.assertEquals(caverphone('margareta'), 'MKRTA11111')
        self.assertEquals(caverphone('margarete'), 'MKRT111111')
        self.assertEquals(caverphone('margarett'), 'MKRT111111')
        self.assertEquals(caverphone('margaretta'), 'MKRTA11111')
        self.assertEquals(caverphone('margarita'), 'MKRTA11111')
        self.assertEquals(caverphone('margarretta'), 'MKRTA11111')
        self.assertEquals(caverphone('margerett'), 'MKRT111111')
        self.assertEquals(caverphone('margerie'), 'MKRA111111')
        self.assertEquals(caverphone('margerite'), 'MKRT111111')
        self.assertEquals(caverphone('margery'), 'MKRA111111')
        self.assertEquals(caverphone('margeurite'), 'MKRT111111')
        self.assertEquals(caverphone('margharita'), 'MRTA111111')
        self.assertEquals(caverphone('margherita'), 'MRTA111111')
        self.assertEquals(caverphone('margie'), 'MKA1111111')
        self.assertEquals(caverphone('margorie'), 'MKRA111111')
        self.assertEquals(caverphone('margory'), 'MKRA111111')
        self.assertEquals(caverphone('margretta'), 'MKRTA11111')
        self.assertEquals(caverphone('marguereta'), 'MKRTA11111')
        self.assertEquals(caverphone('margueretta'), 'MKRTA11111')
        self.assertEquals(caverphone('marguerita'), 'MKRTA11111')
        self.assertEquals(caverphone('marguerite'), 'MKRT111111')
        self.assertEquals(caverphone('margurerite'), 'MKRRT11111')
        self.assertEquals(caverphone('maria'), 'MRA1111111')
        self.assertEquals(caverphone('mariam'), 'MRM1111111')
        self.assertEquals(caverphone('marian'), 'MRN1111111')
        self.assertEquals(caverphone('marianne'), 'MRN1111111')
        self.assertEquals(caverphone('maribel'), 'MRPA111111')
        self.assertEquals(caverphone('marica'), 'MRKA111111')
        self.assertEquals(caverphone('marie'), 'MRA1111111')
        self.assertEquals(caverphone('marieta'), 'MRTA111111')
        self.assertEquals(caverphone('marina'), 'MRNA111111')
        self.assertEquals(caverphone('marion'), 'MRN1111111')
        self.assertEquals(caverphone('marita'), 'MRTA111111')
        self.assertEquals(caverphone('marius'), 'MRS1111111')
        self.assertEquals(caverphone('marjorie'), 'MRRA111111')
        self.assertEquals(caverphone('marjorio'), 'MRRA111111')
        self.assertEquals(caverphone('marjory'), 'MRRA111111')
        self.assertEquals(caverphone('mark'), 'MK11111111')
        self.assertEquals(caverphone('marmaduke'), 'MMTK111111')
        self.assertEquals(caverphone('marrian'), 'MRN1111111')
        self.assertEquals(caverphone('marsella'), 'MSLA111111')
        self.assertEquals(caverphone('marshall'), 'MSA1111111')
        self.assertEquals(caverphone('martha'), 'MTA1111111')
        self.assertEquals(caverphone('martin'), 'MTN1111111')
        self.assertEquals(caverphone('marton'), 'MTN1111111')
        self.assertEquals(caverphone('mary'), 'MRA1111111')
        self.assertEquals(caverphone('masie'), 'MSA1111111')
        self.assertEquals(caverphone('mata'), 'MTA1111111')
        self.assertEquals(caverphone('mataura'), 'MTRA111111')
        self.assertEquals(caverphone('mathea'), 'MTA1111111')
        self.assertEquals(caverphone('mathew'), 'MTA1111111')
        self.assertEquals(caverphone('mathias'), 'MTS1111111')
        self.assertEquals(caverphone('mathina'), 'MTNA111111')
        self.assertEquals(caverphone('matilda'), 'MTTA111111')
        self.assertEquals(caverphone('matthew'), 'MTA1111111')
        self.assertEquals(caverphone('mattie'), 'MTA1111111')
        self.assertEquals(caverphone('maud'), 'MT11111111')
        self.assertEquals(caverphone('mauda'), 'MTA1111111')
        self.assertEquals(caverphone('maude'), 'MT11111111')
        self.assertEquals(caverphone('maudie'), 'MTA1111111')
        self.assertEquals(caverphone('maurce'), 'MK11111111')
        self.assertEquals(caverphone('maureen'), 'MRN1111111')
        self.assertEquals(caverphone('maurice'), 'MRK1111111')
        self.assertEquals(caverphone('mavis'), 'MFS1111111')
        self.assertEquals(caverphone('mavora'), 'MFRA111111')
        self.assertEquals(caverphone('max'), 'MK11111111')
        self.assertEquals(caverphone('maxime'), 'MKM1111111')
        self.assertEquals(caverphone('maxwell'), 'MKWA111111')
        self.assertEquals(caverphone('may'), 'MA11111111')
        self.assertEquals(caverphone('mayda'), 'MTA1111111')
        self.assertEquals(caverphone('maye'), 'MA11111111')
        self.assertEquals(caverphone('maynard'), 'MNT1111111')
        self.assertEquals(caverphone('maythal'), 'MTA1111111')
        self.assertEquals(caverphone('mayvee'), 'MFA1111111')
        self.assertEquals(caverphone('mcewan'), 'MSWN111111')
        self.assertEquals(caverphone('mcewen'), 'MSWN111111')
        self.assertEquals(caverphone('mchardy'), 'MKTA111111')
        self.assertEquals(caverphone('meda'), 'MTA1111111')
        self.assertEquals(caverphone('melanie'), 'MLNA111111')
        self.assertEquals(caverphone('melba'), 'MPA1111111')
        self.assertEquals(caverphone('melen'), 'MLN1111111')
        self.assertEquals(caverphone('melia'), 'MLA1111111')
        self.assertEquals(caverphone('melton'), 'MTN1111111')
        self.assertEquals(caverphone('melva'), 'MFA1111111')
        self.assertEquals(caverphone('melville'), 'MFA1111111')
        self.assertEquals(caverphone('melvyn'), 'MFN1111111')
        self.assertEquals(caverphone('mena'), 'MNA1111111')
        self.assertEquals(caverphone('menia'), 'MNA1111111')
        self.assertEquals(caverphone('menry'), 'MNRA111111')
        self.assertEquals(caverphone('menzie'), 'MNSA111111')
        self.assertEquals(caverphone('menzies'), 'MNSS111111')
        self.assertEquals(caverphone('mera'), 'MRA1111111')
        self.assertEquals(caverphone('mercedes'), 'MSTS111111')
        self.assertEquals(caverphone('mercia'), 'MSA1111111')
        self.assertEquals(caverphone('mercy'), 'MSA1111111')
        self.assertEquals(caverphone('meredith'), 'MRTT111111')
        self.assertEquals(caverphone('merian'), 'MRN1111111')
        self.assertEquals(caverphone('merle'), 'MA11111111')
        self.assertEquals(caverphone('merlin'), 'MLN1111111')
        self.assertEquals(caverphone('merrial'), 'MRA1111111')
        self.assertEquals(caverphone('merrin'), 'MRN1111111')
        self.assertEquals(caverphone('merton'), 'MTN1111111')
        self.assertEquals(caverphone('mervyn'), 'MFN1111111')
        self.assertEquals(caverphone('meryl'), 'MRA1111111')
        self.assertEquals(caverphone('meryle'), 'MRA1111111')
        self.assertEquals(caverphone('meta'), 'MTA1111111')
        self.assertEquals(caverphone('metta'), 'MTA1111111')
        self.assertEquals(caverphone('meynard'), 'MNT1111111')
        self.assertEquals(caverphone('miah'), 'MA11111111')
        self.assertEquals(caverphone('michael'), 'MKA1111111')
        self.assertEquals(caverphone('michale'), 'MKA1111111')
        self.assertEquals(caverphone('miehael'), 'MA11111111')
        self.assertEquals(caverphone('mignon'), 'MKNN111111')
        self.assertEquals(caverphone('mildred'), 'MTRT111111')
        self.assertEquals(caverphone('milena'), 'MLNA111111')
        self.assertEquals(caverphone('miles'), 'MLS1111111')
        self.assertEquals(caverphone('millar'), 'MLA1111111')
        self.assertEquals(caverphone('millen'), 'MLN1111111')
        self.assertEquals(caverphone('millicent'), 'MLSNT11111')
        self.assertEquals(caverphone('millie'), 'MLA1111111')
        self.assertEquals(caverphone('millis'), 'MLS1111111')
        self.assertEquals(caverphone('milly'), 'MLA1111111')
        self.assertEquals(caverphone('milo'), 'MLA1111111')
        self.assertEquals(caverphone('milton'), 'MTN1111111')
        self.assertEquals(caverphone('mima'), 'MMA1111111')
        self.assertEquals(caverphone('mimie'), 'MMA1111111')
        self.assertEquals(caverphone('mina'), 'MNA1111111')
        self.assertEquals(caverphone('minan'), 'MNN1111111')
        self.assertEquals(caverphone('minna'), 'MNA1111111')
        self.assertEquals(caverphone('minnie'), 'MNA1111111')
        self.assertEquals(caverphone('mira'), 'MRA1111111')
        self.assertEquals(caverphone('miranda'), 'MRNTA11111')
        self.assertEquals(caverphone('miriam'), 'MRM1111111')
        self.assertEquals(caverphone('mirian'), 'MRN1111111')
        self.assertEquals(caverphone('miriel'), 'MRA1111111')
        self.assertEquals(caverphone('mirnie'), 'MNA1111111')
        self.assertEquals(caverphone('miro'), 'MRA1111111')
        self.assertEquals(caverphone('mister'), 'MSTA111111')
        self.assertEquals(caverphone('mitchell'), 'MKA1111111')
        self.assertEquals(caverphone('moana'), 'MNA1111111')
        self.assertEquals(caverphone('moira'), 'MRA1111111')
        self.assertEquals(caverphone('mollie'), 'MLA1111111')
        self.assertEquals(caverphone('molly'), 'MLA1111111')
        self.assertEquals(caverphone('mona'), 'MNA1111111')
        self.assertEquals(caverphone('monatague'), 'MNTKA11111')
        self.assertEquals(caverphone('moncrieff'), 'MNKRF11111')
        self.assertEquals(caverphone('monica'), 'MNKA111111')
        self.assertEquals(caverphone('montague'), 'MNTKA11111')
        self.assertEquals(caverphone('monteith'), 'MNTT111111')
        self.assertEquals(caverphone('mony'), 'MNA1111111')
        self.assertEquals(caverphone('morgan'), 'MKN1111111')
        self.assertEquals(caverphone('morie'), 'MRA1111111')
        self.assertEquals(caverphone('moris'), 'MRS1111111')
        self.assertEquals(caverphone('morison'), 'MRSN111111')
        self.assertEquals(caverphone('morris'), 'MRS1111111')
        self.assertEquals(caverphone('morrison'), 'MRSN111111')
        self.assertEquals(caverphone('mortimer'), 'MTMA111111')
        self.assertEquals(caverphone('morton'), 'MTN1111111')
        self.assertEquals(caverphone('moses'), 'MSS1111111')
        self.assertEquals(caverphone('moura'), 'MRA1111111')
        self.assertEquals(caverphone('moyra'), 'MRA1111111')
        self.assertEquals(caverphone('mrytle'), 'MRTA111111')
        self.assertEquals(caverphone('muareen'), 'MRN1111111')
        self.assertEquals(caverphone('mugh'), 'MA11111111')
        self.assertEquals(caverphone('mungo'), 'MNKA111111')
        self.assertEquals(caverphone('munro'), 'MNRA111111')
        self.assertEquals(caverphone('mura'), 'MRA1111111')
        self.assertEquals(caverphone('murdo'), 'MTA1111111')
        self.assertEquals(caverphone('murdoch'), 'MTK1111111')
        self.assertEquals(caverphone('murial'), 'MRA1111111')
        self.assertEquals(caverphone('muriel'), 'MRA1111111')
        self.assertEquals(caverphone('murray'), 'MRA1111111')
        self.assertEquals(caverphone('murtha'), 'MTA1111111')
        self.assertEquals(caverphone('myles'), 'MLS1111111')
        self.assertEquals(caverphone('mynot'), 'MNT1111111')
        self.assertEquals(caverphone('myra'), 'MRA1111111')
        self.assertEquals(caverphone('myrtle'), 'MTA1111111')
        self.assertEquals(caverphone('myttle'), 'MTA1111111')
        self.assertEquals(caverphone('naamah'), 'NMA1111111')
        self.assertEquals(caverphone('nance'), 'NNK1111111')
        self.assertEquals(caverphone('nancie'), 'NNSA111111')
        self.assertEquals(caverphone('nancy'), 'NNSA111111')
        self.assertEquals(caverphone('nancybell'), 'NNSPA11111')
        self.assertEquals(caverphone('naney'), 'NNA1111111')
        self.assertEquals(caverphone('nano'), 'NNA1111111')
        self.assertEquals(caverphone('nansbell'), 'NNSPA11111')
        self.assertEquals(caverphone('naomi'), 'NMA1111111')
        self.assertEquals(caverphone('nardor'), 'NTA1111111')
        self.assertEquals(caverphone('narman'), 'NMN1111111')
        self.assertEquals(caverphone('narotamdas'), 'NRTMTS1111')
        self.assertEquals(caverphone('natalie'), 'NTLA111111')
        self.assertEquals(caverphone('nathan'), 'NTN1111111')
        self.assertEquals(caverphone('nathaniel'), 'NTNA111111')
        self.assertEquals(caverphone('naylor'), 'NLA1111111')
        self.assertEquals(caverphone('neah'), 'NA11111111')
        self.assertEquals(caverphone('neil'), 'NA11111111')
        self.assertEquals(caverphone('neilina'), 'NLNA111111')
        self.assertEquals(caverphone('neill'), 'NA11111111')
        self.assertEquals(caverphone('nell'), 'NA11111111')
        self.assertEquals(caverphone('nella'), 'NLA1111111')
        self.assertEquals(caverphone('nelletta'), 'NLTA111111')
        self.assertEquals(caverphone('nellia'), 'NLA1111111')
        self.assertEquals(caverphone('nellic'), 'NLK1111111')
        self.assertEquals(caverphone('nellie'), 'NLA1111111')
        self.assertEquals(caverphone('nellin'), 'NLN1111111')
        self.assertEquals(caverphone('nelly'), 'NLA1111111')
        self.assertEquals(caverphone('nelson'), 'NSN1111111')
        self.assertEquals(caverphone('nenetta'), 'NNTA111111')
        self.assertEquals(caverphone('nera'), 'NRA1111111')
        self.assertEquals(caverphone('nesbit'), 'NSPT111111')
        self.assertEquals(caverphone('nessie'), 'NSA1111111')
        self.assertEquals(caverphone('nesta'), 'NSTA111111')
        self.assertEquals(caverphone('nestor'), 'NSTA111111')
        self.assertEquals(caverphone('netherton'), 'NTTN111111')
        self.assertEquals(caverphone('netta'), 'NTA1111111')
        self.assertEquals(caverphone('netterwille'), 'NTWA111111')
        self.assertEquals(caverphone('nettie'), 'NTA1111111')
        self.assertEquals(caverphone('neville'), 'NFA1111111')
        self.assertEquals(caverphone('newman'), 'NMN1111111')
        self.assertEquals(caverphone('ngaere'), 'NKA1111111')
        self.assertEquals(caverphone('ngahuir'), 'NKA1111111')
        self.assertEquals(caverphone('ngaira'), 'NKRA111111')
        self.assertEquals(caverphone('ngaire'), 'NKA1111111')
        self.assertEquals(caverphone('ngaria'), 'NKRA111111')
        self.assertEquals(caverphone('ngarita'), 'NKRTA11111')
        self.assertEquals(caverphone('ngyra'), 'NKRA111111')
        self.assertEquals(caverphone('ngyre'), 'NKA1111111')
        self.assertEquals(caverphone('niary'), 'NRA1111111')
        self.assertEquals(caverphone('nicalena'), 'NKLNA11111')
        self.assertEquals(caverphone('nichol'), 'NKA1111111')
        self.assertEquals(caverphone('nichola'), 'NKLA111111')
        self.assertEquals(caverphone('nicholas'), 'NKLS111111')
        self.assertEquals(caverphone('nicol'), 'NKA1111111')
        self.assertEquals(caverphone('nicolena'), 'NKLNA11111')
        self.assertEquals(caverphone('nicolina'), 'NKLNA11111')
        self.assertEquals(caverphone('niel'), 'NA11111111')
        self.assertEquals(caverphone('niels'), 'NS11111111')
        self.assertEquals(caverphone('nigel'), 'NKA1111111')
        self.assertEquals(caverphone('nils'), 'NS11111111')
        self.assertEquals(caverphone('nina'), 'NNA1111111')
        self.assertEquals(caverphone('ninetta'), 'NNTA111111')
        self.assertEquals(caverphone('nita'), 'NTA1111111')
        self.assertEquals(caverphone('no'), 'NA11111111')
        self.assertEquals(caverphone('noel'), 'NA11111111')
        self.assertEquals(caverphone('noeleen'), 'NLN1111111')
        self.assertEquals(caverphone('noeline'), 'NLN1111111')
        self.assertEquals(caverphone('noell'), 'NA11111111')
        self.assertEquals(caverphone('noelle'), 'NA11111111')
        self.assertEquals(caverphone('noilina'), 'NLNA111111')
        self.assertEquals(caverphone('nola'), 'NLA1111111')
        self.assertEquals(caverphone('nona'), 'NNA1111111')
        self.assertEquals(caverphone('noney'), 'NNA1111111')
        self.assertEquals(caverphone('noni'), 'NNA1111111')
        self.assertEquals(caverphone('nonie'), 'NNA1111111')
        self.assertEquals(caverphone('nora'), 'NRA1111111')
        self.assertEquals(caverphone('norah'), 'NRA1111111')
        self.assertEquals(caverphone('noreen'), 'NRN1111111')
        self.assertEquals(caverphone('norine'), 'NRN1111111')
        self.assertEquals(caverphone('norma'), 'NMA1111111')
        self.assertEquals(caverphone('norman'), 'NMN1111111')
        self.assertEquals(caverphone('normena'), 'NMNA111111')
        self.assertEquals(caverphone('normina'), 'NMNA111111')
        self.assertEquals(caverphone('norris'), 'NRS1111111')
        self.assertEquals(caverphone('north'), 'NT11111111')
        self.assertEquals(caverphone('noslie'), 'NSLA111111')
        self.assertEquals(caverphone('nova'), 'NFA1111111')
        self.assertEquals(caverphone('nozlie'), 'NSLA111111')
        self.assertEquals(caverphone('nyra'), 'NRA1111111')
        self.assertEquals(caverphone('oban'), 'APN1111111')
        self.assertEquals(caverphone('octavia'), 'AKTFA11111')
        self.assertEquals(caverphone('octavius'), 'AKTFS11111')
        self.assertEquals(caverphone('odin'), 'ATN1111111')
        self.assertEquals(caverphone('ogier'), 'AKA1111111')
        self.assertEquals(caverphone('ola'), 'ALA1111111')
        self.assertEquals(caverphone('olaf'), 'ALF1111111')
        self.assertEquals(caverphone('olai'), 'ALA1111111')
        self.assertEquals(caverphone('ole'), 'AA11111111')
        self.assertEquals(caverphone('olef'), 'ALF1111111')
        self.assertEquals(caverphone('olga'), 'AKA1111111')
        self.assertEquals(caverphone('oliphant'), 'ALFNT11111')
        self.assertEquals(caverphone('olive'), 'ALF1111111')
        self.assertEquals(caverphone('olivel'), 'ALFA111111')
        self.assertEquals(caverphone('oliver'), 'ALFA111111')
        self.assertEquals(caverphone('olivera'), 'ALFRA11111')
        self.assertEquals(caverphone('oliverpaul'), 'ALFPA11111')
        self.assertEquals(caverphone('olivia'), 'ALFA111111')
        self.assertEquals(caverphone('olivo'), 'ALFA111111')
        self.assertEquals(caverphone('olliffe'), 'ALF1111111')
        self.assertEquals(caverphone('olof'), 'ALF1111111')
        self.assertEquals(caverphone('oloff'), 'ALF1111111')
        self.assertEquals(caverphone('olvia'), 'AFA1111111')
        self.assertEquals(caverphone('olwyn'), 'AWN1111111')
        self.assertEquals(caverphone('onawe'), 'ANA1111111')
        self.assertEquals(caverphone('onie'), 'ANA1111111')
        self.assertEquals(caverphone('oonah'), 'ANA1111111')
        self.assertEquals(caverphone('ophir'), 'AFA1111111')
        self.assertEquals(caverphone('ora'), 'ARA1111111')
        self.assertEquals(caverphone('oral'), 'ARA1111111')
        self.assertEquals(caverphone('oriel'), 'ARA1111111')
        self.assertEquals(caverphone('orlando'), 'ALNTA11111')
        self.assertEquals(caverphone('orma'), 'AMA1111111')
        self.assertEquals(caverphone('ormandy'), 'AMNTA11111')
        self.assertEquals(caverphone('orme'), 'AM11111111')
        self.assertEquals(caverphone('ormond'), 'AMNT111111')
        self.assertEquals(caverphone('orpah'), 'APA1111111')
        self.assertEquals(caverphone('orpheus'), 'AFS1111111')
        self.assertEquals(caverphone('orthus'), 'ATS1111111')
        self.assertEquals(caverphone('orton'), 'ATN1111111')
        self.assertEquals(caverphone('orvis'), 'AFS1111111')
        self.assertEquals(caverphone('osald'), 'AST1111111')
        self.assertEquals(caverphone('osborn'), 'ASPN111111')
        self.assertEquals(caverphone('osborne'), 'ASPN111111')
        self.assertEquals(caverphone('oscar'), 'ASKA111111')
        self.assertEquals(caverphone('oslin'), 'ASLN111111')
        self.assertEquals(caverphone('oswald'), 'ASWT111111')
        self.assertEquals(caverphone('othelia'), 'ATLA111111')
        self.assertEquals(caverphone('otilia'), 'ATLA111111')
        self.assertEquals(caverphone('otto'), 'ATA1111111')
        self.assertEquals(caverphone('ough'), 'AA11111111')
        self.assertEquals(caverphone('ouston'), 'ASTN111111')
        self.assertEquals(caverphone('overton'), 'AFTN111111')
        self.assertEquals(caverphone('owen'), 'AWN1111111')
        self.assertEquals(caverphone('ozmond'), 'ASMNT11111')
        self.assertEquals(caverphone('pamela'), 'PMLA111111')
        self.assertEquals(caverphone('pansy'), 'PNSA111111')
        self.assertEquals(caverphone('par'), 'PA11111111')
        self.assertEquals(caverphone('paris'), 'PRS1111111')
        self.assertEquals(caverphone('parke'), 'PK11111111')
        self.assertEquals(caverphone('parry'), 'PRA1111111')
        self.assertEquals(caverphone('paterson'), 'PTSN111111')
        self.assertEquals(caverphone('patience'), 'PTNK111111')
        self.assertEquals(caverphone('patrck'), 'PTK1111111')
        self.assertEquals(caverphone('patricia'), 'PTRSA11111')
        self.assertEquals(caverphone('patrick'), 'PTRK111111')
        self.assertEquals(caverphone('patton'), 'PTN1111111')
        self.assertEquals(caverphone('paul'), 'PA11111111')
        self.assertEquals(caverphone('paulina'), 'PLNA111111')
        self.assertEquals(caverphone('pauline'), 'PLN1111111')
        self.assertEquals(caverphone('pearl'), 'PA11111111')
        self.assertEquals(caverphone('pearlie'), 'PLA1111111')
        self.assertEquals(caverphone('peggie'), 'PKA1111111')
        self.assertEquals(caverphone('peggotty'), 'PKTA111111')
        self.assertEquals(caverphone('peggy'), 'PKA1111111')
        self.assertEquals(caverphone('penelope'), 'PNLP111111')
        self.assertEquals(caverphone('penrose'), 'PNRS111111')
        self.assertEquals(caverphone('percival'), 'PSFA111111')
        self.assertEquals(caverphone('percy'), 'PSA1111111')
        self.assertEquals(caverphone('percystreetclair'), 'PSSTRTKLA1')
        self.assertEquals(caverphone('pereival'), 'PRFA111111')
        self.assertEquals(caverphone('perey'), 'PRA1111111')
        self.assertEquals(caverphone('pertha'), 'PTA1111111')
        self.assertEquals(caverphone('pete'), 'PT11111111')
        self.assertEquals(caverphone('peter'), 'PTA1111111')
        self.assertEquals(caverphone('phbe'), 'FP11111111')
        self.assertEquals(caverphone('phebe'), 'FP11111111')
        self.assertEquals(caverphone('phedora'), 'FTRA111111')
        self.assertEquals(caverphone('pheodora'), 'FTRA111111')
        self.assertEquals(caverphone('philip'), 'FLP1111111')
        self.assertEquals(caverphone('philippa'), 'FLPA111111')
        self.assertEquals(caverphone('phillip'), 'FLP1111111')
        self.assertEquals(caverphone('phillipa'), 'FLPA111111')
        self.assertEquals(caverphone('phillis'), 'FLS1111111')
        self.assertEquals(caverphone('philomena'), 'FLMNA11111')
        self.assertEquals(caverphone('phoebe'), 'FP11111111')
        self.assertEquals(caverphone('phoenix'), 'FNK1111111')
        self.assertEquals(caverphone('phylis'), 'FLS1111111')
        self.assertEquals(caverphone('phyliss'), 'FLS1111111')
        self.assertEquals(caverphone('phyllis'), 'FLS1111111')
        self.assertEquals(caverphone('pierce'), 'PK11111111')
        self.assertEquals(caverphone('pleasance'), 'PLSNK11111')
        self.assertEquals(caverphone('pleasant'), 'PLSNT11111')
        self.assertEquals(caverphone('polly'), 'PLA1111111')
        self.assertEquals(caverphone('poppy'), 'PPA1111111')
        self.assertEquals(caverphone('pretoria'), 'PRTRA11111')
        self.assertEquals(caverphone('prisca'), 'PRSKA11111')
        self.assertEquals(caverphone('priscilla'), 'PRSLA11111')
        self.assertEquals(caverphone('prothesia'), 'PRTSA11111')
        self.assertEquals(caverphone('prudence'), 'PRTNK11111')
        self.assertEquals(caverphone('prudentchia'), 'PRTNKA1111')
        self.assertEquals(caverphone('pryna'), 'PRNA111111')
        self.assertEquals(caverphone('queen'), 'KN11111111')
        self.assertEquals(caverphone('queenie'), 'KNA1111111')
        self.assertEquals(caverphone('quinton'), 'KNTN111111')
        self.assertEquals(caverphone('rachael'), 'RKA1111111')
        self.assertEquals(caverphone('rachal'), 'RKA1111111')
        self.assertEquals(caverphone('rachall'), 'RKA1111111')
        self.assertEquals(caverphone('rachel'), 'RKA1111111')
        self.assertEquals(caverphone('radium'), 'RTM1111111')
        self.assertEquals(caverphone('rae'), 'RA11111111')
        self.assertEquals(caverphone('raeburn'), 'RPN1111111')
        self.assertEquals(caverphone('raiph'), 'RF11111111')
        self.assertEquals(caverphone('ralph'), 'RF11111111')
        self.assertEquals(caverphone('randall'), 'RNTA111111')
        self.assertEquals(caverphone('randell'), 'RNTA111111')
        self.assertEquals(caverphone('randolph'), 'RNTF111111')
        self.assertEquals(caverphone('rani'), 'RNA1111111')
        self.assertEquals(caverphone('raphael'), 'RFA1111111')
        self.assertEquals(caverphone('rasmas'), 'RSMS111111')
        self.assertEquals(caverphone('rawena'), 'RWNA111111')
        self.assertEquals(caverphone('ray'), 'RA11111111')
        self.assertEquals(caverphone('rayena'), 'RNA1111111')
        self.assertEquals(caverphone('raymie'), 'RMA1111111')
        self.assertEquals(caverphone('raymond'), 'RMNT111111')
        self.assertEquals(caverphone('raymonde'), 'RMNT111111')
        self.assertEquals(caverphone('raymund'), 'RMNT111111')
        self.assertEquals(caverphone('rayna'), 'RNA1111111')
        self.assertEquals(caverphone('rea'), 'RA11111111')
        self.assertEquals(caverphone('rebbecca'), 'RPKA111111')
        self.assertEquals(caverphone('rebecca'), 'RPKA111111')
        self.assertEquals(caverphone('rebeckah'), 'RPKA111111')
        self.assertEquals(caverphone('rebekah'), 'RPKA111111')
        self.assertEquals(caverphone('redmond'), 'RTMNT11111')
        self.assertEquals(caverphone('redvers'), 'RTFS111111')
        self.assertEquals(caverphone('reece'), 'RK11111111')
        self.assertEquals(caverphone('regina'), 'RKNA111111')
        self.assertEquals(caverphone('reginald'), 'RKNT111111')
        self.assertEquals(caverphone('reita'), 'RTA1111111')
        self.assertEquals(caverphone('rema'), 'RMA1111111')
        self.assertEquals(caverphone('rena'), 'RNA1111111')
        self.assertEquals(caverphone('rene'), 'RN11111111')
        self.assertEquals(caverphone('renee'), 'RNA1111111')
        self.assertEquals(caverphone('renna'), 'RNA1111111')
        self.assertEquals(caverphone('rero'), 'RRA1111111')
        self.assertEquals(caverphone('reta'), 'RTA1111111')
        self.assertEquals(caverphone('retta'), 'RTA1111111')
        self.assertEquals(caverphone('reuben'), 'RPN1111111')
        self.assertEquals(caverphone('revina'), 'RFNA111111')
        self.assertEquals(caverphone('rewa'), 'RWA1111111')
        self.assertEquals(caverphone('rewi'), 'RWA1111111')
        self.assertEquals(caverphone('rex'), 'RK11111111')
        self.assertEquals(caverphone('rexiter'), 'RKTA111111')
        self.assertEquals(caverphone('reyna'), 'RNA1111111')
        self.assertEquals(caverphone('reynolds'), 'RNTS111111')
        self.assertEquals(caverphone('rhoda'), 'TA11111111')
        self.assertEquals(caverphone('rhoderick'), 'TRK1111111')
        self.assertEquals(caverphone('rhoma'), 'MA11111111')
        self.assertEquals(caverphone('rhona'), 'NA11111111')
        self.assertEquals(caverphone('rica'), 'RKA1111111')
        self.assertEquals(caverphone('richald'), 'RKT1111111')
        self.assertEquals(caverphone('richard'), 'RKT1111111')
        self.assertEquals(caverphone('richena'), 'RKNA111111')
        self.assertEquals(caverphone('richmond'), 'RKMNT11111')
        self.assertEquals(caverphone('ricka'), 'RKA1111111')
        self.assertEquals(caverphone('ridley'), 'RTLA111111')
        self.assertEquals(caverphone('rieka'), 'RKA1111111')
        self.assertEquals(caverphone('rieta'), 'RTA1111111')
        self.assertEquals(caverphone('riha'), 'RA11111111')
        self.assertEquals(caverphone('rima'), 'RMA1111111')
        self.assertEquals(caverphone('rina'), 'RNA1111111')
        self.assertEquals(caverphone('riparata'), 'RPRTA11111')
        self.assertEquals(caverphone('rita'), 'RTA1111111')
        self.assertEquals(caverphone('ritchie'), 'RKA1111111')
        self.assertEquals(caverphone('roa'), 'RA11111111')
        self.assertEquals(caverphone('roanna'), 'RNA1111111')
        self.assertEquals(caverphone('robena'), 'RPNA111111')
        self.assertEquals(caverphone('robert'), 'RPT1111111')
        self.assertEquals(caverphone('roberta'), 'RPTA111111')
        self.assertEquals(caverphone('robertina'), 'RPTNA11111')
        self.assertEquals(caverphone('roberton'), 'RPTN111111')
        self.assertEquals(caverphone('roberts'), 'RPTS111111')
        self.assertEquals(caverphone('robertson'), 'RPTSN11111')
        self.assertEquals(caverphone('robin'), 'RPN1111111')
        self.assertEquals(caverphone('robina'), 'RPNA111111')
        self.assertEquals(caverphone('robins'), 'RPNS111111')
        self.assertEquals(caverphone('robinson'), 'RPNSN11111')
        self.assertEquals(caverphone('roderick'), 'RTRK111111')
        self.assertEquals(caverphone('rodger'), 'RKA1111111')
        self.assertEquals(caverphone('rodney'), 'RTNA111111')
        self.assertEquals(caverphone('rodrick'), 'RTRK111111')
        self.assertEquals(caverphone('roger'), 'RKA1111111')
        self.assertEquals(caverphone('roland'), 'RLNT111111')
        self.assertEquals(caverphone('roma'), 'RMA1111111')
        self.assertEquals(caverphone('rona'), 'RNA1111111')
        self.assertEquals(caverphone('ronald'), 'RNT1111111')
        self.assertEquals(caverphone('ronstad'), 'RNSTT11111')
        self.assertEquals(caverphone('rosa'), 'RSA1111111')
        self.assertEquals(caverphone('rosabell'), 'RSPA111111')
        self.assertEquals(caverphone('rosabella'), 'RSPLA11111')
        self.assertEquals(caverphone('rosaland'), 'RSLNT11111')
        self.assertEquals(caverphone('rosaleene'), 'RSLN111111')
        self.assertEquals(caverphone('rosalie'), 'RSLA111111')
        self.assertEquals(caverphone('rosalind'), 'RSLNT11111')
        self.assertEquals(caverphone('rosaline'), 'RSLN111111')
        self.assertEquals(caverphone('rosalla'), 'RSLA111111')
        self.assertEquals(caverphone('rosamond'), 'RSMNT11111')
        self.assertEquals(caverphone('rosamund'), 'RSMNT11111')
        self.assertEquals(caverphone('rosana'), 'RSNA111111')
        self.assertEquals(caverphone('rosanah'), 'RSNA111111')
        self.assertEquals(caverphone('rosanna'), 'RSNA111111')
        self.assertEquals(caverphone('rosannah'), 'RSNA111111')
        self.assertEquals(caverphone('rosanne'), 'RSN1111111')
        self.assertEquals(caverphone('roscena'), 'RSNA111111')
        self.assertEquals(caverphone('rose'), 'RS11111111')
        self.assertEquals(caverphone('roseana'), 'RSNA111111')
        self.assertEquals(caverphone('roseanna'), 'RSNA111111')
        self.assertEquals(caverphone('roseina'), 'RSNA111111')
        self.assertEquals(caverphone('rosella'), 'RSLA111111')
        self.assertEquals(caverphone('rosemay'), 'RSMA111111')
        self.assertEquals(caverphone('rosemond'), 'RSMNT11111')
        self.assertEquals(caverphone('rosena'), 'RSNA111111')
        self.assertEquals(caverphone('rosetta'), 'RSTA111111')
        self.assertEquals(caverphone('rosie'), 'RSA1111111')
        self.assertEquals(caverphone('rosiena'), 'RSNA111111')
        self.assertEquals(caverphone('rosina'), 'RSNA111111')
        self.assertEquals(caverphone('rosins'), 'RSNS111111')
        self.assertEquals(caverphone('ross'), 'RS11111111')
        self.assertEquals(caverphone('roustad'), 'RSTT111111')
        self.assertEquals(caverphone('rowena'), 'RWNA111111')
        self.assertEquals(caverphone('rowland'), 'RLNT111111')
        self.assertEquals(caverphone('roy'), 'RA11111111')
        self.assertEquals(caverphone('rozel'), 'RSA1111111')
        self.assertEquals(caverphone('rua'), 'RA11111111')
        self.assertEquals(caverphone('ruahine'), 'RN11111111')
        self.assertEquals(caverphone('ruben'), 'RPN1111111')
        self.assertEquals(caverphone('rubena'), 'RPNA111111')
        self.assertEquals(caverphone('rubenia'), 'RPNA111111')
        self.assertEquals(caverphone('rubina'), 'RPNA111111')
        self.assertEquals(caverphone('rubins'), 'RPNS111111')
        self.assertEquals(caverphone('rubv'), 'RPF1111111')
        self.assertEquals(caverphone('ruby'), 'RPA1111111')
        self.assertEquals(caverphone('rubye'), 'RPA1111111')
        self.assertEquals(caverphone('rudolf'), 'RTF1111111')
        self.assertEquals(caverphone('rudolph'), 'RTF1111111')
        self.assertEquals(caverphone('rufus'), 'RFS1111111')
        self.assertEquals(caverphone('rugby'), 'RKPA111111')
        self.assertEquals(caverphone('rui'), 'RA11111111')
        self.assertEquals(caverphone('ruia'), 'RA11111111')
        self.assertEquals(caverphone('runa'), 'RNA1111111')
        self.assertEquals(caverphone('ruper'), 'RPA1111111')
        self.assertEquals(caverphone('rupert'), 'RPT1111111')
        self.assertEquals(caverphone('ruruhira'), 'RRRA111111')
        self.assertEquals(caverphone('russell'), 'RSA1111111')
        self.assertEquals(caverphone('ruth'), 'RT11111111')
        self.assertEquals(caverphone('rutherford'), 'RTFT111111')
        self.assertEquals(caverphone('saah'), 'SA11111111')
        self.assertEquals(caverphone('saba'), 'SPA1111111')
        self.assertEquals(caverphone('sabina'), 'SPNA111111')
        self.assertEquals(caverphone('sadie'), 'STA1111111')
        self.assertEquals(caverphone('saidie'), 'STA1111111')
        self.assertEquals(caverphone('sam'), 'SM11111111')
        self.assertEquals(caverphone('sampson'), 'SMPSN11111')
        self.assertEquals(caverphone('samson'), 'SMSN111111')
        self.assertEquals(caverphone('samuel'), 'SMA1111111')
        self.assertEquals(caverphone('samuelena'), 'SMLNA11111')
        self.assertEquals(caverphone('sanuel'), 'SNA1111111')
        self.assertEquals(caverphone('sara'), 'SRA1111111')
        self.assertEquals(caverphone('sarah'), 'SRA1111111')
        self.assertEquals(caverphone('saverio'), 'SFRA111111')
        self.assertEquals(caverphone('saxon'), 'SKN1111111')
        self.assertEquals(caverphone('scott'), 'SKT1111111')
        self.assertEquals(caverphone('scoular'), 'SKLA111111')
        self.assertEquals(caverphone('seaward'), 'SWT1111111')
        self.assertEquals(caverphone('sedden'), 'STN1111111')
        self.assertEquals(caverphone('seddon'), 'STN1111111')
        self.assertEquals(caverphone('selah'), 'SLA1111111')
        self.assertEquals(caverphone('selem'), 'SLM1111111')
        self.assertEquals(caverphone('selena'), 'SLNA111111')
        self.assertEquals(caverphone('selina'), 'SLNA111111')
        self.assertEquals(caverphone('selinda'), 'SLNTA11111')
        self.assertEquals(caverphone('selma'), 'SMA1111111')
        self.assertEquals(caverphone('selwyn'), 'SWN1111111')
        self.assertEquals(caverphone('septimus'), 'SPTMS11111')
        self.assertEquals(caverphone('serafina'), 'SRFNA11111')
        self.assertEquals(caverphone('sergia'), 'SKA1111111')
        self.assertEquals(caverphone('seth'), 'ST11111111')
        self.assertEquals(caverphone('sharland'), 'SLNT111111')
        self.assertEquals(caverphone('sheddan'), 'STN1111111')
        self.assertEquals(caverphone('sheila'), 'SLA1111111')
        self.assertEquals(caverphone('shelia'), 'SLA1111111')
        self.assertEquals(caverphone('shiela'), 'SLA1111111')
        self.assertEquals(caverphone('shirley'), 'SLA1111111')
        self.assertEquals(caverphone('shona'), 'SNA1111111')
        self.assertEquals(caverphone('siah'), 'SA11111111')
        self.assertEquals(caverphone('sibyl'), 'SPA1111111')
        self.assertEquals(caverphone('sidey'), 'STA1111111')
        self.assertEquals(caverphone('sidney'), 'STNA111111')
        self.assertEquals(caverphone('sidona'), 'STNA111111')
        self.assertEquals(caverphone('signa'), 'SKNA111111')
        self.assertEquals(caverphone('signe'), 'SKN1111111')
        self.assertEquals(caverphone('sigrid'), 'SKRT111111')
        self.assertEquals(caverphone('silas'), 'SLS1111111')
        self.assertEquals(caverphone('silena'), 'SLNA111111')
        self.assertEquals(caverphone('silva'), 'SFA1111111')
        self.assertEquals(caverphone('simeon'), 'SMN1111111')
        self.assertEquals(caverphone('simon'), 'SMN1111111')
        self.assertEquals(caverphone('simpson'), 'SMPSN11111')
        self.assertEquals(caverphone('sina'), 'SNA1111111')
        self.assertEquals(caverphone('sinclair'), 'SNKLA11111')
        self.assertEquals(caverphone('singleton'), 'SNKLTN1111')
        self.assertEquals(caverphone('sissy'), 'SSA1111111')
        self.assertEquals(caverphone('solomon'), 'SLMN111111')
        self.assertEquals(caverphone('somerled'), 'SMLT111111')
        self.assertEquals(caverphone('sophia'), 'SFA1111111')
        self.assertEquals(caverphone('sophie'), 'SFA1111111')
        self.assertEquals(caverphone('sophrania'), 'SFRNA11111')
        self.assertEquals(caverphone('sophrona'), 'SFRNA11111')
        self.assertEquals(caverphone('sophronia'), 'SFRNA11111')
        self.assertEquals(caverphone('sophy'), 'SFA1111111')
        self.assertEquals(caverphone('spence'), 'SPNK111111')
        self.assertEquals(caverphone('spencer'), 'SPNSA11111')
        self.assertEquals(caverphone('spenseley'), 'SPNSLA1111')
        self.assertEquals(caverphone('spensley'), 'SPNSLA1111')
        self.assertEquals(caverphone('squire'), 'SKA1111111')
        self.assertEquals(caverphone('st'), 'ST11111111')
        self.assertEquals(caverphone('stafford'), 'STFT111111')
        self.assertEquals(caverphone('stanhope'), 'STNP111111')
        self.assertEquals(caverphone('stanislaus'), 'STNSLS1111')
        self.assertEquals(caverphone('stanislaw'), 'STNSLA1111')
        self.assertEquals(caverphone('stanislaws'), 'STNSLS1111')
        self.assertEquals(caverphone('stanley'), 'STNLA11111')
        self.assertEquals(caverphone('stanton'), 'STNTN11111')
        self.assertEquals(caverphone('stasia'), 'STSA111111')
        self.assertEquals(caverphone('statney'), 'STTNA11111')
        self.assertEquals(caverphone('stella'), 'STLA111111')
        self.assertEquals(caverphone('stephanie'), 'STFNA11111')
        self.assertEquals(caverphone('stephen'), 'STFN111111')
        self.assertEquals(caverphone('steven'), 'STFN111111')
        self.assertEquals(caverphone('steward'), 'STWT111111')
        self.assertEquals(caverphone('stewart'), 'STWT111111')
        self.assertEquals(caverphone('stewarty'), 'STWTA11111')
        self.assertEquals(caverphone('stisie'), 'STSA111111')
        self.assertEquals(caverphone('stratford'), 'STRTFT1111')
        self.assertEquals(caverphone('strelna'), 'STRNA11111')
        self.assertEquals(caverphone('strop'), 'STRP111111')
        self.assertEquals(caverphone('struan'), 'STRN111111')
        self.assertEquals(caverphone('stuart'), 'STT1111111')
        self.assertEquals(caverphone('sturz'), 'STS1111111')
        self.assertEquals(caverphone('surrey'), 'SRA1111111')
        self.assertEquals(caverphone('susan'), 'SSN1111111')
        self.assertEquals(caverphone('susanah'), 'SSNA111111')
        self.assertEquals(caverphone('susanna'), 'SSNA111111')
        self.assertEquals(caverphone('susannah'), 'SSNA111111')
        self.assertEquals(caverphone('susanne'), 'SSN1111111')
        self.assertEquals(caverphone('susie'), 'SSA1111111')
        self.assertEquals(caverphone('susy'), 'SSA1111111')
        self.assertEquals(caverphone('sybella'), 'SPLA111111')
        self.assertEquals(caverphone('sybil'), 'SPA1111111')
        self.assertEquals(caverphone('sydnev'), 'STNF111111')
        self.assertEquals(caverphone('sydney'), 'STNA111111')
        self.assertEquals(caverphone('sylva'), 'SFA1111111')
        self.assertEquals(caverphone('sylvia'), 'SFA1111111')
        self.assertEquals(caverphone('sylvie'), 'SFA1111111')
        self.assertEquals(caverphone('syril'), 'SRA1111111')
        self.assertEquals(caverphone('tabitha'), 'TPTA111111')
        self.assertEquals(caverphone('talbert'), 'TPT1111111')
        self.assertEquals(caverphone('tamar'), 'TMA1111111')
        self.assertEquals(caverphone('tasma'), 'TSMA111111')
        self.assertEquals(caverphone('tasman'), 'TSMN111111')
        self.assertEquals(caverphone('tate'), 'TT11111111')
        self.assertEquals(caverphone('taylor'), 'TLA1111111')
        self.assertEquals(caverphone('teariki'), 'TRKA111111')
        self.assertEquals(caverphone('temperence'), 'TMPRNK1111')
        self.assertEquals(caverphone('terence'), 'TRNK111111')
        self.assertEquals(caverphone('teresa'), 'TRSA111111')
        self.assertEquals(caverphone('teresae'), 'TRSA111111')
        self.assertEquals(caverphone('ternce'), 'TNK1111111')
        self.assertEquals(caverphone('tesse'), 'TS11111111')
        self.assertEquals(caverphone('tessie'), 'TSA1111111')
        self.assertEquals(caverphone('thaddeus'), 'TTS1111111')
        self.assertEquals(caverphone('thea'), 'TA11111111')
        self.assertEquals(caverphone('theima'), 'TMA1111111')
        self.assertEquals(caverphone('thelma'), 'TMA1111111')
        self.assertEquals(caverphone('theodocia'), 'TTSA111111')
        self.assertEquals(caverphone('theodora'), 'TTRA111111')
        self.assertEquals(caverphone('theodore'), 'TTA1111111')
        self.assertEquals(caverphone('theodosia'), 'TTSA111111')
        self.assertEquals(caverphone('theophilus'), 'TFLS111111')
        self.assertEquals(caverphone('theresa'), 'TRSA111111')
        self.assertEquals(caverphone('therese'), 'TRS1111111')
        self.assertEquals(caverphone('thirza'), 'TSA1111111')
        self.assertEquals(caverphone('tholmas'), 'TMS1111111')
        self.assertEquals(caverphone('thomas'), 'TMS1111111')
        self.assertEquals(caverphone('thomasena'), 'TMSNA11111')
        self.assertEquals(caverphone('thomasina'), 'TMSNA11111')
        self.assertEquals(caverphone('thompson'), 'TMPSN11111')
        self.assertEquals(caverphone('thomson'), 'TMSN111111')
        self.assertEquals(caverphone('thora'), 'TRA1111111')
        self.assertEquals(caverphone('thorburn'), 'TPN1111111')
        self.assertEquals(caverphone('thorita'), 'TRTA111111')
        self.assertEquals(caverphone('thornton'), 'TNTN111111')
        self.assertEquals(caverphone('thriza'), 'TRSA111111')
        self.assertEquals(caverphone('thursa'), 'TSA1111111')
        self.assertEquals(caverphone('thurstan'), 'TSTN111111')
        self.assertEquals(caverphone('thurston'), 'TSTN111111')
        self.assertEquals(caverphone('thurza'), 'TSA1111111')
        self.assertEquals(caverphone('thyrza'), 'TSA1111111')
        self.assertEquals(caverphone('thyza'), 'TSA1111111')
        self.assertEquals(caverphone('tillie'), 'TLA1111111')
        self.assertEquals(caverphone('timothy'), 'TMTA111111')
        self.assertEquals(caverphone('tiney'), 'TNA1111111')
        self.assertEquals(caverphone('tini'), 'TNA1111111')
        self.assertEquals(caverphone('tiny'), 'TNA1111111')
        self.assertEquals(caverphone('tizzie'), 'TSA1111111')
        self.assertEquals(caverphone('tom'), 'TM11111111')
        self.assertEquals(caverphone('touncy'), 'TNSA111111')
        self.assertEquals(caverphone('tousseint'), 'TSNT111111')
        self.assertEquals(caverphone('treacy'), 'TRSA111111')
        self.assertEquals(caverphone('tremella'), 'TRMLA11111')
        self.assertEquals(caverphone('trena'), 'TRNA111111')
        self.assertEquals(caverphone('trene'), 'TRN1111111')
        self.assertEquals(caverphone('trentham'), 'TRNTM11111')
        self.assertEquals(caverphone('tresa'), 'TRSA111111')
        self.assertEquals(caverphone('trevor'), 'TRFA111111')
        self.assertEquals(caverphone('trilby'), 'TRPA111111')
        self.assertEquals(caverphone('trixie'), 'TRKA111111')
        self.assertEquals(caverphone('tryphena'), 'TRFNA11111')
        self.assertEquals(caverphone('tui'), 'TA11111111')
        self.assertEquals(caverphone('ulick'), 'ALK1111111')
        self.assertEquals(caverphone('ulrica'), 'ARKA111111')
        self.assertEquals(caverphone('ulricka'), 'ARKA111111')
        self.assertEquals(caverphone('una'), 'ANA1111111')
        self.assertEquals(caverphone('ural'), 'ARA1111111')
        self.assertEquals(caverphone('uresilla'), 'ARSLA11111')
        self.assertEquals(caverphone('ureta'), 'ARTA111111')
        self.assertEquals(caverphone('ursula'), 'ASLA111111')
        self.assertEquals(caverphone('uta'), 'ATA1111111')
        self.assertEquals(caverphone('valarie'), 'FLRA111111')
        self.assertEquals(caverphone('valda'), 'FTA1111111')
        self.assertEquals(caverphone('valdemar'), 'FTMA111111')
        self.assertEquals(caverphone('valencia'), 'FLNSA11111')
        self.assertEquals(caverphone('valentine'), 'FLNTN11111')
        self.assertEquals(caverphone('valerie'), 'FLRA111111')
        self.assertEquals(caverphone('vallance'), 'FLNK111111')
        self.assertEquals(caverphone('valma'), 'FMA1111111')
        self.assertEquals(caverphone('van'), 'FN11111111')
        self.assertEquals(caverphone('vanda'), 'FNTA111111')
        self.assertEquals(caverphone('vanessa'), 'FNSA111111')
        self.assertEquals(caverphone('vara'), 'FRA1111111')
        self.assertEquals(caverphone('varey'), 'FRA1111111')
        self.assertEquals(caverphone('vashti'), 'FSTA111111')
        self.assertEquals(caverphone('vaughan'), 'FKN1111111')
        self.assertEquals(caverphone('veda'), 'FTA1111111')
        self.assertEquals(caverphone('veida'), 'FTA1111111')
        self.assertEquals(caverphone('vendella'), 'FNTLA11111')
        self.assertEquals(caverphone('venessa'), 'FNSA111111')
        self.assertEquals(caverphone('venus'), 'FNS1111111')
        self.assertEquals(caverphone('vera'), 'FRA1111111')
        self.assertEquals(caverphone('verdon'), 'FTN1111111')
        self.assertEquals(caverphone('verdun'), 'FTN1111111')
        self.assertEquals(caverphone('vere'), 'FA11111111')
        self.assertEquals(caverphone('verena'), 'FRNA111111')
        self.assertEquals(caverphone('verion'), 'FRN1111111')
        self.assertEquals(caverphone('verna'), 'FNA1111111')
        self.assertEquals(caverphone('verner'), 'FNA1111111')
        self.assertEquals(caverphone('vernon'), 'FNN1111111')
        self.assertEquals(caverphone('verona'), 'FRNA111111')
        self.assertEquals(caverphone('veronica'), 'FRNKA11111')
        self.assertEquals(caverphone('vesper'), 'FSPA111111')
        self.assertEquals(caverphone('vickers'), 'FKS1111111')
        self.assertEquals(caverphone('victor'), 'FKTA111111')
        self.assertEquals(caverphone('victoria'), 'FKTRA11111')
        self.assertEquals(caverphone('vida'), 'FTA1111111')
        self.assertEquals(caverphone('vietoria'), 'FTRA111111')
        self.assertEquals(caverphone('vilera'), 'FLRA111111')
        self.assertEquals(caverphone('vilhelm'), 'FM11111111')
        self.assertEquals(caverphone('villa'), 'FLA1111111')
        self.assertEquals(caverphone('vina'), 'FNA1111111')
        self.assertEquals(caverphone('vincent'), 'FNSNT11111')
        self.assertEquals(caverphone('vioiet'), 'FT11111111')
        self.assertEquals(caverphone('viola'), 'FLA1111111')
        self.assertEquals(caverphone('violet'), 'FLT1111111')
        self.assertEquals(caverphone('violetta'), 'FLTA111111')
        self.assertEquals(caverphone('violette'), 'FLT1111111')
        self.assertEquals(caverphone('virgil'), 'FKA1111111')
        self.assertEquals(caverphone('virginia'), 'FKNA111111')
        self.assertEquals(caverphone('viva'), 'FFA1111111')
        self.assertEquals(caverphone('vivian'), 'FFN1111111')
        self.assertEquals(caverphone('vivien'), 'FFN1111111')
        self.assertEquals(caverphone('vivienne'), 'FFN1111111')
        self.assertEquals(caverphone('vona'), 'FNA1111111')
        self.assertEquals(caverphone('walker'), 'WKA1111111')
        self.assertEquals(caverphone('wallace'), 'WLK1111111')
        self.assertEquals(caverphone('wallis'), 'WLS1111111')
        self.assertEquals(caverphone('walter'), 'WTA1111111')
        self.assertEquals(caverphone('walton'), 'WTN1111111')
        self.assertEquals(caverphone('waltor'), 'WTA1111111')
        self.assertEquals(caverphone('wance'), 'WNK1111111')
        self.assertEquals(caverphone('ward'), 'WT11111111')
        self.assertEquals(caverphone('warren'), 'WRN1111111')
        self.assertEquals(caverphone('warrington'), 'WRNKTN1111')
        self.assertEquals(caverphone('water'), 'WTA1111111')
        self.assertEquals(caverphone('watson'), 'WTSN111111')
        self.assertEquals(caverphone('wee'), 'WA11111111')
        self.assertEquals(caverphone('welby'), 'WPA1111111')
        self.assertEquals(caverphone('wesby'), 'WSPA111111')
        self.assertEquals(caverphone('wesley'), 'WSLA111111')
        self.assertEquals(caverphone('west'), 'WST1111111')
        self.assertEquals(caverphone('wharten'), 'WTN1111111')
        self.assertEquals(caverphone('wharton'), 'WTN1111111')
        self.assertEquals(caverphone('whenua'), 'WNA1111111')
        self.assertEquals(caverphone('whyndham'), 'WNTM111111')
        self.assertEquals(caverphone('wicko'), 'WKA1111111')
        self.assertEquals(caverphone('wilbert'), 'WPT1111111')
        self.assertEquals(caverphone('wilbur'), 'WPA1111111')
        self.assertEquals(caverphone('wilfred'), 'WFRT111111')
        self.assertEquals(caverphone('wilfrid'), 'WFRT111111')
        self.assertEquals(caverphone('wilhelm'), 'WM11111111')
        self.assertEquals(caverphone('wilhelmena'), 'WMNA111111')
        self.assertEquals(caverphone('wilhelmina'), 'WMNA111111')
        self.assertEquals(caverphone('wilhemenia'), 'WMNA111111')
        self.assertEquals(caverphone('wilhemina'), 'WMNA111111')
        self.assertEquals(caverphone('wilheminia'), 'WMNA111111')
        self.assertEquals(caverphone('wilkinson'), 'WKNSN11111')
        self.assertEquals(caverphone('will'), 'WA11111111')
        self.assertEquals(caverphone('willamina'), 'WLMNA11111')
        self.assertEquals(caverphone('willen'), 'WLN1111111')
        self.assertEquals(caverphone('william'), 'WLM1111111')
        self.assertEquals(caverphone('williamina'), 'WLMNA11111')
        self.assertEquals(caverphone('williammina'), 'WLMNA11111')
        self.assertEquals(caverphone('williams'), 'WLMS111111')
        self.assertEquals(caverphone('williamson'), 'WLMSN11111')
        self.assertEquals(caverphone('willie'), 'WLA1111111')
        self.assertEquals(caverphone('willis'), 'WLS1111111')
        self.assertEquals(caverphone('willitn'), 'WLTN111111')
        self.assertEquals(caverphone('wilma'), 'WMA1111111')
        self.assertEquals(caverphone('wilmot'), 'WMT1111111')
        self.assertEquals(caverphone('wilson'), 'WSN1111111')
        self.assertEquals(caverphone('windsor'), 'WNTSA11111')
        self.assertEquals(caverphone('winfred'), 'WNFRT11111')
        self.assertEquals(caverphone('winifred'), 'WNFRT11111')
        self.assertEquals(caverphone('winnie'), 'WNA1111111')
        self.assertEquals(caverphone('winniefred'), 'WNFRT11111')
        self.assertEquals(caverphone('winnifred'), 'WNFRT11111')
        self.assertEquals(caverphone('winnifrid'), 'WNFRT11111')
        self.assertEquals(caverphone('winston'), 'WNSTN11111')
        self.assertEquals(caverphone('wong'), 'WNK1111111')
        self.assertEquals(caverphone('wright'), 'RT11111111')
        self.assertEquals(caverphone('wynie'), 'WNA1111111')
        self.assertEquals(caverphone('yetti'), 'YTA1111111')
        self.assertEquals(caverphone('ysabel'), 'ASPA111111')
        self.assertEquals(caverphone('yvetta'), 'AFTA111111')
        self.assertEquals(caverphone('yvonne'), 'AFN1111111')
        self.assertEquals(caverphone('zealandia'), 'SLNTA11111')
        self.assertEquals(caverphone('zeby'), 'SPA1111111')
        self.assertEquals(caverphone('zela'), 'SLA1111111')
        self.assertEquals(caverphone('zella'), 'SLA1111111')
        self.assertEquals(caverphone('zelma'), 'SMA1111111')
        self.assertEquals(caverphone('zetta'), 'STA1111111')
        self.assertEquals(caverphone('zillah'), 'SLA1111111')
        self.assertEquals(caverphone('zita'), 'STA1111111')
        self.assertEquals(caverphone('zoe'), 'SA11111111')
        self.assertEquals(caverphone('zohra'), 'SRA1111111')
        self.assertEquals(caverphone('zola'), 'SLA1111111')
        self.assertEquals(caverphone('zona'), 'SNA1111111')
        self.assertEquals(caverphone('aaskow'), 'ASKA111111')
        self.assertEquals(caverphone('aaysford'), 'ASFT111111')
        self.assertEquals(caverphone('abbott'), 'APT1111111')
        self.assertEquals(caverphone('abel'), 'APA1111111')
        self.assertEquals(caverphone('abelsted'), 'APSTT11111')
        self.assertEquals(caverphone('abercrombie'), 'APKRMPA111')
        self.assertEquals(caverphone('abernathy'), 'APNTA11111')
        self.assertEquals(caverphone('abernethie'), 'APNTA11111')
        self.assertEquals(caverphone('abernethy'), 'APNTA11111')
        self.assertEquals(caverphone('abley'), 'APLA111111')
        self.assertEquals(caverphone('abraham'), 'APRM111111')
        self.assertEquals(caverphone('abrams'), 'APRMS11111')
        self.assertEquals(caverphone('aburn'), 'APN1111111')
        self.assertEquals(caverphone('acheson'), 'AKSN111111')
        self.assertEquals(caverphone('adair'), 'ATA1111111')
        self.assertEquals(caverphone('adam'), 'ATM1111111')
        self.assertEquals(caverphone('adams'), 'ATMS111111')
        self.assertEquals(caverphone('adamson'), 'ATMSN11111')
        self.assertEquals(caverphone('adcock'), 'ATKK111111')
        self.assertEquals(caverphone('addison'), 'ATSN111111')
        self.assertEquals(caverphone('aderman'), 'ATMN111111')
        self.assertEquals(caverphone('adess'), 'ATS1111111')
        self.assertEquals(caverphone('adie'), 'ATA1111111')
        self.assertEquals(caverphone('adkins'), 'ATKNS11111')
        self.assertEquals(caverphone('affleck'), 'AFLK111111')
        self.assertEquals(caverphone('agent'), 'AKNT111111')
        self.assertEquals(caverphone('agnew'), 'AKNA111111')
        self.assertEquals(caverphone('ahern'), 'AN11111111')
        self.assertEquals(caverphone('ahlbrandt'), 'APRNT11111')
        self.assertEquals(caverphone('ahlfeld'), 'AFT1111111')
        self.assertEquals(caverphone('aicheson'), 'AKSN111111')
        self.assertEquals(caverphone('aidridge'), 'ATRK111111')
        self.assertEquals(caverphone('aiken'), 'AKN1111111')
        self.assertEquals(caverphone('ailen'), 'ALN1111111')
        self.assertEquals(caverphone('aimers'), 'AMS1111111')
        self.assertEquals(caverphone('aimes'), 'AMS1111111')
        self.assertEquals(caverphone('ainge'), 'ANK1111111')
        self.assertEquals(caverphone('ainger'), 'ANKA111111')
        self.assertEquals(caverphone('air'), 'AA11111111')
        self.assertEquals(caverphone('airey'), 'ARA1111111')
        self.assertEquals(caverphone('airley'), 'ALA1111111')
        self.assertEquals(caverphone('aitcheson'), 'AKSN111111')
        self.assertEquals(caverphone('aitchison'), 'AKSN111111')
        self.assertEquals(caverphone('aithenhead'), 'ATNT111111')
        self.assertEquals(caverphone('aitken'), 'ATKN111111')
        self.assertEquals(caverphone('aitkenhead'), 'ATKNT11111')
        self.assertEquals(caverphone('aitkens'), 'ATKNS11111')
        self.assertEquals(caverphone('aitkinson'), 'ATKNSN1111')
        self.assertEquals(caverphone('alberti'), 'APTA111111')
        self.assertEquals(caverphone('alcock'), 'AKK1111111')
        self.assertEquals(caverphone('alden'), 'ATN1111111')
        self.assertEquals(caverphone('alder'), 'ATA1111111')
        self.assertEquals(caverphone('alderdice'), 'ATTK111111')
        self.assertEquals(caverphone('alderson'), 'ATSN111111')
        self.assertEquals(caverphone('alderton'), 'ATTN111111')
        self.assertEquals(caverphone('aldous'), 'ATS1111111')
        self.assertEquals(caverphone('aldred'), 'ATRT111111')
        self.assertEquals(caverphone('aldridge'), 'ATRK111111')
        self.assertEquals(caverphone('alen'), 'ALN1111111')
        self.assertEquals(caverphone('alert'), 'ALT1111111')
        self.assertEquals(caverphone('alexander'), 'ALKNTA1111')
        self.assertEquals(caverphone('alfrey'), 'AFRA111111')
        self.assertEquals(caverphone('algar'), 'AKA1111111')
        self.assertEquals(caverphone('algeo'), 'AKA1111111')
        self.assertEquals(caverphone('algie'), 'AKA1111111')
        self.assertEquals(caverphone('alison'), 'ALSN111111')
        self.assertEquals(caverphone('allan'), 'ALN1111111')
        self.assertEquals(caverphone('alldred'), 'ATRT111111')
        self.assertEquals(caverphone('allen'), 'ALN1111111')
        self.assertEquals(caverphone('alley'), 'ALA1111111')
        self.assertEquals(caverphone('allis'), 'ALS1111111')
        self.assertEquals(caverphone('allison'), 'ALSN111111')
        self.assertEquals(caverphone('allman'), 'AMN1111111')
        self.assertEquals(caverphone('allom'), 'ALM1111111')
        self.assertEquals(caverphone('alloo'), 'ALA1111111')
        self.assertEquals(caverphone('allott'), 'ALT1111111')
        self.assertEquals(caverphone('allpress'), 'APRS111111')
        self.assertEquals(caverphone('allum'), 'ALM1111111')
        self.assertEquals(caverphone('allwood'), 'AWT1111111')
        self.assertEquals(caverphone('allworden'), 'AWTN111111')
        self.assertEquals(caverphone('almers'), 'AMS1111111')
        self.assertEquals(caverphone('almond'), 'AMNT111111')
        self.assertEquals(caverphone('almquist'), 'AMKST11111')
        self.assertEquals(caverphone('alpine'), 'APN1111111')
        self.assertEquals(caverphone('alston'), 'ASTN111111')
        self.assertEquals(caverphone('amalfitano'), 'AMFTNA1111')
        self.assertEquals(caverphone('amalric'), 'AMRK111111')
        self.assertEquals(caverphone('ambridge'), 'AMPRK11111')
        self.assertEquals(caverphone('amer'), 'AMA1111111')
        self.assertEquals(caverphone('amos'), 'AMS1111111')
        self.assertEquals(caverphone('amouri'), 'AMRA111111')
        self.assertEquals(caverphone('amtman'), 'AMTMN11111')
        self.assertEquals(caverphone('amunie'), 'AMNA111111')
        self.assertEquals(caverphone('ancell'), 'ANSA111111')
        self.assertEquals(caverphone('anchor'), 'ANKA111111')
        self.assertEquals(caverphone('andersen'), 'ANTSN11111')
        self.assertEquals(caverphone('andersoll'), 'ANTSA11111')
        self.assertEquals(caverphone('anderson'), 'ANTSN11111')
        self.assertEquals(caverphone('anderton'), 'ANTTN11111')
        self.assertEquals(caverphone('andorson'), 'ANTSN11111')
        self.assertEquals(caverphone('andreassend'), 'ANTRSNT111')
        self.assertEquals(caverphone('andrew'), 'ANTRA11111')
        self.assertEquals(caverphone('andrewe'), 'ANTRA11111')
        self.assertEquals(caverphone('andrewes'), 'ANTRWS1111')
        self.assertEquals(caverphone('andrews'), 'ANTRS11111')
        self.assertEquals(caverphone('angeli'), 'ANKLA11111')
        self.assertEquals(caverphone('angell'), 'ANKA111111')
        self.assertEquals(caverphone('angus'), 'ANKS111111')
        self.assertEquals(caverphone('annan'), 'ANN1111111')
        self.assertEquals(caverphone('annand'), 'ANNT111111')
        self.assertEquals(caverphone('annett'), 'ANT1111111')
        self.assertEquals(caverphone('anning'), 'ANNK111111')
        self.assertEquals(caverphone('annison'), 'ANSN111111')
        self.assertEquals(caverphone('annson'), 'ANSN111111')
        self.assertEquals(caverphone('anscombe'), 'ANSKM11111')
        self.assertEquals(caverphone('ansdell'), 'ANSTA11111')
        self.assertEquals(caverphone('ansell'), 'ANSA111111')
        self.assertEquals(caverphone('anstruther'), 'ANSTRTA111')
        self.assertEquals(caverphone('anthony'), 'ANTNA11111')
        self.assertEquals(caverphone('apes'), 'APS1111111')
        self.assertEquals(caverphone('appleby'), 'APLPA11111')
        self.assertEquals(caverphone('applegart'), 'APLKT11111')
        self.assertEquals(caverphone('applegarth'), 'APLKT11111')
        self.assertEquals(caverphone('applegate'), 'APLKT11111')
        self.assertEquals(caverphone('applelby'), 'APLPA11111')
        self.assertEquals(caverphone('apstein'), 'APSTN11111')
        self.assertEquals(caverphone('arbuckle'), 'APKA111111')
        self.assertEquals(caverphone('archbold'), 'AKPT111111')
        self.assertEquals(caverphone('archer'), 'AKA1111111')
        self.assertEquals(caverphone('archibald'), 'AKPT111111')
        self.assertEquals(caverphone('archie'), 'AKA1111111')
        self.assertEquals(caverphone('argue'), 'AKA1111111')
        self.assertEquals(caverphone('arkel'), 'AKA1111111')
        self.assertEquals(caverphone('arkins'), 'AKNS111111')
        self.assertEquals(caverphone('arkle'), 'AKA1111111')
        self.assertEquals(caverphone('arlidge'), 'ALK1111111')
        self.assertEquals(caverphone('armatrong'), 'AMTRNK1111')
        self.assertEquals(caverphone('armishaw'), 'AMSA111111')
        self.assertEquals(caverphone('armit'), 'AMT1111111')
        self.assertEquals(caverphone('armitage'), 'AMTK111111')
        self.assertEquals(caverphone('armour'), 'AMA1111111')
        self.assertEquals(caverphone('armroyd'), 'AMRT111111')
        self.assertEquals(caverphone('armstead'), 'AMSTT11111')
        self.assertEquals(caverphone('armstrong'), 'AMSTRNK111')
        self.assertEquals(caverphone('arnal'), 'ANA1111111')
        self.assertEquals(caverphone('arneil'), 'ANA1111111')
        self.assertEquals(caverphone('arnel'), 'ANA1111111')
        self.assertEquals(caverphone('arnett'), 'ANT1111111')
        self.assertEquals(caverphone('arnold'), 'ANT1111111')
        self.assertEquals(caverphone('arnot'), 'ANT1111111')
        self.assertEquals(caverphone('arnott'), 'ANT1111111')
        self.assertEquals(caverphone('arnstrong'), 'ANSTRNK111')
        self.assertEquals(caverphone('arroll'), 'ARA1111111')
        self.assertEquals(caverphone('arrow'), 'ARA1111111')
        self.assertEquals(caverphone('arthur'), 'ATA1111111')
        self.assertEquals(caverphone('artlett'), 'ATLT111111')
        self.assertEquals(caverphone('arundale'), 'ARNTA11111')
        self.assertEquals(caverphone('arundel'), 'ARNTA11111')
        self.assertEquals(caverphone('ash'), 'AS11111111')
        self.assertEquals(caverphone('ashbey'), 'ASPA111111')
        self.assertEquals(caverphone('ashbury'), 'ASPRA11111')
        self.assertEquals(caverphone('ashby'), 'ASPA111111')
        self.assertEquals(caverphone('ashcroft'), 'ASKRFT1111')
        self.assertEquals(caverphone('ashenden'), 'ASNTN11111')
        self.assertEquals(caverphone('asher'), 'ASA1111111')
        self.assertEquals(caverphone('ashford'), 'ASFT111111')
        self.assertEquals(caverphone('ashley'), 'ASLA111111')
        self.assertEquals(caverphone('ashman'), 'ASMN111111')
        self.assertEquals(caverphone('ashmore'), 'ASMA111111')
        self.assertEquals(caverphone('ashron'), 'ASRN111111')
        self.assertEquals(caverphone('ashton'), 'ASTN111111')
        self.assertEquals(caverphone('ashwell'), 'ASWA111111')
        self.assertEquals(caverphone('ashworth'), 'ASWT111111')
        self.assertEquals(caverphone('askor'), 'ASKA111111')
        self.assertEquals(caverphone('aslin'), 'ASLN111111')
        self.assertEquals(caverphone('asquith'), 'ASKT111111')
        self.assertEquals(caverphone('aston'), 'ASTN111111')
        self.assertEquals(caverphone('astor'), 'ASTA111111')
        self.assertEquals(caverphone('atchison'), 'AKSN111111')
        self.assertEquals(caverphone('atherfold'), 'ATFT111111')
        self.assertEquals(caverphone('athfield'), 'ATFT111111')
        self.assertEquals(caverphone('athldeld'), 'ATTT111111')
        self.assertEquals(caverphone('atkin'), 'ATKN111111')
        self.assertEquals(caverphone('atkins'), 'ATKNS11111')
        self.assertEquals(caverphone('atkinson'), 'ATKNSN1111')
        self.assertEquals(caverphone('atmore'), 'ATMA111111')
        self.assertEquals(caverphone('atto'), 'ATA1111111')
        self.assertEquals(caverphone('attwell'), 'ATWA111111')
        self.assertEquals(caverphone('atwill'), 'ATWA111111')
        self.assertEquals(caverphone('audeison'), 'ATSN111111')
        self.assertEquals(caverphone('augus'), 'AKS1111111')
        self.assertEquals(caverphone('auld'), 'AT11111111')
        self.assertEquals(caverphone('austad'), 'ASTT111111')
        self.assertEquals(caverphone('austen'), 'ASTN111111')
        self.assertEquals(caverphone('austin'), 'ASTN111111')
        self.assertEquals(caverphone('austing'), 'ASTNK11111')
        self.assertEquals(caverphone('auty'), 'ATA1111111')
        self.assertEquals(caverphone('averill'), 'AFRA111111')
        self.assertEquals(caverphone('avery'), 'AFRA111111')
        self.assertEquals(caverphone('awdry'), 'ATRA111111')
        self.assertEquals(caverphone('ayers'), 'AS11111111')
        self.assertEquals(caverphone('aylwin'), 'AWN1111111')
        self.assertEquals(caverphone('ayres'), 'ARS1111111')
        self.assertEquals(caverphone('ayrey'), 'ARA1111111')
        self.assertEquals(caverphone('ayshford'), 'ASFT111111')
        self.assertEquals(caverphone('ayson'), 'ASN1111111')
        self.assertEquals(caverphone('ayto'), 'ATA1111111')
        self.assertEquals(caverphone('azzariti'), 'ASRTA11111')
        self.assertEquals(caverphone('baber'), 'PPA1111111')
        self.assertEquals(caverphone('bachop'), 'PKP1111111')
        self.assertEquals(caverphone('back'), 'PK11111111')
        self.assertEquals(caverphone('backholm'), 'PKM1111111')
        self.assertEquals(caverphone('bacon'), 'PKN1111111')
        self.assertEquals(caverphone('badcock'), 'PTKK111111')
        self.assertEquals(caverphone('badham'), 'PTM1111111')
        self.assertEquals(caverphone('badman'), 'PTMN111111')
        self.assertEquals(caverphone('baeyertz'), 'PTS1111111')
        self.assertEquals(caverphone('bagley'), 'PKLA111111')
        self.assertEquals(caverphone('bagnell'), 'PKNA111111')
        self.assertEquals(caverphone('bagrie'), 'PKRA111111')
        self.assertEquals(caverphone('bail'), 'PA11111111')
        self.assertEquals(caverphone('baildon'), 'PTN1111111')
        self.assertEquals(caverphone('bailer'), 'PLA1111111')
        self.assertEquals(caverphone('bailes'), 'PLS1111111')
        self.assertEquals(caverphone('bailey'), 'PLA1111111')
        self.assertEquals(caverphone('baillie'), 'PLA1111111')
        self.assertEquals(caverphone('bailoni'), 'PLNA111111')
        self.assertEquals(caverphone('bain'), 'PN11111111')
        self.assertEquals(caverphone('baines'), 'PNS1111111')
        self.assertEquals(caverphone('baird'), 'PT11111111')
        self.assertEquals(caverphone('baker'), 'PKA1111111')
        self.assertEquals(caverphone('balchin'), 'PKN1111111')
        self.assertEquals(caverphone('balding'), 'PTNK111111')
        self.assertEquals(caverphone('baldock'), 'PTK1111111')
        self.assertEquals(caverphone('baldwin'), 'PTWN111111')
        self.assertEquals(caverphone('baley'), 'PLA1111111')
        self.assertEquals(caverphone('baliantyne'), 'PLNTN11111')
        self.assertEquals(caverphone('ball'), 'PA11111111')
        self.assertEquals(caverphone('ballantyne'), 'PLNTN11111')
        self.assertEquals(caverphone('ballard'), 'PLT1111111')
        self.assertEquals(caverphone('ballentyne'), 'PLNTN11111')
        self.assertEquals(caverphone('ballintyne'), 'PLNTN11111')
        self.assertEquals(caverphone('balloch'), 'PLK1111111')
        self.assertEquals(caverphone('balneaves'), 'PNFS111111')
        self.assertEquals(caverphone('bamber'), 'PMPA111111')
        self.assertEquals(caverphone('bambery'), 'PMPRA11111')
        self.assertEquals(caverphone('bambury'), 'PMPRA11111')
        self.assertEquals(caverphone('bamfield'), 'PMFT111111')
        self.assertEquals(caverphone('bamford'), 'PMFT111111')
        self.assertEquals(caverphone('bamwell'), 'PMWA111111')
        self.assertEquals(caverphone('bandeen'), 'PNTN111111')
        self.assertEquals(caverphone('banfield'), 'PNFT111111')
        self.assertEquals(caverphone('banks'), 'PNKS111111')
        self.assertEquals(caverphone('bankshaw'), 'PNKSA11111')
        self.assertEquals(caverphone('banlow'), 'PNLA111111')
        self.assertEquals(caverphone('bannantyne'), 'PNNTN11111')
        self.assertEquals(caverphone('bannatyne'), 'PNTN111111')
        self.assertEquals(caverphone('bannerman'), 'PNMN111111')
        self.assertEquals(caverphone('banwell'), 'PNWA111111')
        self.assertEquals(caverphone('baoumgren'), 'PMKRN11111')
        self.assertEquals(caverphone('barbara'), 'PPRA111111')
        self.assertEquals(caverphone('barbeau'), 'PPA1111111')
        self.assertEquals(caverphone('barber'), 'PPA1111111')
        self.assertEquals(caverphone('barbour'), 'PPA1111111')
        self.assertEquals(caverphone('barclay'), 'PKLA111111')
        self.assertEquals(caverphone('bardsiey'), 'PTSA111111')
        self.assertEquals(caverphone('bardsley'), 'PTSLA11111')
        self.assertEquals(caverphone('bardwell'), 'PTWA111111')
        self.assertEquals(caverphone('bare'), 'PA11111111')
        self.assertEquals(caverphone('barfield'), 'PFT1111111')
        self.assertEquals(caverphone('barham'), 'PM11111111')
        self.assertEquals(caverphone('barker'), 'PKA1111111')
        self.assertEquals(caverphone('barkla'), 'PKLA111111')
        self.assertEquals(caverphone('barkman'), 'PKMN111111')
        self.assertEquals(caverphone('barling'), 'PLNK111111')
        self.assertEquals(caverphone('barlow'), 'PLA1111111')
        self.assertEquals(caverphone('barlthrop'), 'PTRP111111')
        self.assertEquals(caverphone('barltrop'), 'PTRP111111')
        self.assertEquals(caverphone('barnard'), 'PNT1111111')
        self.assertEquals(caverphone('barnes'), 'PNS1111111')
        self.assertEquals(caverphone('barnett'), 'PNT1111111')
        self.assertEquals(caverphone('barney'), 'PNA1111111')
        self.assertEquals(caverphone('barnfield'), 'PNFT111111')
        self.assertEquals(caverphone('barnford'), 'PNFT111111')
        self.assertEquals(caverphone('barns'), 'PNS1111111')
        self.assertEquals(caverphone('baron'), 'PRN1111111')
        self.assertEquals(caverphone('barr'), 'PA11111111')
        self.assertEquals(caverphone('barrass'), 'PRS1111111')
        self.assertEquals(caverphone('barratt'), 'PRT1111111')
        self.assertEquals(caverphone('barrell'), 'PRA1111111')
        self.assertEquals(caverphone('barret'), 'PRT1111111')
        self.assertEquals(caverphone('barrett'), 'PRT1111111')
        self.assertEquals(caverphone('barrie'), 'PRA1111111')
        self.assertEquals(caverphone('barrington'), 'PRNKTN1111')
        self.assertEquals(caverphone('barritt'), 'PRT1111111')
        self.assertEquals(caverphone('barron'), 'PRN1111111')
        self.assertEquals(caverphone('barrow'), 'PRA1111111')
        self.assertEquals(caverphone('barrowclou'), 'PRKLA11111')
        self.assertEquals(caverphone('barrowclough'), 'PRKLA11111')
        self.assertEquals(caverphone('barrowman'), 'PRMN111111')
        self.assertEquals(caverphone('barry'), 'PRA1111111')
        self.assertEquals(caverphone('barsdell'), 'PSTA111111')
        self.assertEquals(caverphone('barth'), 'PT11111111')
        self.assertEquals(caverphone('bartholome'), 'PTLM111111')
        self.assertEquals(caverphone('bartholomew'), 'PTLMA11111')
        self.assertEquals(caverphone('bartlett'), 'PTLT111111')
        self.assertEquals(caverphone('bartley'), 'PTLA111111')
        self.assertEquals(caverphone('barton-bro'), 'PTNPRA1111')
        self.assertEquals(caverphone('barton-browne'), 'PTNPRN1111')
        self.assertEquals(caverphone('barton'), 'PTN1111111')
        self.assertEquals(caverphone('bartram'), 'PTRM111111')
        self.assertEquals(caverphone('barwell'), 'PWA1111111')
        self.assertEquals(caverphone('barwick'), 'PWK1111111')
        self.assertEquals(caverphone('basan'), 'PSN1111111')
        self.assertEquals(caverphone('baskett'), 'PSKT111111')
        self.assertEquals(caverphone('bassett'), 'PST1111111')
        self.assertEquals(caverphone('bastings'), 'PSTNKS1111')
        self.assertEquals(caverphone('batcheior'), 'PKA1111111')
        self.assertEquals(caverphone('batchelor'), 'PKLA111111')
        self.assertEquals(caverphone('bate'), 'PT11111111')
        self.assertEquals(caverphone('bateman'), 'PTMN111111')
        self.assertEquals(caverphone('bates'), 'PTS1111111')
        self.assertEquals(caverphone('bath'), 'PT11111111')
        self.assertEquals(caverphone('batham'), 'PTM1111111')
        self.assertEquals(caverphone('bathgate'), 'PTKT111111')
        self.assertEquals(caverphone('bats'), 'PTS1111111')
        self.assertEquals(caverphone('batt'), 'PT11111111')
        self.assertEquals(caverphone('battersby'), 'PTSPA11111')
        self.assertEquals(caverphone('batty'), 'PTA1111111')
        self.assertEquals(caverphone('battye'), 'PTA1111111')
        self.assertEquals(caverphone('bauchop'), 'PKP1111111')
        self.assertEquals(caverphone('baughen'), 'PKN1111111')
        self.assertEquals(caverphone('bauld'), 'PT11111111')
        self.assertEquals(caverphone('baverstock'), 'PFSTK11111')
        self.assertEquals(caverphone('bawden'), 'PTN1111111')
        self.assertEquals(caverphone('baxter'), 'PKTA111111')
        self.assertEquals(caverphone('baylee'), 'PLA1111111')
        self.assertEquals(caverphone('bayley'), 'PLA1111111')
        self.assertEquals(caverphone('baylis'), 'PLS1111111')
        self.assertEquals(caverphone('bayliss'), 'PLS1111111')
        self.assertEquals(caverphone('bayly'), 'PLA1111111')
        self.assertEquals(caverphone('bayne'), 'PN11111111')
        self.assertEquals(caverphone('bazley'), 'PSLA111111')
        self.assertEquals(caverphone('beach'), 'PK11111111')
        self.assertEquals(caverphone('beadle'), 'PTA1111111')
        self.assertEquals(caverphone('beagle'), 'PKA1111111')
        self.assertEquals(caverphone('beal'), 'PA11111111')
        self.assertEquals(caverphone('beale'), 'PA11111111')
        self.assertEquals(caverphone('bean'), 'PN11111111')
        self.assertEquals(caverphone('bear'), 'PA11111111')
        self.assertEquals(caverphone('beardsley'), 'PTSLA11111')
        self.assertEquals(caverphone('beardsmore'), 'PTSMA11111')
        self.assertEquals(caverphone('beasley'), 'PSLA111111')
        self.assertEquals(caverphone('beath'), 'PT11111111')
        self.assertEquals(caverphone('beaton'), 'PTN1111111')
        self.assertEquals(caverphone('beatson'), 'PTSN111111')
        self.assertEquals(caverphone('beattie'), 'PTA1111111')
        self.assertEquals(caverphone('beatty'), 'PTA1111111')
        self.assertEquals(caverphone('beauchamp'), 'PKMP111111')
        self.assertEquals(caverphone('beaufort'), 'PFT1111111')
        self.assertEquals(caverphone('beaumont'), 'PMNT111111')
        self.assertEquals(caverphone('beautort'), 'PTT1111111')
        self.assertEquals(caverphone('beavars'), 'PFS1111111')
        self.assertEquals(caverphone('beaven'), 'PFN1111111')
        self.assertEquals(caverphone('beaver'), 'PFA1111111')
        self.assertEquals(caverphone('beavers'), 'PFS1111111')
        self.assertEquals(caverphone('beazley'), 'PSLA111111')
        self.assertEquals(caverphone('beck'), 'PK11111111')
        self.assertEquals(caverphone('beckersta'), 'PKSTA11111')
        self.assertEquals(caverphone('beckerstoff'), 'PKSTF11111')
        self.assertEquals(caverphone('beckett'), 'PKT1111111')
        self.assertEquals(caverphone('beckingham'), 'PKNM111111')
        self.assertEquals(caverphone('beckingsale'), 'PKNKSA1111')
        self.assertEquals(caverphone('bedford'), 'PTFT111111')
        self.assertEquals(caverphone('bee'), 'PA11111111')
        self.assertEquals(caverphone('beeby'), 'PPA1111111')
        self.assertEquals(caverphone('beecher'), 'PKA1111111')
        self.assertEquals(caverphone('beecot'), 'PKT1111111')
        self.assertEquals(caverphone('beecroft'), 'PKRFT11111')
        self.assertEquals(caverphone('beedie'), 'PTA1111111')
        self.assertEquals(caverphone('beekman'), 'PKMN111111')
        self.assertEquals(caverphone('beel'), 'PA11111111')
        self.assertEquals(caverphone('been'), 'PN11111111')
        self.assertEquals(caverphone('beer'), 'PA11111111')
        self.assertEquals(caverphone('beeson'), 'PSN1111111')
        self.assertEquals(caverphone('begbie'), 'PKPA111111')
        self.assertEquals(caverphone('begg'), 'PK11111111')
        self.assertEquals(caverphone('beigbson'), 'PKPSN11111')
        self.assertEquals(caverphone('beighton'), 'PTN1111111')
        self.assertEquals(caverphone('beil'), 'PA11111111')
        self.assertEquals(caverphone('beilby'), 'PPA1111111')
        self.assertEquals(caverphone('beirne'), 'PN11111111')
        self.assertEquals(caverphone('beissel'), 'PSA1111111')
        self.assertEquals(caverphone('belcher'), 'PKA1111111')
        self.assertEquals(caverphone('belford'), 'PFT1111111')
        self.assertEquals(caverphone('bell'), 'PA11111111')
        self.assertEquals(caverphone('bellamy'), 'PLMA111111')
        self.assertEquals(caverphone('bellaney'), 'PLNA111111')
        self.assertEquals(caverphone('bellet'), 'PLT1111111')
        self.assertEquals(caverphone('bellett'), 'PLT1111111')
        self.assertEquals(caverphone('bellve'), 'PF11111111')
        self.assertEquals(caverphone('belotti'), 'PLTA111111')
        self.assertEquals(caverphone('belsey'), 'PSA1111111')
        self.assertEquals(caverphone('belstead'), 'PSTT111111')
        self.assertEquals(caverphone('belve'), 'PF11111111')
        self.assertEquals(caverphone('belworthy'), 'PWTA111111')
        self.assertEquals(caverphone('bendall'), 'PNTA111111')
        self.assertEquals(caverphone('benfell'), 'PNFA111111')
        self.assertEquals(caverphone('benfield'), 'PNFT111111')
        self.assertEquals(caverphone('benham'), 'PNM1111111')
        self.assertEquals(caverphone('benjamin'), 'PNMN111111')
        self.assertEquals(caverphone('benn'), 'PN11111111')
        self.assertEquals(caverphone('bennell'), 'PNA1111111')
        self.assertEquals(caverphone('bennet'), 'PNT1111111')
        self.assertEquals(caverphone('bennett'), 'PNT1111111')
        self.assertEquals(caverphone('bennetto'), 'PNTA111111')
        self.assertEquals(caverphone('bennetts'), 'PNTS111111')
        self.assertEquals(caverphone('bennie'), 'PNA1111111')
        self.assertEquals(caverphone('bennison'), 'PNSN111111')
        self.assertEquals(caverphone('benson'), 'PNSN111111')
        self.assertEquals(caverphone('benston'), 'PNSTN11111')
        self.assertEquals(caverphone('benth'), 'PNT1111111')
        self.assertEquals(caverphone('bentley'), 'PNTLA11111')
        self.assertEquals(caverphone('benton'), 'PNTN111111')
        self.assertEquals(caverphone('benzie'), 'PNSA111111')
        self.assertEquals(caverphone('ber'), 'PA11111111')
        self.assertEquals(caverphone('berg'), 'PK11111111')
        self.assertEquals(caverphone('bergin'), 'PKN1111111')
        self.assertEquals(caverphone('berkeley'), 'PKLA111111')
        self.assertEquals(caverphone('berkinshaw'), 'PKNSA11111')
        self.assertEquals(caverphone('berland'), 'PLNT111111')
        self.assertEquals(caverphone('berman'), 'PMN1111111')
        self.assertEquals(caverphone('bern'), 'PN11111111')
        self.assertEquals(caverphone('bernard'), 'PNT1111111')
        self.assertEquals(caverphone('bernet'), 'PNT1111111')
        self.assertEquals(caverphone('berney'), 'PNA1111111')
        self.assertEquals(caverphone('bernie'), 'PNA1111111')
        self.assertEquals(caverphone('bernstein'), 'PNSTN11111')
        self.assertEquals(caverphone('berrett'), 'PRT1111111')
        self.assertEquals(caverphone('berry'), 'PRA1111111')
        self.assertEquals(caverphone('berryman'), 'PRMN111111')
        self.assertEquals(caverphone('berryrnan'), 'PRNN111111')
        self.assertEquals(caverphone('bertenshaw'), 'PTNSA11111')
        self.assertEquals(caverphone('berti'), 'PTA1111111')
        self.assertEquals(caverphone('berwick'), 'PWK1111111')
        self.assertEquals(caverphone('besley'), 'PSLA111111')
        self.assertEquals(caverphone('best'), 'PST1111111')
        self.assertEquals(caverphone('bestic'), 'PSTK111111')
        self.assertEquals(caverphone('bethune'), 'PTN1111111')
        self.assertEquals(caverphone('bettle'), 'PTA1111111')
        self.assertEquals(caverphone('bettridge'), 'PTRK111111')
        self.assertEquals(caverphone('betts'), 'PTS1111111')
        self.assertEquals(caverphone('betty'), 'PTA1111111')
        self.assertEquals(caverphone('beuth'), 'PT11111111')
        self.assertEquals(caverphone('bevan'), 'PFN1111111')
        self.assertEquals(caverphone('bevars'), 'PFS1111111')
        self.assertEquals(caverphone('beven'), 'PFN1111111')
        self.assertEquals(caverphone('beveridge'), 'PFRK111111')
        self.assertEquals(caverphone('bevin'), 'PFN1111111')
        self.assertEquals(caverphone('bevis'), 'PFS1111111')
        self.assertEquals(caverphone('bewley'), 'PLA1111111')
        self.assertEquals(caverphone('bews'), 'PS11111111')
        self.assertEquals(caverphone('bewsher'), 'PSA1111111')
        self.assertEquals(caverphone('beyer'), 'PA11111111')
        self.assertEquals(caverphone('bezar'), 'PSA1111111')
        self.assertEquals(caverphone('bezett'), 'PST1111111')
        self.assertEquals(caverphone('bggs'), 'PKS1111111')
        self.assertEquals(caverphone('biack'), 'PK11111111')
        self.assertEquals(caverphone('bichan'), 'PKN1111111')
        self.assertEquals(caverphone('bichard'), 'PKT1111111')
        self.assertEquals(caverphone('bickerdike'), 'PKTK111111')
        self.assertEquals(caverphone('bicknell'), 'PKNA111111')
        self.assertEquals(caverphone('bidgood'), 'PKT1111111')
        self.assertEquals(caverphone('bierstorf'), 'PSTF111111')
        self.assertEquals(caverphone('biggar'), 'PKA1111111')
        self.assertEquals(caverphone('biggins'), 'PKNS111111')
        self.assertEquals(caverphone('biggs'), 'PKS1111111')
        self.assertEquals(caverphone('billingham'), 'PLNM111111')
        self.assertEquals(caverphone('billington'), 'PLNKTN1111')
        self.assertEquals(caverphone('bills'), 'PS11111111')
        self.assertEquals(caverphone('bilson'), 'PSN1111111')
        self.assertEquals(caverphone('bingham'), 'PNM1111111')
        self.assertEquals(caverphone('binney'), 'PNA1111111')
        self.assertEquals(caverphone('binnie'), 'PNA1111111')
        self.assertEquals(caverphone('binsted'), 'PNSTT11111')
        self.assertEquals(caverphone('bioss'), 'PS11111111')
        self.assertEquals(caverphone('birch'), 'PK11111111')
        self.assertEquals(caverphone('birchall'), 'PKA1111111')
        self.assertEquals(caverphone('birchwood'), 'PKWT111111')
        self.assertEquals(caverphone('bird'), 'PT11111111')
        self.assertEquals(caverphone('birkenshaw'), 'PKNSA11111')
        self.assertEquals(caverphone('birkett'), 'PKT1111111')
        self.assertEquals(caverphone('birkner'), 'PKNA111111')
        self.assertEquals(caverphone('birnie'), 'PNA1111111')
        self.assertEquals(caverphone('birrell'), 'PRA1111111')
        self.assertEquals(caverphone('birse'), 'PS11111111')
        self.assertEquals(caverphone('birss'), 'PS11111111')
        self.assertEquals(caverphone('birt'), 'PT11111111')
        self.assertEquals(caverphone('birtles'), 'PTLS111111')
        self.assertEquals(caverphone('bishop'), 'PSP1111111')
        self.assertEquals(caverphone('bisset'), 'PST1111111')
        self.assertEquals(caverphone('bissett'), 'PST1111111')
        self.assertEquals(caverphone('bissland'), 'PSLNT11111')
        self.assertEquals(caverphone('black'), 'PLK1111111')
        self.assertEquals(caverphone('blackbrn'), 'PLKPN11111')
        self.assertEquals(caverphone('blackburn'), 'PLKPN11111')
        self.assertEquals(caverphone('blacke'), 'PLK1111111')
        self.assertEquals(caverphone('blackford'), 'PLKFT11111')
        self.assertEquals(caverphone('blackie'), 'PLKA111111')
        self.assertEquals(caverphone('blackledge'), 'PLKLK11111')
        self.assertEquals(caverphone('blackley'), 'PLKLA11111')
        self.assertEquals(caverphone('blacklock'), 'PLKLK11111')
        self.assertEquals(caverphone('blacklow'), 'PLKLA11111')
        self.assertEquals(caverphone('blackmore'), 'PLKMA11111')
        self.assertEquals(caverphone('blackock'), 'PLKK111111')
        self.assertEquals(caverphone('blackwell'), 'PLKWA11111')
        self.assertEquals(caverphone('blackwood'), 'PLKWT11111')
        self.assertEquals(caverphone('blagdon'), 'PLKTN11111')
        self.assertEquals(caverphone('blaikie'), 'PLKA111111')
        self.assertEquals(caverphone('blair'), 'PLA1111111')
        self.assertEquals(caverphone('blake'), 'PLK1111111')
        self.assertEquals(caverphone('blakeley'), 'PLKLA11111')
        self.assertEquals(caverphone('blakely'), 'PLKLA11111')
        self.assertEquals(caverphone('blanc'), 'PLNK111111')
        self.assertEquals(caverphone('blanch'), 'PLNK111111')
        self.assertEquals(caverphone('blanchard'), 'PLNKT11111')
        self.assertEquals(caverphone('blanchfield'), 'PLNKFT1111')
        self.assertEquals(caverphone('bland'), 'PLNT111111')
        self.assertEquals(caverphone('blandford'), 'PLNTFT1111')
        self.assertEquals(caverphone('blaney'), 'PLNA111111')
        self.assertEquals(caverphone('blayden'), 'PLTN111111')
        self.assertEquals(caverphone('bleach'), 'PLK1111111')
        self.assertEquals(caverphone('blease'), 'PLS1111111')
        self.assertEquals(caverphone('blee'), 'PLA1111111')
        self.assertEquals(caverphone('blell'), 'PLA1111111')
        self.assertEquals(caverphone('blick'), 'PLK1111111')
        self.assertEquals(caverphone('blincoe'), 'PLNKA11111')
        self.assertEquals(caverphone('blines'), 'PLNS111111')
        self.assertEquals(caverphone('blomfield'), 'PLMFT11111')
        self.assertEquals(caverphone('bloomfield'), 'PLMFT11111')
        self.assertEquals(caverphone('bloss'), 'PLS1111111')
        self.assertEquals(caverphone('blott'), 'PLT1111111')
        self.assertEquals(caverphone('bloxham'), 'PLKM111111')
        self.assertEquals(caverphone('bloy'), 'PLA1111111')
        self.assertEquals(caverphone('blue'), 'PLA1111111')
        self.assertEquals(caverphone('bluett'), 'PLT1111111')
        self.assertEquals(caverphone('blunt'), 'PLNT111111')
        self.assertEquals(caverphone('blyth'), 'PLT1111111')
        self.assertEquals(caverphone('blythe'), 'PLT1111111')
        self.assertEquals(caverphone('bnker'), 'PNKA111111')
        self.assertEquals(caverphone('boag'), 'PK11111111')
        self.assertEquals(caverphone('boardman'), 'PTMN111111')
        self.assertEquals(caverphone('boatwood'), 'PTWT111111')
        self.assertEquals(caverphone('boaz'), 'PS11111111')
        self.assertEquals(caverphone('bobbett'), 'PPT1111111')
        self.assertEquals(caverphone('boberg'), 'PPK1111111')
        self.assertEquals(caverphone('bobsien'), 'PPSN111111')
        self.assertEquals(caverphone('boddy'), 'PTA1111111')
        self.assertEquals(caverphone('boddye'), 'PTA1111111')
        self.assertEquals(caverphone('bode'), 'PT11111111')
        self.assertEquals(caverphone('bodkin'), 'PTKN111111')
        self.assertEquals(caverphone('boecking'), 'PKNK111111')
        self.assertEquals(caverphone('boelke'), 'PK11111111')
        self.assertEquals(caverphone('bogue'), 'PKA1111111')
        self.assertEquals(caverphone('bohm'), 'PM11111111')
        self.assertEquals(caverphone('bohrsman'), 'PSMN111111')
        self.assertEquals(caverphone('boland'), 'PLNT111111')
        self.assertEquals(caverphone('bollard'), 'PLT1111111')
        self.assertEquals(caverphone('bollett'), 'PLT1111111')
        self.assertEquals(caverphone('bolsand'), 'PSNT111111')
        self.assertEquals(caverphone('bolstad'), 'PSTT111111')
        self.assertEquals(caverphone('bolt'), 'PT11111111')
        self.assertEquals(caverphone('bolting'), 'PTNK111111')
        self.assertEquals(caverphone('bolton'), 'PTN1111111')
        self.assertEquals(caverphone('bolwell'), 'PWA1111111')
        self.assertEquals(caverphone('bolwill'), 'PWA1111111')
        self.assertEquals(caverphone('bonar'), 'PNA1111111')
        self.assertEquals(caverphone('bonasich'), 'PNSK111111')
        self.assertEquals(caverphone('bond'), 'PNT1111111')
        self.assertEquals(caverphone('bone'), 'PN11111111')
        self.assertEquals(caverphone('boner'), 'PNA1111111')
        self.assertEquals(caverphone('bonetti'), 'PNTA111111')
        self.assertEquals(caverphone('bongard'), 'PNKT111111')
        self.assertEquals(caverphone('bonham'), 'PNM1111111')
        self.assertEquals(caverphone('boniface'), 'PNFK111111')
        self.assertEquals(caverphone('bonifant'), 'PNFNT11111')
        self.assertEquals(caverphone('bonney'), 'PNA1111111')
        self.assertEquals(caverphone('bonnie'), 'PNA1111111')
        self.assertEquals(caverphone('bonnin'), 'PNN1111111')
        self.assertEquals(caverphone('booker'), 'PKA1111111')
        self.assertEquals(caverphone('bool'), 'PA11111111')
        self.assertEquals(caverphone('booley'), 'PLA1111111')
        self.assertEquals(caverphone('boot'), 'PT11111111')
        self.assertEquals(caverphone('booten'), 'PTN1111111')
        self.assertEquals(caverphone('booth'), 'PT11111111')
        self.assertEquals(caverphone('boothroyd'), 'PTRT111111')
        self.assertEquals(caverphone('bootten'), 'PTN1111111')
        self.assertEquals(caverphone('boraman'), 'PRMN111111')
        self.assertEquals(caverphone('boreham'), 'PRM1111111')
        self.assertEquals(caverphone('borjeson'), 'PRSN111111')
        self.assertEquals(caverphone('borland'), 'PLNT111111')
        self.assertEquals(caverphone('borley'), 'PLA1111111')
        self.assertEquals(caverphone('borne'), 'PN11111111')
        self.assertEquals(caverphone('borrie'), 'PRA1111111')
        self.assertEquals(caverphone('borthwick'), 'PTWK111111')
        self.assertEquals(caverphone('borton'), 'PTN1111111')
        self.assertEquals(caverphone('borwick'), 'PWK1111111')
        self.assertEquals(caverphone('boswell'), 'PSWA111111')
        self.assertEquals(caverphone('bosworth'), 'PSWT111111')
        self.assertEquals(caverphone('bott'), 'PT11111111')
        self.assertEquals(caverphone('botting'), 'PTNK111111')
        self.assertEquals(caverphone('boucher'), 'PKA1111111')
        self.assertEquals(caverphone('bouchor'), 'PKA1111111')
        self.assertEquals(caverphone('boud'), 'PT11111111')
        self.assertEquals(caverphone('boulnois'), 'PNS1111111')
        self.assertEquals(caverphone('boult'), 'PT11111111')
        self.assertEquals(caverphone('boulter'), 'PTA1111111')
        self.assertEquals(caverphone('boulton'), 'PTN1111111')
        self.assertEquals(caverphone('bouquet'), 'PKT1111111')
        self.assertEquals(caverphone('bourke'), 'PK11111111')
        self.assertEquals(caverphone('bourne'), 'PN11111111')
        self.assertEquals(caverphone('boutcher'), 'PKA1111111')
        self.assertEquals(caverphone('bouterey'), 'PTRA111111')
        self.assertEquals(caverphone('bowdell'), 'PTA1111111')
        self.assertEquals(caverphone('bowden'), 'PTN1111111')
        self.assertEquals(caverphone('bowdler'), 'PTLA111111')
        self.assertEquals(caverphone('bowen'), 'PWN1111111')
        self.assertEquals(caverphone('bower'), 'PWA1111111')
        self.assertEquals(caverphone('bowers'), 'PWS1111111')
        self.assertEquals(caverphone('bowie'), 'PWA1111111')
        self.assertEquals(caverphone('bowker'), 'PKA1111111')
        self.assertEquals(caverphone('bowkett'), 'PKT1111111')
        self.assertEquals(caverphone('bowler'), 'PLA1111111')
        self.assertEquals(caverphone('bowles'), 'PLS1111111')
        self.assertEquals(caverphone('bowling'), 'PLNK111111')
        self.assertEquals(caverphone('bowls'), 'PS11111111')
        self.assertEquals(caverphone('bowman'), 'PMN1111111')
        self.assertEquals(caverphone('bowmar'), 'PMA1111111')
        self.assertEquals(caverphone('bowser'), 'PSA1111111')
        self.assertEquals(caverphone('boxall'), 'PKA1111111')
        self.assertEquals(caverphone('boyall'), 'PA11111111')
        self.assertEquals(caverphone('boyd'), 'PT11111111')
        self.assertEquals(caverphone('boyer'), 'PA11111111')
        self.assertEquals(caverphone('boyes'), 'PS11111111')
        self.assertEquals(caverphone('boyison'), 'PSN1111111')
        self.assertEquals(caverphone('boyland'), 'PLNT111111')
        self.assertEquals(caverphone('boyle'), 'PA11111111')
        self.assertEquals(caverphone('boylen'), 'PLN1111111')
        self.assertEquals(caverphone('boyles'), 'PLS1111111')
        self.assertEquals(caverphone('boys'), 'PS11111111')
        self.assertEquals(caverphone('brabant'), 'PRPNT11111')
        self.assertEquals(caverphone('brabyn'), 'PRPN111111')
        self.assertEquals(caverphone('bracegirdle'), 'PRSKTA1111')
        self.assertEquals(caverphone('brackenridge'), 'PRKNRK1111')
        self.assertEquals(caverphone('brackley'), 'PRKLA11111')
        self.assertEquals(caverphone('bracks'), 'PRKS111111')
        self.assertEquals(caverphone('braden'), 'PRTN111111')
        self.assertEquals(caverphone('bradford'), 'PRTFT11111')
        self.assertEquals(caverphone('brading'), 'PRTNK11111')
        self.assertEquals(caverphone('bradley'), 'PRTLA11111')
        self.assertEquals(caverphone('bradshaw'), 'PRTSA11111')
        self.assertEquals(caverphone('brady'), 'PRTA111111')
        self.assertEquals(caverphone('bragg'), 'PRK1111111')
        self.assertEquals(caverphone('braham'), 'PRM1111111')
        self.assertEquals(caverphone('braid'), 'PRT1111111')
        self.assertEquals(caverphone('braidwood'), 'PRTWT11111')
        self.assertEquals(caverphone('brail'), 'PRA1111111')
        self.assertEquals(caverphone('braimbridge'), 'PRMPRK1111')
        self.assertEquals(caverphone('brain'), 'PRN1111111')
        self.assertEquals(caverphone('braithiwaite'), 'PRTWT11111')
        self.assertEquals(caverphone('braithwaite'), 'PRTWT11111')
        self.assertEquals(caverphone('bramley'), 'PRMLA11111')
        self.assertEquals(caverphone('bramwell'), 'PRMWA11111')
        self.assertEquals(caverphone('brand'), 'PRNT111111')
        self.assertEquals(caverphone('brander'), 'PRNTA11111')
        self.assertEquals(caverphone('brandon'), 'PRNTN11111')
        self.assertEquals(caverphone('brands'), 'PRNTS11111')
        self.assertEquals(caverphone('brandt'), 'PRNT111111')
        self.assertEquals(caverphone('bransgrove'), 'PRNSKRF111')
        self.assertEquals(caverphone('branson'), 'PRNSN11111')
        self.assertEquals(caverphone('brass'), 'PRS1111111')
        self.assertEquals(caverphone('bratby'), 'PRTPA11111')
        self.assertEquals(caverphone('brathwaite'), 'PRTWT11111')
        self.assertEquals(caverphone('bray'), 'PRA1111111')
        self.assertEquals(caverphone('breach'), 'PRK1111111')
        self.assertEquals(caverphone('brebner'), 'PRPNA11111')
        self.assertEquals(caverphone('bree'), 'PRA1111111')
        self.assertEquals(caverphone('breen'), 'PRN1111111')
        self.assertEquals(caverphone('breese'), 'PRS1111111')
        self.assertEquals(caverphone('breeze'), 'PRS1111111')
        self.assertEquals(caverphone('bregmen'), 'PRKMN11111')
        self.assertEquals(caverphone('brehaut'), 'PRT1111111')
        self.assertEquals(caverphone('bremford'), 'PRMFT11111')
        self.assertEquals(caverphone('bremmer'), 'PRMA111111')
        self.assertEquals(caverphone('bremner'), 'PRMNA11111')
        self.assertEquals(caverphone('brennan'), 'PRNN111111')
        self.assertEquals(caverphone('brenssell'), 'PRNSA11111')
        self.assertEquals(caverphone('brent'), 'PRNT111111')
        self.assertEquals(caverphone('bresanello'), 'PRSNLA1111')
        self.assertEquals(caverphone('bresnahan'), 'PRSNN11111')
        self.assertEquals(caverphone('bretherton'), 'PRTTN11111')
        self.assertEquals(caverphone('brett'), 'PRT1111111')
        self.assertEquals(caverphone('brettell'), 'PRTA111111')
        self.assertEquals(caverphone('brew'), 'PRA1111111')
        self.assertEquals(caverphone('brewer'), 'PRWA111111')
        self.assertEquals(caverphone('brewster'), 'PRSTA11111')
        self.assertEquals(caverphone('brian'), 'PRN1111111')
        self.assertEquals(caverphone('briant'), 'PRNT111111')
        self.assertEquals(caverphone('briasco'), 'PRSKA11111')
        self.assertEquals(caverphone('brice'), 'PRK1111111')
        self.assertEquals(caverphone('brickell'), 'PRKA111111')
        self.assertEquals(caverphone('brickland'), 'PRKLNT1111')
        self.assertEquals(caverphone('briden'), 'PRTN111111')
        self.assertEquals(caverphone('bridge'), 'PRK1111111')
        self.assertEquals(caverphone('bridgeman'), 'PRKMN11111')
        self.assertEquals(caverphone('bridger'), 'PRKA111111')
        self.assertEquals(caverphone('bridges'), 'PRKS111111')
        self.assertEquals(caverphone('bridget'), 'PRKT111111')
        self.assertEquals(caverphone('bridgman'), 'PRKMN11111')
        self.assertEquals(caverphone('brien'), 'PRN1111111')
        self.assertEquals(caverphone('brierley'), 'PRLA111111')
        self.assertEquals(caverphone('briggs'), 'PRKS111111')
        self.assertEquals(caverphone('bright'), 'PRT1111111')
        self.assertEquals(caverphone('brighting'), 'PRTNK11111')
        self.assertEquals(caverphone('brightling'), 'PRTLNK1111')
        self.assertEquals(caverphone('brightmore'), 'PRTMA11111')
        self.assertEquals(caverphone('brightwell'), 'PRTWA11111')
        self.assertEquals(caverphone('briley'), 'PRLA111111')
        self.assertEquals(caverphone('brill'), 'PRA1111111')
        self.assertEquals(caverphone('bringans'), 'PRNKNS1111')
        self.assertEquals(caverphone('bringarts'), 'PRNKTS1111')
        self.assertEquals(caverphone('brinkworth'), 'PRNKWT1111')
        self.assertEquals(caverphone('brinn'), 'PRN1111111')
        self.assertEquals(caverphone('brinsdon'), 'PRNSTN1111')
        self.assertEquals(caverphone('brinsley'), 'PRNSLA1111')
        self.assertEquals(caverphone('brisbane'), 'PRSPN11111')
        self.assertEquals(caverphone('briscoe'), 'PRSKA11111')
        self.assertEquals(caverphone('brisley'), 'PRSLA11111')
        self.assertEquals(caverphone('briston'), 'PRSTN11111')
        self.assertEquals(caverphone('bristow'), 'PRSTA11111')
        self.assertEquals(caverphone('briton'), 'PRTN111111')
        self.assertEquals(caverphone('britten'), 'PRTN111111')
        self.assertEquals(caverphone('brittenden'), 'PRTNTN1111')
        self.assertEquals(caverphone('britton'), 'PRTN111111')
        self.assertEquals(caverphone('brixton'), 'PRKTN11111')
        self.assertEquals(caverphone('broad'), 'PRT1111111')
        self.assertEquals(caverphone('broadbent'), 'PRTPNT1111')
        self.assertEquals(caverphone('broadfoot'), 'PRTFT11111')
        self.assertEquals(caverphone('broadhead'), 'PRTT111111')
        self.assertEquals(caverphone('broadley'), 'PRTLA11111')
        self.assertEquals(caverphone('brock'), 'PRK1111111')
        self.assertEquals(caverphone('brocket'), 'PRKT111111')
        self.assertEquals(caverphone('brockie'), 'PRKA111111')
        self.assertEquals(caverphone('brocklebank'), 'PRKLPNK111')
        self.assertEquals(caverphone('brocklehurst'), 'PRKLST1111')
        self.assertEquals(caverphone('broderick'), 'PRTRK11111')
        self.assertEquals(caverphone('brodie'), 'PRTA111111')
        self.assertEquals(caverphone('brodrick'), 'PRTRK11111')
        self.assertEquals(caverphone('broenaham'), 'PRNM111111')
        self.assertEquals(caverphone('bromley'), 'PRMLA11111')
        self.assertEquals(caverphone('brook'), 'PRK1111111')
        self.assertEquals(caverphone('brooke'), 'PRK1111111')
        self.assertEquals(caverphone('brooker'), 'PRKA111111')
        self.assertEquals(caverphone('brookes'), 'PRKS111111')
        self.assertEquals(caverphone('brooket'), 'PRKT111111')
        self.assertEquals(caverphone('brooklehurst'), 'PRKLST1111')
        self.assertEquals(caverphone('brooks'), 'PRKS111111')
        self.assertEquals(caverphone('brool'), 'PRA1111111')
        self.assertEquals(caverphone('broolcs'), 'PRKS111111')
        self.assertEquals(caverphone('broom'), 'PRM1111111')
        self.assertEquals(caverphone('broome'), 'PRM1111111')
        self.assertEquals(caverphone('broomfield'), 'PRMFT11111')
        self.assertEquals(caverphone('broomhall'), 'PRMA111111')
        self.assertEquals(caverphone('brosnahan'), 'PRSNN11111')
        self.assertEquals(caverphone('brosnan'), 'PRSNN11111')
        self.assertEquals(caverphone('brotherhoo'), 'PRTA111111')
        self.assertEquals(caverphone('brotherhood'), 'PRTT111111')
        self.assertEquals(caverphone('brotherston'), 'PRTSTN1111')
        self.assertEquals(caverphone('brotherton'), 'PRTTN11111')
        self.assertEquals(caverphone('brough'), 'PRA1111111')
        self.assertEquals(caverphone('broughton'), 'PRTN111111')
        self.assertEquals(caverphone('browett'), 'PRWT111111')
        self.assertEquals(caverphone('brown-durie'), 'PRNTRA1111')
        self.assertEquals(caverphone('brown-rennie'), 'PRNRNA1111')
        self.assertEquals(caverphone('brown'), 'PRN1111111')
        self.assertEquals(caverphone('browne'), 'PRN1111111')
        self.assertEquals(caverphone('brownell'), 'PRNA111111')
        self.assertEquals(caverphone('brownie'), 'PRNA111111')
        self.assertEquals(caverphone('browning'), 'PRNNK11111')
        self.assertEquals(caverphone('brownlie'), 'PRNLA11111')
        self.assertEquals(caverphone('bruce'), 'PRK1111111')
        self.assertEquals(caverphone('bruco'), 'PRKA111111')
        self.assertEquals(caverphone('brugh'), 'PRA1111111')
        self.assertEquals(caverphone('bruhns'), 'PRNS111111')
        self.assertEquals(caverphone('brundell'), 'PRNTA11111')
        self.assertEquals(caverphone('bruno'), 'PRNA111111')
        self.assertEquals(caverphone('brunton'), 'PRNTN11111')
        self.assertEquals(caverphone('bruten'), 'PRTN111111')
        self.assertEquals(caverphone('bruton'), 'PRTN111111')
        self.assertEquals(caverphone('bryan'), 'PRN1111111')
        self.assertEquals(caverphone('bryant'), 'PRNT111111')
        self.assertEquals(caverphone('bryce'), 'PRK1111111')
        self.assertEquals(caverphone('bryden'), 'PRTN111111')
        self.assertEquals(caverphone('brydone'), 'PRTN111111')
        self.assertEquals(caverphone('bryson'), 'PRSN111111')
        self.assertEquals(caverphone('btrns'), 'PTNS111111')
        self.assertEquals(caverphone('buchan'), 'PKN1111111')
        self.assertEquals(caverphone('buchanan'), 'PKNN111111')
        self.assertEquals(caverphone('buck'), 'PK11111111')
        self.assertEquals(caverphone('buckingham'), 'PKNM111111')
        self.assertEquals(caverphone('buckland'), 'PKLNT11111')
        self.assertEquals(caverphone('buckley'), 'PKLA111111')
        self.assertEquals(caverphone('buddicom'), 'PTKM111111')
        self.assertEquals(caverphone('buddicomb'), 'PTKM111111')
        self.assertEquals(caverphone('buddicombe'), 'PTKM111111')
        self.assertEquals(caverphone('buddle'), 'PTA1111111')
        self.assertEquals(caverphone('budge'), 'PK11111111')
        self.assertEquals(caverphone('bugby'), 'PKPA111111')
        self.assertEquals(caverphone('bugden'), 'PKTN111111')
        self.assertEquals(caverphone('buist'), 'PST1111111')
        self.assertEquals(caverphone('bulfin'), 'PFN1111111')
        self.assertEquals(caverphone('bulger'), 'PKA1111111')
        self.assertEquals(caverphone('bull'), 'PA11111111')
        self.assertEquals(caverphone('bullars'), 'PLS1111111')
        self.assertEquals(caverphone('bullen'), 'PLN1111111')
        self.assertEquals(caverphone('bullett'), 'PLT1111111')
        self.assertEquals(caverphone('bullock'), 'PLK1111111')
        self.assertEquals(caverphone('bullot'), 'PLT1111111')
        self.assertEquals(caverphone('bullough'), 'PLA1111111')
        self.assertEquals(caverphone('bulmer'), 'PMA1111111')
        self.assertEquals(caverphone('bum'), 'PM11111111')
        self.assertEquals(caverphone('bums'), 'PMS1111111')
        self.assertEquals(caverphone('bunce'), 'PNK1111111')
        self.assertEquals(caverphone('bundo'), 'PNTA111111')
        self.assertEquals(caverphone('bungard'), 'PNKT111111')
        self.assertEquals(caverphone('bungardt'), 'PNKT111111')
        self.assertEquals(caverphone('bunting'), 'PNTNK11111')
        self.assertEquals(caverphone('burbery'), 'PPRA111111')
        self.assertEquals(caverphone('burbury'), 'PPRA111111')
        self.assertEquals(caverphone('burcoll'), 'PKA1111111')
        self.assertEquals(caverphone('burdekin'), 'PTKN111111')
        self.assertEquals(caverphone('burden'), 'PTN1111111')
        self.assertEquals(caverphone('burdett'), 'PTT1111111')
        self.assertEquals(caverphone('burdon'), 'PTN1111111')
        self.assertEquals(caverphone('burford'), 'PFT1111111')
        self.assertEquals(caverphone('burger'), 'PKA1111111')
        self.assertEquals(caverphone('burgess'), 'PKS1111111')
        self.assertEquals(caverphone('burk'), 'PK11111111')
        self.assertEquals(caverphone('burke'), 'PK11111111')
        self.assertEquals(caverphone('burkinshaw'), 'PKNSA11111')
        self.assertEquals(caverphone('burley'), 'PLA1111111')
        self.assertEquals(caverphone('burlinson'), 'PLNSN11111')
        self.assertEquals(caverphone('burn'), 'PN11111111')
        self.assertEquals(caverphone('burnard'), 'PNT1111111')
        self.assertEquals(caverphone('burnes'), 'PNS1111111')
        self.assertEquals(caverphone('burnett'), 'PNT1111111')
        self.assertEquals(caverphone('burns'), 'PNS1111111')
        self.assertEquals(caverphone('burnside'), 'PNST111111')
        self.assertEquals(caverphone('burrell'), 'PRA1111111')
        self.assertEquals(caverphone('burridge'), 'PRK1111111')
        self.assertEquals(caverphone('burrow'), 'PRA1111111')
        self.assertEquals(caverphone('burrowes'), 'PRWS111111')
        self.assertEquals(caverphone('burrows'), 'PRS1111111')
        self.assertEquals(caverphone('burson'), 'PSN1111111')
        self.assertEquals(caverphone('burt'), 'PT11111111')
        self.assertEquals(caverphone('burton'), 'PTN1111111')
        self.assertEquals(caverphone('busbridge'), 'PSPRK11111')
        self.assertEquals(caverphone('busby'), 'PSPA111111')
        self.assertEquals(caverphone('bush'), 'PS11111111')
        self.assertEquals(caverphone('bushell'), 'PSA1111111')
        self.assertEquals(caverphone('buss'), 'PS11111111')
        self.assertEquals(caverphone('busst'), 'PST1111111')
        self.assertEquals(caverphone('bustin'), 'PSTN111111')
        self.assertEquals(caverphone('butchart'), 'PKT1111111')
        self.assertEquals(caverphone('butcher'), 'PKA1111111')
        self.assertEquals(caverphone('butel'), 'PTA1111111')
        self.assertEquals(caverphone('butler'), 'PTLA111111')
        self.assertEquals(caverphone('butlin'), 'PTLN111111')
        self.assertEquals(caverphone('butt'), 'PT11111111')
        self.assertEquals(caverphone('butterfield'), 'PTFT111111')
        self.assertEquals(caverphone('buttermore'), 'PTMA111111')
        self.assertEquals(caverphone('butterworth'), 'PTWT111111')
        self.assertEquals(caverphone('buttimore'), 'PTMA111111')
        self.assertEquals(caverphone('button'), 'PTN1111111')
        self.assertEquals(caverphone('butts'), 'PTS1111111')
        self.assertEquals(caverphone('buxton'), 'PKTN111111')
        self.assertEquals(caverphone('buzzard'), 'PST1111111')
        self.assertEquals(caverphone('bvrne'), 'PFN1111111')
        self.assertEquals(caverphone('byfield'), 'PFT1111111')
        self.assertEquals(caverphone('byford'), 'PFT1111111')
        self.assertEquals(caverphone('byrne'), 'PN11111111')
        self.assertEquals(caverphone('byrnes'), 'PNS1111111')
        self.assertEquals(caverphone('byrno'), 'PNA1111111')
        self.assertEquals(caverphone('cabena'), 'KPNA111111')
        self.assertEquals(caverphone('cabral'), 'KPRA111111')
        self.assertEquals(caverphone('caddie'), 'KTA1111111')
        self.assertEquals(caverphone('cadigan'), 'KTKN111111')
        self.assertEquals(caverphone('cadogan'), 'KTKN111111')
        self.assertEquals(caverphone('caerwood'), 'KWT1111111')
        self.assertEquals(caverphone('caffin'), 'KFN1111111')
        self.assertEquals(caverphone('cagney'), 'KKNA111111')
        self.assertEquals(caverphone('cahill'), 'KA11111111')
        self.assertEquals(caverphone('caidwell'), 'KTWA111111')
        self.assertEquals(caverphone('caigou'), 'KKA1111111')
        self.assertEquals(caverphone('cain'), 'KN11111111')
        self.assertEquals(caverphone('caird'), 'KT11111111')
        self.assertEquals(caverphone('cairney'), 'KNA1111111')
        self.assertEquals(caverphone('cairns'), 'KNS1111111')
        self.assertEquals(caverphone('caithness'), 'KTNS111111')
        self.assertEquals(caverphone('calcott'), 'KKT1111111')
        self.assertEquals(caverphone('calcutt'), 'KKT1111111')
        self.assertEquals(caverphone('calder'), 'KTA1111111')
        self.assertEquals(caverphone('calderwood'), 'KTWT111111')
        self.assertEquals(caverphone('caldow'), 'KTA1111111')
        self.assertEquals(caverphone('caldweil'), 'KTWA111111')
        self.assertEquals(caverphone('caldwell'), 'KTWA111111')
        self.assertEquals(caverphone('calex'), 'KLK1111111')
        self.assertEquals(caverphone('caley'), 'KLA1111111')
        self.assertEquals(caverphone('callaghan'), 'KLKN111111')
        self.assertEquals(caverphone('callam'), 'KLM1111111')
        self.assertEquals(caverphone('callan'), 'KLN1111111')
        self.assertEquals(caverphone('callanan'), 'KLNN111111')
        self.assertEquals(caverphone('calland'), 'KLNT111111')
        self.assertEquals(caverphone('callander'), 'KLNTA11111')
        self.assertEquals(caverphone('callaster'), 'KLSTA11111')
        self.assertEquals(caverphone('callaway'), 'KLWA111111')
        self.assertEquals(caverphone('callender'), 'KLNTA11111')
        self.assertEquals(caverphone('calley'), 'KLA1111111')
        self.assertEquals(caverphone('callighan'), 'KLKN111111')
        self.assertEquals(caverphone('callinder'), 'KLNTA11111')
        self.assertEquals(caverphone('callis'), 'KLS1111111')
        self.assertEquals(caverphone('callister'), 'KLSTA11111')
        self.assertEquals(caverphone('callon'), 'KLN1111111')
        self.assertEquals(caverphone('calverley'), 'KFLA111111')
        self.assertEquals(caverphone('calvert'), 'KFT1111111')
        self.assertEquals(caverphone('calvey'), 'KFA1111111')
        self.assertEquals(caverphone('cameron'), 'KMRN111111')
        self.assertEquals(caverphone('cammock'), 'KMK1111111')
        self.assertEquals(caverphone('campbell'), 'KMPA111111')
        self.assertEquals(caverphone('campion'), 'KMPN111111')
        self.assertEquals(caverphone('camplell'), 'KMPLA11111')
        self.assertEquals(caverphone('can1eron'), 'KNRN111111')
        self.assertEquals(caverphone('canavan'), 'KNFN111111')
        self.assertEquals(caverphone('canning'), 'KNNK111111')
        self.assertEquals(caverphone('cannon'), 'KNN1111111')
        self.assertEquals(caverphone('cannons'), 'KNNS111111')
        self.assertEquals(caverphone('canpbell'), 'KNPA111111')
        self.assertEquals(caverphone('canter'), 'KNTA111111')
        self.assertEquals(caverphone('cantrell'), 'KNTRA11111')
        self.assertEquals(caverphone('cantwell'), 'KNTWA11111')
        self.assertEquals(caverphone('canty'), 'KNTA111111')
        self.assertEquals(caverphone('capitaneas'), 'KPTNS11111')
        self.assertEquals(caverphone('caple'), 'KPA1111111')
        self.assertEquals(caverphone('capstick'), 'KPSTK11111')
        self.assertEquals(caverphone('caraclus'), 'KRKLS11111')
        self.assertEquals(caverphone('caradus'), 'KRTS111111')
        self.assertEquals(caverphone('caravan'), 'KRFN111111')
        self.assertEquals(caverphone('carber'), 'KPA1111111')
        self.assertEquals(caverphone('carberry'), 'KPRA111111')
        self.assertEquals(caverphone('cardale'), 'KTA1111111')
        self.assertEquals(caverphone('carden'), 'KTN1111111')
        self.assertEquals(caverphone('carder'), 'KTA1111111')
        self.assertEquals(caverphone('cardno'), 'KTNA111111')
        self.assertEquals(caverphone('care'), 'KA11111111')
        self.assertEquals(caverphone('carey'), 'KRA1111111')
        self.assertEquals(caverphone('cargill'), 'KKA1111111')
        self.assertEquals(caverphone('carlene'), 'KLN1111111')
        self.assertEquals(caverphone('carley'), 'KLA1111111')
        self.assertEquals(caverphone('carlin'), 'KLN1111111')
        self.assertEquals(caverphone('carline'), 'KLN1111111')
        self.assertEquals(caverphone('carlson'), 'KSN1111111')
        self.assertEquals(caverphone('carlyle'), 'KLA1111111')
        self.assertEquals(caverphone('carmalt'), 'KMT1111111')
        self.assertEquals(caverphone('carman'), 'KMN1111111')
        self.assertEquals(caverphone('carmichael'), 'KMKA111111')
        self.assertEquals(caverphone('carmody'), 'KMTA111111')
        self.assertEquals(caverphone('carnahan'), 'KNN1111111')
        self.assertEquals(caverphone('carnegie'), 'KNKA111111')
        self.assertEquals(caverphone('carney'), 'KNA1111111')
        self.assertEquals(caverphone('carnie'), 'KNA1111111')
        self.assertEquals(caverphone('carolin'), 'KRLN111111')
        self.assertEquals(caverphone('carpenter'), 'KPNTA11111')
        self.assertEquals(caverphone('carr'), 'KA11111111')
        self.assertEquals(caverphone('carrick'), 'KRK1111111')
        self.assertEquals(caverphone('carrigan'), 'KRKN111111')
        self.assertEquals(caverphone('carrington'), 'KRNKTN1111')
        self.assertEquals(caverphone('carrodus'), 'KRTS111111')
        self.assertEquals(caverphone('carroll'), 'KRA1111111')
        self.assertEquals(caverphone('carruther'), 'KRTA111111')
        self.assertEquals(caverphone('carruthers'), 'KRTS111111')
        self.assertEquals(caverphone('carrutlers'), 'KRTLS11111')
        self.assertEquals(caverphone('carside'), 'KST1111111')
        self.assertEquals(caverphone('carslaw'), 'KSLA111111')
        self.assertEquals(caverphone('carson'), 'KSN1111111')
        self.assertEquals(caverphone('carswe11'), 'KSA1111111')
        self.assertEquals(caverphone('carswell'), 'KSWA111111')
        self.assertEquals(caverphone('carter'), 'KTA1111111')
        self.assertEquals(caverphone('carton'), 'KTN1111111')
        self.assertEquals(caverphone('cartwright'), 'KTRT111111')
        self.assertEquals(caverphone('caruthers'), 'KRTS111111')
        self.assertEquals(caverphone('carvalho'), 'KFA1111111')
        self.assertEquals(caverphone('carvell'), 'KFA1111111')
        self.assertEquals(caverphone('carver'), 'KFA1111111')
        self.assertEquals(caverphone('carvosso'), 'KFSA111111')
        self.assertEquals(caverphone('case'), 'KS11111111')
        self.assertEquals(caverphone('caselberg'), 'KSPK111111')
        self.assertEquals(caverphone('caser'), 'KSA1111111')
        self.assertEquals(caverphone('casey'), 'KSA1111111')
        self.assertEquals(caverphone('cash'), 'KS11111111')
        self.assertEquals(caverphone('cashman'), 'KSMN111111')
        self.assertEquals(caverphone('caskie'), 'KSKA111111')
        self.assertEquals(caverphone('cass'), 'KS11111111')
        self.assertEquals(caverphone('cassells'), 'KSS1111111')
        self.assertEquals(caverphone('cassels'), 'KSS1111111')
        self.assertEquals(caverphone('casserley'), 'KSLA111111')
        self.assertEquals(caverphone('casserly'), 'KSLA111111')
        self.assertEquals(caverphone('cassidv'), 'KSTF111111')
        self.assertEquals(caverphone('cassidy'), 'KSTA111111')
        self.assertEquals(caverphone('cassitly'), 'KSTLA11111')
        self.assertEquals(caverphone('casson'), 'KSN1111111')
        self.assertEquals(caverphone('castelli'), 'KSTLA11111')
        self.assertEquals(caverphone('caster'), 'KSTA111111')
        self.assertEquals(caverphone('castle'), 'KSTA111111')
        self.assertEquals(caverphone('castlehow'), 'KSTLA11111')
        self.assertEquals(caverphone('catchpole'), 'KKPA111111')
        self.assertEquals(caverphone('cate'), 'KT11111111')
        self.assertEquals(caverphone('cater'), 'KTA1111111')
        self.assertEquals(caverphone('cathro'), 'KTRA111111')
        self.assertEquals(caverphone('catto'), 'KTA1111111')
        self.assertEquals(caverphone('caughey'), 'KKA1111111')
        self.assertEquals(caverphone('caulcutt'), 'KKT1111111')
        self.assertEquals(caverphone('caulton'), 'KTN1111111')
        self.assertEquals(caverphone('caunter'), 'KNTA111111')
        self.assertEquals(caverphone('cavanagh'), 'KFNA111111')
        self.assertEquals(caverphone('cave'), 'KF11111111')
        self.assertEquals(caverphone('cavell'), 'KFA1111111')
        self.assertEquals(caverphone('cawley'), 'KLA1111111')
        self.assertEquals(caverphone('cawston'), 'KSTN111111')
        self.assertEquals(caverphone('cawthorn'), 'KTN1111111')
        self.assertEquals(caverphone('cayford'), 'KFT1111111')
        self.assertEquals(caverphone('caygill'), 'KKA1111111')
        self.assertEquals(caverphone('cayzer'), 'KSA1111111')
        self.assertEquals(caverphone('cessford'), 'SSFT111111')
        self.assertEquals(caverphone('chadwick'), 'KTWK111111')
        self.assertEquals(caverphone('challis'), 'KLS1111111')
        self.assertEquals(caverphone('chalmer'), 'KMA1111111')
        self.assertEquals(caverphone('chalmers'), 'KMS1111111')
        self.assertEquals(caverphone('chamberlain'), 'KMPLN11111')
        self.assertEquals(caverphone('chambers'), 'KMPS111111')
        self.assertEquals(caverphone('chammen'), 'KMN1111111')
        self.assertEquals(caverphone('champion'), 'KMPN111111')
        self.assertEquals(caverphone('chanbers'), 'KNPS111111')
        self.assertEquals(caverphone('chander'), 'KNTA111111')
        self.assertEquals(caverphone('chandler'), 'KNTLA11111')
        self.assertEquals(caverphone('chaney'), 'KNA1111111')
        self.assertEquals(caverphone('chanldler'), 'KNTLA11111')
        self.assertEquals(caverphone('channon'), 'KNN1111111')
        self.assertEquals(caverphone('chantrill'), 'KNTRA11111')
        self.assertEquals(caverphone('chaplain'), 'KPLN111111')
        self.assertEquals(caverphone('chaplin'), 'KPLN111111')
        self.assertEquals(caverphone('chapman'), 'KPMN111111')
        self.assertEquals(caverphone('chappell'), 'KPA1111111')
        self.assertEquals(caverphone('charker'), 'KKA1111111')
        self.assertEquals(caverphone('charles'), 'KLS1111111')
        self.assertEquals(caverphone('charleston'), 'KLSTN11111')
        self.assertEquals(caverphone('charlsworth'), 'KSWT111111')
        self.assertEquals(caverphone('charlton'), 'KTN1111111')
        self.assertEquals(caverphone('charnley'), 'KNLA111111')
        self.assertEquals(caverphone('charters'), 'KTS1111111')
        self.assertEquals(caverphone('chase'), 'KS11111111')
        self.assertEquals(caverphone('chaston'), 'KSTN111111')
        self.assertEquals(caverphone('chatterton'), 'KTTN111111')
        self.assertEquals(caverphone('chave'), 'KF11111111')
        self.assertEquals(caverphone('chayman'), 'KMN1111111')
        self.assertEquals(caverphone('cheeseman'), 'KSMN111111')
        self.assertEquals(caverphone('cheesman'), 'KSMN111111')
        self.assertEquals(caverphone('chennells'), 'KNS1111111')
        self.assertEquals(caverphone('cherrie'), 'KRA1111111')
        self.assertEquals(caverphone('cherrv'), 'KF11111111')
        self.assertEquals(caverphone('cherry'), 'KRA1111111')
        self.assertEquals(caverphone('cheshire'), 'KSA1111111')
        self.assertEquals(caverphone('chesney'), 'KSNA111111')
        self.assertEquals(caverphone('chesterman'), 'KSTMN11111')
        self.assertEquals(caverphone('chetham'), 'KTM1111111')
        self.assertEquals(caverphone('chettiebur'), 'KTPA111111')
        self.assertEquals(caverphone('chettleburgh'), 'KTLPA11111')
        self.assertEquals(caverphone('chetwil'), 'KTWA111111')
        self.assertEquals(caverphone('chetwin'), 'KTWN111111')
        self.assertEquals(caverphone('cheyne'), 'KN11111111')
        self.assertEquals(caverphone('chickley'), 'KKLA111111')
        self.assertEquals(caverphone('chilcott'), 'KKT1111111')
        self.assertEquals(caverphone('child'), 'KT11111111')
        self.assertEquals(caverphone('childs'), 'KTS1111111')
        self.assertEquals(caverphone('chiles'), 'KLS1111111')
        self.assertEquals(caverphone('chimside'), 'KMST111111')
        self.assertEquals(caverphone('chin shin'), 'KNSN111111')
        self.assertEquals(caverphone('chin shing'), 'KNSNK11111')
        self.assertEquals(caverphone('chin'), 'KN11111111')
        self.assertEquals(caverphone('ching'), 'KNK1111111')
        self.assertEquals(caverphone('chirnside'), 'KNST111111')
        self.assertEquals(caverphone('chisholm'), 'KSM1111111')
        self.assertEquals(caverphone('chiswell'), 'KSWA111111')
        self.assertEquals(caverphone('chits'), 'KTS1111111')
        self.assertEquals(caverphone('chittock'), 'KTK1111111')
        self.assertEquals(caverphone('chitty'), 'KTA1111111')
        self.assertEquals(caverphone('chivers'), 'KFS1111111')
        self.assertEquals(caverphone('cholmondeley'), 'KMNTLA1111')
        self.assertEquals(caverphone('choo quee'), 'KKA1111111')
        self.assertEquals(caverphone('chooquee'), 'KKA1111111')
        self.assertEquals(caverphone('choules'), 'KLS1111111')
        self.assertEquals(caverphone('chrisp'), 'KRSP111111')
        self.assertEquals(caverphone('christens'), 'KRSTNS1111')
        self.assertEquals(caverphone('christensen'), 'KRSTNSN111')
        self.assertEquals(caverphone('christenson'), 'KRSTNSN111')
        self.assertEquals(caverphone('christeson'), 'KRSTSN1111')
        self.assertEquals(caverphone('christian'), 'KRSN111111')
        self.assertEquals(caverphone('christie'), 'KRSTA11111')
        self.assertEquals(caverphone('christophe'), 'KRSTF11111')
        self.assertEquals(caverphone('christopher'), 'KRSTFA1111')
        self.assertEquals(caverphone('chronican'), 'KRNKN11111')
        self.assertEquals(caverphone('chronichan'), 'KRNKN11111')
        self.assertEquals(caverphone('chrystall'), 'KRSTA11111')
        self.assertEquals(caverphone('chudley'), 'KTLA111111')
        self.assertEquals(caverphone('church'), 'KK11111111')
        self.assertEquals(caverphone('churchill'), 'KKA1111111')
        self.assertEquals(caverphone('churley'), 'KLA1111111')
        self.assertEquals(caverphone('ciark'), 'SK11111111')
        self.assertEquals(caverphone('ciarke'), 'SK11111111')
        self.assertEquals(caverphone('cieveland'), 'SFLNT11111')
        self.assertEquals(caverphone('ciiff'), 'SF11111111')
        self.assertEquals(caverphone('ciose'), 'SS11111111')
        self.assertEquals(caverphone('citfield'), 'STFT111111')
        self.assertEquals(caverphone('clack'), 'KLK1111111')
        self.assertEquals(caverphone('clancy'), 'KLNSA11111')
        self.assertEquals(caverphone('clapman'), 'KLPMN11111')
        self.assertEquals(caverphone('clapp'), 'KLP1111111')
        self.assertEquals(caverphone('clapperton'), 'KLPTN11111')
        self.assertEquals(caverphone('clapshaw'), 'KLPSA11111')
        self.assertEquals(caverphone('clare'), 'KLA1111111')
        self.assertEquals(caverphone('claridge'), 'KLRK111111')
        self.assertEquals(caverphone('clark'), 'KLK1111111')
        self.assertEquals(caverphone('clarke'), 'KLK1111111')
        self.assertEquals(caverphone('clarkson'), 'KLKSN11111')
        self.assertEquals(caverphone('clarson'), 'KLSN111111')
        self.assertEquals(caverphone('clatworthy'), 'KLTWTA1111')
        self.assertEquals(caverphone('claughly'), 'KLLA111111')
        self.assertEquals(caverphone('clay'), 'KLA1111111')
        self.assertEquals(caverphone('clayden'), 'KLTN111111')
        self.assertEquals(caverphone('clayforth'), 'KLFT111111')
        self.assertEquals(caverphone('clayton'), 'KLTN111111')
        self.assertEquals(caverphone('clearwater'), 'KLWTA11111')
        self.assertEquals(caverphone('cleary'), 'KLRA111111')
        self.assertEquals(caverphone('cleaver'), 'KLFA111111')
        self.assertEquals(caverphone('cleavin'), 'KLFN111111')
        self.assertEquals(caverphone('cleeland'), 'KLLNT11111')
        self.assertEquals(caverphone('clegg'), 'KLK1111111')
        self.assertEquals(caverphone('cleghorn'), 'KLKN111111')
        self.assertEquals(caverphone('cleland'), 'KLLNT11111')
        self.assertEquals(caverphone('clelland'), 'KLLNT11111')
        self.assertEquals(caverphone('clemenger'), 'KLMNKA1111')
        self.assertEquals(caverphone('clemens'), 'KLMNS11111')
        self.assertEquals(caverphone('clement'), 'KLMNT11111')
        self.assertEquals(caverphone('clements'), 'KLMNTS1111')
        self.assertEquals(caverphone('clementson'), 'KLMNTSN111')
        self.assertEquals(caverphone('clemmey'), 'KLMA111111')
        self.assertEquals(caverphone('clent'), 'KLNT111111')
        self.assertEquals(caverphone('clery'), 'KLRA111111')
        self.assertEquals(caverphone('cleveland'), 'KLFLNT1111')
        self.assertEquals(caverphone('clevelandt'), 'KLFLNT1111')
        self.assertEquals(caverphone('cleverley'), 'KLFLA11111')
        self.assertEquals(caverphone('cliff'), 'KLF1111111')
        self.assertEquals(caverphone('clifford'), 'KLFT111111')
        self.assertEquals(caverphone('clifton'), 'KLFTN11111')
        self.assertEquals(caverphone('clinch'), 'KLNK111111')
        self.assertEquals(caverphone('clinkard'), 'KLNKT11111')
        self.assertEquals(caverphone('clint'), 'KLNT111111')
        self.assertEquals(caverphone('clisby'), 'KLSPA11111')
        self.assertEquals(caverphone('clitheroe'), 'KLTRA11111')
        self.assertEquals(caverphone('clode'), 'KLT1111111')
        self.assertEquals(caverphone('cloharty'), 'KLTA111111')
        self.assertEquals(caverphone('close'), 'KLS1111111')
        self.assertEquals(caverphone('clothier'), 'KLTA111111')
        self.assertEquals(caverphone('clough'), 'KLA1111111')
        self.assertEquals(caverphone('cloughly'), 'KLLA111111')
        self.assertEquals(caverphone('clow'), 'KLA1111111')
        self.assertEquals(caverphone('clugston'), 'KLKSTN1111')
        self.assertEquals(caverphone('clulee'), 'KLLA111111')
        self.assertEquals(caverphone('clune'), 'KLN1111111')
        self.assertEquals(caverphone('clutterbuck'), 'KLTPK11111')
        self.assertEquals(caverphone('clydesdale'), 'KLTSTA1111')
        self.assertEquals(caverphone('clyma'), 'KLMA111111')
        self.assertEquals(caverphone('clymer'), 'KLMA111111')
        self.assertEquals(caverphone('coates'), 'KTS1111111')
        self.assertEquals(caverphone('coats'), 'KTS1111111')
        self.assertEquals(caverphone('coatsworth'), 'KTSWT11111')
        self.assertEquals(caverphone('cobb'), 'KP11111111')
        self.assertEquals(caverphone('coburn'), 'KPN1111111')
        self.assertEquals(caverphone('cochrane'), 'KKRN111111')
        self.assertEquals(caverphone('cock'), 'KK11111111')
        self.assertEquals(caverphone('cockburn'), 'KKPN111111')
        self.assertEquals(caverphone('cockerell'), 'KKRA111111')
        self.assertEquals(caverphone('cockerill'), 'KKRA111111')
        self.assertEquals(caverphone('cocking'), 'KKNK111111')
        self.assertEquals(caverphone('cockroft'), 'KKRFT11111')
        self.assertEquals(caverphone('cody'), 'KTA1111111')
        self.assertEquals(caverphone('coffey'), 'KFA1111111')
        self.assertEquals(caverphone('cogan'), 'KKN1111111')
        self.assertEquals(caverphone('cogger'), 'KKA1111111')
        self.assertEquals(caverphone('coghill'), 'KKA1111111')
        self.assertEquals(caverphone('coghlan'), 'KLN1111111')
        self.assertEquals(caverphone('cohen'), 'KN11111111')
        self.assertEquals(caverphone('coker'), 'KKA1111111')
        self.assertEquals(caverphone('colbert'), 'KPT1111111')
        self.assertEquals(caverphone('cole'), 'KA11111111')
        self.assertEquals(caverphone('coleman'), 'KLMN111111')
        self.assertEquals(caverphone('coley'), 'KLA1111111')
        self.assertEquals(caverphone('colgan'), 'KKN1111111')
        self.assertEquals(caverphone('coller'), 'KLA1111111')
        self.assertEquals(caverphone('collet'), 'KLT1111111')
        self.assertEquals(caverphone('collett'), 'KLT1111111')
        self.assertEquals(caverphone('collie'), 'KLA1111111')
        self.assertEquals(caverphone('collier'), 'KLA1111111')
        self.assertEquals(caverphone('collin'), 'KLN1111111')
        self.assertEquals(caverphone('colling'), 'KLNK111111')
        self.assertEquals(caverphone('collingwood'), 'KLNKWT1111')
        self.assertEquals(caverphone('collins'), 'KLNS111111')
        self.assertEquals(caverphone('collinson'), 'KLNSN11111')
        self.assertEquals(caverphone('collis'), 'KLS1111111')
        self.assertEquals(caverphone('colman'), 'KMN1111111')
        self.assertEquals(caverphone('colombus'), 'KLMPS11111')
        self.assertEquals(caverphone('colquhoun'), 'KKN1111111')
        self.assertEquals(caverphone('colrmack'), 'KMK1111111')
        self.assertEquals(caverphone('colson'), 'KSN1111111')
        self.assertEquals(caverphone('colston'), 'KSTN111111')
        self.assertEquals(caverphone('colton'), 'KTN1111111')
        self.assertEquals(caverphone('columb'), 'KLM1111111')
        self.assertEquals(caverphone('colville'), 'KFA1111111')
        self.assertEquals(caverphone('colvin'), 'KFN1111111')
        self.assertEquals(caverphone('colyer'), 'KLA1111111')
        self.assertEquals(caverphone('comber'), 'KMPA111111')
        self.assertEquals(caverphone('combie'), 'KMPA111111')
        self.assertEquals(caverphone('combs'), 'KMPS111111')
        self.assertEquals(caverphone('comer'), 'KMA1111111')
        self.assertEquals(caverphone('cometti'), 'KMTA111111')
        self.assertEquals(caverphone('comissiong'), 'KMSNK11111')
        self.assertEquals(caverphone('common'), 'KMN1111111')
        self.assertEquals(caverphone('comrie'), 'KMRA111111')
        self.assertEquals(caverphone('comyn'), 'KMN1111111')
        self.assertEquals(caverphone('concher'), 'KNKA111111')
        self.assertEquals(caverphone('conder'), 'KNTA111111')
        self.assertEquals(caverphone('condliffe'), 'KNTLF11111')
        self.assertEquals(caverphone('condon'), 'KNTN111111')
        self.assertEquals(caverphone('cone'), 'KN11111111')
        self.assertEquals(caverphone('coneys'), 'KNS1111111')
        self.assertEquals(caverphone('congalton'), 'KNKTN11111')
        self.assertEquals(caverphone('conheady'), 'KNTA111111')
        self.assertEquals(caverphone('conley'), 'KNLA111111')
        self.assertEquals(caverphone('conn'), 'KN11111111')
        self.assertEquals(caverphone('connally'), 'KNLA111111')
        self.assertEquals(caverphone('connel]y'), 'KNLA111111')
        self.assertEquals(caverphone('connell'), 'KNA1111111')
        self.assertEquals(caverphone('connelly'), 'KNLA111111')
        self.assertEquals(caverphone('connely'), 'KNLA111111')
        self.assertEquals(caverphone('conner'), 'KNA1111111')
        self.assertEquals(caverphone('conniff'), 'KNF1111111')
        self.assertEquals(caverphone('connolly'), 'KNLA111111')
        self.assertEquals(caverphone('connor'), 'KNA1111111')
        self.assertEquals(caverphone('connors'), 'KNS1111111')
        self.assertEquals(caverphone('conolly'), 'KNLA111111')
        self.assertEquals(caverphone('conradi'), 'KNRTA11111')
        self.assertEquals(caverphone('conroy'), 'KNRA111111')
        self.assertEquals(caverphone('consins'), 'KNSNS11111')
        self.assertEquals(caverphone('constable'), 'KNSTPA1111')
        self.assertEquals(caverphone('conway'), 'KNWA111111')
        self.assertEquals(caverphone('cook'), 'KK11111111')
        self.assertEquals(caverphone('cooke'), 'KK11111111')
        self.assertEquals(caverphone('coolay'), 'KLA1111111')
        self.assertEquals(caverphone('coombes'), 'KMPS111111')
        self.assertEquals(caverphone('coombs'), 'KMPS111111')
        self.assertEquals(caverphone('coomer'), 'KMA1111111')
        self.assertEquals(caverphone('cooney'), 'KNA1111111')
        self.assertEquals(caverphone('coop'), 'KP11111111')
        self.assertEquals(caverphone('cooper'), 'KPA1111111')
        self.assertEquals(caverphone('coorobs'), 'KRPS111111')
        self.assertEquals(caverphone('coory'), 'KRA1111111')
        self.assertEquals(caverphone('cop]ey'), 'KPA1111111')
        self.assertEquals(caverphone('cope'), 'KP11111111')
        self.assertEquals(caverphone('copland'), 'KPLNT11111')
        self.assertEquals(caverphone('copley'), 'KPLA111111')
        self.assertEquals(caverphone('coppell'), 'KPA1111111')
        self.assertEquals(caverphone('coppin'), 'KPN1111111')
        self.assertEquals(caverphone('corbett'), 'KPT1111111')
        self.assertEquals(caverphone('corcoran'), 'KKRN111111')
        self.assertEquals(caverphone('corder'), 'KTA1111111')
        self.assertEquals(caverphone('cordue'), 'KTA1111111')
        self.assertEquals(caverphone('coreoran'), 'KRRN111111')
        self.assertEquals(caverphone('corfield'), 'KFT1111111')
        self.assertEquals(caverphone('corke'), 'KK11111111')
        self.assertEquals(caverphone('corkin'), 'KKN1111111')
        self.assertEquals(caverphone('corkran'), 'KKRN111111')
        self.assertEquals(caverphone('corlett'), 'KLT1111111')
        self.assertEquals(caverphone('corley'), 'KLA1111111')
        self.assertEquals(caverphone('corliss'), 'KLS1111111')
        self.assertEquals(caverphone('cormack'), 'KMK1111111')
        self.assertEquals(caverphone('cornack'), 'KNK1111111')
        self.assertEquals(caverphone('cornaga'), 'KNKA111111')
        self.assertEquals(caverphone('cornelius'), 'KNLS111111')
        self.assertEquals(caverphone('cornell'), 'KNA1111111')
        self.assertEquals(caverphone('corner'), 'KNA1111111')
        self.assertEquals(caverphone('cornish'), 'KNS1111111')
        self.assertEquals(caverphone('cornwall'), 'KNWA111111')
        self.assertEquals(caverphone('cornwell'), 'KNWA111111')
        self.assertEquals(caverphone('corr'), 'KA11111111')
        self.assertEquals(caverphone('corrigall'), 'KRKA111111')
        self.assertEquals(caverphone('corrigan'), 'KRKN111111')
        self.assertEquals(caverphone('corsar'), 'KSA1111111')
        self.assertEquals(caverphone('corsion'), 'KSN1111111')
        self.assertEquals(caverphone('corston'), 'KSTN111111')
        self.assertEquals(caverphone('cortisson'), 'KTSN111111')
        self.assertEquals(caverphone('cortissos'), 'KTSS111111')
        self.assertEquals(caverphone('cosegrove'), 'KSKRF11111')
        self.assertEquals(caverphone('cosgriff'), 'KSKRF11111')
        self.assertEquals(caverphone('cosgrove'), 'KSKRF11111')
        self.assertEquals(caverphone('cossens'), 'KSNS111111')
        self.assertEquals(caverphone('cossum'), 'KSM1111111')
        self.assertEquals(caverphone('costall'), 'KSTA111111')
        self.assertEquals(caverphone('costello'), 'KSTLA11111')
        self.assertEquals(caverphone('coster'), 'KSTA111111')
        self.assertEquals(caverphone('costigan'), 'KSTKN11111')
        self.assertEquals(caverphone('costley'), 'KSTLA11111')
        self.assertEquals(caverphone('cother'), 'KTA1111111')
        self.assertEquals(caverphone('cotston'), 'KTSTN11111')
        self.assertEquals(caverphone('cottam'), 'KTM1111111')
        self.assertEquals(caverphone('cotter'), 'KTA1111111')
        self.assertEquals(caverphone('cotterill'), 'KTRA111111')
        self.assertEquals(caverphone('cottghlan'), 'KTLN111111')
        self.assertEquals(caverphone('cottle'), 'KTA1111111')
        self.assertEquals(caverphone('cotton'), 'KTN1111111')
        self.assertEquals(caverphone('cottrell'), 'KTRA111111')
        self.assertEquals(caverphone('couch'), 'KK11111111')
        self.assertEquals(caverphone('couchman'), 'KKMN111111')
        self.assertEquals(caverphone('coughlan'), 'KFLN111111')
        self.assertEquals(caverphone('coughtrey'), 'KFTRA11111')
        self.assertEquals(caverphone('couling'), 'KLNK111111')
        self.assertEquals(caverphone('coull'), 'KA11111111')
        self.assertEquals(caverphone('coulson'), 'KSN1111111')
        self.assertEquals(caverphone('coulston'), 'KSTN111111')
        self.assertEquals(caverphone('coulter'), 'KTA1111111')
        self.assertEquals(caverphone('counar'), 'KNA1111111')
        self.assertEquals(caverphone('counihan'), 'KNN1111111')
        self.assertEquals(caverphone('coupar'), 'KPA1111111')
        self.assertEquals(caverphone('couper'), 'KPA1111111')
        self.assertEquals(caverphone('coupland'), 'KPLNT11111')
        self.assertEquals(caverphone('course'), 'KS11111111')
        self.assertEquals(caverphone('court'), 'KT11111111')
        self.assertEquals(caverphone('courtayne'), 'KTN1111111')
        self.assertEquals(caverphone('courter'), 'KTA1111111')
        self.assertEquals(caverphone('courtis'), 'KTS1111111')
        self.assertEquals(caverphone('courtney'), 'KTNA111111')
        self.assertEquals(caverphone('cousins'), 'KSNS111111')
        self.assertEquals(caverphone('couston'), 'KSTN111111')
        self.assertEquals(caverphone('coutts'), 'KTS1111111')
        self.assertEquals(caverphone('coventry'), 'KFNTRA1111')
        self.assertEquals(caverphone('cowan'), 'KWN1111111')
        self.assertEquals(caverphone('coward'), 'KWT1111111')
        self.assertEquals(caverphone('cowen'), 'KWN1111111')
        self.assertEquals(caverphone('cowey'), 'KWA1111111')
        self.assertEquals(caverphone('cowie'), 'KWA1111111')
        self.assertEquals(caverphone('cowle'), 'KA11111111')
        self.assertEquals(caverphone('cowles'), 'KLS1111111')
        self.assertEquals(caverphone('cowper'), 'KPA1111111')
        self.assertEquals(caverphone('cox'), 'KK11111111')
        self.assertEquals(caverphone('coxhead'), 'KKT1111111')
        self.assertEquals(caverphone('coxhend'), 'KKNT111111')
        self.assertEquals(caverphone('coxon'), 'KKN1111111')
        self.assertEquals(caverphone('coy'), 'KA11111111')
        self.assertEquals(caverphone('crabb'), 'KRP1111111')
        self.assertEquals(caverphone('crabbe'), 'KRP1111111')
        self.assertEquals(caverphone('cragg'), 'KRK1111111')
        self.assertEquals(caverphone('craib'), 'KRP1111111')
        self.assertEquals(caverphone('craies'), 'KRS1111111')
        self.assertEquals(caverphone('craig'), 'KRK1111111')
        self.assertEquals(caverphone('craige'), 'KRK1111111')
        self.assertEquals(caverphone('craigie'), 'KRKA111111')
        self.assertEquals(caverphone('craik'), 'KRK1111111')
        self.assertEquals(caverphone('crammond'), 'KRMNT11111')
        self.assertEquals(caverphone('cramond'), 'KRMNT11111')
        self.assertEquals(caverphone('crampton'), 'KRMPTN1111')
        self.assertEquals(caverphone('cran'), 'KRN1111111')
        self.assertEquals(caverphone('crandle'), 'KRNTA11111')
        self.assertEquals(caverphone('crane'), 'KRN1111111')
        self.assertEquals(caverphone('cranefield'), 'KRNFT11111')
        self.assertEquals(caverphone('cranford'), 'KRNFT11111')
        self.assertEquals(caverphone('cranley'), 'KRNLA11111')
        self.assertEquals(caverphone('crannitch'), 'KRNK111111')
        self.assertEquals(caverphone('cranshaw'), 'KRNSA11111')
        self.assertEquals(caverphone('cranston'), 'KRNSTN1111')
        self.assertEquals(caverphone('craven-carden'), 'KRFNKTN111')
        self.assertEquals(caverphone('craven'), 'KRFN111111')
        self.assertEquals(caverphone('crawford'), 'KRFT111111')
        self.assertEquals(caverphone('crawfurd'), 'KRFT111111')
        self.assertEquals(caverphone('crawley'), 'KRLA111111')
        self.assertEquals(caverphone('crawshaw'), 'KRSA111111')
        self.assertEquals(caverphone('creagh'), 'KRA1111111')
        self.assertEquals(caverphone('credgington'), 'KRKNKTN111')
        self.assertEquals(caverphone('creed'), 'KRT1111111')
        self.assertEquals(caverphone('creeser'), 'KRSA111111')
        self.assertEquals(caverphone('creevey'), 'KRFA111111')
        self.assertEquals(caverphone('creighton'), 'KRTN111111')
        self.assertEquals(caverphone('cremmens'), 'KRMNS11111')
        self.assertEquals(caverphone('crerar'), 'KRRA111111')
        self.assertEquals(caverphone('cress'), 'KRS1111111')
        self.assertEquals(caverphone('crews'), 'KRS1111111')
        self.assertEquals(caverphone('crichton'), 'KRKTN11111')
        self.assertEquals(caverphone('crighton'), 'KRTN111111')
        self.assertEquals(caverphone('crilly'), 'KRLA111111')
        self.assertEquals(caverphone('crimp'), 'KRMP111111')
        self.assertEquals(caverphone('cripps'), 'KRPS111111')
        self.assertEquals(caverphone('crisp'), 'KRSP111111')
        self.assertEquals(caverphone('critchfie'), 'KRKFA11111')
        self.assertEquals(caverphone('critchfiel'), 'KRKFA11111')
        self.assertEquals(caverphone('critchfield'), 'KRKFT11111')
        self.assertEquals(caverphone('critchley'), 'KRKLA11111')
        self.assertEquals(caverphone('croad'), 'KRT1111111')
        self.assertEquals(caverphone('croal'), 'KRA1111111')
        self.assertEquals(caverphone('crocome'), 'KRKM111111')
        self.assertEquals(caverphone('croft'), 'KRFT111111')
        self.assertEquals(caverphone('croker'), 'KRKA111111')
        self.assertEquals(caverphone('crolly'), 'KRLA111111')
        self.assertEquals(caverphone('cromarty'), 'KRMTA11111')
        self.assertEquals(caverphone('crombie'), 'KRMPA11111')
        self.assertEquals(caverphone('crome'), 'KRM1111111')
        self.assertEquals(caverphone('crompton'), 'KRMPTN1111')
        self.assertEquals(caverphone('crone'), 'KRN1111111')
        self.assertEquals(caverphone('cronhie'), 'KRNA111111')
        self.assertEquals(caverphone('cronin'), 'KRNN111111')
        self.assertEquals(caverphone('crooke'), 'KRK1111111')
        self.assertEquals(caverphone('crookes'), 'KRKS111111')
        self.assertEquals(caverphone('crooks'), 'KRKS111111')
        self.assertEquals(caverphone('crookshanks'), 'KRKSNKS111')
        self.assertEquals(caverphone('croot'), 'KRT1111111')
        self.assertEquals(caverphone('cropley'), 'KRPLA11111')
        self.assertEquals(caverphone('cropp'), 'KRP1111111')
        self.assertEquals(caverphone('crosado'), 'KRSTA11111')
        self.assertEquals(caverphone('crosbie'), 'KRSPA11111')
        self.assertEquals(caverphone('crosby'), 'KRSPA11111')
        self.assertEquals(caverphone('crosland'), 'KRSLNT1111')
        self.assertEquals(caverphone('cross'), 'KRS1111111')
        self.assertEquals(caverphone('crossan-moffat'), 'KRSNMFT111')
        self.assertEquals(caverphone('crossan'), 'KRSN111111')
        self.assertEquals(caverphone('crossens'), 'KRSNS11111')
        self.assertEquals(caverphone('crossian'), 'KRSN111111')
        self.assertEquals(caverphone('crossley'), 'KRSLA11111')
        self.assertEquals(caverphone('crosswell'), 'KRSWA11111')
        self.assertEquals(caverphone('crossweller'), 'KRSWLA1111')
        self.assertEquals(caverphone('crostie'), 'KRSTA11111')
        self.assertEquals(caverphone('croswell'), 'KRSWA11111')
        self.assertEquals(caverphone('crouch'), 'KRK1111111')
        self.assertEquals(caverphone('crow'), 'KRA1111111')
        self.assertEquals(caverphone('crowan'), 'KRWN111111')
        self.assertEquals(caverphone('crowder'), 'KRTA111111')
        self.assertEquals(caverphone('crowe'), 'KRA1111111')
        self.assertEquals(caverphone('crowhurst'), 'KRWST11111')
        self.assertEquals(caverphone('crowley'), 'KRLA111111')
        self.assertEquals(caverphone('crowther'), 'KRTA111111')
        self.assertEquals(caverphone('croxford'), 'KRKFT11111')
        self.assertEquals(caverphone('croy'), 'KRA1111111')
        self.assertEquals(caverphone('crozier'), 'KRSA111111')
        self.assertEquals(caverphone('cruickshank'), 'KRKSNK1111')
        self.assertEquals(caverphone('cruikshank'), 'KRKSNK1111')
        self.assertEquals(caverphone('crum'), 'KRM1111111')
        self.assertEquals(caverphone('crump'), 'KRMP111111')
        self.assertEquals(caverphone('cruse'), 'KRS1111111')
        self.assertEquals(caverphone('crust'), 'KRST111111')
        self.assertEquals(caverphone('cubbins'), 'KPNS111111')
        self.assertEquals(caverphone('cuddihy'), 'KTA1111111')
        self.assertEquals(caverphone('cuff'), 'KF11111111')
        self.assertEquals(caverphone('culbert'), 'KPT1111111')
        self.assertEquals(caverphone('culhane'), 'KN11111111')
        self.assertEquals(caverphone('cull'), 'KA11111111')
        self.assertEquals(caverphone('cullen'), 'KLN1111111')
        self.assertEquals(caverphone('culling'), 'KLNK111111')
        self.assertEquals(caverphone('cullinger'), 'KLNKA11111')
        self.assertEquals(caverphone('culsey'), 'KSA1111111')
        self.assertEquals(caverphone('cumberbeac'), 'KMPPK11111')
        self.assertEquals(caverphone('cumberbeach'), 'KMPPK11111')
        self.assertEquals(caverphone('cuming'), 'KMNK111111')
        self.assertEquals(caverphone('cumins'), 'KMNS111111')
        self.assertEquals(caverphone('cumming'), 'KMNK111111')
        self.assertEquals(caverphone('cummings'), 'KMNKS11111')
        self.assertEquals(caverphone('cummins'), 'KMNS111111')
        self.assertEquals(caverphone('cummock'), 'KMK1111111')
        self.assertEquals(caverphone('cundall'), 'KNTA111111')
        self.assertEquals(caverphone('cunhingham'), 'KNNM111111')
        self.assertEquals(caverphone('cunliffe'), 'KNLF111111')
        self.assertEquals(caverphone('cunming'), 'KNMNK11111')
        self.assertEquals(caverphone('cunningham'), 'KNNM111111')
        self.assertEquals(caverphone('cunninghame'), 'KNNM111111')
        self.assertEquals(caverphone('cupid'), 'KPT1111111')
        self.assertEquals(caverphone('cupples'), 'KPLS111111')
        self.assertEquals(caverphone('curey'), 'KRA1111111')
        self.assertEquals(caverphone('curfie'), 'KFA1111111')
        self.assertEquals(caverphone('curie'), 'KRA1111111')
        self.assertEquals(caverphone('curle'), 'KA11111111')
        self.assertEquals(caverphone('curline'), 'KLN1111111')
        self.assertEquals(caverphone('curran'), 'KRN1111111')
        self.assertEquals(caverphone('curren'), 'KRN1111111')
        self.assertEquals(caverphone('currie'), 'KRA1111111')
        self.assertEquals(caverphone('curry'), 'KRA1111111')
        self.assertEquals(caverphone('cursey'), 'KSA1111111')
        self.assertEquals(caverphone('curtayne'), 'KTN1111111')
        self.assertEquals(caverphone('curties'), 'KTS1111111')
        self.assertEquals(caverphone('curtin'), 'KTN1111111')
        self.assertEquals(caverphone('curtis'), 'KTS1111111')
        self.assertEquals(caverphone('curye'), 'KRA1111111')
        self.assertEquals(caverphone('curzon-sig'), 'KSNSK11111')
        self.assertEquals(caverphone('curzon-siggers'), 'KSNSKS1111')
        self.assertEquals(caverphone('cusach'), 'KSK1111111')
        self.assertEquals(caverphone('cusack'), 'KSK1111111')
        self.assertEquals(caverphone('cushen'), 'KSN1111111')
        self.assertEquals(caverphone('cushman'), 'KSMN111111')
        self.assertEquals(caverphone('cushnan'), 'KSNN111111')
        self.assertEquals(caverphone('cushnie'), 'KSNA111111')
        self.assertEquals(caverphone('cutbush'), 'KTPS111111')
        self.assertEquals(caverphone('cuthbertson'), 'KTPTSN1111')
        self.assertEquals(caverphone('cuthterts'), 'KTTTS11111')
        self.assertEquals(caverphone('cutler'), 'KTLA111111')
        self.assertEquals(caverphone('cutriss'), 'KTRS111111')
        self.assertEquals(caverphone('cuttance'), 'KTNK111111')
        self.assertEquals(caverphone('cutten'), 'KTN1111111')
        self.assertEquals(caverphone('cutter'), 'KTA1111111')
        self.assertEquals(caverphone('cuttle'), 'KTA1111111')
        self.assertEquals(caverphone('cuttriss'), 'KTRS111111')
        self.assertEquals(caverphone('cutts'), 'KTS1111111')
        self.assertEquals(caverphone('cuzens'), 'KSNS111111')
        self.assertEquals(caverphone('cvitanovich'), 'KFTNFK1111')
        self.assertEquals(caverphone('d\'auvergne'), 'TFKN111111')
        self.assertEquals(caverphone('dabinett'), 'TPNT111111')
        self.assertEquals(caverphone('dacker'), 'TKA1111111')
        self.assertEquals(caverphone('dagg'), 'TK11111111')
        self.assertEquals(caverphone('dagger'), 'TKA1111111')
        self.assertEquals(caverphone('dagleish'), 'TKLS111111')
        self.assertEquals(caverphone('daglish'), 'TKLS111111')
        self.assertEquals(caverphone('dagnall'), 'TKNA111111')
        self.assertEquals(caverphone('dagnell'), 'TKNA111111')
        self.assertEquals(caverphone('dahren'), 'TRN1111111')
        self.assertEquals(caverphone('dakers'), 'TKS1111111')
        self.assertEquals(caverphone('dale'), 'TA11111111')
        self.assertEquals(caverphone('dales'), 'TLS1111111')
        self.assertEquals(caverphone('dalgar'), 'TKA1111111')
        self.assertEquals(caverphone('dalgarno'), 'TKNA111111')
        self.assertEquals(caverphone('dalgeish'), 'TKS1111111')
        self.assertEquals(caverphone('dalgleish'), 'TKLS111111')
        self.assertEquals(caverphone('dalgliesh'), 'TKLS111111')
        self.assertEquals(caverphone('dall'), 'TA11111111')
        self.assertEquals(caverphone('dallard'), 'TLT1111111')
        self.assertEquals(caverphone('dallas'), 'TLS1111111')
        self.assertEquals(caverphone('dallaston'), 'TLSTN11111')
        self.assertEquals(caverphone('dallen'), 'TLN1111111')
        self.assertEquals(caverphone('dalley'), 'TLA1111111')
        self.assertEquals(caverphone('dalrymple'), 'TRMPA11111')
        self.assertEquals(caverphone('dalton'), 'TTN1111111')
        self.assertEquals(caverphone('daly'), 'TLA1111111')
        self.assertEquals(caverphone('dalzell'), 'TSA1111111')
        self.assertEquals(caverphone('dalziel'), 'TSA1111111')
        self.assertEquals(caverphone('dandie'), 'TNTA111111')
        self.assertEquals(caverphone('daniel'), 'TNA1111111')
        self.assertEquals(caverphone('daniell'), 'TNA1111111')
        self.assertEquals(caverphone('daniels'), 'TNS1111111')
        self.assertEquals(caverphone('dann'), 'TN11111111')
        self.assertEquals(caverphone('danner'), 'TNA1111111')
        self.assertEquals(caverphone('danskin'), 'TNSKN11111')
        self.assertEquals(caverphone('darcy'), 'TSA1111111')
        self.assertEquals(caverphone('dark'), 'TK11111111')
        self.assertEquals(caverphone('darley'), 'TLA1111111')
        self.assertEquals(caverphone('darling'), 'TLNK111111')
        self.assertEquals(caverphone('darlison'), 'TLSN111111')
        self.assertEquals(caverphone('darracott'), 'TRKT111111')
        self.assertEquals(caverphone('darragh'), 'TRA1111111')
        self.assertEquals(caverphone('darroch'), 'TRK1111111')
        self.assertEquals(caverphone('dash'), 'TS11111111')
        self.assertEquals(caverphone('dashper'), 'TSPA111111')
        self.assertEquals(caverphone('dashwood'), 'TSWT111111')
        self.assertEquals(caverphone('dasler'), 'TSLA111111')
        self.assertEquals(caverphone('daubney'), 'TPNA111111')
        self.assertEquals(caverphone('daunt'), 'TNT1111111')
        self.assertEquals(caverphone('davany'), 'TFNA111111')
        self.assertEquals(caverphone('daveis'), 'TFS1111111')
        self.assertEquals(caverphone('davenport'), 'TFNPT11111')
        self.assertEquals(caverphone('davey'), 'TFA1111111')
        self.assertEquals(caverphone('david'), 'TFT1111111')
        self.assertEquals(caverphone('davidson'), 'TFTSN11111')
        self.assertEquals(caverphone('davie'), 'TFA1111111')
        self.assertEquals(caverphone('davies'), 'TFS1111111')
        self.assertEquals(caverphone('davis'), 'TFS1111111')
        self.assertEquals(caverphone('davison'), 'TFSN111111')
        self.assertEquals(caverphone('davy'), 'TFA1111111')
        self.assertEquals(caverphone('davys'), 'TFS1111111')
        self.assertEquals(caverphone('dawe'), 'TA11111111')
        self.assertEquals(caverphone('dawes'), 'TWS1111111')
        self.assertEquals(caverphone('dawkins'), 'TKNS111111')
        self.assertEquals(caverphone('dawsett'), 'TST1111111')
        self.assertEquals(caverphone('dawson'), 'TSN1111111')
        self.assertEquals(caverphone('day'), 'TA11111111')
        self.assertEquals(caverphone('daysh'), 'TS11111111')
        self.assertEquals(caverphone('de bazin'), 'TPSN111111')
        self.assertEquals(caverphone('de berry'), 'TPRA111111')
        self.assertEquals(caverphone('de boyett'), 'TPT1111111')
        self.assertEquals(caverphone('de carle'), 'TKA1111111')
        self.assertEquals(caverphone('de castro'), 'TKSTRA1111')
        self.assertEquals(caverphone('de clifford'), 'TKLFT11111')
        self.assertEquals(caverphone('de clive lowe'), 'TKLFLA1111')
        self.assertEquals(caverphone('de colmar'), 'TKMA111111')
        self.assertEquals(caverphone('de courcey'), 'TKSA111111')
        self.assertEquals(caverphone('de courcy'), 'TKSA111111')
        self.assertEquals(caverphone('de lacey'), 'TLSA111111')
        self.assertEquals(caverphone('de largey'), 'TLKA111111')
        self.assertEquals(caverphone('de lautour'), 'TLTA111111')
        self.assertEquals(caverphone('de malmanche'), 'TMMNK11111')
        self.assertEquals(caverphone('de ment'), 'TMNT111111')
        self.assertEquals(caverphone('de silva'), 'TSFA111111')
        self.assertEquals(caverphone('de spong'), 'TSPNK11111')
        self.assertEquals(caverphone('de st croix'), 'TSTKRK1111')
        self.assertEquals(caverphone('de st. croix'), 'TSTKRK1111')
        self.assertEquals(caverphone('de vere'), 'TFA1111111')
        self.assertEquals(caverphone('de-clive-low'), 'TKLFLA1111')
        self.assertEquals(caverphone('deaker'), 'TKA1111111')
        self.assertEquals(caverphone('deamy'), 'TMA1111111')
        self.assertEquals(caverphone('dean'), 'TN11111111')
        self.assertEquals(caverphone('deane'), 'TN11111111')
        self.assertEquals(caverphone('deans'), 'TNS1111111')
        self.assertEquals(caverphone('dear'), 'TA11111111')
        self.assertEquals(caverphone('dease'), 'TS11111111')
        self.assertEquals(caverphone('debenham'), 'TPNM111111')
        self.assertEquals(caverphone('deberry'), 'TPRA111111')
        self.assertEquals(caverphone('decourcy'), 'TKSA111111')
        self.assertEquals(caverphone('dee'), 'TA11111111')
        self.assertEquals(caverphone('deegan'), 'TKN1111111')
        self.assertEquals(caverphone('deehan'), 'TN11111111')
        self.assertEquals(caverphone('deem'), 'TM11111111')
        self.assertEquals(caverphone('deikle'), 'TKA1111111')
        self.assertEquals(caverphone('deiley'), 'TLA1111111')
        self.assertEquals(caverphone('deisher'), 'TSA1111111')
        self.assertEquals(caverphone('delahunty'), 'TLNTA11111')
        self.assertEquals(caverphone('delaney'), 'TLNA111111')
        self.assertEquals(caverphone('delany'), 'TLNA111111')
        self.assertEquals(caverphone('delargey'), 'TLKA111111')
        self.assertEquals(caverphone('delargy'), 'TLKA111111')
        self.assertEquals(caverphone('delbridge'), 'TPRK111111')
        self.assertEquals(caverphone('dell'), 'TA11111111')
        self.assertEquals(caverphone('dely'), 'TLA1111111')
        self.assertEquals(caverphone('dement'), 'TMNT111111')
        self.assertEquals(caverphone('demontalk'), 'TMNTK11111')
        self.assertEquals(caverphone('demouth'), 'TMT1111111')
        self.assertEquals(caverphone('dempsey'), 'TMPSA11111')
        self.assertEquals(caverphone('dempster'), 'TMPSTA1111')
        self.assertEquals(caverphone('dench'), 'TNK1111111')
        self.assertEquals(caverphone('dencker'), 'TNKA111111')
        self.assertEquals(caverphone('denfold'), 'TNFT111111')
        self.assertEquals(caverphone('denfolrd'), 'TNFT111111')
        self.assertEquals(caverphone('denford'), 'TNFT111111')
        self.assertEquals(caverphone('denham'), 'TNM1111111')
        self.assertEquals(caverphone('denhehy'), 'TNA1111111')
        self.assertEquals(caverphone('denholm'), 'TNM1111111')
        self.assertEquals(caverphone('denholme'), 'TNM1111111')
        self.assertEquals(caverphone('denne'), 'TN11111111')
        self.assertEquals(caverphone('dennehy'), 'TNA1111111')
        self.assertEquals(caverphone('dennis'), 'TNS1111111')
        self.assertEquals(caverphone('dennison'), 'TNSN111111')
        self.assertEquals(caverphone('denniston'), 'TNSTN11111')
        self.assertEquals(caverphone('denny'), 'TNA1111111')
        self.assertEquals(caverphone('densem'), 'TNSM111111')
        self.assertEquals(caverphone('dent'), 'TNT1111111')
        self.assertEquals(caverphone('dentith'), 'TNTT111111')
        self.assertEquals(caverphone('denton'), 'TNTN111111')
        self.assertEquals(caverphone('depellett'), 'TPLT111111')
        self.assertEquals(caverphone('dephoff'), 'TFF1111111')
        self.assertEquals(caverphone('derbie'), 'TPA1111111')
        self.assertEquals(caverphone('derbyshire'), 'TPSA111111')
        self.assertEquals(caverphone('dermer'), 'TMA1111111')
        self.assertEquals(caverphone('dernehy'), 'TNA1111111')
        self.assertEquals(caverphone('derrick'), 'TRK1111111')
        self.assertEquals(caverphone('derry'), 'TRA1111111')
        self.assertEquals(caverphone('desmond'), 'TSMNT11111')
        self.assertEquals(caverphone('desmoulins'), 'TSMLNS1111')
        self.assertEquals(caverphone('dessarthe'), 'TST1111111')
        self.assertEquals(caverphone('dester'), 'TSTA111111')
        self.assertEquals(caverphone('deuchrass'), 'TKRS111111')
        self.assertEquals(caverphone('devaney'), 'TFNA111111')
        self.assertEquals(caverphone('devany'), 'TFNA111111')
        self.assertEquals(caverphone('devenie'), 'TFNA111111')
        self.assertEquals(caverphone('devenney'), 'TFNA111111')
        self.assertEquals(caverphone('dever'), 'TFA1111111')
        self.assertEquals(caverphone('devereux'), 'TFRK111111')
        self.assertEquals(caverphone('devery'), 'TFRA111111')
        self.assertEquals(caverphone('devine'), 'TFN1111111')
        self.assertEquals(caverphone('devlill'), 'TFLA111111')
        self.assertEquals(caverphone('devlin'), 'TFLN111111')
        self.assertEquals(caverphone('dew'), 'TA11111111')
        self.assertEquals(caverphone('dewar'), 'TWA1111111')
        self.assertEquals(caverphone('dexter'), 'TKTA111111')
        self.assertEquals(caverphone('dey'), 'TA11111111')
        self.assertEquals(caverphone('diack'), 'TK11111111')
        self.assertEquals(caverphone('diamond'), 'TMNT111111')
        self.assertEquals(caverphone('dick'), 'TK11111111')
        self.assertEquals(caverphone('dickens'), 'TKNS111111')
        self.assertEquals(caverphone('dickeon'), 'TKN1111111')
        self.assertEquals(caverphone('dicker'), 'TKA1111111')
        self.assertEquals(caverphone('dickey'), 'TKA1111111')
        self.assertEquals(caverphone('dickie'), 'TKA1111111')
        self.assertEquals(caverphone('dickinson'), 'TKNSN11111')
        self.assertEquals(caverphone('dickison'), 'TKSN111111')
        self.assertEquals(caverphone('dicksan'), 'TKSN111111')
        self.assertEquals(caverphone('dickson'), 'TKSN111111')
        self.assertEquals(caverphone('didham'), 'TTM1111111')
        self.assertEquals(caverphone('didsbury'), 'TTSPRA1111')
        self.assertEquals(caverphone('diefenbach'), 'TFNPK11111')
        self.assertEquals(caverphone('diehl'), 'TA11111111')
        self.assertEquals(caverphone('digby-smith'), 'TKPSMT1111')
        self.assertEquals(caverphone('dillan'), 'TLN1111111')
        self.assertEquals(caverphone('dillon-kin'), 'TLNKN11111')
        self.assertEquals(caverphone('dillon'), 'TLN1111111')
        self.assertEquals(caverphone('dimond'), 'TMNT111111')
        self.assertEquals(caverphone('dineen'), 'TNN1111111')
        self.assertEquals(caverphone('dingle'), 'TNKA111111')
        self.assertEquals(caverphone('dingwall'), 'TNKWA11111')
        self.assertEquals(caverphone('dinning'), 'TNNK111111')
        self.assertEquals(caverphone('dinsell'), 'TNSA111111')
        self.assertEquals(caverphone('dippie'), 'TPA1111111')
        self.assertEquals(caverphone('direen'), 'TRN1111111')
        self.assertEquals(caverphone('diston'), 'TSTN111111')
        self.assertEquals(caverphone('diver'), 'TFA1111111')
        self.assertEquals(caverphone('divers'), 'TFS1111111')
        self.assertEquals(caverphone('divett'), 'TFT1111111')
        self.assertEquals(caverphone('dix'), 'TK11111111')
        self.assertEquals(caverphone('dixon'), 'TKN1111111')
        self.assertEquals(caverphone('dixs'), 'TKS1111111')
        self.assertEquals(caverphone('doak'), 'TK11111111')
        self.assertEquals(caverphone('doake'), 'TK11111111')
        self.assertEquals(caverphone('dobbie'), 'TPA1111111')
        self.assertEquals(caverphone('dobbin'), 'TPN1111111')
        self.assertEquals(caverphone('dobble'), 'TPA1111111')
        self.assertEquals(caverphone('dobbs'), 'TPS1111111')
        self.assertEquals(caverphone('dobe'), 'TP11111111')
        self.assertEquals(caverphone('dobie'), 'TPA1111111')
        self.assertEquals(caverphone('dobson'), 'TPSN111111')
        self.assertEquals(caverphone('docherty'), 'TKTA111111')
        self.assertEquals(caverphone('dockworth'), 'TKWT111111')
        self.assertEquals(caverphone('dodd'), 'TT11111111')
        self.assertEquals(caverphone('doddridge'), 'TTRK111111')
        self.assertEquals(caverphone('dodds'), 'TTS1111111')
        self.assertEquals(caverphone('dods'), 'TTS1111111')
        self.assertEquals(caverphone('doggart'), 'TKT1111111')
        self.assertEquals(caverphone('doherty'), 'TTA1111111')
        self.assertEquals(caverphone('dohig'), 'TK11111111')
        self.assertEquals(caverphone('doig'), 'TK11111111')
        self.assertEquals(caverphone('dolan'), 'TLN1111111')
        self.assertEquals(caverphone('dolman'), 'TMN1111111')
        self.assertEquals(caverphone('dolphin'), 'TFN1111111')
        self.assertEquals(caverphone('domigan'), 'TMKN111111')
        self.assertEquals(caverphone('dommett'), 'TMT1111111')
        self.assertEquals(caverphone('don'), 'TN11111111')
        self.assertEquals(caverphone('donald'), 'TNT1111111')
        self.assertEquals(caverphone('donaldson'), 'TNTSN11111')
        self.assertEquals(caverphone('done'), 'TN11111111')
        self.assertEquals(caverphone('donellan'), 'TNLN111111')
        self.assertEquals(caverphone('donglas'), 'TNKLS11111')
        self.assertEquals(caverphone('donlan'), 'TNLN111111')
        self.assertEquals(caverphone('donn'), 'TN11111111')
        self.assertEquals(caverphone('donnald'), 'TNT1111111')
        self.assertEquals(caverphone('donne'), 'TN11111111')
        self.assertEquals(caverphone('donneily'), 'TNLA111111')
        self.assertEquals(caverphone('donnelly'), 'TNLA111111')
        self.assertEquals(caverphone('donoghue'), 'TNKA111111')
        self.assertEquals(caverphone('donovan'), 'TNFN111111')
        self.assertEquals(caverphone('doocey'), 'TSA1111111')
        self.assertEquals(caverphone('doody'), 'TTA1111111')
        self.assertEquals(caverphone('dooley'), 'TLA1111111')
        self.assertEquals(caverphone('doorley'), 'TLA1111111')
        self.assertEquals(caverphone('doran'), 'TRN1111111')
        self.assertEquals(caverphone('dore'), 'TA11111111')
        self.assertEquals(caverphone('doreman'), 'TRMN111111')
        self.assertEquals(caverphone('dorman'), 'TMN1111111')
        self.assertEquals(caverphone('dormer'), 'TMA1111111')
        self.assertEquals(caverphone('dorney'), 'TNA1111111')
        self.assertEquals(caverphone('dorreen'), 'TRN1111111')
        self.assertEquals(caverphone('dorrian'), 'TRN1111111')
        self.assertEquals(caverphone('dorsey'), 'TSA1111111')
        self.assertEquals(caverphone('dorward'), 'TWT1111111')
        self.assertEquals(caverphone('dossett'), 'TST1111111')
        self.assertEquals(caverphone('double'), 'TPA1111111')
        self.assertEquals(caverphone('doudle'), 'TTA1111111')
        self.assertEquals(caverphone('dougal'), 'TKA1111111')
        self.assertEquals(caverphone('dougali'), 'TKLA111111')
        self.assertEquals(caverphone('dougall'), 'TKA1111111')
        self.assertEquals(caverphone('dougan'), 'TKN1111111')
        self.assertEquals(caverphone('dougherty'), 'TKTA111111')
        self.assertEquals(caverphone('doughty'), 'TTA1111111')
        self.assertEquals(caverphone('douglans'), 'TKLNS11111')
        self.assertEquals(caverphone('douglas'), 'TKLS111111')
        self.assertEquals(caverphone('douglass'), 'TKLS111111')
        self.assertEquals(caverphone('douherty'), 'TTA1111111')
        self.assertEquals(caverphone('doulass'), 'TLS1111111')
        self.assertEquals(caverphone('douli'), 'TLA1111111')
        self.assertEquals(caverphone('doull'), 'TA11111111')
        self.assertEquals(caverphone('dov'), 'TF11111111')
        self.assertEquals(caverphone('dove'), 'TF11111111')
        self.assertEquals(caverphone('dow'), 'TA11111111')
        self.assertEquals(caverphone('dowdall'), 'TTA1111111')
        self.assertEquals(caverphone('dowden'), 'TTN1111111')
        self.assertEquals(caverphone('dowell'), 'TWA1111111')
        self.assertEquals(caverphone('dowey'), 'TWA1111111')
        self.assertEquals(caverphone('dowie'), 'TWA1111111')
        self.assertEquals(caverphone('dowland'), 'TLNT111111')
        self.assertEquals(caverphone('dowling'), 'TLNK111111')
        self.assertEquals(caverphone('down'), 'TN11111111')
        self.assertEquals(caverphone('downer'), 'TNA1111111')
        self.assertEquals(caverphone('downes'), 'TNS1111111')
        self.assertEquals(caverphone('downey'), 'TNA1111111')
        self.assertEquals(caverphone('downie'), 'TNA1111111')
        self.assertEquals(caverphone('downs'), 'TNS1111111')
        self.assertEquals(caverphone('doyle'), 'TA11111111')
        self.assertEquals(caverphone('drain'), 'TRN1111111')
        self.assertEquals(caverphone('drake'), 'TRK1111111')
        self.assertEquals(caverphone('drane'), 'TRN1111111')
        self.assertEquals(caverphone('draper'), 'TRPA111111')
        self.assertEquals(caverphone('dray'), 'TRA1111111')
        self.assertEquals(caverphone('drayton'), 'TRTN111111')
        self.assertEquals(caverphone('dreaver'), 'TRFA111111')
        self.assertEquals(caverphone('dreavor'), 'TRFA111111')
        self.assertEquals(caverphone('drees'), 'TRS1111111')
        self.assertEquals(caverphone('drench'), 'TRNK111111')
        self.assertEquals(caverphone('drennan'), 'TRNN111111')
        self.assertEquals(caverphone('drew-daniels'), 'TRTNS11111')
        self.assertEquals(caverphone('drew'), 'TRA1111111')
        self.assertEquals(caverphone('dripps'), 'TRPS111111')
        self.assertEquals(caverphone('driscole'), 'TRSKA11111')
        self.assertEquals(caverphone('driscoll-shaw'), 'TRSKSA1111')
        self.assertEquals(caverphone('driscoll'), 'TRSKA11111')
        self.assertEquals(caverphone('driver'), 'TRFA111111')
        self.assertEquals(caverphone('droaver'), 'TRFA111111')
        self.assertEquals(caverphone('droscher'), 'TRSKA11111')
        self.assertEquals(caverphone('drosier'), 'TRSA111111')
        self.assertEquals(caverphone('drumm'), 'TRM1111111')
        self.assertEquals(caverphone('drummond'), 'TRMNT11111')
        self.assertEquals(caverphone('drury'), 'TRRA111111')
        self.assertEquals(caverphone('dry'), 'TRA1111111')
        self.assertEquals(caverphone('dryden'), 'TRTN111111')
        self.assertEquals(caverphone('drysdale'), 'TRSTA11111')
        self.assertEquals(caverphone('duckett'), 'TKT1111111')
        self.assertEquals(caverphone('duckmanton'), 'TKMNTN1111')
        self.assertEquals(caverphone('duckworth'), 'TKWT111111')
        self.assertEquals(caverphone('dudding'), 'TTNK111111')
        self.assertEquals(caverphone('duder'), 'TTA1111111')
        self.assertEquals(caverphone('dudley'), 'TTLA111111')
        self.assertEquals(caverphone('dudson'), 'TTSN111111')
        self.assertEquals(caverphone('duell'), 'TA11111111')
        self.assertEquals(caverphone('duerden'), 'TTN1111111')
        self.assertEquals(caverphone('duff'), 'TF11111111')
        self.assertEquals(caverphone('duffy'), 'TFA1111111')
        self.assertEquals(caverphone('dugdale'), 'TKTA111111')
        self.assertEquals(caverphone('duggan'), 'TKN1111111')
        self.assertEquals(caverphone('dugleby'), 'TKLPA11111')
        self.assertEquals(caverphone('duguid'), 'TKT1111111')
        self.assertEquals(caverphone('duhig'), 'TK11111111')
        self.assertEquals(caverphone('duig'), 'TK11111111')
        self.assertEquals(caverphone('duigan'), 'TKN1111111')
        self.assertEquals(caverphone('duignan'), 'TKNN111111')
        self.assertEquals(caverphone('duke'), 'TK11111111')
        self.assertEquals(caverphone('dull'), 'TA11111111')
        self.assertEquals(caverphone('dulward'), 'TWT1111111')
        self.assertEquals(caverphone('dumas'), 'TMS1111111')
        self.assertEquals(caverphone('dumble'), 'TMPA111111')
        self.assertEquals(caverphone('dumsday'), 'TMSTA11111')
        self.assertEquals(caverphone('dun'), 'TN11111111')
        self.assertEquals(caverphone('dunbar'), 'TNPA111111')
        self.assertEquals(caverphone('duncall'), 'TNKA111111')
        self.assertEquals(caverphone('duncan'), 'TNKN111111')
        self.assertEquals(caverphone('dundas'), 'TNTS111111')
        self.assertEquals(caverphone('dunean'), 'TNN1111111')
        self.assertEquals(caverphone('dunford'), 'TNFT111111')
        self.assertEquals(caverphone('dungan'), 'TNKN111111')
        self.assertEquals(caverphone('dungey'), 'TNKA111111')
        self.assertEquals(caverphone('dunham'), 'TNM1111111')
        self.assertEquals(caverphone('dunhar'), 'TNA1111111')
        self.assertEquals(caverphone('dunipace'), 'TNPK111111')
        self.assertEquals(caverphone('dunkerton'), 'TNKTN11111')
        self.assertEquals(caverphone('dunkin'), 'TNKN111111')
        self.assertEquals(caverphone('dunkley'), 'TNKLA11111')
        self.assertEquals(caverphone('dunlop'), 'TNLP111111')
        self.assertEquals(caverphone('dunn'), 'TN11111111')
        self.assertEquals(caverphone('dunnage'), 'TNK1111111')
        self.assertEquals(caverphone('dunne'), 'TN11111111')
        self.assertEquals(caverphone('dunnet'), 'TNT1111111')
        self.assertEquals(caverphone('dunnig'), 'TNK1111111')
        self.assertEquals(caverphone('dunning'), 'TNNK111111')
        self.assertEquals(caverphone('dunring'), 'TNRNK11111')
        self.assertEquals(caverphone('dunshea'), 'TNSA111111')
        self.assertEquals(caverphone('dunsmuir'), 'TNSMA11111')
        self.assertEquals(caverphone('dunstan'), 'TNSTN11111')
        self.assertEquals(caverphone('dunster'), 'TNSTA11111')
        self.assertEquals(caverphone('durand'), 'TRNT111111')
        self.assertEquals(caverphone('durie'), 'TRA1111111')
        self.assertEquals(caverphone('durning'), 'TNNK111111')
        self.assertEquals(caverphone('duro'), 'TRA1111111')
        self.assertEquals(caverphone('durrand'), 'TRNT111111')
        self.assertEquals(caverphone('durrant'), 'TRNT111111')
        self.assertEquals(caverphone('durreen'), 'TRN1111111')
        self.assertEquals(caverphone('durry'), 'TRA1111111')
        self.assertEquals(caverphone('duthie'), 'TTA1111111')
        self.assertEquals(caverphone('dutton'), 'TTN1111111')
        self.assertEquals(caverphone('dwan'), 'TWN1111111')
        self.assertEquals(caverphone('dwight'), 'TWT1111111')
        self.assertEquals(caverphone('dwyer'), 'TWA1111111')
        self.assertEquals(caverphone('dyas'), 'TS11111111')
        self.assertEquals(caverphone('dyer'), 'TA11111111')
        self.assertEquals(caverphone('dyke'), 'TK11111111')
        self.assertEquals(caverphone('dykes'), 'TKS1111111')
        self.assertEquals(caverphone('dykins'), 'TKNS111111')
        self.assertEquals(caverphone('dysart'), 'TST1111111')
        self.assertEquals(caverphone('dysaski'), 'TSSKA11111')
        self.assertEquals(caverphone('dyson'), 'TSN1111111')
        self.assertEquals(caverphone('eade'), 'AT11111111')
        self.assertEquals(caverphone('eades'), 'ATS1111111')
        self.assertEquals(caverphone('eadie'), 'ATA1111111')
        self.assertEquals(caverphone('eady'), 'ATA1111111')
        self.assertEquals(caverphone('eagan'), 'AKN1111111')
        self.assertEquals(caverphone('eagar'), 'AKA1111111')
        self.assertEquals(caverphone('eager'), 'AKA1111111')
        self.assertEquals(caverphone('eagle'), 'AKA1111111')
        self.assertEquals(caverphone('eagles'), 'AKLS111111')
        self.assertEquals(caverphone('eagleton'), 'AKLTN11111')
        self.assertEquals(caverphone('eamilton'), 'AMTN111111')
        self.assertEquals(caverphone('eardley'), 'ATLA111111')
        self.assertEquals(caverphone('eardly'), 'ATLA111111')
        self.assertEquals(caverphone('earl'), 'AA11111111')
        self.assertEquals(caverphone('earland'), 'ALNT111111')
        self.assertEquals(caverphone('earley'), 'ALA1111111')
        self.assertEquals(caverphone('early'), 'ALA1111111')
        self.assertEquals(caverphone('earnshaw'), 'ANSA111111')
        self.assertEquals(caverphone('earp'), 'AP11111111')
        self.assertEquals(caverphone('eason'), 'ASN1111111')
        self.assertEquals(caverphone('easson'), 'ASN1111111')
        self.assertEquals(caverphone('east'), 'AST1111111')
        self.assertEquals(caverphone('easther'), 'ASTA111111')
        self.assertEquals(caverphone('easton'), 'ASTN111111')
        self.assertEquals(caverphone('eastwood'), 'ASTWT11111')
        self.assertEquals(caverphone('eaton'), 'ATN1111111')
        self.assertEquals(caverphone('eayes'), 'AS11111111')
        self.assertEquals(caverphone('ebzery'), 'APSRA11111')
        self.assertEquals(caverphone('eccles'), 'AKLS111111')
        self.assertEquals(caverphone('eckhoff'), 'AKF1111111')
        self.assertEquals(caverphone('eckhold'), 'AKT1111111')
        self.assertEquals(caverphone('ecsex'), 'AKSK111111')
        self.assertEquals(caverphone('eddington'), 'ATNKTN1111')
        self.assertEquals(caverphone('ede-clendinnen'), 'ATKLNTNN11')
        self.assertEquals(caverphone('ede'), 'AT11111111')
        self.assertEquals(caverphone('eden'), 'ATN1111111')
        self.assertEquals(caverphone('edgar'), 'AKA1111111')
        self.assertEquals(caverphone('edgares'), 'AKRS111111')
        self.assertEquals(caverphone('edge'), 'AK11111111')
        self.assertEquals(caverphone('edginton'), 'AKNTN11111')
        self.assertEquals(caverphone('edie'), 'ATA1111111')
        self.assertEquals(caverphone('ediin'), 'ATN1111111')
        self.assertEquals(caverphone('edin'), 'ATN1111111')
        self.assertEquals(caverphone('edinger'), 'ATNKA11111')
        self.assertEquals(caverphone('edington'), 'ATNKTN1111')
        self.assertEquals(caverphone('edis'), 'ATS1111111')
        self.assertEquals(caverphone('edkins'), 'ATKNS11111')
        self.assertEquals(caverphone('edlin'), 'ATLN111111')
        self.assertEquals(caverphone('edmenson'), 'ATMNSN1111')
        self.assertEquals(caverphone('edmond'), 'ATMNT11111')
        self.assertEquals(caverphone('edmonds'), 'ATMNTS1111')
        self.assertEquals(caverphone('edridge'), 'ATRK111111')
        self.assertEquals(caverphone('edsall'), 'ATSA111111')
        self.assertEquals(caverphone('edson'), 'ATSN111111')
        self.assertEquals(caverphone('edward'), 'ATWT111111')
        self.assertEquals(caverphone('edwards'), 'ATWTS11111')
        self.assertEquals(caverphone('edwardson'), 'ATWTSN1111')
        self.assertEquals(caverphone('egan'), 'AKN1111111')
        self.assertEquals(caverphone('egerton'), 'AKTN111111')
        self.assertEquals(caverphone('eggelton'), 'AKTN111111')
        self.assertEquals(caverphone('eggers'), 'AKS1111111')
        self.assertEquals(caverphone('egglestone'), 'AKLSTN1111')
        self.assertEquals(caverphone('eggleton'), 'AKLTN11111')
        self.assertEquals(caverphone('eilis'), 'ALS1111111')
        self.assertEquals(caverphone('elbra'), 'APRA111111')
        self.assertEquals(caverphone('elder'), 'ATA1111111')
        self.assertEquals(caverphone('elders'), 'ATS1111111')
        self.assertEquals(caverphone('elding'), 'ATNK111111')
        self.assertEquals(caverphone('eldridge'), 'ATRK111111')
        self.assertEquals(caverphone('elias'), 'ALS1111111')
        self.assertEquals(caverphone('eliot'), 'ALT1111111')
        self.assertEquals(caverphone('eliott'), 'ALT1111111')
        self.assertEquals(caverphone('ellacombe'), 'ALKM111111')
        self.assertEquals(caverphone('ellens'), 'ALNS111111')
        self.assertEquals(caverphone('ellery'), 'ALRA111111')
        self.assertEquals(caverphone('elliffe'), 'ALF1111111')
        self.assertEquals(caverphone('elliis'), 'ALS1111111')
        self.assertEquals(caverphone('ellingwood'), 'ALNKWT1111')
        self.assertEquals(caverphone('elliobt'), 'ALPT111111')
        self.assertEquals(caverphone('elliot'), 'ALT1111111')
        self.assertEquals(caverphone('elliott'), 'ALT1111111')
        self.assertEquals(caverphone('elliotte'), 'ALT1111111')
        self.assertEquals(caverphone('ellis'), 'ALS1111111')
        self.assertEquals(caverphone('ellison'), 'ALSN111111')
        self.assertEquals(caverphone('ellisson'), 'ALSN111111')
        self.assertEquals(caverphone('ells'), 'AS11111111')
        self.assertEquals(caverphone('elms'), 'AMS1111111')
        self.assertEquals(caverphone('elmsly'), 'AMSLA11111')
        self.assertEquals(caverphone('elphick'), 'AFK1111111')
        self.assertEquals(caverphone('elphinstone'), 'AFNSTN1111')
        self.assertEquals(caverphone('elsey'), 'ASA1111111')
        self.assertEquals(caverphone('elsom'), 'ASM1111111')
        self.assertEquals(caverphone('elston'), 'ASTN111111')
        self.assertEquals(caverphone('elstow'), 'ASTA111111')
        self.assertEquals(caverphone('elton'), 'ATN1111111')
        self.assertEquals(caverphone('elvidge'), 'AFK1111111')
        self.assertEquals(caverphone('emerson'), 'AMSN111111')
        self.assertEquals(caverphone('emery'), 'AMRA111111')
        self.assertEquals(caverphone('emlis'), 'AMLS111111')
        self.assertEquals(caverphone('emmerson'), 'AMSN111111')
        self.assertEquals(caverphone('emond'), 'AMNT111111')
        self.assertEquals(caverphone('empey'), 'AMPA111111')
        self.assertEquals(caverphone('emslie'), 'AMSLA11111')
        self.assertEquals(caverphone('endicott davies'), 'ANTKTFS111')
        self.assertEquals(caverphone('endicott-davies'), 'ANTKTFS111')
        self.assertEquals(caverphone('endicottdavies'), 'ANTKTFS111')
        self.assertEquals(caverphone('engelbert'), 'ANKPT11111')
        self.assertEquals(caverphone('england'), 'ANKLNT1111')
        self.assertEquals(caverphone('englefield'), 'ANKLFT1111')
        self.assertEquals(caverphone('english'), 'ANKLS11111')
        self.assertEquals(caverphone('engstrom'), 'ANKSTRM111')
        self.assertEquals(caverphone('enright'), 'ANRT111111')
        self.assertEquals(caverphone('ensor'), 'ANSA111111')
        self.assertEquals(caverphone('enticote'), 'ANTKT11111')
        self.assertEquals(caverphone('eorne'), 'AN11111111')
        self.assertEquals(caverphone('erenstrom'), 'ARNSTRM111')
        self.assertEquals(caverphone('erickson'), 'ARKSN11111')
        self.assertEquals(caverphone('ericson'), 'ARKSN11111')
        self.assertEquals(caverphone('erlandson'), 'ALNTSN1111')
        self.assertEquals(caverphone('erlidge'), 'ALK1111111')
        self.assertEquals(caverphone('erridge'), 'ARK1111111')
        self.assertEquals(caverphone('errington'), 'ARNKTN1111')
        self.assertEquals(caverphone('erskine'), 'ASKN111111')
        self.assertEquals(caverphone('erwin'), 'AWN1111111')
        self.assertEquals(caverphone('escott'), 'ASKT111111')
        self.assertEquals(caverphone('eskdale'), 'ASKTA11111')
        self.assertEquals(caverphone('esperson'), 'ASPSN11111')
        self.assertEquals(caverphone('espie'), 'ASPA111111')
        self.assertEquals(caverphone('esplin'), 'ASPLN11111')
        self.assertEquals(caverphone('esquilant'), 'ASKLNT1111')
        self.assertEquals(caverphone('essex'), 'ASK1111111')
        self.assertEquals(caverphone('esson'), 'ASN1111111')
        self.assertEquals(caverphone('essson'), 'ASN1111111')
        self.assertEquals(caverphone('esther'), 'ASTA111111')
        self.assertEquals(caverphone('etheridge'), 'ATRK111111')
        self.assertEquals(caverphone('eunson'), 'ANSN111111')
        self.assertEquals(caverphone('eustace'), 'ASTK111111')
        self.assertEquals(caverphone('eva'), 'AFA1111111')
        self.assertEquals(caverphone('evan'), 'AFN1111111')
        self.assertEquals(caverphone('evana'), 'AFNA111111')
        self.assertEquals(caverphone('evans'), 'AFNS111111')
        self.assertEquals(caverphone('evatt'), 'AFT1111111')
        self.assertEquals(caverphone('evavs'), 'AFFS111111')
        self.assertEquals(caverphone('everest'), 'AFRST11111')
        self.assertEquals(caverphone('everett'), 'AFRT111111')
        self.assertEquals(caverphone('everitt'), 'AFRT111111')
        self.assertEquals(caverphone('everleigh'), 'AFLA111111')
        self.assertEquals(caverphone('everson'), 'AFSN111111')
        self.assertEquals(caverphone('every'), 'AFRA111111')
        self.assertEquals(caverphone('ewan'), 'AWN1111111')
        self.assertEquals(caverphone('ewart'), 'AWT1111111')
        self.assertEquals(caverphone('ewens'), 'AWNS111111')
        self.assertEquals(caverphone('ewing'), 'AWNK111111')
        self.assertEquals(caverphone('ewington-bell'), 'AWNKTNPA11')
        self.assertEquals(caverphone('exler'), 'AKLA111111')
        self.assertEquals(caverphone('eyles'), 'ALS1111111')
        self.assertEquals(caverphone('eyre'), 'AA11111111')
        self.assertEquals(caverphone('facer'), 'FSA1111111')
        self.assertEquals(caverphone('facey'), 'FSA1111111')
        self.assertEquals(caverphone('fache'), 'FK11111111')
        self.assertEquals(caverphone('fackender'), 'FKNTA11111')
        self.assertEquals(caverphone('facoory'), 'FKRA111111')
        self.assertEquals(caverphone('fagan'), 'FKN1111111')
        self.assertEquals(caverphone('fahey'), 'FA11111111')
        self.assertEquals(caverphone('fahy'), 'FA11111111')
        self.assertEquals(caverphone('faid'), 'FT11111111')
        self.assertEquals(caverphone('faigan'), 'FKN1111111')
        self.assertEquals(caverphone('fail'), 'FA11111111')
        self.assertEquals(caverphone('fair'), 'FA11111111')
        self.assertEquals(caverphone('fairbairn'), 'FPN1111111')
        self.assertEquals(caverphone('fairburn'), 'FPN1111111')
        self.assertEquals(caverphone('faircloth'), 'FKLT111111')
        self.assertEquals(caverphone('fairhall'), 'FA11111111')
        self.assertEquals(caverphone('fairhurst'), 'FST1111111')
        self.assertEquals(caverphone('fairley'), 'FLA1111111')
        self.assertEquals(caverphone('fairlie'), 'FLA1111111')
        self.assertEquals(caverphone('fairmaid'), 'FMT1111111')
        self.assertEquals(caverphone('fairweather'), 'FWTA111111')
        self.assertEquals(caverphone('faith'), 'FT11111111')
        self.assertEquals(caverphone('faithful'), 'FTFA111111')
        self.assertEquals(caverphone('faithfull'), 'FTFA111111')
        self.assertEquals(caverphone('falck'), 'FK11111111')
        self.assertEquals(caverphone('falcon'), 'FKN1111111')
        self.assertEquals(caverphone('falconar'), 'FKNA111111')
        self.assertEquals(caverphone('falconer'), 'FKNA111111')
        self.assertEquals(caverphone('falgar'), 'FKA1111111')
        self.assertEquals(caverphone('falkinar'), 'FKNA111111')
        self.assertEquals(caverphone('falkner'), 'FKNA111111')
        self.assertEquals(caverphone('fall'), 'FA11111111')
        self.assertEquals(caverphone('fallon'), 'FLN1111111')
        self.assertEquals(caverphone('fallowfield'), 'FLFT111111')
        self.assertEquals(caverphone('familton'), 'FMTN111111')
        self.assertEquals(caverphone('fancourt'), 'FNKT111111')
        self.assertEquals(caverphone('fanner'), 'FNA1111111')
        self.assertEquals(caverphone('fanning'), 'FNNK111111')
        self.assertEquals(caverphone('fannon'), 'FNN1111111')
        self.assertEquals(caverphone('fantham'), 'FNTM111111')
        self.assertEquals(caverphone('fargie'), 'FKA1111111')
        self.assertEquals(caverphone('faris'), 'FRS1111111')
        self.assertEquals(caverphone('farland'), 'FLNT111111')
        self.assertEquals(caverphone('farmer'), 'FMA1111111')
        self.assertEquals(caverphone('farminger'), 'FMNKA11111')
        self.assertEquals(caverphone('farquhar'), 'FKA1111111')
        self.assertEquals(caverphone('farquharon'), 'FKRN111111')
        self.assertEquals(caverphone('farquhars'), 'FKS1111111')
        self.assertEquals(caverphone('farquharson'), 'FKSN111111')
        self.assertEquals(caverphone('farr'), 'FA11111111')
        self.assertEquals(caverphone('farra'), 'FRA1111111')
        self.assertEquals(caverphone('farrant'), 'FRNT111111')
        self.assertEquals(caverphone('farrell'), 'FRA1111111')
        self.assertEquals(caverphone('farrelly'), 'FRLA111111')
        self.assertEquals(caverphone('farrington'), 'FRNKTN1111')
        self.assertEquals(caverphone('farrow'), 'FRA1111111')
        self.assertEquals(caverphone('farry'), 'FRA1111111')
        self.assertEquals(caverphone('fastier'), 'FSTA111111')
        self.assertEquals(caverphone('faul'), 'FA11111111')
        self.assertEquals(caverphone('faulder'), 'FTA1111111')
        self.assertEquals(caverphone('faulds'), 'FTS1111111')
        self.assertEquals(caverphone('faulkner'), 'FKNA111111')
        self.assertEquals(caverphone('faulks'), 'FKS1111111')
        self.assertEquals(caverphone('faull'), 'FA11111111')
        self.assertEquals(caverphone('favel'), 'FFA1111111')
        self.assertEquals(caverphone('favell'), 'FFA1111111')
        self.assertEquals(caverphone('fawcett'), 'FST1111111')
        self.assertEquals(caverphone('fay'), 'FA11111111')
        self.assertEquals(caverphone('fazakerley'), 'FSKLA11111')
        self.assertEquals(caverphone('fearn'), 'FN11111111')
        self.assertEquals(caverphone('feast'), 'FST1111111')
        self.assertEquals(caverphone('feathersto'), 'FTSTA11111')
        self.assertEquals(caverphone('featherstone'), 'FTSTN11111')
        self.assertEquals(caverphone('feely'), 'FLA1111111')
        self.assertEquals(caverphone('feeney'), 'FNA1111111')
        self.assertEquals(caverphone('feichley'), 'FKLA111111')
        self.assertEquals(caverphone('feil'), 'FA11111111')
        self.assertEquals(caverphone('fell'), 'FA11111111')
        self.assertEquals(caverphone('felmingha'), 'FMNA111111')
        self.assertEquals(caverphone('felmingham'), 'FMNM111111')
        self.assertEquals(caverphone('feltham'), 'FTM1111111')
        self.assertEquals(caverphone('felton'), 'FTN1111111')
        self.assertEquals(caverphone('fenby'), 'FNPA111111')
        self.assertEquals(caverphone('fendall'), 'FNTA111111')
        self.assertEquals(caverphone('fenelon'), 'FNLN111111')
        self.assertEquals(caverphone('fennessey'), 'FNSA111111')
        self.assertEquals(caverphone('fennessy'), 'FNSA111111')
        self.assertEquals(caverphone('fenton'), 'FNTN111111')
        self.assertEquals(caverphone('fenwick'), 'FNWK111111')
        self.assertEquals(caverphone('ferdinand'), 'FTNNT11111')
        self.assertEquals(caverphone('ferens'), 'FRNS111111')
        self.assertEquals(caverphone('fergus'), 'FKS1111111')
        self.assertEquals(caverphone('ferguson'), 'FKSN111111')
        self.assertEquals(caverphone('fergusson'), 'FKSN111111')
        self.assertEquals(caverphone('fern'), 'FN11111111')
        self.assertEquals(caverphone('fernie'), 'FNA1111111')
        self.assertEquals(caverphone('feron'), 'FRN1111111')
        self.assertEquals(caverphone('ferrier'), 'FRA1111111')
        self.assertEquals(caverphone('ferris'), 'FRS1111111')
        self.assertEquals(caverphone('ferry'), 'FRA1111111')
        self.assertEquals(caverphone('fewtrell'), 'FTRA111111')
        self.assertEquals(caverphone('ffrost'), 'FRST111111')
        self.assertEquals(caverphone('fibbes'), 'FPS1111111')
        self.assertEquals(caverphone('fiddes'), 'FTS1111111')
        self.assertEquals(caverphone('fiddis'), 'FTS1111111')
        self.assertEquals(caverphone('field'), 'FT11111111')
        self.assertEquals(caverphone('fielden'), 'FTN1111111')
        self.assertEquals(caverphone('fielder'), 'FTA1111111')
        self.assertEquals(caverphone('fielding'), 'FTNK111111')
        self.assertEquals(caverphone('fieldwick'), 'FTWK111111')
        self.assertEquals(caverphone('fifield'), 'FFT1111111')
        self.assertEquals(caverphone('figgins'), 'FKNS111111')
        self.assertEquals(caverphone('filewood'), 'FLWT111111')
        self.assertEquals(caverphone('fillingham'), 'FLNM111111')
        self.assertEquals(caverphone('finch'), 'FNK1111111')
        self.assertEquals(caverphone('findlater'), 'FNTLTA1111')
        self.assertEquals(caverphone('findlav'), 'FNTLF11111')
        self.assertEquals(caverphone('findlay'), 'FNTLA11111')
        self.assertEquals(caverphone('findley'), 'FNTLA11111')
        self.assertEquals(caverphone('findon'), 'FNTN111111')
        self.assertEquals(caverphone('finlavson'), 'FNLFSN1111')
        self.assertEquals(caverphone('finlay'), 'FNLA111111')
        self.assertEquals(caverphone('finlayson'), 'FNLSN11111')
        self.assertEquals(caverphone('finley'), 'FNLA111111')
        self.assertEquals(caverphone('finlin'), 'FNLN111111')
        self.assertEquals(caverphone('finn'), 'FN11111111')
        self.assertEquals(caverphone('finnegan'), 'FNKN111111')
        self.assertEquals(caverphone('finnerty'), 'FNTA111111')
        self.assertEquals(caverphone('finnie'), 'FNA1111111')
        self.assertEquals(caverphone('firkin'), 'FKN1111111')
        self.assertEquals(caverphone('firth'), 'FT11111111')
        self.assertEquals(caverphone('fish'), 'FS11111111')
        self.assertEquals(caverphone('fisher'), 'FSA1111111')
        self.assertEquals(caverphone('fisken'), 'FSKN111111')
        self.assertEquals(caverphone('fisse'), 'FS11111111')
        self.assertEquals(caverphone('fitspatrick'), 'FTSPTRK111')
        self.assertEquals(caverphone('fitt'), 'FT11111111')
        self.assertEquals(caverphone('fitz patrick'), 'FTSPTRK111')
        self.assertEquals(caverphone('fitz-patrick'), 'FTSPTRK111')
        self.assertEquals(caverphone('fitzell'), 'FTSA111111')
        self.assertEquals(caverphone('fitzer'), 'FTSA111111')
        self.assertEquals(caverphone('fitzgeral'), 'FTSKRA1111')
        self.assertEquals(caverphone('fitzgerald'), 'FTSKRT1111')
        self.assertEquals(caverphone('fitzgibbons'), 'FTSKPNS111')
        self.assertEquals(caverphone('fitzpatric'), 'FTSPTRK111')
        self.assertEquals(caverphone('fitzpatrick'), 'FTSPTRK111')
        self.assertEquals(caverphone('fiynn'), 'FN11111111')
        self.assertEquals(caverphone('flaherty'), 'FLTA111111')
        self.assertEquals(caverphone('flahive'), 'FLF1111111')
        self.assertEquals(caverphone('flanagan'), 'FLNKN11111')
        self.assertEquals(caverphone('flanigan'), 'FLNKN11111')
        self.assertEquals(caverphone('flannagan'), 'FLNKN11111')
        self.assertEquals(caverphone('flannery'), 'FLNRA11111')
        self.assertEquals(caverphone('flanning'), 'FLNNK11111')
        self.assertEquals(caverphone('flawn'), 'FLN1111111')
        self.assertEquals(caverphone('flaws'), 'FLS1111111')
        self.assertEquals(caverphone('fleck'), 'FLK1111111')
        self.assertEquals(caverphone('fleet'), 'FLT1111111')
        self.assertEquals(caverphone('fleming'), 'FLMNK11111')
        self.assertEquals(caverphone('flening'), 'FLNNK11111')
        self.assertEquals(caverphone('fletcher'), 'FLKA111111')
        self.assertEquals(caverphone('fleteher'), 'FLTA111111')
        self.assertEquals(caverphone('flethcher'), 'FLTKA11111')
        self.assertEquals(caverphone('flett'), 'FLT1111111')
        self.assertEquals(caverphone('fleury'), 'FLRA111111')
        self.assertEquals(caverphone('flinders'), 'FLNTS11111')
        self.assertEquals(caverphone('flint'), 'FLNT111111')
        self.assertEquals(caverphone('flockton'), 'FLKTN11111')
        self.assertEquals(caverphone('flood'), 'FLT1111111')
        self.assertEquals(caverphone('floyd'), 'FLT1111111')
        self.assertEquals(caverphone('flugge'), 'FLK1111111')
        self.assertEquals(caverphone('flynn'), 'FLN1111111')
        self.assertEquals(caverphone('foate'), 'FT11111111')
        self.assertEquals(caverphone('fogarty'), 'FKTA111111')
        self.assertEquals(caverphone('fogo'), 'FKA1111111')
        self.assertEquals(caverphone('foley'), 'FLA1111111')
        self.assertEquals(caverphone('folwell'), 'FWA1111111')
        self.assertEquals(caverphone('foord'), 'FT11111111')
        self.assertEquals(caverphone('foote'), 'FT11111111')
        self.assertEquals(caverphone('forbes'), 'FPS1111111')
        self.assertEquals(caverphone('force'), 'FK11111111')
        self.assertEquals(caverphone('ford'), 'FT11111111')
        self.assertEquals(caverphone('forde'), 'FT11111111')
        self.assertEquals(caverphone('fordham'), 'FTM1111111')
        self.assertEquals(caverphone('fordyce'), 'FTK1111111')
        self.assertEquals(caverphone('foreman'), 'FRMN111111')
        self.assertEquals(caverphone('forest'), 'FRST111111')
        self.assertEquals(caverphone('forgeson'), 'FKSN111111')
        self.assertEquals(caverphone('forgie'), 'FKA1111111')
        self.assertEquals(caverphone('forman'), 'FMN1111111')
        self.assertEquals(caverphone('forno'), 'FNA1111111')
        self.assertEquals(caverphone('forrest'), 'FRST111111')
        self.assertEquals(caverphone('forrester'), 'FRSTA11111')
        self.assertEquals(caverphone('forreter'), 'FRTA111111')
        self.assertEquals(caverphone('forscutt'), 'FSKT111111')
        self.assertEquals(caverphone('forster'), 'FSTA111111')
        self.assertEquals(caverphone('forsyth'), 'FST1111111')
        self.assertEquals(caverphone('fort'), 'FT11111111')
        self.assertEquals(caverphone('fortune'), 'FTN1111111')
        self.assertEquals(caverphone('foster'), 'FSTA111111')
        self.assertEquals(caverphone('fothergill'), 'FTKA111111')
        self.assertEquals(caverphone('fotheringh'), 'FTRN111111')
        self.assertEquals(caverphone('fotheringham'), 'FTRNM11111')
        self.assertEquals(caverphone('fotheringharn'), 'FTRNN11111')
        self.assertEquals(caverphone('fougere'), 'FKA1111111')
        self.assertEquals(caverphone('foulkes'), 'FKS1111111')
        self.assertEquals(caverphone('fountain'), 'FNTN111111')
        self.assertEquals(caverphone('fow'), 'FA11111111')
        self.assertEquals(caverphone('fowell'), 'FWA1111111')
        self.assertEquals(caverphone('foweraker'), 'FWRKA11111')
        self.assertEquals(caverphone('fowler'), 'FLA1111111')
        self.assertEquals(caverphone('fox'), 'FK11111111')
        self.assertEquals(caverphone('fox.'), 'FK11111111')
        self.assertEquals(caverphone('foxton'), 'FKTN111111')
        self.assertEquals(caverphone('fraer'), 'FRA1111111')
        self.assertEquals(caverphone('frago'), 'FRKA111111')
        self.assertEquals(caverphone('fraher'), 'FRA1111111')
        self.assertEquals(caverphone('frame'), 'FRM1111111')
        self.assertEquals(caverphone('france'), 'FRNK111111')
        self.assertEquals(caverphone('francer'), 'FRNSA11111')
        self.assertEquals(caverphone('francis'), 'FRNSS11111')
        self.assertEquals(caverphone('frank'), 'FRNK111111')
        self.assertEquals(caverphone('frankham'), 'FRNKM11111')
        self.assertEquals(caverphone('franklin'), 'FRNKLN1111')
        self.assertEquals(caverphone('frankpitt'), 'FRNKPT1111')
        self.assertEquals(caverphone('frapwell'), 'FRPWA11111')
        self.assertEquals(caverphone('frascr'), 'FRSKA11111')
        self.assertEquals(caverphone('frasel'), 'FRSA111111')
        self.assertEquals(caverphone('fraser'), 'FRSA111111')
        self.assertEquals(caverphone('frasor'), 'FRSA111111')
        self.assertEquals(caverphone('frazer'), 'FRSA111111')
        self.assertEquals(caverphone('frederic'), 'FRTRK11111')
        self.assertEquals(caverphone('fredric'), 'FRTRK11111')
        self.assertEquals(caverphone('freed'), 'FRT1111111')
        self.assertEquals(caverphone('freedman'), 'FRTMN11111')
        self.assertEquals(caverphone('freeman'), 'FRMN111111')
        self.assertEquals(caverphone('freernan'), 'FRNN111111')
        self.assertEquals(caverphone('french'), 'FRNK111111')
        self.assertEquals(caverphone('fretwell'), 'FRTWA11111')
        self.assertEquals(caverphone('frew'), 'FRA1111111')
        self.assertEquals(caverphone('frewen'), 'FRWN111111')
        self.assertEquals(caverphone('fricker'), 'FRKA111111')
        self.assertEquals(caverphone('friedlander'), 'FRTLNTA111')
        self.assertEquals(caverphone('friedlich'), 'FRTLK11111')
        self.assertEquals(caverphone('friend'), 'FRNT111111')
        self.assertEquals(caverphone('frier'), 'FRA1111111')
        self.assertEquals(caverphone('frith'), 'FRT1111111')
        self.assertEquals(caverphone('froggatt'), 'FRKT111111')
        self.assertEquals(caverphone('frood'), 'FRT1111111')
        self.assertEquals(caverphone('frost'), 'FRST111111')
        self.assertEquals(caverphone('froude'), 'FRT1111111')
        self.assertEquals(caverphone('fruhstuch'), 'FRSTK11111')
        self.assertEquals(caverphone('fruhstuck'), 'FRSTK11111')
        self.assertEquals(caverphone('fruish'), 'FRS1111111')
        self.assertEquals(caverphone('fry'), 'FRA1111111')
        self.assertEquals(caverphone('frye'), 'FRA1111111')
        self.assertEquals(caverphone('fryer'), 'FRA1111111')
        self.assertEquals(caverphone('ftzpatrck'), 'FTSPTK1111')
        self.assertEquals(caverphone('fuell'), 'FA11111111')
        self.assertEquals(caverphone('fulcher'), 'FKA1111111')
        self.assertEquals(caverphone('fuldseth'), 'FTST111111')
        self.assertEquals(caverphone('fullam'), 'FLM1111111')
        self.assertEquals(caverphone('fullarton'), 'FLTN111111')
        self.assertEquals(caverphone('fuller'), 'FLA1111111')
        self.assertEquals(caverphone('fullerton'), 'FLTN111111')
        self.assertEquals(caverphone('fulton'), 'FTN1111111')
        self.assertEquals(caverphone('furminger'), 'FMNKA11111')
        self.assertEquals(caverphone('furness'), 'FNS1111111')
        self.assertEquals(caverphone('fursdon'), 'FSTN111111')
        self.assertEquals(caverphone('fussell'), 'FSA1111111')
        self.assertEquals(caverphone('fyfe'), 'FF11111111')
        self.assertEquals(caverphone('fyffe'), 'FF11111111')
        self.assertEquals(caverphone('fynmore'), 'FNMA111111')
        self.assertEquals(caverphone('gabites'), 'KPTS111111')
        self.assertEquals(caverphone('gable'), 'KPA1111111')
        self.assertEquals(caverphone('gadd'), 'KT11111111')
        self.assertEquals(caverphone('gaffaney'), 'KFNA111111')
        self.assertEquals(caverphone('gaffeney'), 'KFNA111111')
        self.assertEquals(caverphone('gaffey'), 'KFA1111111')
        self.assertEquals(caverphone('gaffney'), 'KFNA111111')
        self.assertEquals(caverphone('gaiger'), 'KKA1111111')
        self.assertEquals(caverphone('gailichan'), 'KLKN111111')
        self.assertEquals(caverphone('gain'), 'KN11111111')
        self.assertEquals(caverphone('gairdner'), 'KTNA111111')
        self.assertEquals(caverphone('galagher'), 'KLKA111111')
        self.assertEquals(caverphone('galbraith'), 'KPRT111111')
        self.assertEquals(caverphone('gale'), 'KA11111111')
        self.assertEquals(caverphone('gall'), 'KA11111111')
        self.assertEquals(caverphone('gallacher'), 'KLKA111111')
        self.assertEquals(caverphone('gallagher'), 'KLKA111111')
        self.assertEquals(caverphone('gallaher'), 'KLA1111111')
        self.assertEquals(caverphone('gallan'), 'KLN1111111')
        self.assertEquals(caverphone('galland'), 'KLNT111111')
        self.assertEquals(caverphone('gallanders'), 'KLNTS11111')
        self.assertEquals(caverphone('gallant'), 'KLNT111111')
        self.assertEquals(caverphone('gallaway'), 'KLWA111111')
        self.assertEquals(caverphone('gallbraith'), 'KPRT111111')
        self.assertEquals(caverphone('gallichan'), 'KLKN111111')
        self.assertEquals(caverphone('gallie'), 'KLA1111111')
        self.assertEquals(caverphone('galliven'), 'KLFN111111')
        self.assertEquals(caverphone('gallngher'), 'KNA1111111')
        self.assertEquals(caverphone('galloway'), 'KLWA111111')
        self.assertEquals(caverphone('gallschef'), 'KSKF111111')
        self.assertEquals(caverphone('galt'), 'KT11111111')
        self.assertEquals(caverphone('galvin'), 'KFN1111111')
        self.assertEquals(caverphone('galway'), 'KWA1111111')
        self.assertEquals(caverphone('gambell'), 'KMPA111111')
        self.assertEquals(caverphone('gamble'), 'KMPA111111')
        self.assertEquals(caverphone('ganderton'), 'KNTTN11111')
        self.assertEquals(caverphone('gantley'), 'KNTLA11111')
        self.assertEquals(caverphone('garbutt'), 'KPT1111111')
        self.assertEquals(caverphone('garcho'), 'KKA1111111')
        self.assertEquals(caverphone('garchow'), 'KKA1111111')
        self.assertEquals(caverphone('gard\'ner'), 'KTNA111111')
        self.assertEquals(caverphone('garden'), 'KTN1111111')
        self.assertEquals(caverphone('gardham'), 'KTM1111111')
        self.assertEquals(caverphone('gardiner'), 'KTNA111111')
        self.assertEquals(caverphone('gardner'), 'KTNA111111')
        self.assertEquals(caverphone('gardyne'), 'KTN1111111')
        self.assertEquals(caverphone('gare'), 'KA11111111')
        self.assertEquals(caverphone('garforth'), 'KFT1111111')
        self.assertEquals(caverphone('garham'), 'KM11111111')
        self.assertEquals(caverphone('garland'), 'KLNT111111')
        self.assertEquals(caverphone('garlyutt'), 'KLT1111111')
        self.assertEquals(caverphone('garnctt'), 'KNKT111111')
        self.assertEquals(caverphone('garner'), 'KNA1111111')
        self.assertEquals(caverphone('garnett'), 'KNT1111111')
        self.assertEquals(caverphone('garohow'), 'KRA1111111')
        self.assertEquals(caverphone('garr'), 'KA11111111')
        self.assertEquals(caverphone('garret'), 'KRT1111111')
        self.assertEquals(caverphone('garrett'), 'KRT1111111')
        self.assertEquals(caverphone('garrich'), 'KRK1111111')
        self.assertEquals(caverphone('garrick'), 'KRK1111111')
        self.assertEquals(caverphone('garrigan'), 'KRKN111111')
        self.assertEquals(caverphone('garron'), 'KRN1111111')
        self.assertEquals(caverphone('garrow'), 'KRA1111111')
        self.assertEquals(caverphone('garside'), 'KST1111111')
        self.assertEquals(caverphone('garstang'), 'KSTNK11111')
        self.assertEquals(caverphone('garty'), 'KTA1111111')
        self.assertEquals(caverphone('garvey'), 'KFA1111111')
        self.assertEquals(caverphone('gascoigne'), 'KSKKN11111')
        self.assertEquals(caverphone('gasey'), 'KSA1111111')
        self.assertEquals(caverphone('gaspar'), 'KSPA111111')
        self.assertEquals(caverphone('gaston'), 'KSTN111111')
        self.assertEquals(caverphone('gatehouse'), 'KTS1111111')
        self.assertEquals(caverphone('gatfield'), 'KTFT111111')
        self.assertEquals(caverphone('gatside'), 'KTST111111')
        self.assertEquals(caverphone('gatton'), 'KTN1111111')
        self.assertEquals(caverphone('gaudin'), 'KTN1111111')
        self.assertEquals(caverphone('gaul'), 'KA11111111')
        self.assertEquals(caverphone('gauld'), 'KT11111111')
        self.assertEquals(caverphone('gault'), 'KT11111111')
        self.assertEquals(caverphone('gavan'), 'KFN1111111')
        self.assertEquals(caverphone('gavegan'), 'KFKN111111')
        self.assertEquals(caverphone('gavigan'), 'KFKN111111')
        self.assertEquals(caverphone('gavin'), 'KFN1111111')
        self.assertEquals(caverphone('gaw'), 'KA11111111')
        self.assertEquals(caverphone('gawn'), 'KN11111111')
        self.assertEquals(caverphone('gawne'), 'KN11111111')
        self.assertEquals(caverphone('gay'), 'KA11111111')
        self.assertEquals(caverphone('gaylor'), 'KLA1111111')
        self.assertEquals(caverphone('gaytan'), 'KTN1111111')
        self.assertEquals(caverphone('geaney'), 'KNA1111111')
        self.assertEquals(caverphone('gear'), 'KA11111111')
        self.assertEquals(caverphone('gearing'), 'KRNK111111')
        self.assertEquals(caverphone('geary'), 'KRA1111111')
        self.assertEquals(caverphone('geddes'), 'KTS1111111')
        self.assertEquals(caverphone('geddis'), 'KTS1111111')
        self.assertEquals(caverphone('gedney'), 'KTNA111111')
        self.assertEquals(caverphone('gee'), 'KA11111111')
        self.assertEquals(caverphone('geen'), 'KN11111111')
        self.assertEquals(caverphone('geering'), 'KRNK111111')
        self.assertEquals(caverphone('geeson'), 'KSN1111111')
        self.assertEquals(caverphone('geeves'), 'KFS1111111')
        self.assertEquals(caverphone('geiger'), 'KKA1111111')
        self.assertEquals(caverphone('geleatly'), 'KLTLA11111')
        self.assertEquals(caverphone('gellatly'), 'KLTLA11111')
        self.assertEquals(caverphone('gemmell'), 'KMA1111111')
        self.assertEquals(caverphone('gene'), 'KN11111111')
        self.assertEquals(caverphone('genge'), 'KNK1111111')
        self.assertEquals(caverphone('gensik'), 'KNSK111111')
        self.assertEquals(caverphone('gent'), 'KNT1111111')
        self.assertEquals(caverphone('gentleman'), 'KNTLMN1111')
        self.assertEquals(caverphone('geoffrey'), 'KFRA111111')
        self.assertEquals(caverphone('george'), 'KK11111111')
        self.assertEquals(caverphone('georgeison'), 'KKSN111111')
        self.assertEquals(caverphone('georgeson'), 'KKSN111111')
        self.assertEquals(caverphone('gerard'), 'KRT1111111')
        self.assertEquals(caverphone('gerken'), 'KKN1111111')
        self.assertEquals(caverphone('gerrard'), 'KRT1111111')
        self.assertEquals(caverphone('gerrie'), 'KRA1111111')
        self.assertEquals(caverphone('gether'), 'KTA1111111')
        self.assertEquals(caverphone('getken'), 'KTKN111111')
        self.assertEquals(caverphone('gevin'), 'KFN1111111')
        self.assertEquals(caverphone('gey'), 'KA11111111')
        self.assertEquals(caverphone('ghadwick'), 'TWK1111111')
        self.assertEquals(caverphone('gibb'), 'KP11111111')
        self.assertEquals(caverphone('gibbons'), 'KPNS111111')
        self.assertEquals(caverphone('gibbs'), 'KPS1111111')
        self.assertEquals(caverphone('gibson'), 'KPSN111111')
        self.assertEquals(caverphone('gifford'), 'KFT1111111')
        self.assertEquals(caverphone('giford-browne'), 'KFTPRN1111')
        self.assertEquals(caverphone('gil1'), 'KA11111111')
        self.assertEquals(caverphone('gilan'), 'KLN1111111')
        self.assertEquals(caverphone('gilbert'), 'KPT1111111')
        self.assertEquals(caverphone('gilbride'), 'KPRT111111')
        self.assertEquals(caverphone('gilchrist'), 'KKRST11111')
        self.assertEquals(caverphone('gilder'), 'KTA1111111')
        self.assertEquals(caverphone('giles'), 'KLS1111111')
        self.assertEquals(caverphone('gilfedder'), 'KFTA111111')
        self.assertEquals(caverphone('gilfillan'), 'KFLN111111')
        self.assertEquals(caverphone('gilkison'), 'KKSN111111')
        self.assertEquals(caverphone('gilks'), 'KKS1111111')
        self.assertEquals(caverphone('gill'), 'KA11111111')
        self.assertEquals(caverphone('gillam'), 'KLM1111111')
        self.assertEquals(caverphone('gillan'), 'KLN1111111')
        self.assertEquals(caverphone('gillanders'), 'KLNTS11111')
        self.assertEquals(caverphone('gillard'), 'KLT1111111')
        self.assertEquals(caverphone('gillender'), 'KLNTA11111')
        self.assertEquals(caverphone('giller'), 'KLA1111111')
        self.assertEquals(caverphone('gillers'), 'KLS1111111')
        self.assertEquals(caverphone('gillespie'), 'KLSPA11111')
        self.assertEquals(caverphone('gillett'), 'KLT1111111')
        self.assertEquals(caverphone('gilliand'), 'KLNT111111')
        self.assertEquals(caverphone('gillick'), 'KLK1111111')
        self.assertEquals(caverphone('gillies'), 'KLS1111111')
        self.assertEquals(caverphone('gilligan'), 'KLKN111111')
        self.assertEquals(caverphone('gillions'), 'KLNS111111')
        self.assertEquals(caverphone('gillispie'), 'KLSPA11111')
        self.assertEquals(caverphone('gillon'), 'KLN1111111')
        self.assertEquals(caverphone('gillooly'), 'KLLA111111')
        self.assertEquals(caverphone('gilmolr'), 'KMLA111111')
        self.assertEquals(caverphone('gilmore'), 'KMA1111111')
        self.assertEquals(caverphone('gilmour'), 'KMA1111111')
        self.assertEquals(caverphone('girdler'), 'KTLA111111')
        self.assertEquals(caverphone('girdwood'), 'KTWT111111')
        self.assertEquals(caverphone('girvan'), 'KFN1111111')
        self.assertEquals(caverphone('gittos'), 'KTS1111111')
        self.assertEquals(caverphone('gjersen'), 'KSN1111111')
        self.assertEquals(caverphone('gladding'), 'KLTNK11111')
        self.assertEquals(caverphone('gladstone'), 'KLTSTN1111')
        self.assertEquals(caverphone('gladwin'), 'KLTWN11111')
        self.assertEquals(caverphone('gladwish'), 'KLTWS11111')
        self.assertEquals(caverphone('gladwith'), 'KLTWT11111')
        self.assertEquals(caverphone('glaister'), 'KLSTA11111')
        self.assertEquals(caverphone('glanvill'), 'KLNFA11111')
        self.assertEquals(caverphone('glasgow'), 'KLSKA11111')
        self.assertEquals(caverphone('glass'), 'KLS1111111')
        self.assertEquals(caverphone('glasse'), 'KLS1111111')
        self.assertEquals(caverphone('glassett'), 'KLST111111')
        self.assertEquals(caverphone('glasson'), 'KLSN111111')
        self.assertEquals(caverphone('glau'), 'KLA1111111')
        self.assertEquals(caverphone('glault'), 'KLT1111111')
        self.assertEquals(caverphone('gledinning'), 'KLTNNK1111')
        self.assertEquals(caverphone('glen'), 'KLN1111111')
        self.assertEquals(caverphone('glendining'), 'KLNTNNK111')
        self.assertEquals(caverphone('glendinnin'), 'KLNTNN1111')
        self.assertEquals(caverphone('glendinning'), 'KLNTNNK111')
        self.assertEquals(caverphone('glengarry'), 'KLNKRA1111')
        self.assertEquals(caverphone('glenn'), 'KLN1111111')
        self.assertEquals(caverphone('glennie'), 'KLNA111111')
        self.assertEquals(caverphone('glennon'), 'KLNN111111')
        self.assertEquals(caverphone('glerrie'), 'KLRA111111')
        self.assertEquals(caverphone('glibb'), 'KLP1111111')
        self.assertEquals(caverphone('gliddon'), 'KLTN111111')
        self.assertEquals(caverphone('glisby'), 'KLSPA11111')
        self.assertEquals(caverphone('gllespte'), 'KLSPT11111')
        self.assertEquals(caverphone('gloag'), 'KLK1111111')
        self.assertEquals(caverphone('glossop'), 'KLSP111111')
        self.assertEquals(caverphone('glover'), 'KLFA111111')
        self.assertEquals(caverphone('glozier'), 'KLSA111111')
        self.assertEquals(caverphone('glroves'), 'KRFS111111')
        self.assertEquals(caverphone('glubbins'), 'KLPNS11111')
        self.assertEquals(caverphone('glue'), 'KLA1111111')
        self.assertEquals(caverphone('glynn'), 'KLN1111111')
        self.assertEquals(caverphone('goatham'), 'KTM1111111')
        self.assertEquals(caverphone('gobbitt'), 'KPT1111111')
        self.assertEquals(caverphone('goble'), 'KPA1111111')
        self.assertEquals(caverphone('godber'), 'KTPA111111')
        self.assertEquals(caverphone('godby'), 'KTPA111111')
        self.assertEquals(caverphone('goddard'), 'KTT1111111')
        self.assertEquals(caverphone('godden'), 'KTN1111111')
        self.assertEquals(caverphone('godfred'), 'KTFRT11111')
        self.assertEquals(caverphone('godfrey'), 'KTFRA11111')
        self.assertEquals(caverphone('goding'), 'KTNK111111')
        self.assertEquals(caverphone('godirey'), 'KTRA111111')
        self.assertEquals(caverphone('godso'), 'KTSA111111')
        self.assertEquals(caverphone('godward'), 'KTWT111111')
        self.assertEquals(caverphone('godwin'), 'KTWN111111')
        self.assertEquals(caverphone('golden'), 'KTN1111111')
        self.assertEquals(caverphone('goldie'), 'KTA1111111')
        self.assertEquals(caverphone('golding'), 'KTNK111111')
        self.assertEquals(caverphone('goldsmid'), 'KTSMT11111')
        self.assertEquals(caverphone('goldsmith'), 'KTSMT11111')
        self.assertEquals(caverphone('goldstein'), 'KTSTN11111')
        self.assertEquals(caverphone('golightly'), 'KLTLA11111')
        self.assertEquals(caverphone('gollan'), 'KLN1111111')
        self.assertEquals(caverphone('gollar'), 'KLA1111111')
        self.assertEquals(caverphone('gomersall'), 'KMSA111111')
        self.assertEquals(caverphone('gomm'), 'KM11111111')
        self.assertEquals(caverphone('gong'), 'KNK1111111')
        self.assertEquals(caverphone('goninon'), 'KNNN111111')
        self.assertEquals(caverphone('gooch'), 'KK11111111')
        self.assertEquals(caverphone('good'), 'KT11111111')
        self.assertEquals(caverphone('goodall'), 'KTA1111111')
        self.assertEquals(caverphone('goode'), 'KT11111111')
        self.assertEquals(caverphone('goodeve'), 'KTF1111111')
        self.assertEquals(caverphone('goodey'), 'KTA1111111')
        self.assertEquals(caverphone('goodfellow'), 'KTFLA11111')
        self.assertEquals(caverphone('goodhall'), 'KTA1111111')
        self.assertEquals(caverphone('goodison'), 'KTSN111111')
        self.assertEquals(caverphone('goodlet'), 'KTLT111111')
        self.assertEquals(caverphone('goodlot'), 'KTLT111111')
        self.assertEquals(caverphone('goodman'), 'KTMN111111')
        self.assertEquals(caverphone('goodmanson'), 'KTMNSN1111')
        self.assertEquals(caverphone('goodridge'), 'KTRK111111')
        self.assertEquals(caverphone('goodsir'), 'KTSA111111')
        self.assertEquals(caverphone('goodwin'), 'KTWN111111')
        self.assertEquals(caverphone('goodyer'), 'KTA1111111')
        self.assertEquals(caverphone('gooseman'), 'KSMN111111')
        self.assertEquals(caverphone('gordin'), 'KTN1111111')
        self.assertEquals(caverphone('gordon'), 'KTN1111111')
        self.assertEquals(caverphone('gore-johnston'), 'KRNSTN1111')
        self.assertEquals(caverphone('gore'), 'KA11111111')
        self.assertEquals(caverphone('gorge'), 'KK11111111')
        self.assertEquals(caverphone('gorgeson'), 'KKSN111111')
        self.assertEquals(caverphone('gorham'), 'KM11111111')
        self.assertEquals(caverphone('gormack'), 'KMK1111111')
        self.assertEquals(caverphone('gorman'), 'KMN1111111')
        self.assertEquals(caverphone('gormly'), 'KMLA111111')
        self.assertEquals(caverphone('gorton'), 'KTN1111111')
        self.assertEquals(caverphone('gosham'), 'KSM1111111')
        self.assertEquals(caverphone('gosling'), 'KSLNK11111')
        self.assertEquals(caverphone('gosney'), 'KSNA111111')
        self.assertEquals(caverphone('goudie'), 'KTA1111111')
        self.assertEquals(caverphone('gough'), 'KA11111111')
        self.assertEquals(caverphone('gould'), 'KT11111111')
        self.assertEquals(caverphone('goulston'), 'KSTN111111')
        self.assertEquals(caverphone('goulstone'), 'KSTN111111')
        self.assertEquals(caverphone('gourlay'), 'KLA1111111')
        self.assertEquals(caverphone('gourley'), 'KLA1111111')
        self.assertEquals(caverphone('gourlie'), 'KLA1111111')
        self.assertEquals(caverphone('govan'), 'KFN1111111')
        self.assertEquals(caverphone('gover'), 'KFA1111111')
        self.assertEquals(caverphone('gow'), 'KA11111111')
        self.assertEquals(caverphone('gowans'), 'KWNS111111')
        self.assertEquals(caverphone('gowdy'), 'KTA1111111')
        self.assertEquals(caverphone('gowie'), 'KWA1111111')
        self.assertEquals(caverphone('goy'), 'KA11111111')
        self.assertEquals(caverphone('goyen'), 'KN11111111')
        self.assertEquals(caverphone('grace'), 'KRK1111111')
        self.assertEquals(caverphone('gracie'), 'KRSA111111')
        self.assertEquals(caverphone('grady'), 'KRTA111111')
        self.assertEquals(caverphone('graf'), 'KRF1111111')
        self.assertEquals(caverphone('graham'), 'KRM1111111')
        self.assertEquals(caverphone('grahame'), 'KRM1111111')
        self.assertEquals(caverphone('grahan'), 'KRN1111111')
        self.assertEquals(caverphone('grahm'), 'KRM1111111')
        self.assertEquals(caverphone('graig'), 'KRK1111111')
        self.assertEquals(caverphone('grainger'), 'KRNKA11111')
        self.assertEquals(caverphone('grainm'), 'KRNM111111')
        self.assertEquals(caverphone('grallam'), 'KRLM111111')
        self.assertEquals(caverphone('grame'), 'KRM1111111')
        self.assertEquals(caverphone('grammer'), 'KRMA111111')
        self.assertEquals(caverphone('grandison'), 'KRNTSN1111')
        self.assertEquals(caverphone('grant'), 'KRNT111111')
        self.assertEquals(caverphone('grantham'), 'KRNTM11111')
        self.assertEquals(caverphone('grass'), 'KRS1111111')
        self.assertEquals(caverphone('gratton'), 'KRTN111111')
        self.assertEquals(caverphone('gratwick'), 'KRTWK11111')
        self.assertEquals(caverphone('grave'), 'KRF1111111')
        self.assertEquals(caverphone('graves'), 'KRFS111111')
        self.assertEquals(caverphone('grawford'), 'KRFT111111')
        self.assertEquals(caverphone('gray'), 'KRA1111111')
        self.assertEquals(caverphone('graye'), 'KRA1111111')
        self.assertEquals(caverphone('grealish'), 'KRLS111111')
        self.assertEquals(caverphone('greaney'), 'KRNA111111')
        self.assertEquals(caverphone('greatrex'), 'KRTRK11111')
        self.assertEquals(caverphone('greaves'), 'KRFS111111')
        self.assertEquals(caverphone('green'), 'KRN1111111')
        self.assertEquals(caverphone('greenall'), 'KRNA111111')
        self.assertEquals(caverphone('greene'), 'KRN1111111')
        self.assertEquals(caverphone('greenfield'), 'KRNFT11111')
        self.assertEquals(caverphone('greenhalgh'), 'KRNA111111')
        self.assertEquals(caverphone('greenhough'), 'KRNA111111')
        self.assertEquals(caverphone('greenish'), 'KRNS111111')
        self.assertEquals(caverphone('greenland'), 'KRNLNT1111')
        self.assertEquals(caverphone('greenslade'), 'KRNSLT1111')
        self.assertEquals(caverphone('greensmith'), 'KRNSMT1111')
        self.assertEquals(caverphone('greenway'), 'KRNWA11111')
        self.assertEquals(caverphone('greenwood-wilson'), 'KRNWTWSN11')
        self.assertEquals(caverphone('greenwood'), 'KRNWT11111')
        self.assertEquals(caverphone('greenyer'), 'KRNA111111')
        self.assertEquals(caverphone('greer'), 'KRA1111111')
        self.assertEquals(caverphone('greeves'), 'KRFS111111')
        self.assertEquals(caverphone('gregan'), 'KRKN111111')
        self.assertEquals(caverphone('gregg'), 'KRK1111111')
        self.assertEquals(caverphone('gregory'), 'KRKRA11111')
        self.assertEquals(caverphone('greig'), 'KRK1111111')
        self.assertEquals(caverphone('greigory'), 'KRKRA11111')
        self.assertEquals(caverphone('grenfell'), 'KRNFA11111')
        self.assertEquals(caverphone('gresham'), 'KRSM111111')
        self.assertEquals(caverphone('greves'), 'KRFS111111')
        self.assertEquals(caverphone('grey'), 'KRA1111111')
        self.assertEquals(caverphone('gribben'), 'KRPN111111')
        self.assertEquals(caverphone('grice'), 'KRK1111111')
        self.assertEquals(caverphone('gridgeman'), 'KRKMN11111')
        self.assertEquals(caverphone('grierson'), 'KRSN111111')
        self.assertEquals(caverphone('grieve'), 'KRF1111111')
        self.assertEquals(caverphone('griffen'), 'KRFN111111')
        self.assertEquals(caverphone('griffin'), 'KRFN111111')
        self.assertEquals(caverphone('griffith'), 'KRFT111111')
        self.assertEquals(caverphone('griffiths'), 'KRFTS11111')
        self.assertEquals(caverphone('griffths'), 'KRFTS11111')
        self.assertEquals(caverphone('griflin'), 'KRFLN11111')
        self.assertEquals(caverphone('grig'), 'KRK1111111')
        self.assertEquals(caverphone('grigg'), 'KRK1111111')
        self.assertEquals(caverphone('grigsby'), 'KRKSPA1111')
        self.assertEquals(caverphone('grimaldi'), 'KRMTA11111')
        self.assertEquals(caverphone('grimman'), 'KRMN111111')
        self.assertEquals(caverphone('grimmest'), 'KRMST11111')
        self.assertEquals(caverphone('grimmett'), 'KRMT111111')
        self.assertEquals(caverphone('grimsdale'), 'KRMSTA1111')
        self.assertEquals(caverphone('grimsey'), 'KRMSA11111')
        self.assertEquals(caverphone('grimshaw'), 'KRMSA11111')
        self.assertEquals(caverphone('grimwood'), 'KRMWT11111')
        self.assertEquals(caverphone('grin'), 'KRN1111111')
        self.assertEquals(caverphone('grindlay'), 'KRNTLA1111')
        self.assertEquals(caverphone('grindley'), 'KRNTLA1111')
        self.assertEquals(caverphone('grinyer'), 'KRNA111111')
        self.assertEquals(caverphone('grocott'), 'KRKT111111')
        self.assertEquals(caverphone('grogan'), 'KRKN111111')
        self.assertEquals(caverphone('groom'), 'KRM1111111')
        self.assertEquals(caverphone('grose'), 'KRS1111111')
        self.assertEquals(caverphone('grosse'), 'KRS1111111')
        self.assertEquals(caverphone('grounds'), 'KRNTS11111')
        self.assertEquals(caverphone('grover'), 'KRFA111111')
        self.assertEquals(caverphone('groves'), 'KRFS111111')
        self.assertEquals(caverphone('growden'), 'KRTN111111')
        self.assertEquals(caverphone('grubb'), 'KRP1111111')
        self.assertEquals(caverphone('grubh'), 'KRP1111111')
        self.assertEquals(caverphone('gruitt'), 'KRT1111111')
        self.assertEquals(caverphone('grundy'), 'KRNTA11111')
        self.assertEquals(caverphone('gruszning'), 'KRSNNK1111')
        self.assertEquals(caverphone('grut'), 'KRT1111111')
        self.assertEquals(caverphone('gubbins'), 'KPNS111111')
        self.assertEquals(caverphone('guest'), 'KST1111111')
        self.assertEquals(caverphone('guffie'), 'KFA1111111')
        self.assertEquals(caverphone('guild'), 'KT11111111')
        self.assertEquals(caverphone('guildford'), 'KTFT111111')
        self.assertEquals(caverphone('guilen'), 'KLN1111111')
        self.assertEquals(caverphone('guilford'), 'KFT1111111')
        self.assertEquals(caverphone('guillmot'), 'KMT1111111')
        self.assertEquals(caverphone('guinan'), 'KNN1111111')
        self.assertEquals(caverphone('guinness'), 'KNS1111111')
        self.assertEquals(caverphone('gulbins'), 'KPNS111111')
        self.assertEquals(caverphone('gullan'), 'KLN1111111')
        self.assertEquals(caverphone('gulland'), 'KLNT111111')
        self.assertEquals(caverphone('gullen'), 'KLN1111111')
        self.assertEquals(caverphone('gum'), 'KM11111111')
        self.assertEquals(caverphone('gummer'), 'KMA1111111')
        self.assertEquals(caverphone('gumpatzes'), 'KMPTSS1111')
        self.assertEquals(caverphone('gunion'), 'KNN1111111')
        self.assertEquals(caverphone('gunn'), 'KN11111111')
        self.assertEquals(caverphone('gunner'), 'KNA1111111')
        self.assertEquals(caverphone('gunning'), 'KNNK111111')
        self.assertEquals(caverphone('gunton'), 'KNTN111111')
        self.assertEquals(caverphone('gurming'), 'KMNK111111')
        self.assertEquals(caverphone('gurr'), 'KA11111111')
        self.assertEquals(caverphone('gustafson'), 'KSTFSN1111')
        self.assertEquals(caverphone('guthrie'), 'KTRA111111')
        self.assertEquals(caverphone('gutschlag'), 'KTSKLK1111')
        self.assertEquals(caverphone('gutsell'), 'KTSA111111')
        self.assertEquals(caverphone('guy'), 'KA11111111')
        self.assertEquals(caverphone('guyton'), 'KTN1111111')
        self.assertEquals(caverphone('gve'), 'KF11111111')
        self.assertEquals(caverphone('gwilliams'), 'KWLMS11111')
        self.assertEquals(caverphone('gwyn'), 'KWN1111111')
        self.assertEquals(caverphone('gwynne'), 'KWN1111111')
        self.assertEquals(caverphone('gye'), 'KA11111111')
        self.assertEquals(caverphone('haake'), 'AK11111111')
        self.assertEquals(caverphone('haberfield'), 'APFT111111')
        self.assertEquals(caverphone('habershon'), 'APSN111111')
        self.assertEquals(caverphone('hack'), 'AK11111111')
        self.assertEquals(caverphone('hackett'), 'AKT1111111')
        self.assertEquals(caverphone('haddon'), 'ATN1111111')
        self.assertEquals(caverphone('haddrell'), 'ATRA111111')
        self.assertEquals(caverphone('hade'), 'AT11111111')
        self.assertEquals(caverphone('hadfield'), 'ATFT111111')
        self.assertEquals(caverphone('hadlee'), 'ATLA111111')
        self.assertEquals(caverphone('hadlow'), 'ATLA111111')
        self.assertEquals(caverphone('haffenden'), 'AFNTN11111')
        self.assertEquals(caverphone('hagan'), 'AKN1111111')
        self.assertEquals(caverphone('hagarty'), 'AKTA111111')
        self.assertEquals(caverphone('hagen'), 'AKN1111111')
        self.assertEquals(caverphone('haggart'), 'AKT1111111')
        self.assertEquals(caverphone('haggett'), 'AKT1111111')
        self.assertEquals(caverphone('haggitt'), 'AKT1111111')
        self.assertEquals(caverphone('hague'), 'AKA1111111')
        self.assertEquals(caverphone('haig'), 'AK11111111')
        self.assertEquals(caverphone('haigh'), 'AA11111111')
        self.assertEquals(caverphone('hailes'), 'ALS1111111')
        self.assertEquals(caverphone('hailton'), 'ATN1111111')
        self.assertEquals(caverphone('haines'), 'ANS1111111')
        self.assertEquals(caverphone('hair'), 'AA11111111')
        self.assertEquals(caverphone('hakely'), 'AKLA111111')
        self.assertEquals(caverphone('hal'), 'AA11111111')
        self.assertEquals(caverphone('halberg'), 'APK1111111')
        self.assertEquals(caverphone('halcrow'), 'AKRA111111')
        self.assertEquals(caverphone('haldane'), 'ATN1111111')
        self.assertEquals(caverphone('hale'), 'AA11111111')
        self.assertEquals(caverphone('hales'), 'ALS1111111')
        self.assertEquals(caverphone('halfka'), 'AFKA111111')
        self.assertEquals(caverphone('halford'), 'AFT1111111')
        self.assertEquals(caverphone('halies'), 'ALS1111111')
        self.assertEquals(caverphone('halket'), 'AKT1111111')
        self.assertEquals(caverphone('halkett'), 'AKT1111111')
        self.assertEquals(caverphone('hall'), 'AA11111111')
        self.assertEquals(caverphone('hallam'), 'ALM1111111')
        self.assertEquals(caverphone('hallas'), 'ALS1111111')
        self.assertEquals(caverphone('hallet'), 'ALT1111111')
        self.assertEquals(caverphone('hallett'), 'ALT1111111')
        self.assertEquals(caverphone('halley'), 'ALA1111111')
        self.assertEquals(caverphone('halliday'), 'ALTA111111')
        self.assertEquals(caverphone('halligan'), 'ALKN111111')
        self.assertEquals(caverphone('hallinan'), 'ALNN111111')
        self.assertEquals(caverphone('hallsen'), 'ASN1111111')
        self.assertEquals(caverphone('hally'), 'ALA1111111')
        self.assertEquals(caverphone('halpin'), 'APN1111111')
        self.assertEquals(caverphone('halsinger'), 'ASNKA11111')
        self.assertEquals(caverphone('haly'), 'ALA1111111')
        self.assertEquals(caverphone('ham'), 'AM11111111')
        self.assertEquals(caverphone('hamann'), 'AMN1111111')
        self.assertEquals(caverphone('hambleton'), 'AMPLTN1111')
        self.assertEquals(caverphone('hamblett'), 'AMPLT11111')
        self.assertEquals(caverphone('hamblin'), 'AMPLN11111')
        self.assertEquals(caverphone('hambly'), 'AMPLA11111')
        self.assertEquals(caverphone('hamer'), 'AMA1111111')
        self.assertEquals(caverphone('hames'), 'AMS1111111')
        self.assertEquals(caverphone('hamiiton'), 'AMTN111111')
        self.assertEquals(caverphone('hamill'), 'AMA1111111')
        self.assertEquals(caverphone('hamilton'), 'AMTN111111')
        self.assertEquals(caverphone('hamlyn'), 'AMLN111111')
        self.assertEquals(caverphone('hammer'), 'AMA1111111')
        self.assertEquals(caverphone('hammerly'), 'AMLA111111')
        self.assertEquals(caverphone('hammill'), 'AMA1111111')
        self.assertEquals(caverphone('hammond'), 'AMNT111111')
        self.assertEquals(caverphone('hamon'), 'AMN1111111')
        self.assertEquals(caverphone('hanan'), 'ANN1111111')
        self.assertEquals(caverphone('hananeia'), 'ANNA111111')
        self.assertEquals(caverphone('hancock'), 'ANKK111111')
        self.assertEquals(caverphone('hancox'), 'ANKK111111')
        self.assertEquals(caverphone('hand'), 'ANT1111111')
        self.assertEquals(caverphone('handforth'), 'ANTFT11111')
        self.assertEquals(caverphone('handisides'), 'ANTSTS1111')
        self.assertEquals(caverphone('handley'), 'ANTLA11111')
        self.assertEquals(caverphone('hands'), 'ANTS111111')
        self.assertEquals(caverphone('handscomb'), 'ANTSKM1111')
        self.assertEquals(caverphone('handyside'), 'ANTST11111')
        self.assertEquals(caverphone('hanenina'), 'ANNNA11111')
        self.assertEquals(caverphone('hanger'), 'ANKA111111')
        self.assertEquals(caverphone('hanham'), 'ANM1111111')
        self.assertEquals(caverphone('hankey'), 'ANKA111111')
        self.assertEquals(caverphone('hankins'), 'ANKNS11111')
        self.assertEquals(caverphone('hanley'), 'ANLA111111')
        self.assertEquals(caverphone('hanlin'), 'ANLN111111')
        self.assertEquals(caverphone('hanlon'), 'ANLN111111')
        self.assertEquals(caverphone('hanly'), 'ANLA111111')
        self.assertEquals(caverphone('hanna'), 'ANA1111111')
        self.assertEquals(caverphone('hannagan'), 'ANKN111111')
        self.assertEquals(caverphone('hannah'), 'ANA1111111')
        self.assertEquals(caverphone('hannan'), 'ANN1111111')
        self.assertEquals(caverphone('hannigan'), 'ANKN111111')
        self.assertEquals(caverphone('hanning'), 'ANNK111111')
        self.assertEquals(caverphone('hannon'), 'ANN1111111')
        self.assertEquals(caverphone('hanon'), 'ANN1111111')
        self.assertEquals(caverphone('hanrahan'), 'ANRN111111')
        self.assertEquals(caverphone('hansbury'), 'ANSPRA1111')
        self.assertEquals(caverphone('hansen'), 'ANSN111111')
        self.assertEquals(caverphone('hansford'), 'ANSFT11111')
        self.assertEquals(caverphone('hansforrl'), 'ANSFA11111')
        self.assertEquals(caverphone('hanson'), 'ANSN111111')
        self.assertEquals(caverphone('hansson'), 'ANSN111111')
        self.assertEquals(caverphone('hanton'), 'ANTN111111')
        self.assertEquals(caverphone('hanvey'), 'ANFA111111')
        self.assertEquals(caverphone('haran'), 'ARN1111111')
        self.assertEquals(caverphone('harborne'), 'APN1111111')
        self.assertEquals(caverphone('harborow'), 'APRA111111')
        self.assertEquals(caverphone('harbott'), 'APT1111111')
        self.assertEquals(caverphone('harbrow'), 'APRA111111')
        self.assertEquals(caverphone('hardcastle'), 'ATKSTA1111')
        self.assertEquals(caverphone('harden'), 'ATN1111111')
        self.assertEquals(caverphone('hardey'), 'ATA1111111')
        self.assertEquals(caverphone('hardie'), 'ATA1111111')
        self.assertEquals(caverphone('harding'), 'ATNK111111')
        self.assertEquals(caverphone('hardman'), 'ATMN111111')
        self.assertEquals(caverphone('hardoy'), 'ATA1111111')
        self.assertEquals(caverphone('hards'), 'ATS1111111')
        self.assertEquals(caverphone('hardwick'), 'ATWK111111')
        self.assertEquals(caverphone('hardy'), 'ATA1111111')
        self.assertEquals(caverphone('hare'), 'AA11111111')
        self.assertEquals(caverphone('harford'), 'AFT1111111')
        self.assertEquals(caverphone('hargood'), 'AKT1111111')
        self.assertEquals(caverphone('hargrave'), 'AKRF111111')
        self.assertEquals(caverphone('hargraves'), 'AKRFS11111')
        self.assertEquals(caverphone('hargreave'), 'AKRF111111')
        self.assertEquals(caverphone('hargreaves'), 'AKRFS11111')
        self.assertEquals(caverphone('harker'), 'AKA1111111')
        self.assertEquals(caverphone('harkess'), 'AKS1111111')
        self.assertEquals(caverphone('harkness'), 'AKNS111111')
        self.assertEquals(caverphone('harl'), 'AA11111111')
        self.assertEquals(caverphone('harland'), 'ALNT111111')
        self.assertEquals(caverphone('harle'), 'AA11111111')
        self.assertEquals(caverphone('harley'), 'ALA1111111')
        self.assertEquals(caverphone('harliwich'), 'ALWK111111')
        self.assertEquals(caverphone('harlow'), 'ALA1111111')
        self.assertEquals(caverphone('harman'), 'AMN1111111')
        self.assertEquals(caverphone('harneiss'), 'ANS1111111')
        self.assertEquals(caverphone('harness'), 'ANS1111111')
        self.assertEquals(caverphone('harney'), 'ANA1111111')
        self.assertEquals(caverphone('harold'), 'ART1111111')
        self.assertEquals(caverphone('harper'), 'APA1111111')
        self.assertEquals(caverphone('harrah'), 'ARA1111111')
        self.assertEquals(caverphone('harrap'), 'ARP1111111')
        self.assertEquals(caverphone('harraway'), 'ARWA111111')
        self.assertEquals(caverphone('harre'), 'AA11111111')
        self.assertEquals(caverphone('harrhy'), 'AA11111111')
        self.assertEquals(caverphone('harridge'), 'ARK1111111')
        self.assertEquals(caverphone('harries'), 'ARS1111111')
        self.assertEquals(caverphone('harrington'), 'ARNKTN1111')
        self.assertEquals(caverphone('harris'), 'ARS1111111')
        self.assertEquals(caverphone('harrison'), 'ARSN111111')
        self.assertEquals(caverphone('harrisorl'), 'ARSA111111')
        self.assertEquals(caverphone('harrod'), 'ART1111111')
        self.assertEquals(caverphone('harrold'), 'ART1111111')
        self.assertEquals(caverphone('harrop'), 'ARP1111111')
        self.assertEquals(caverphone('harrould'), 'ART1111111')
        self.assertEquals(caverphone('harrow'), 'ARA1111111')
        self.assertEquals(caverphone('harry'), 'ARA1111111')
        self.assertEquals(caverphone('hart'), 'AT11111111')
        self.assertEquals(caverphone('hartaway'), 'ATWA111111')
        self.assertEquals(caverphone('hartle'), 'ATA1111111')
        self.assertEquals(caverphone('hartley'), 'ATLA111111')
        self.assertEquals(caverphone('hartman'), 'ATMN111111')
        self.assertEquals(caverphone('hartmann'), 'ATMN111111')
        self.assertEquals(caverphone('hartstonge'), 'ATSTNK1111')
        self.assertEquals(caverphone('harty'), 'ATA1111111')
        self.assertEquals(caverphone('harvey'), 'AFA1111111')
        self.assertEquals(caverphone('harvie'), 'AFA1111111')
        self.assertEquals(caverphone('harwood'), 'AWT1111111')
        self.assertEquals(caverphone('haselden'), 'ASTN111111')
        self.assertEquals(caverphone('haskell'), 'ASKA111111')
        self.assertEquals(caverphone('haskins'), 'ASKNS11111')
        self.assertEquals(caverphone('haskoll'), 'ASKA111111')
        self.assertEquals(caverphone('haslett'), 'ASLT111111')
        self.assertEquals(caverphone('hason'), 'ASN1111111')
        self.assertEquals(caverphone('hassall'), 'ASA1111111')
        self.assertEquals(caverphone('hassan'), 'ASN1111111')
        self.assertEquals(caverphone('hast'), 'AST1111111')
        self.assertEquals(caverphone('hastie'), 'ASTA111111')
        self.assertEquals(caverphone('hastings'), 'ASTNKS1111')
        self.assertEquals(caverphone('hastngs'), 'ASTNKS1111')
        self.assertEquals(caverphone('hatcher'), 'AKA1111111')
        self.assertEquals(caverphone('hately'), 'ATLA111111')
        self.assertEquals(caverphone('hathaway'), 'ATWA111111')
        self.assertEquals(caverphone('hatt'), 'AT11111111')
        self.assertEquals(caverphone('hatten'), 'ATN1111111')
        self.assertEquals(caverphone('hatton'), 'ATN1111111')
        self.assertEquals(caverphone('haub'), 'AP11111111')
        self.assertEquals(caverphone('haugh'), 'AA11111111')
        self.assertEquals(caverphone('haughton'), 'ATN1111111')
        self.assertEquals(caverphone('haurahan'), 'ARN1111111')
        self.assertEquals(caverphone('haush'), 'AS11111111')
        self.assertEquals(caverphone('havard'), 'AFT1111111')
        self.assertEquals(caverphone('havelock'), 'AFLK111111')
        self.assertEquals(caverphone('havill'), 'AFA1111111')
        self.assertEquals(caverphone('havward'), 'AFWT111111')
        self.assertEquals(caverphone('hawes'), 'AWS1111111')
        self.assertEquals(caverphone('hawke'), 'AK11111111')
        self.assertEquals(caverphone('hawken'), 'AKN1111111')
        self.assertEquals(caverphone('hawker'), 'AKA1111111')
        self.assertEquals(caverphone('hawkes'), 'AKS1111111')
        self.assertEquals(caverphone('hawkhead'), 'AKT1111111')
        self.assertEquals(caverphone('hawkine'), 'AKN1111111')
        self.assertEquals(caverphone('hawkins'), 'AKNS111111')
        self.assertEquals(caverphone('hawkley'), 'AKLA111111')
        self.assertEquals(caverphone('hawley'), 'ALA1111111')
        self.assertEquals(caverphone('haworth'), 'AWT1111111')
        self.assertEquals(caverphone('hawthorn'), 'ATN1111111')
        self.assertEquals(caverphone('haxlett'), 'AKLT111111')
        self.assertEquals(caverphone('hay'), 'AA11111111')
        self.assertEquals(caverphone('haybittle'), 'APTA111111')
        self.assertEquals(caverphone('hayden'), 'ATN1111111')
        self.assertEquals(caverphone('haydock'), 'ATK1111111')
        self.assertEquals(caverphone('haydon'), 'ATN1111111')
        self.assertEquals(caverphone('haye'), 'AA11111111')
        self.assertEquals(caverphone('hayes'), 'AS11111111')
        self.assertEquals(caverphone('hayman'), 'AMN1111111')
        self.assertEquals(caverphone('haymes'), 'AMS1111111')
        self.assertEquals(caverphone('hayne'), 'AN11111111')
        self.assertEquals(caverphone('haynes'), 'ANS1111111')
        self.assertEquals(caverphone('hayr'), 'AA11111111')
        self.assertEquals(caverphone('hayward'), 'AWT1111111')
        self.assertEquals(caverphone('hazard'), 'AST1111111')
        self.assertEquals(caverphone('hazelwood'), 'ASWT111111')
        self.assertEquals(caverphone('hazlett'), 'ASLT111111')
        self.assertEquals(caverphone('head'), 'AT11111111')
        self.assertEquals(caverphone('heads'), 'ATS1111111')
        self.assertEquals(caverphone('heal'), 'AA11111111')
        self.assertEquals(caverphone('heald'), 'AT11111111')
        self.assertEquals(caverphone('healer'), 'ALA1111111')
        self.assertEquals(caverphone('healey'), 'ALA1111111')
        self.assertEquals(caverphone('healy'), 'ALA1111111')
        self.assertEquals(caverphone('heaney'), 'ANA1111111')
        self.assertEquals(caverphone('heaps'), 'APS1111111')
        self.assertEquals(caverphone('heard'), 'AT11111111')
        self.assertEquals(caverphone('hearile'), 'ARA1111111')
        self.assertEquals(caverphone('hearne'), 'AN11111111')
        self.assertEquals(caverphone('hearty'), 'ATA1111111')
        self.assertEquals(caverphone('heasley'), 'ASLA111111')
        self.assertEquals(caverphone('heasman'), 'ASMN111111')
        self.assertEquals(caverphone('heath'), 'AT11111111')
        self.assertEquals(caverphone('heathcote'), 'ATKT111111')
        self.assertEquals(caverphone('heather'), 'ATA1111111')
        self.assertEquals(caverphone('heathman'), 'ATMN111111')
        self.assertEquals(caverphone('heatley'), 'ATLA111111')
        self.assertEquals(caverphone('heaton'), 'ATN1111111')
        self.assertEquals(caverphone('heaven'), 'AFN1111111')
        self.assertEquals(caverphone('heaxlewood'), 'AKLWT11111')
        self.assertEquals(caverphone('heazelwood'), 'ASWT111111')
        self.assertEquals(caverphone('heazlewood'), 'ASLWT11111')
        self.assertEquals(caverphone('hebbard'), 'APT1111111')
        self.assertEquals(caverphone('hebditch'), 'APTK111111')
        self.assertEquals(caverphone('hector'), 'AKTA111111')
        self.assertEquals(caverphone('hedges'), 'AKS1111111')
        self.assertEquals(caverphone('hedgman'), 'AKMN111111')
        self.assertEquals(caverphone('hedlges'), 'ATKS111111')
        self.assertEquals(caverphone('hedrick'), 'ATRK111111')
        self.assertEquals(caverphone('heenan'), 'ANN1111111')
        self.assertEquals(caverphone('heffernan'), 'AFNN111111')
        self.assertEquals(caverphone('heft'), 'AFT1111111')
        self.assertEquals(caverphone('hegarty'), 'AKTA111111')
        self.assertEquals(caverphone('heggerty'), 'AKTA111111')
        self.assertEquals(caverphone('heggie'), 'AKA1111111')
        self.assertEquals(caverphone('heileson'), 'ALSN111111')
        self.assertEquals(caverphone('helder'), 'ATA1111111')
        self.assertEquals(caverphone('helean'), 'ALN1111111')
        self.assertEquals(caverphone('helier'), 'ALA1111111')
        self.assertEquals(caverphone('hellawell'), 'ALWA111111')
        self.assertEquals(caverphone('heller'), 'ALA1111111')
        self.assertEquals(caverphone('helleyer'), 'ALA1111111')
        self.assertEquals(caverphone('hellier'), 'ALA1111111')
        self.assertEquals(caverphone('hellriegel'), 'ARKA111111')
        self.assertEquals(caverphone('hellyer'), 'ALA1111111')
        self.assertEquals(caverphone('helm'), 'AM11111111')
        self.assertEquals(caverphone('helmore'), 'AMA1111111')
        self.assertEquals(caverphone('helms'), 'AMS1111111')
        self.assertEquals(caverphone('helson'), 'ASN1111111')
        self.assertEquals(caverphone('hely'), 'ALA1111111')
        self.assertEquals(caverphone('hemingway'), 'AMNKWA1111')
        self.assertEquals(caverphone('hemsley'), 'AMSLA11111')
        self.assertEquals(caverphone('henaghan'), 'ANKN111111')
        self.assertEquals(caverphone('hende'), 'ANT1111111')
        self.assertEquals(caverphone('hendebourck'), 'ANTPK11111')
        self.assertEquals(caverphone('henden'), 'ANTN111111')
        self.assertEquals(caverphone('henderson'), 'ANTSN11111')
        self.assertEquals(caverphone('hendetson'), 'ANTTSN1111')
        self.assertEquals(caverphone('hendley'), 'ANTLA11111')
        self.assertEquals(caverphone('hendren'), 'ANTRN11111')
        self.assertEquals(caverphone('hendrick'), 'ANTRK11111')
        self.assertEquals(caverphone('hendry'), 'ANTRA11111')
        self.assertEquals(caverphone('hendy'), 'ANTA111111')
        self.assertEquals(caverphone('heneghan'), 'ANKN111111')
        self.assertEquals(caverphone('henery'), 'ANRA111111')
        self.assertEquals(caverphone('heney'), 'ANA1111111')
        self.assertEquals(caverphone('henke'), 'ANK1111111')
        self.assertEquals(caverphone('henks'), 'ANKS111111')
        self.assertEquals(caverphone('henley'), 'ANLA111111')
        self.assertEquals(caverphone('hennessey'), 'ANSA111111')
        self.assertEquals(caverphone('hennessy'), 'ANSA111111')
        self.assertEquals(caverphone('hennig'), 'ANK1111111')
        self.assertEquals(caverphone('henning'), 'ANNK111111')
        self.assertEquals(caverphone('henry'), 'ANRA111111')
        self.assertEquals(caverphone('hensleigh'), 'ANSLA11111')
        self.assertEquals(caverphone('hensley'), 'ANSLA11111')
        self.assertEquals(caverphone('henton'), 'ANTN111111')
        self.assertEquals(caverphone('henty'), 'ANTA111111')
        self.assertEquals(caverphone('henwood'), 'ANWT111111')
        self.assertEquals(caverphone('hepburn'), 'APN1111111')
        self.assertEquals(caverphone('heppelthwa'), 'APTWA11111')
        self.assertEquals(caverphone('heppelthwaite'), 'APTWT11111')
        self.assertEquals(caverphone('herbert'), 'APT1111111')
        self.assertEquals(caverphone('herbison'), 'APSN111111')
        self.assertEquals(caverphone('herd'), 'AT11111111')
        self.assertEquals(caverphone('herman'), 'AMN1111111')
        self.assertEquals(caverphone('hern'), 'AN11111111')
        self.assertEquals(caverphone('heron'), 'ARN1111111')
        self.assertEquals(caverphone('herrich'), 'ARK1111111')
        self.assertEquals(caverphone('herrick'), 'ARK1111111')
        self.assertEquals(caverphone('herring'), 'ARNK111111')
        self.assertEquals(caverphone('herriot'), 'ART1111111')
        self.assertEquals(caverphone('hertz'), 'ATS1111111')
        self.assertEquals(caverphone('hervey'), 'AFA1111111')
        self.assertEquals(caverphone('heselwood'), 'ASWT111111')
        self.assertEquals(caverphone('hesford'), 'ASFT111111')
        self.assertEquals(caverphone('heslington'), 'ASLNKTN111')
        self.assertEquals(caverphone('heslip'), 'ASLP111111')
        self.assertEquals(caverphone('heslop'), 'ASLP111111')
        self.assertEquals(caverphone('hessell'), 'ASA1111111')
        self.assertEquals(caverphone('hessey'), 'ASA1111111')
        self.assertEquals(caverphone('hessian'), 'ASN1111111')
        self.assertEquals(caverphone('hestinger'), 'ASTNKA1111')
        self.assertEquals(caverphone('hethering'), 'ATRNK11111')
        self.assertEquals(caverphone('hetherington'), 'ATRNKTN111')
        self.assertEquals(caverphone('hett'), 'AT11111111')
        self.assertEquals(caverphone('heward'), 'AWT1111111')
        self.assertEquals(caverphone('hewat'), 'AWT1111111')
        self.assertEquals(caverphone('hewett'), 'AWT1111111')
        self.assertEquals(caverphone('hewitson'), 'AWTSN11111')
        self.assertEquals(caverphone('hewitt'), 'AWT1111111')
        self.assertEquals(caverphone('hewlett'), 'ALT1111111')
        self.assertEquals(caverphone('hewton'), 'ATN1111111')
        self.assertEquals(caverphone('hey'), 'AA11111111')
        self.assertEquals(caverphone('heydon'), 'ATN1111111')
        self.assertEquals(caverphone('heyward'), 'AWT1111111')
        self.assertEquals(caverphone('hickey'), 'AKA1111111')
        self.assertEquals(caverphone('hickinbot'), 'AKNPT11111')
        self.assertEquals(caverphone('hickinbotham'), 'AKNPTM1111')
        self.assertEquals(caverphone('hickman'), 'AKMN111111')
        self.assertEquals(caverphone('hicks'), 'AKS1111111')
        self.assertEquals(caverphone('hickson'), 'AKSN111111')
        self.assertEquals(caverphone('hiddle'), 'ATA1111111')
        self.assertEquals(caverphone('higgie'), 'AKA1111111')
        self.assertEquals(caverphone('higgins'), 'AKNS111111')
        self.assertEquals(caverphone('higginson'), 'AKNSN11111')
        self.assertEquals(caverphone('higgs'), 'AKS1111111')
        self.assertEquals(caverphone('higham'), 'AKM1111111')
        self.assertEquals(caverphone('highet'), 'AKT1111111')
        self.assertEquals(caverphone('highley'), 'ALA1111111')
        self.assertEquals(caverphone('highs'), 'AS11111111')
        self.assertEquals(caverphone('higman'), 'AKMN111111')
        self.assertEquals(caverphone('hiil'), 'AA11111111')
        self.assertEquals(caverphone('hill'), 'AA11111111')
        self.assertEquals(caverphone('hillary'), 'ALRA111111')
        self.assertEquals(caverphone('hilliar'), 'ALA1111111')
        self.assertEquals(caverphone('hilliard'), 'ALT1111111')
        self.assertEquals(caverphone('hillier'), 'ALA1111111')
        self.assertEquals(caverphone('hilliker'), 'ALKA111111')
        self.assertEquals(caverphone('hillis'), 'ALS1111111')
        self.assertEquals(caverphone('hilllker'), 'AKA1111111')
        self.assertEquals(caverphone('hilslop'), 'ASLP111111')
        self.assertEquals(caverphone('hilton'), 'ATN1111111')
        self.assertEquals(caverphone('himburg'), 'AMPK111111')
        self.assertEquals(caverphone('himmel'), 'AMA1111111')
        self.assertEquals(caverphone('hinchcliff'), 'ANKKLF1111')
        self.assertEquals(caverphone('hinchcliffe'), 'ANKKLF1111')
        self.assertEquals(caverphone('hincheliff'), 'ANKLF11111')
        self.assertEquals(caverphone('hincks'), 'ANKS111111')
        self.assertEquals(caverphone('hind'), 'ANT1111111')
        self.assertEquals(caverphone('hinde'), 'ANT1111111')
        self.assertEquals(caverphone('hindes'), 'ANTS111111')
        self.assertEquals(caverphone('hindle'), 'ANTA111111')
        self.assertEquals(caverphone('hindmarsh'), 'ANTMS11111')
        self.assertEquals(caverphone('hinds'), 'ANTS111111')
        self.assertEquals(caverphone('hines'), 'ANS1111111')
        self.assertEquals(caverphone('hinex'), 'ANK1111111')
        self.assertEquals(caverphone('hingley'), 'ANKLA11111')
        self.assertEquals(caverphone('hinkley'), 'ANKLA11111')
        self.assertEquals(caverphone('hinton'), 'ANTN111111')
        self.assertEquals(caverphone('hiorns'), 'ANS1111111')
        self.assertEquals(caverphone('hirt'), 'AT11111111')
        self.assertEquals(caverphone('hiscock'), 'ASKK111111')
        self.assertEquals(caverphone('hiscoke'), 'ASKK111111')
        self.assertEquals(caverphone('hisgrove'), 'ASKRF11111')
        self.assertEquals(caverphone('hislol'), 'ASLA111111')
        self.assertEquals(caverphone('hislop'), 'ASLP111111')
        self.assertEquals(caverphone('hisshion'), 'ASN1111111')
        self.assertEquals(caverphone('hitchcock'), 'AKKK111111')
        self.assertEquals(caverphone('hitchcox'), 'AKKK111111')
        self.assertEquals(caverphone('hitchell'), 'AKA1111111')
        self.assertEquals(caverphone('hitchon'), 'AKN1111111')
        self.assertEquals(caverphone('hits'), 'ATS1111111')
        self.assertEquals(caverphone('hitt'), 'AT11111111')
        self.assertEquals(caverphone('hoad'), 'AT11111111')
        self.assertEquals(caverphone('hoar'), 'AA11111111')
        self.assertEquals(caverphone('hoare'), 'AA11111111')
        self.assertEquals(caverphone('hoatten'), 'ATN1111111')
        self.assertEquals(caverphone('hobbs'), 'APS1111111')
        self.assertEquals(caverphone('hobby'), 'APA1111111')
        self.assertEquals(caverphone('hobcraft'), 'APKRFT1111')
        self.assertEquals(caverphone('hobcroft'), 'APKRFT1111')
        self.assertEquals(caverphone('hobday'), 'APTA111111')
        self.assertEquals(caverphone('hobsoil'), 'APSA111111')
        self.assertEquals(caverphone('hobson'), 'APSN111111')
        self.assertEquals(caverphone('hocking'), 'AKNK111111')
        self.assertEquals(caverphone('hodgaon'), 'AKN1111111')
        self.assertEquals(caverphone('hodge'), 'AK11111111')
        self.assertEquals(caverphone('hodges'), 'AKS1111111')
        self.assertEquals(caverphone('hodgetts'), 'AKTS111111')
        self.assertEquals(caverphone('hodgins'), 'AKNS111111')
        self.assertEquals(caverphone('hodgkins'), 'AKNS111111')
        self.assertEquals(caverphone('hodgkinson'), 'AKNSN11111')
        self.assertEquals(caverphone('hodgsin'), 'AKSN111111')
        self.assertEquals(caverphone('hodgson'), 'AKSN111111')
        self.assertEquals(caverphone('hodkins'), 'ATKNS11111')
        self.assertEquals(caverphone('hodson'), 'ATSN111111')
        self.assertEquals(caverphone('hoeking'), 'AKNK111111')
        self.assertEquals(caverphone('hoff'), 'AF11111111')
        self.assertEquals(caverphone('hoffman'), 'AFMN111111')
        self.assertEquals(caverphone('hoffmann'), 'AFMN111111')
        self.assertEquals(caverphone('hoffmeister'), 'AFMSTA1111')
        self.assertEquals(caverphone('hofland'), 'AFLNT11111')
        self.assertEquals(caverphone('hog'), 'AK11111111')
        self.assertEquals(caverphone('hogan'), 'AKN1111111')
        self.assertEquals(caverphone('hogarth'), 'AKT1111111')
        self.assertEquals(caverphone('hogg'), 'AK11111111')
        self.assertEquals(caverphone('hogue'), 'AKA1111111')
        self.assertEquals(caverphone('hoirns'), 'ANS1111111')
        self.assertEquals(caverphone('holander'), 'ALNTA11111')
        self.assertEquals(caverphone('holben'), 'APN1111111')
        self.assertEquals(caverphone('holdaway'), 'ATWA111111')
        self.assertEquals(caverphone('holden'), 'ATN1111111')
        self.assertEquals(caverphone('holder'), 'ATA1111111')
        self.assertEquals(caverphone('holderness'), 'ATNS111111')
        self.assertEquals(caverphone('holdgate'), 'AKT1111111')
        self.assertEquals(caverphone('holdsworth'), 'ATSWT11111')
        self.assertEquals(caverphone('holgate'), 'AKT1111111')
        self.assertEquals(caverphone('holiand'), 'ALNT111111')
        self.assertEquals(caverphone('hollamby'), 'ALMPA11111')
        self.assertEquals(caverphone('holland'), 'ALNT111111')
        self.assertEquals(caverphone('hollander'), 'ALNTA11111')
        self.assertEquals(caverphone('hollands'), 'ALNTS11111')
        self.assertEquals(caverphone('hollebon'), 'ALPN111111')
        self.assertEquals(caverphone('holley'), 'ALA1111111')
        self.assertEquals(caverphone('hollick'), 'ALK1111111')
        self.assertEquals(caverphone('hollingshead'), 'ALNKST1111')
        self.assertEquals(caverphone('hollingworth'), 'ALNKWT1111')
        self.assertEquals(caverphone('hollner'), 'ANA1111111')
        self.assertEquals(caverphone('hollow'), 'ALA1111111')
        self.assertEquals(caverphone('holloway'), 'ALWA111111')
        self.assertEquals(caverphone('hollows'), 'ALS1111111')
        self.assertEquals(caverphone('holman'), 'AMN1111111')
        self.assertEquals(caverphone('holmes-libbis'), 'AMSLPS1111')
        self.assertEquals(caverphone('holmes'), 'AMS1111111')
        self.assertEquals(caverphone('holmess'), 'AMS1111111')
        self.assertEquals(caverphone('holroyd'), 'ART1111111')
        self.assertEquals(caverphone('holst'), 'AST1111111')
        self.assertEquals(caverphone('holsted'), 'ASTT111111')
        self.assertEquals(caverphone('holsten'), 'ASTN111111')
        self.assertEquals(caverphone('holt'), 'AT11111111')
        self.assertEquals(caverphone('homan'), 'AMN1111111')
        self.assertEquals(caverphone('home'), 'AM11111111')
        self.assertEquals(caverphone('homer'), 'AMA1111111')
        self.assertEquals(caverphone('homfray'), 'AMFRA11111')
        self.assertEquals(caverphone('honer'), 'ANA1111111')
        self.assertEquals(caverphone('honeybone'), 'ANPN111111')
        self.assertEquals(caverphone('honeywood'), 'ANWT111111')
        self.assertEquals(caverphone('honner'), 'ANA1111111')
        self.assertEquals(caverphone('hoochoo'), 'AKA1111111')
        self.assertEquals(caverphone('hood'), 'AT11111111')
        self.assertEquals(caverphone('hoogee'), 'AKA1111111')
        self.assertEquals(caverphone('hook'), 'AK11111111')
        self.assertEquals(caverphone('hooker'), 'AKA1111111')
        self.assertEquals(caverphone('hoole'), 'AA11111111')
        self.assertEquals(caverphone('hooley'), 'ALA1111111')
        self.assertEquals(caverphone('hooper'), 'APA1111111')
        self.assertEquals(caverphone('hopcraft'), 'APKRFT1111')
        self.assertEquals(caverphone('hope'), 'AP11111111')
        self.assertEquals(caverphone('hopewell'), 'APWA111111')
        self.assertEquals(caverphone('hopgood'), 'APKT111111')
        self.assertEquals(caverphone('hopkins'), 'APKNS11111')
        self.assertEquals(caverphone('hopkinson'), 'APKNSN1111')
        self.assertEquals(caverphone('hopkirk'), 'APKK111111')
        self.assertEquals(caverphone('hopper'), 'APA1111111')
        self.assertEquals(caverphone('hopwood'), 'APWT111111')
        self.assertEquals(caverphone('horan'), 'ARN1111111')
        self.assertEquals(caverphone('hordern'), 'ATN1111111')
        self.assertEquals(caverphone('hore'), 'AA11111111')
        self.assertEquals(caverphone('hormann'), 'AMN1111111')
        self.assertEquals(caverphone('horn'), 'AN11111111')
        self.assertEquals(caverphone('hornal'), 'ANA1111111')
        self.assertEquals(caverphone('hornby'), 'ANPA111111')
        self.assertEquals(caverphone('horncastle'), 'ANKSTA1111')
        self.assertEquals(caverphone('horncy'), 'ANSA111111')
        self.assertEquals(caverphone('horne'), 'AN11111111')
        self.assertEquals(caverphone('hornell'), 'ANA1111111')
        self.assertEquals(caverphone('horner'), 'ANA1111111')
        self.assertEquals(caverphone('horniblow'), 'ANPLA11111')
        self.assertEquals(caverphone('hornsby'), 'ANSPA11111')
        self.assertEquals(caverphone('horris'), 'ARS1111111')
        self.assertEquals(caverphone('horrobin'), 'ARPN111111')
        self.assertEquals(caverphone('horsburg'), 'ASPK111111')
        self.assertEquals(caverphone('horsburgh'), 'ASPA111111')
        self.assertEquals(caverphone('horsecroft'), 'ASKRFT1111')
        self.assertEquals(caverphone('horsham'), 'ASM1111111')
        self.assertEquals(caverphone('horsman'), 'ASMN111111')
        self.assertEquals(caverphone('hortle'), 'ATA1111111')
        self.assertEquals(caverphone('horton'), 'ATN1111111')
        self.assertEquals(caverphone('horwood'), 'AWT1111111')
        self.assertEquals(caverphone('hosee'), 'ASA1111111')
        self.assertEquals(caverphone('hoseit'), 'AST1111111')
        self.assertEquals(caverphone('hosie'), 'ASA1111111')
        self.assertEquals(caverphone('hoskin'), 'ASKN111111')
        self.assertEquals(caverphone('hosking'), 'ASKNK11111')
        self.assertEquals(caverphone('hoskins'), 'ASKNS11111')
        self.assertEquals(caverphone('hossack'), 'ASK1111111')
        self.assertEquals(caverphone('hotop'), 'ATP1111111')
        self.assertEquals(caverphone('hotton'), 'ATN1111111')
        self.assertEquals(caverphone('houghton'), 'ATN1111111')
        self.assertEquals(caverphone('houlahan'), 'ALN1111111')
        self.assertEquals(caverphone('hould'), 'AT11111111')
        self.assertEquals(caverphone('houliston'), 'ALSTN11111')
        self.assertEquals(caverphone('houlston'), 'ASTN111111')
        self.assertEquals(caverphone('houston'), 'ASTN111111')
        self.assertEquals(caverphone('how'), 'AA11111111')
        self.assertEquals(caverphone('howard'), 'AWT1111111')
        self.assertEquals(caverphone('howarth'), 'AWT1111111')
        self.assertEquals(caverphone('howat'), 'AWT1111111')
        self.assertEquals(caverphone('howatson'), 'AWTSN11111')
        self.assertEquals(caverphone('howden'), 'ATN1111111')
        self.assertEquals(caverphone('howe'), 'AA11111111')
        self.assertEquals(caverphone('howejohns'), 'AWNS111111')
        self.assertEquals(caverphone('howell'), 'AWA1111111')
        self.assertEquals(caverphone('howes'), 'AWS1111111')
        self.assertEquals(caverphone('howie'), 'AWA1111111')
        self.assertEquals(caverphone('howison'), 'AWSN111111')
        self.assertEquals(caverphone('howlett'), 'ALT1111111')
        self.assertEquals(caverphone('howley'), 'ALA1111111')
        self.assertEquals(caverphone('howman'), 'AMN1111111')
        self.assertEquals(caverphone('howorth'), 'AWT1111111')
        self.assertEquals(caverphone('howrth'), 'AT11111111')
        self.assertEquals(caverphone('hows'), 'AS11111111')
        self.assertEquals(caverphone('hoy'), 'AA11111111')
        self.assertEquals(caverphone('hoyne'), 'AN11111111')
        self.assertEquals(caverphone('huband'), 'APNT111111')
        self.assertEquals(caverphone('hubbard'), 'APT1111111')
        self.assertEquals(caverphone('hubble'), 'APA1111111')
        self.assertEquals(caverphone('hucker'), 'AKA1111111')
        self.assertEquals(caverphone('hucklebridge'), 'AKLPRK1111')
        self.assertEquals(caverphone('hudd'), 'AT11111111')
        self.assertEquals(caverphone('huddleston'), 'ATLSTN1111')
        self.assertEquals(caverphone('huddlestone'), 'ATLSTN1111')
        self.assertEquals(caverphone('hudson'), 'ATSN111111')
        self.assertEquals(caverphone('hugget'), 'AKT1111111')
        self.assertEquals(caverphone('huggett'), 'AKT1111111')
        self.assertEquals(caverphone('huggins'), 'AKNS111111')
        self.assertEquals(caverphone('hughan'), 'AKN1111111')
        self.assertEquals(caverphone('hughes'), 'AKS1111111')
        self.assertEquals(caverphone('hughson'), 'ASN1111111')
        self.assertEquals(caverphone('hulands'), 'ALNTS11111')
        self.assertEquals(caverphone('hulme'), 'AM11111111')
        self.assertEquals(caverphone('hume'), 'AM11111111')
        self.assertEquals(caverphone('humphrey'), 'AMFRA11111')
        self.assertEquals(caverphone('humphreys'), 'AMFRS11111')
        self.assertEquals(caverphone('humphries'), 'AMFRS11111')
        self.assertEquals(caverphone('hungerford'), 'ANKFT11111')
        self.assertEquals(caverphone('hunker'), 'ANKA111111')
        self.assertEquals(caverphone('hunrter'), 'ANTA111111')
        self.assertEquals(caverphone('hunt'), 'ANT1111111')
        self.assertEquals(caverphone('hunter'), 'ANTA111111')
        self.assertEquals(caverphone('huntley'), 'ANTLA11111')
        self.assertEquals(caverphone('hurd'), 'AT11111111')
        self.assertEquals(caverphone('hurdley'), 'ATLA111111')
        self.assertEquals(caverphone('hurley'), 'ALA1111111')
        self.assertEquals(caverphone('hurlson'), 'ASN1111111')
        self.assertEquals(caverphone('hurndell'), 'ANTA111111')
        self.assertEquals(caverphone('hurrell'), 'ARA1111111')
        self.assertEquals(caverphone('hurring'), 'ARNK111111')
        self.assertEquals(caverphone('hurst'), 'AST1111111')
        self.assertEquals(caverphone('hurt'), 'AT11111111')
        self.assertEquals(caverphone('husband'), 'ASPNT11111')
        self.assertEquals(caverphone('hussey'), 'ASA1111111')
        self.assertEquals(caverphone('huston'), 'ASTN111111')
        self.assertEquals(caverphone('hutcheon'), 'AKN1111111')
        self.assertEquals(caverphone('hutcheson'), 'AKSN111111')
        self.assertEquals(caverphone('hutchings'), 'AKNKS11111')
        self.assertEquals(caverphone('hutchins'), 'AKNS111111')
        self.assertEquals(caverphone('hutchinson'), 'AKNSN11111')
        self.assertEquals(caverphone('hutchison'), 'AKSN111111')
        self.assertEquals(caverphone('huts'), 'ATS1111111')
        self.assertEquals(caverphone('hutt'), 'AT11111111')
        self.assertEquals(caverphone('hutton'), 'ATN1111111')
        self.assertEquals(caverphone('huxtable'), 'AKTPA11111')
        self.assertEquals(caverphone('hvslop'), 'AFSLP11111')
        self.assertEquals(caverphone('hyde harris'), 'ATRS111111')
        self.assertEquals(caverphone('hyde-harris'), 'ATRS111111')
        self.assertEquals(caverphone('hyde'), 'AT11111111')
        self.assertEquals(caverphone('hyder'), 'ATA1111111')
        self.assertEquals(caverphone('hydes'), 'ATS1111111')
        self.assertEquals(caverphone('hyland'), 'ALNT111111')
        self.assertEquals(caverphone('hylnen'), 'ANN1111111')
        self.assertEquals(caverphone('hymen'), 'AMN1111111')
        self.assertEquals(caverphone('hyndman'), 'ANTMN11111')
        self.assertEquals(caverphone('hynes'), 'ANS1111111')
        self.assertEquals(caverphone('hynet'), 'ANT1111111')
        self.assertEquals(caverphone('hypes'), 'APS1111111')
        self.assertEquals(caverphone('hyslop'), 'ASLP111111')
        self.assertEquals(caverphone('iaing'), 'ANK1111111')
        self.assertEquals(caverphone('ibbetson'), 'APTSN11111')
        self.assertEquals(caverphone('ibbotson'), 'APTSN11111')
        self.assertEquals(caverphone('idiens'), 'ATNS111111')
        self.assertEquals(caverphone('idour'), 'ATA1111111')
        self.assertEquals(caverphone('iggo'), 'AKA1111111')
        self.assertEquals(caverphone('iles'), 'ALS1111111')
        self.assertEquals(caverphone('illes'), 'ALS1111111')
        self.assertEquals(caverphone('illingworth'), 'ALNKWT1111')
        self.assertEquals(caverphone('imrie'), 'AMRA111111')
        self.assertEquals(caverphone('ince'), 'ANK1111111')
        self.assertEquals(caverphone('incrocci'), 'ANKRKSA111')
        self.assertEquals(caverphone('inder'), 'ANTA111111')
        self.assertEquals(caverphone('ingle'), 'ANKA111111')
        self.assertEquals(caverphone('ingles'), 'ANKLS11111')
        self.assertEquals(caverphone('inglis'), 'ANKLS11111')
        self.assertEquals(caverphone('ingram'), 'ANKRM11111')
        self.assertEquals(caverphone('ings'), 'ANKS111111')
        self.assertEquals(caverphone('ingstolle'), 'ANKSTA1111')
        self.assertEquals(caverphone('ingstone'), 'ANKSTN1111')
        self.assertEquals(caverphone('innes'), 'ANS1111111')
        self.assertEquals(caverphone('innis'), 'ANS1111111')
        self.assertEquals(caverphone('inram'), 'ANRM111111')
        self.assertEquals(caverphone('instone'), 'ANSTN11111')
        self.assertEquals(caverphone('inward'), 'ANWT111111')
        self.assertEquals(caverphone('inwood'), 'ANWT111111')
        self.assertEquals(caverphone('iones'), 'ANS1111111')
        self.assertEquals(caverphone('ireland'), 'ARLNT11111')
        self.assertEquals(caverphone('ironside'), 'ARNST11111')
        self.assertEquals(caverphone('irvine'), 'AFN1111111')
        self.assertEquals(caverphone('irving'), 'AFNK111111')
        self.assertEquals(caverphone('irwin'), 'AWN1111111')
        self.assertEquals(caverphone('isaac'), 'ASK1111111')
        self.assertEquals(caverphone('isaacs'), 'ASKS111111')
        self.assertEquals(caverphone('isaae'), 'ASA1111111')
        self.assertEquals(caverphone('isbister'), 'ASPSTA1111')
        self.assertEquals(caverphone('isdale'), 'ASTA111111')
        self.assertEquals(caverphone('isitt'), 'AST1111111')
        self.assertEquals(caverphone('islip'), 'ASLP111111')
        self.assertEquals(caverphone('israel'), 'ASRA111111')
        self.assertEquals(caverphone('isteed'), 'ASTT111111')
        self.assertEquals(caverphone('ives'), 'AFS1111111')
        self.assertEquals(caverphone('ivimev'), 'AFMF111111')
        self.assertEquals(caverphone('ivimey'), 'AFMA111111')
        self.assertEquals(caverphone('ivory'), 'AFRA111111')
        self.assertEquals(caverphone('jaap'), 'YP11111111')
        self.assertEquals(caverphone('jack'), 'YK11111111')
        self.assertEquals(caverphone('jackison'), 'YKSN111111')
        self.assertEquals(caverphone('jacksoh'), 'YKSA111111')
        self.assertEquals(caverphone('jackson'), 'YKSN111111')
        self.assertEquals(caverphone('jackways'), 'YKWS111111')
        self.assertEquals(caverphone('jacl'), 'YKA1111111')
        self.assertEquals(caverphone('jacob'), 'YKP1111111')
        self.assertEquals(caverphone('jacobs'), 'YKPS111111')
        self.assertEquals(caverphone('jacobsen'), 'YKPSN11111')
        self.assertEquals(caverphone('jacobson'), 'YKPSN11111')
        self.assertEquals(caverphone('jacques'), 'YKS1111111')
        self.assertEquals(caverphone('jager'), 'YKA1111111')
        self.assertEquals(caverphone('jago'), 'YKA1111111')
        self.assertEquals(caverphone('jaicobs'), 'YKPS111111')
        self.assertEquals(caverphone('james'), 'YMS1111111')
        self.assertEquals(caverphone('jameson'), 'YMSN111111')
        self.assertEquals(caverphone('jamieson'), 'YMSN111111')
        self.assertEquals(caverphone('jamison'), 'YMSN111111')
        self.assertEquals(caverphone('jane'), 'YN11111111')
        self.assertEquals(caverphone('janowsky'), 'YNSKA11111')
        self.assertEquals(caverphone('jansen'), 'YNSN111111')
        self.assertEquals(caverphone('janson'), 'YNSN111111')
        self.assertEquals(caverphone('jaokson'), 'YKSN111111')
        self.assertEquals(caverphone('japp'), 'YP11111111')
        self.assertEquals(caverphone('jaquiery'), 'YKRA111111')
        self.assertEquals(caverphone('jarden'), 'YTN1111111')
        self.assertEquals(caverphone('jardine'), 'YTN1111111')
        self.assertEquals(caverphone('jarman'), 'YMN1111111')
        self.assertEquals(caverphone('jarnes'), 'YNS1111111')
        self.assertEquals(caverphone('jarves'), 'YFS1111111')
        self.assertEquals(caverphone('jarvie'), 'YFA1111111')
        self.assertEquals(caverphone('jarvis'), 'YFS1111111')
        self.assertEquals(caverphone('jeannings'), 'YNNKS11111')
        self.assertEquals(caverphone('jeavons'), 'YFNS111111')
        self.assertEquals(caverphone('jefcoate'), 'YFKT111111')
        self.assertEquals(caverphone('jefferson'), 'YFSN111111')
        self.assertEquals(caverphone('jeffery'), 'YFRA111111')
        self.assertEquals(caverphone('jeffrey'), 'YFRA111111')
        self.assertEquals(caverphone('jeffreys'), 'YFRS111111')
        self.assertEquals(caverphone('jeffries'), 'YFRS111111')
        self.assertEquals(caverphone('jeffs'), 'YFS1111111')
        self.assertEquals(caverphone('jefierson'), 'YFSN111111')
        self.assertEquals(caverphone('jefterson'), 'YFTSN11111')
        self.assertEquals(caverphone('jelley'), 'YLA1111111')
        self.assertEquals(caverphone('jells'), 'YS11111111')
        self.assertEquals(caverphone('jelly'), 'YLA1111111')
        self.assertEquals(caverphone('jenkin'), 'YNKN111111')
        self.assertEquals(caverphone('jenkins'), 'YNKNS11111')
        self.assertEquals(caverphone('jenks'), 'YNKS111111')
        self.assertEquals(caverphone('jenner'), 'YNA1111111')
        self.assertEquals(caverphone('jennings'), 'YNNKS11111')
        self.assertEquals(caverphone('jensen'), 'YNSN111111')
        self.assertEquals(caverphone('jenson'), 'YNSN111111')
        self.assertEquals(caverphone('jenvey'), 'YNFA111111')
        self.assertEquals(caverphone('jephson'), 'YFSN111111')
        self.assertEquals(caverphone('jepson'), 'YPSN111111')
        self.assertEquals(caverphone('jerkins'), 'YKNS111111')
        self.assertEquals(caverphone('jesse'), 'YS11111111')
        self.assertEquals(caverphone('jessep'), 'YSP1111111')
        self.assertEquals(caverphone('jewett'), 'YWT1111111')
        self.assertEquals(caverphone('jewiss'), 'YWS1111111')
        self.assertEquals(caverphone('jlardey'), 'ALTA111111')
        self.assertEquals(caverphone('jobberns'), 'YPNS111111')
        self.assertEquals(caverphone('jober'), 'YPA1111111')
        self.assertEquals(caverphone('joblin'), 'YPLN111111')
        self.assertEquals(caverphone('joe'), 'YA11111111')
        self.assertEquals(caverphone('joel'), 'YA11111111')
        self.assertEquals(caverphone('johansen'), 'YNSN111111')
        self.assertEquals(caverphone('johansson'), 'YNSN111111')
        self.assertEquals(caverphone('johhston'), 'YSTN111111')
        self.assertEquals(caverphone('john'), 'YN11111111')
        self.assertEquals(caverphone('johns'), 'YNS1111111')
        self.assertEquals(caverphone('johnsen'), 'YNSN111111')
        self.assertEquals(caverphone('johnson'), 'YNSN111111')
        self.assertEquals(caverphone('johnston'), 'YNSTN11111')
        self.assertEquals(caverphone('johnstone'), 'YNSTN11111')
        self.assertEquals(caverphone('jolly'), 'YLA1111111')
        self.assertEquals(caverphone('jolmson'), 'YMSN111111')
        self.assertEquals(caverphone('joncs'), 'YNKS111111')
        self.assertEquals(caverphone('jondon'), 'YNTN111111')
        self.assertEquals(caverphone('jones-neilson'), 'YNSNSN1111')
        self.assertEquals(caverphone('jones'), 'YNS1111111')
        self.assertEquals(caverphone('jopp'), 'YP11111111')
        self.assertEquals(caverphone('jopsen'), 'YPSN111111')
        self.assertEquals(caverphone('jopson'), 'YPSN111111')
        self.assertEquals(caverphone('jordan'), 'YTN1111111')
        self.assertEquals(caverphone('jory'), 'YRA1111111')
        self.assertEquals(caverphone('joseph'), 'YSF1111111')
        self.assertEquals(caverphone('josephson'), 'YSFSN11111')
        self.assertEquals(caverphone('josland'), 'YSLNT11111')
        self.assertEquals(caverphone('joslin'), 'YSLN111111')
        self.assertEquals(caverphone('joss'), 'YS11111111')
        self.assertEquals(caverphone('joues'), 'YS11111111')
        self.assertEquals(caverphone('joughin'), 'YKN1111111')
        self.assertEquals(caverphone('jovce'), 'YFK1111111')
        self.assertEquals(caverphone('jowey'), 'YWA1111111')
        self.assertEquals(caverphone('jowitt'), 'YWT1111111')
        self.assertEquals(caverphone('jowsey'), 'YSA1111111')
        self.assertEquals(caverphone('jowsy'), 'YSA1111111')
        self.assertEquals(caverphone('joyce'), 'YK11111111')
        self.assertEquals(caverphone('joyee'), 'YA11111111')
        self.assertEquals(caverphone('joyner'), 'YNA1111111')
        self.assertEquals(caverphone('joynt'), 'YNT1111111')
        self.assertEquals(caverphone('judd'), 'YT11111111')
        self.assertEquals(caverphone('judson'), 'YTSN111111')
        self.assertEquals(caverphone('jukes'), 'YKS1111111')
        self.assertEquals(caverphone('julian'), 'YLN1111111')
        self.assertEquals(caverphone('julie'), 'YLA1111111')
        self.assertEquals(caverphone('julin'), 'YLN1111111')
        self.assertEquals(caverphone('julius'), 'YLS1111111')
        self.assertEquals(caverphone('jull'), 'YA11111111')
        self.assertEquals(caverphone('junge'), 'YNK1111111')
        self.assertEquals(caverphone('jurdine'), 'YTN1111111')
        self.assertEquals(caverphone('juries'), 'YRS1111111')
        self.assertEquals(caverphone('jury'), 'YRA1111111')
        self.assertEquals(caverphone('justice'), 'YSTK111111')
        self.assertEquals(caverphone('justin'), 'YSTN111111')
        self.assertEquals(caverphone('kahlenberg'), 'KLNPK11111')
        self.assertEquals(caverphone('kain'), 'KN11111111')
        self.assertEquals(caverphone('kaler'), 'KLA1111111')
        self.assertEquals(caverphone('kane'), 'KN11111111')
        self.assertEquals(caverphone('kania'), 'KNA1111111')
        self.assertEquals(caverphone('kannervischer'), 'KNFSKA1111')
        self.assertEquals(caverphone('kannewischer'), 'KNWSKA1111')
        self.assertEquals(caverphone('karney'), 'KNA1111111')
        self.assertEquals(caverphone('kavanagh'), 'KFNA111111')
        self.assertEquals(caverphone('kay'), 'KA11111111')
        self.assertEquals(caverphone('kaye'), 'KA11111111')
        self.assertEquals(caverphone('keach'), 'KK11111111')
        self.assertEquals(caverphone('kean'), 'KN11111111')
        self.assertEquals(caverphone('keane'), 'KN11111111')
        self.assertEquals(caverphone('kearney'), 'KNA1111111')
        self.assertEquals(caverphone('kearns'), 'KNS1111111')
        self.assertEquals(caverphone('kearsley'), 'KSLA111111')
        self.assertEquals(caverphone('keast'), 'KST1111111')
        self.assertEquals(caverphone('keates'), 'KTS1111111')
        self.assertEquals(caverphone('keating'), 'KTNK111111')
        self.assertEquals(caverphone('kebblewhite'), 'KPLWT11111')
        self.assertEquals(caverphone('kedzlie'), 'KTSLA11111')
        self.assertEquals(caverphone('kee'), 'KA11111111')
        self.assertEquals(caverphone('kee]ey'), 'KA11111111')
        self.assertEquals(caverphone('keeler'), 'KLA1111111')
        self.assertEquals(caverphone('keeley'), 'KLA1111111')
        self.assertEquals(caverphone('keeling'), 'KLNK111111')
        self.assertEquals(caverphone('keen'), 'KN11111111')
        self.assertEquals(caverphone('keenall'), 'KNA1111111')
        self.assertEquals(caverphone('keenan oli'), 'KNNLA11111')
        self.assertEquals(caverphone('keenan'), 'KNN1111111')
        self.assertEquals(caverphone('keene'), 'KN11111111')
        self.assertEquals(caverphone('keennelly'), 'KNLA111111')
        self.assertEquals(caverphone('keeshan'), 'KSN1111111')
        self.assertEquals(caverphone('kehoe'), 'KA11111111')
        self.assertEquals(caverphone('keillor'), 'KLA1111111')
        self.assertEquals(caverphone('keinan'), 'KNN1111111')
        self.assertEquals(caverphone('keir'), 'KA11111111')
        self.assertEquals(caverphone('keirnan'), 'KNN1111111')
        self.assertEquals(caverphone('keith'), 'KT11111111')
        self.assertEquals(caverphone('keliher'), 'KLA1111111')
        self.assertEquals(caverphone('kellahan'), 'KLN1111111')
        self.assertEquals(caverphone('kellan'), 'KLN1111111')
        self.assertEquals(caverphone('kellas'), 'KLS1111111')
        self.assertEquals(caverphone('kellehan'), 'KLN1111111')
        self.assertEquals(caverphone('keller'), 'KLA1111111')
        self.assertEquals(caverphone('kelley'), 'KLA1111111')
        self.assertEquals(caverphone('kelliher'), 'KLA1111111')
        self.assertEquals(caverphone('kelly'), 'KLA1111111')
        self.assertEquals(caverphone('kemohan'), 'KMN1111111')
        self.assertEquals(caverphone('kemp'), 'KMP1111111')
        self.assertEquals(caverphone('kempson'), 'KMPSN11111')
        self.assertEquals(caverphone('kempthorne'), 'KMPTN11111')
        self.assertEquals(caverphone('kempton'), 'KMPTN11111')
        self.assertEquals(caverphone('kemshed'), 'KMST111111')
        self.assertEquals(caverphone('kemsley'), 'KMSLA11111')
        self.assertEquals(caverphone('kendall'), 'KNTA111111')
        self.assertEquals(caverphone('kendell'), 'KNTA111111')
        self.assertEquals(caverphone('kendrick'), 'KNTRK11111')
        self.assertEquals(caverphone('kenllard'), 'KNLT111111')
        self.assertEquals(caverphone('kenn'), 'KN11111111')
        self.assertEquals(caverphone('kenna'), 'KNA1111111')
        self.assertEquals(caverphone('kennard'), 'KNT1111111')
        self.assertEquals(caverphone('kenneally'), 'KNLA111111')
        self.assertEquals(caverphone('kennealy'), 'KNLA111111')
        self.assertEquals(caverphone('kennedy'), 'KNTA111111')
        self.assertEquals(caverphone('kennelly'), 'KNLA111111')
        self.assertEquals(caverphone('kennerly'), 'KNLA111111')
        self.assertEquals(caverphone('kenney'), 'KNA1111111')
        self.assertEquals(caverphone('kenny'), 'KNA1111111')
        self.assertEquals(caverphone('kenshole'), 'KNSA111111')
        self.assertEquals(caverphone('kensington'), 'KNSNKTN111')
        self.assertEquals(caverphone('kensler'), 'KNSLA11111')
        self.assertEquals(caverphone('kent'), 'KNT1111111')
        self.assertEquals(caverphone('kenward'), 'KNWT111111')
        self.assertEquals(caverphone('kenyon'), 'KNN1111111')
        self.assertEquals(caverphone('keogh'), 'KA11111111')
        self.assertEquals(caverphone('keohane'), 'KN11111111')
        self.assertEquals(caverphone('keown'), 'KN11111111')
        self.assertEquals(caverphone('ker'), 'KA11111111')
        self.assertEquals(caverphone('kernick'), 'KNK1111111')
        self.assertEquals(caverphone('kernohan'), 'KNN1111111')
        self.assertEquals(caverphone('kerr'), 'KA11111111')
        self.assertEquals(caverphone('kerrigan'), 'KRKN111111')
        self.assertEquals(caverphone('kerse'), 'KS11111111')
        self.assertEquals(caverphone('kershaw'), 'KSA1111111')
        self.assertEquals(caverphone('kesteven'), 'KSTFN11111')
        self.assertEquals(caverphone('kett'), 'KT11111111')
        self.assertEquals(caverphone('kettle'), 'KTA1111111')
        self.assertEquals(caverphone('kewish'), 'KWS1111111')
        self.assertEquals(caverphone('key'), 'KA11111111')
        self.assertEquals(caverphone('keyes'), 'KS11111111')
        self.assertEquals(caverphone('keys'), 'KS11111111')
        self.assertEquals(caverphone('kibblewhite'), 'KPLWT11111')
        self.assertEquals(caverphone('kidd'), 'KT11111111')
        self.assertEquals(caverphone('kidston'), 'KTSTN11111')
        self.assertEquals(caverphone('kiee'), 'KA11111111')
        self.assertEquals(caverphone('kiely'), 'KLA1111111')
        self.assertEquals(caverphone('kienan'), 'KNN1111111')
        self.assertEquals(caverphone('kieran'), 'KRN1111111')
        self.assertEquals(caverphone('kiernan'), 'KNN1111111')
        self.assertEquals(caverphone('kilchin'), 'KKN1111111')
        self.assertEquals(caverphone('kilgariff'), 'KKRF111111')
        self.assertEquals(caverphone('kilgarrif'), 'KKRF111111')
        self.assertEquals(caverphone('kilgour'), 'KKA1111111')
        self.assertEquals(caverphone('kilkeary'), 'KKRA111111')
        self.assertEquals(caverphone('killilea'), 'KLLA111111')
        self.assertEquals(caverphone('killin'), 'KLN1111111')
        self.assertEquals(caverphone('kilner'), 'KNA1111111')
        self.assertEquals(caverphone('kilpatrick'), 'KPTRK11111')
        self.assertEquals(caverphone('kilroy'), 'KRA1111111')
        self.assertEquals(caverphone('kimber'), 'KMPA111111')
        self.assertEquals(caverphone('kincaid'), 'KNKT111111')
        self.assertEquals(caverphone('kinch'), 'KNK1111111')
        self.assertEquals(caverphone('kindley'), 'KNTLA11111')
        self.assertEquals(caverphone('king'), 'KNK1111111')
        self.assertEquals(caverphone('kingford'), 'KNKFT11111')
        self.assertEquals(caverphone('kingsford'), 'KNKSFT1111')
        self.assertEquals(caverphone('kingsland'), 'KNKSLNT111')
        self.assertEquals(caverphone('kingston'), 'KNKSTN1111')
        self.assertEquals(caverphone('kininmonth'), 'KNNMNT1111')
        self.assertEquals(caverphone('kinloch'), 'KNLK111111')
        self.assertEquals(caverphone('kinlock'), 'KNLK111111')
        self.assertEquals(caverphone('kinmont'), 'KNMNT11111')
        self.assertEquals(caverphone('kinnaird'), 'KNT1111111')
        self.assertEquals(caverphone('kinnear'), 'KNA1111111')
        self.assertEquals(caverphone('kinney'), 'KNA1111111')
        self.assertEquals(caverphone('kippenberg'), 'KPNPK11111')
        self.assertEquals(caverphone('kippenberger'), 'KPNPKA1111')
        self.assertEquals(caverphone('kirby'), 'KPA1111111')
        self.assertEquals(caverphone('kirk'), 'KK11111111')
        self.assertEquals(caverphone('kirkaldie'), 'KKTA111111')
        self.assertEquals(caverphone('kirkby'), 'KKPA111111')
        self.assertEquals(caverphone('kirkcaldie'), 'KKTA111111')
        self.assertEquals(caverphone('kirkcaldy'), 'KKTA111111')
        self.assertEquals(caverphone('kirke'), 'KK11111111')
        self.assertEquals(caverphone('kirkham'), 'KKM1111111')
        self.assertEquals(caverphone('kirkland'), 'KKLNT11111')
        self.assertEquals(caverphone('kirkly'), 'KKLA111111')
        self.assertEquals(caverphone('kirkness'), 'KKNS111111')
        self.assertEquals(caverphone('kirkpatrick'), 'KKPTRK1111')
        self.assertEquals(caverphone('kirkwood'), 'KKWT111111')
        self.assertEquals(caverphone('kirnan'), 'KNN1111111')
        self.assertEquals(caverphone('kirton'), 'KTN1111111')
        self.assertEquals(caverphone('kirwan'), 'KWN1111111')
        self.assertEquals(caverphone('kitchen'), 'KKN1111111')
        self.assertEquals(caverphone('kitchin'), 'KKN1111111')
        self.assertEquals(caverphone('kitching'), 'KKNK111111')
        self.assertEquals(caverphone('kite'), 'KT11111111')
        self.assertEquals(caverphone('kitt'), 'KT11111111')
        self.assertEquals(caverphone('kitterick'), 'KTRK111111')
        self.assertEquals(caverphone('kitto'), 'KTA1111111')
        self.assertEquals(caverphone('klahn'), 'KLN1111111')
        self.assertEquals(caverphone('klee'), 'KLA1111111')
        self.assertEquals(caverphone('kleeber'), 'KLPA111111')
        self.assertEquals(caverphone('klimeck'), 'KLMK111111')
        self.assertEquals(caverphone('knewstubb'), 'KNSTP11111')
        self.assertEquals(caverphone('knigbt'), 'KNKPT11111')
        self.assertEquals(caverphone('knight'), 'KNT1111111')
        self.assertEquals(caverphone('knights'), 'KNTS111111')
        self.assertEquals(caverphone('knipe'), 'KNP1111111')
        self.assertEquals(caverphone('knopp'), 'KNP1111111')
        self.assertEquals(caverphone('knowles'), 'KNLS111111')
        self.assertEquals(caverphone('knox'), 'KNK1111111')
        self.assertEquals(caverphone('knudsen'), 'KNTSN11111')
        self.assertEquals(caverphone('knudson'), 'KNTSN11111')
        self.assertEquals(caverphone('kofoed'), 'KFT1111111')
        self.assertEquals(caverphone('kollberg'), 'KPK1111111')
        self.assertEquals(caverphone('koller'), 'KLA1111111')
        self.assertEquals(caverphone('korner'), 'KNA1111111')
        self.assertEquals(caverphone('kraus'), 'KRS1111111')
        self.assertEquals(caverphone('krause'), 'KRS1111111')
        self.assertEquals(caverphone('kreft'), 'KRFT111111')
        self.assertEquals(caverphone('kroon'), 'KRN1111111')
        self.assertEquals(caverphone('kropp'), 'KRP1111111')
        self.assertEquals(caverphone('krox'), 'KRK1111111')
        self.assertEquals(caverphone('kruskoff'), 'KRSKF11111')
        self.assertEquals(caverphone('kruskopf'), 'KRSKPF1111')
        self.assertEquals(caverphone('kummert'), 'KMT1111111')
        self.assertEquals(caverphone('ky]e'), 'KA11111111')
        self.assertEquals(caverphone('kydd'), 'KT11111111')
        self.assertEquals(caverphone('kyle'), 'KA11111111')
        self.assertEquals(caverphone('kyle\''), 'KA11111111')
        self.assertEquals(caverphone('l\'estrange'), 'LSTRNK1111')
        self.assertEquals(caverphone('la roche'), 'LRK1111111')
        self.assertEquals(caverphone('labes'), 'LPS1111111')
        self.assertEquals(caverphone('lacey'), 'LSA1111111')
        self.assertEquals(caverphone('lack'), 'LK11111111')
        self.assertEquals(caverphone('ladd'), 'LT11111111')
        self.assertEquals(caverphone('laery'), 'LRA1111111')
        self.assertEquals(caverphone('laffey'), 'LFA1111111')
        self.assertEquals(caverphone('lafranchie'), 'LFRNKA1111')
        self.assertEquals(caverphone('lagan'), 'LKN1111111')
        self.assertEquals(caverphone('lahman'), 'LMN1111111')
        self.assertEquals(caverphone('lahood'), 'LT11111111')
        self.assertEquals(caverphone('laidlaw'), 'LTLA111111')
        self.assertEquals(caverphone('lain'), 'LN11111111')
        self.assertEquals(caverphone('laine'), 'LN11111111')
        self.assertEquals(caverphone('laing'), 'LNK1111111')
        self.assertEquals(caverphone('laird'), 'LT11111111')
        self.assertEquals(caverphone('lake'), 'LK11111111')
        self.assertEquals(caverphone('lakeman'), 'LKMN111111')
        self.assertEquals(caverphone('lale'), 'LA11111111')
        self.assertEquals(caverphone('laley'), 'LLA1111111')
        self.assertEquals(caverphone('laloli'), 'LLLA111111')
        self.assertEquals(caverphone('lamb'), 'LM11111111')
        self.assertEquals(caverphone('lambert'), 'LMPT111111')
        self.assertEquals(caverphone('lambeth'), 'LMPT111111')
        self.assertEquals(caverphone('lambie'), 'LMPA111111')
        self.assertEquals(caverphone('lamborn'), 'LMPN111111')
        self.assertEquals(caverphone('lambton'), 'LMPTN11111')
        self.assertEquals(caverphone('lamham'), 'LMM1111111')
        self.assertEquals(caverphone('lamont'), 'LMNT111111')
        self.assertEquals(caverphone('lampard'), 'LMPT111111')
        self.assertEquals(caverphone('lampen'), 'LMPN111111')
        self.assertEquals(caverphone('lancaster'), 'LNKSTA1111')
        self.assertEquals(caverphone('landerson'), 'LNTSN11111')
        self.assertEquals(caverphone('landrebe'), 'LNTRP11111')
        self.assertEquals(caverphone('landreth'), 'LNTRT11111')
        self.assertEquals(caverphone('landriken'), 'LNTRKN1111')
        self.assertEquals(caverphone('lane'), 'LN11111111')
        self.assertEquals(caverphone('laney'), 'LNA1111111')
        self.assertEquals(caverphone('lang'), 'LNK1111111')
        self.assertEquals(caverphone('langdon'), 'LNKTN11111')
        self.assertEquals(caverphone('langevad'), 'LNKFT11111')
        self.assertEquals(caverphone('langford'), 'LNKFT11111')
        self.assertEquals(caverphone('langham'), 'LNM1111111')
        self.assertEquals(caverphone('langlands'), 'LNKLNTS111')
        self.assertEquals(caverphone('langley'), 'LNKLA11111')
        self.assertEquals(caverphone('langmuir'), 'LNKMA11111')
        self.assertEquals(caverphone('langston'), 'LNKSTN1111')
        self.assertEquals(caverphone('lanham'), 'LNM1111111')
        self.assertEquals(caverphone('lanini'), 'LNNA111111')
        self.assertEquals(caverphone('lappan'), 'LPN1111111')
        self.assertEquals(caverphone('lapsley'), 'LPSLA11111')
        self.assertEquals(caverphone('lardner'), 'LTNA111111')
        self.assertEquals(caverphone('larkin'), 'LKN1111111')
        self.assertEquals(caverphone('larking'), 'LKNK111111')
        self.assertEquals(caverphone('larkins'), 'LKNS111111')
        self.assertEquals(caverphone('larldng'), 'LTNK111111')
        self.assertEquals(caverphone('larner'), 'LNA1111111')
        self.assertEquals(caverphone('laroche'), 'LRK1111111')
        self.assertEquals(caverphone('larsen'), 'LSN1111111')
        self.assertEquals(caverphone('larson'), 'LSN1111111')
        self.assertEquals(caverphone('larty'), 'LTA1111111')
        self.assertEquals(caverphone('lascelles'), 'LSLS111111')
        self.assertEquals(caverphone('latham'), 'LTM1111111')
        self.assertEquals(caverphone('latimer'), 'LTMA111111')
        self.assertEquals(caverphone('latta'), 'LTA1111111')
        self.assertEquals(caverphone('latter'), 'LTA1111111')
        self.assertEquals(caverphone('lattimer'), 'LTMA111111')
        self.assertEquals(caverphone('lattimore'), 'LTMA111111')
        self.assertEquals(caverphone('lauchlan'), 'LKLN111111')
        self.assertEquals(caverphone('laug'), 'LK11111111')
        self.assertEquals(caverphone('laughland'), 'LLNT111111')
        self.assertEquals(caverphone('laughlin'), 'LLN1111111')
        self.assertEquals(caverphone('lauren'), 'LRN1111111')
        self.assertEquals(caverphone('laurenson'), 'LRNSN11111')
        self.assertEquals(caverphone('laurie'), 'LRA1111111')
        self.assertEquals(caverphone('lavender'), 'LFNTA11111')
        self.assertEquals(caverphone('laverty'), 'LFTA111111')
        self.assertEquals(caverphone('lavery'), 'LFRA111111')
        self.assertEquals(caverphone('law'), 'LA11111111')
        self.assertEquals(caverphone('lawence'), 'LWNK111111')
        self.assertEquals(caverphone('lawer'), 'LWA1111111')
        self.assertEquals(caverphone('lawfield'), 'LFT1111111')
        self.assertEquals(caverphone('lawless'), 'LLS1111111')
        self.assertEquals(caverphone('lawliss'), 'LLS1111111')
        self.assertEquals(caverphone('lawlor'), 'LLA1111111')
        self.assertEquals(caverphone('lawloss'), 'LLS1111111')
        self.assertEquals(caverphone('lawrence'), 'LRNK111111')
        self.assertEquals(caverphone('lawrenson'), 'LRNSN11111')
        self.assertEquals(caverphone('lawrie'), 'LRA1111111')
        self.assertEquals(caverphone('lawry'), 'LRA1111111')
        self.assertEquals(caverphone('laws'), 'LS11111111')
        self.assertEquals(caverphone('lawson'), 'LSN1111111')
        self.assertEquals(caverphone('lawton'), 'LTN1111111')
        self.assertEquals(caverphone('lax'), 'LK11111111')
        self.assertEquals(caverphone('layburn'), 'LPN1111111')
        self.assertEquals(caverphone('laycock'), 'LKK1111111')
        self.assertEquals(caverphone('laytham'), 'LTM1111111')
        self.assertEquals(caverphone('layton'), 'LTN1111111')
        self.assertEquals(caverphone('lazarus'), 'LSRS111111')
        self.assertEquals(caverphone('lbbetson'), 'PTSN111111')
        self.assertEquals(caverphone('le brun'), 'LPRN111111')
        self.assertEquals(caverphone('le couteur'), 'LKTA111111')
        self.assertEquals(caverphone('le fevre'), 'LFFA111111')
        self.assertEquals(caverphone('le gal'), 'LKA1111111')
        self.assertEquals(caverphone('le page'), 'LPK1111111')
        self.assertEquals(caverphone('le sueur'), 'LSA1111111')
        self.assertEquals(caverphone('le vavasour'), 'LFFSA11111')
        self.assertEquals(caverphone('lea'), 'LA11111111')
        self.assertEquals(caverphone('leach'), 'LK11111111')
        self.assertEquals(caverphone('leadbetter'), 'LTPTA11111')
        self.assertEquals(caverphone('leahy'), 'LA11111111')
        self.assertEquals(caverphone('lealy'), 'LLA1111111')
        self.assertEquals(caverphone('lean'), 'LN11111111')
        self.assertEquals(caverphone('leaper'), 'LPA1111111')
        self.assertEquals(caverphone('lear'), 'LA11111111')
        self.assertEquals(caverphone('learmond'), 'LMNT111111')
        self.assertEquals(caverphone('leary'), 'LRA1111111')
        self.assertEquals(caverphone('leask'), 'LSK1111111')
        self.assertEquals(caverphone('leatham'), 'LTM1111111')
        self.assertEquals(caverphone('leathem'), 'LTM1111111')
        self.assertEquals(caverphone('leather'), 'LTA1111111')
        self.assertEquals(caverphone('leatherland'), 'LTLNT11111')
        self.assertEquals(caverphone('leathley'), 'LTLA111111')
        self.assertEquals(caverphone('leckie'), 'LKA1111111')
        self.assertEquals(caverphone('leclie'), 'LKLA111111')
        self.assertEquals(caverphone('lecouteur'), 'LKTA111111')
        self.assertEquals(caverphone('leddicott'), 'LTKT111111')
        self.assertEquals(caverphone('ledgerwood'), 'LKWT111111')
        self.assertEquals(caverphone('ledlie'), 'LTLA111111')
        self.assertEquals(caverphone('lee'), 'LA11111111')
        self.assertEquals(caverphone('leece'), 'LK11111111')
        self.assertEquals(caverphone('leech'), 'LK11111111')
        self.assertEquals(caverphone('leedale'), 'LTA1111111')
        self.assertEquals(caverphone('leeden'), 'LTN1111111')
        self.assertEquals(caverphone('leemin'), 'LMN1111111')
        self.assertEquals(caverphone('leeming'), 'LMNK111111')
        self.assertEquals(caverphone('leery'), 'LRA1111111')
        self.assertEquals(caverphone('lees'), 'LS11111111')
        self.assertEquals(caverphone('leete'), 'LT11111111')
        self.assertEquals(caverphone('lefevre'), 'LFFA111111')
        self.assertEquals(caverphone('legal'), 'LKA1111111')
        self.assertEquals(caverphone('legall'), 'LKA1111111')
        self.assertEquals(caverphone('legat'), 'LKT1111111')
        self.assertEquals(caverphone('legg'), 'LK11111111')
        self.assertEquals(caverphone('legge'), 'LK11111111')
        self.assertEquals(caverphone('leggett'), 'LKT1111111')
        self.assertEquals(caverphone('leggott'), 'LKT1111111')
        self.assertEquals(caverphone('lehmann'), 'LMN1111111')
        self.assertEquals(caverphone('leigh'), 'LA11111111')
        self.assertEquals(caverphone('leighton'), 'LTN1111111')
        self.assertEquals(caverphone('leihy'), 'LA11111111')
        self.assertEquals(caverphone('leishman'), 'LSMN111111')
        self.assertEquals(caverphone('leitch'), 'LK11111111')
        self.assertEquals(caverphone('leith'), 'LT11111111')
        self.assertEquals(caverphone('lelliott'), 'LLT1111111')
        self.assertEquals(caverphone('lemin'), 'LMN1111111')
        self.assertEquals(caverphone('lemon'), 'LMN1111111')
        self.assertEquals(caverphone('lendrum'), 'LNTRM11111')
        self.assertEquals(caverphone('leng'), 'LNK1111111')
        self.assertEquals(caverphone('lenihan'), 'LNN1111111')
        self.assertEquals(caverphone('lennan'), 'LNN1111111')
        self.assertEquals(caverphone('lennard'), 'LNT1111111')
        self.assertEquals(caverphone('lennon'), 'LNN1111111')
        self.assertEquals(caverphone('lennox'), 'LNK1111111')
        self.assertEquals(caverphone('lenz'), 'LNS1111111')
        self.assertEquals(caverphone('leo'), 'LA11111111')
        self.assertEquals(caverphone('leonard'), 'LNT1111111')
        self.assertEquals(caverphone('leper'), 'LPA1111111')
        self.assertEquals(caverphone('lepine'), 'LPN1111111')
        self.assertEquals(caverphone('lepper'), 'LPA1111111')
        self.assertEquals(caverphone('leppingvell'), 'LPNKFA1111')
        self.assertEquals(caverphone('leppingwell'), 'LPNKWA1111')
        self.assertEquals(caverphone('lerrigo'), 'LRKA111111')
        self.assertEquals(caverphone('leslie'), 'LSLA111111')
        self.assertEquals(caverphone('lester'), 'LSTA111111')
        self.assertEquals(caverphone('lesueur'), 'LSA1111111')
        self.assertEquals(caverphone('lethaby'), 'LTPA111111')
        self.assertEquals(caverphone('lethbridge'), 'LTPRK11111')
        self.assertEquals(caverphone('lethridge'), 'LTRK111111')
        self.assertEquals(caverphone('letts'), 'LTS1111111')
        self.assertEquals(caverphone('leung chung'), 'LNKNK11111')
        self.assertEquals(caverphone('levi'), 'LFA1111111')
        self.assertEquals(caverphone('levido'), 'LFTA111111')
        self.assertEquals(caverphone('levinsohn'), 'LFNSN11111')
        self.assertEquals(caverphone('levy'), 'LFA1111111')
        self.assertEquals(caverphone('lewies'), 'LWS1111111')
        self.assertEquals(caverphone('lewis'), 'LWS1111111')
        self.assertEquals(caverphone('lewisham'), 'LWSM111111')
        self.assertEquals(caverphone('leyden'), 'LTN1111111')
        self.assertEquals(caverphone('leydon'), 'LTN1111111')
        self.assertEquals(caverphone('leyland'), 'LLNT111111')
        self.assertEquals(caverphone('leys'), 'LS11111111')
        self.assertEquals(caverphone('lichtenstein'), 'LKTNSTN111')
        self.assertEquals(caverphone('lickie'), 'LKA1111111')
        self.assertEquals(caverphone('liddell'), 'LTA1111111')
        self.assertEquals(caverphone('liddicoat'), 'LTKT111111')
        self.assertEquals(caverphone('liddle'), 'LTA1111111')
        self.assertEquals(caverphone('lidston'), 'LTSTN11111')
        self.assertEquals(caverphone('lied'), 'LT11111111')
        self.assertEquals(caverphone('liggins'), 'LKNS111111')
        self.assertEquals(caverphone('lightbourne'), 'LTPN111111')
        self.assertEquals(caverphone('lightfoot'), 'LTFT111111')
        self.assertEquals(caverphone('lilburn'), 'LPN1111111')
        self.assertEquals(caverphone('lilburne'), 'LPN1111111')
        self.assertEquals(caverphone('lilley'), 'LLA1111111')
        self.assertEquals(caverphone('lillie'), 'LLA1111111')
        self.assertEquals(caverphone('lilly'), 'LLA1111111')
        self.assertEquals(caverphone('lincoln'), 'LNKN111111')
        self.assertEquals(caverphone('lind'), 'LNT1111111')
        self.assertEquals(caverphone('lindley'), 'LNTLA11111')
        self.assertEquals(caverphone('lindon'), 'LNTN111111')
        self.assertEquals(caverphone('lindsay'), 'LNTSA11111')
        self.assertEquals(caverphone('lineham'), 'LNM1111111')
        self.assertEquals(caverphone('ling'), 'LNK1111111')
        self.assertEquals(caverphone('linklater'), 'LNKLTA1111')
        self.assertEquals(caverphone('linkston'), 'LNKSTN1111')
        self.assertEquals(caverphone('linnane'), 'LNN1111111')
        self.assertEquals(caverphone('linney'), 'LNA1111111')
        self.assertEquals(caverphone('linsdell'), 'LNSTA11111')
        self.assertEquals(caverphone('lintern'), 'LNTN111111')
        self.assertEquals(caverphone('linton'), 'LNTN111111')
        self.assertEquals(caverphone('lipman'), 'LPMN111111')
        self.assertEquals(caverphone('lippert'), 'LPT1111111')
        self.assertEquals(caverphone('lischner'), 'LSKNA11111')
        self.assertEquals(caverphone('lisle'), 'LSA1111111')
        self.assertEquals(caverphone('list'), 'LST1111111')
        self.assertEquals(caverphone('lister'), 'LSTA111111')
        self.assertEquals(caverphone('liston'), 'LSTN111111')
        self.assertEquals(caverphone('listor'), 'LSTA111111')
        self.assertEquals(caverphone('litolff'), 'LTF1111111')
        self.assertEquals(caverphone('littie'), 'LTA1111111')
        self.assertEquals(caverphone('little'), 'LTA1111111')
        self.assertEquals(caverphone('littlejohn'), 'LTLN111111')
        self.assertEquals(caverphone('littlewood'), 'LTLWT11111')
        self.assertEquals(caverphone('livingston'), 'LFNKSTN111')
        self.assertEquals(caverphone('livingstone'), 'LFNKSTN111')
        self.assertEquals(caverphone('llles'), 'LS11111111')
        self.assertEquals(caverphone('lloyd'), 'LT11111111')
        self.assertEquals(caverphone('lngram'), 'NKRM111111')
        self.assertEquals(caverphone('lnwood'), 'NWT1111111')
        self.assertEquals(caverphone('loader'), 'LTA1111111')
        self.assertEquals(caverphone('loades'), 'LTS1111111')
        self.assertEquals(caverphone('loan'), 'LN11111111')
        self.assertEquals(caverphone('loasby'), 'LSPA111111')
        self.assertEquals(caverphone('lobb'), 'LP11111111')
        self.assertEquals(caverphone('loche'), 'LK11111111')
        self.assertEquals(caverphone('lochhead'), 'LKT1111111')
        self.assertEquals(caverphone('lochore'), 'LKA1111111')
        self.assertEquals(caverphone('lock'), 'LK11111111')
        self.assertEquals(caverphone('lockerbie'), 'LKPA111111')
        self.assertEquals(caverphone('lockett'), 'LKT1111111')
        self.assertEquals(caverphone('lockhart'), 'LKT1111111')
        self.assertEquals(caverphone('lockhead'), 'LKT1111111')
        self.assertEquals(caverphone('lockie'), 'LKA1111111')
        self.assertEquals(caverphone('lockstone'), 'LKSTN11111')
        self.assertEquals(caverphone('lockwood'), 'LKWT111111')
        self.assertEquals(caverphone('lockyer'), 'LKA1111111')
        self.assertEquals(caverphone('lodge'), 'LK11111111')
        self.assertEquals(caverphone('loeffler'), 'LFLA111111')
        self.assertEquals(caverphone('logan'), 'LKN1111111')
        self.assertEquals(caverphone('logg'), 'LK11111111')
        self.assertEquals(caverphone('loggie'), 'LKA1111111')
        self.assertEquals(caverphone('logic'), 'LKK1111111')
        self.assertEquals(caverphone('logie'), 'LKA1111111')
        self.assertEquals(caverphone('logue'), 'LKA1111111')
        self.assertEquals(caverphone('lohrey'), 'LRA1111111')
        self.assertEquals(caverphone('loke'), 'LK11111111')
        self.assertEquals(caverphone('lomas'), 'LMS1111111')
        self.assertEquals(caverphone('lombardi'), 'LMPTA11111')
        self.assertEquals(caverphone('loney'), 'LNA1111111')
        self.assertEquals(caverphone('long'), 'LNK1111111')
        self.assertEquals(caverphone('longhurst'), 'LNST111111')
        self.assertEquals(caverphone('longley'), 'LNKLA11111')
        self.assertEquals(caverphone('longman'), 'LNKMN11111')
        self.assertEquals(caverphone('longmore'), 'LNKMA11111')
        self.assertEquals(caverphone('longstaff'), 'LNKSTF1111')
        self.assertEquals(caverphone('longworth'), 'LNKWT11111')
        self.assertEquals(caverphone('lonie'), 'LNA1111111')
        self.assertEquals(caverphone('lonsdale'), 'LNSTA11111')
        self.assertEquals(caverphone('loraine'), 'LRN1111111')
        self.assertEquals(caverphone('lord'), 'LT11111111')
        self.assertEquals(caverphone('lorenz'), 'LRNS111111')
        self.assertEquals(caverphone('lorimer'), 'LRMA111111')
        self.assertEquals(caverphone('loring'), 'LRNK111111')
        self.assertEquals(caverphone('lory'), 'LRA1111111')
        self.assertEquals(caverphone('lothian'), 'LTN1111111')
        self.assertEquals(caverphone('louden'), 'LTN1111111')
        self.assertEquals(caverphone('louder'), 'LTA1111111')
        self.assertEquals(caverphone('loudon'), 'LTN1111111')
        self.assertEquals(caverphone('lough'), 'LA11111111')
        self.assertEquals(caverphone('loughill'), 'LKA1111111')
        self.assertEquals(caverphone('loughlin'), 'LLN1111111')
        self.assertEquals(caverphone('loughnan'), 'LNN1111111')
        self.assertEquals(caverphone('loughran'), 'LRN1111111')
        self.assertEquals(caverphone('loughrey'), 'LRA1111111')
        self.assertEquals(caverphone('louis'), 'LS11111111')
        self.assertEquals(caverphone('lousley'), 'LSLA111111')
        self.assertEquals(caverphone('lovatt'), 'LFT1111111')
        self.assertEquals(caverphone('love'), 'LF11111111')
        self.assertEquals(caverphone('loveless'), 'LFLS111111')
        self.assertEquals(caverphone('lovell'), 'LFA1111111')
        self.assertEquals(caverphone('lovelock'), 'LFLK111111')
        self.assertEquals(caverphone('low'), 'LA11111111')
        self.assertEquals(caverphone('lowden'), 'LTN1111111')
        self.assertEquals(caverphone('lowe'), 'LA11111111')
        self.assertEquals(caverphone('lowen'), 'LWN1111111')
        self.assertEquals(caverphone('lower'), 'LWA1111111')
        self.assertEquals(caverphone('lowery'), 'LWRA111111')
        self.assertEquals(caverphone('lowes'), 'LWS1111111')
        self.assertEquals(caverphone('lowie'), 'LWA1111111')
        self.assertEquals(caverphone('lowrey'), 'LRA1111111')
        self.assertEquals(caverphone('lowry'), 'LRA1111111')
        self.assertEquals(caverphone('loyd'), 'LT11111111')
        self.assertEquals(caverphone('loydall'), 'LTA1111111')
        self.assertEquals(caverphone('lrvine'), 'FN11111111')
        self.assertEquals(caverphone('lsaacs'), 'SKS1111111')
        self.assertEquals(caverphone('lucas'), 'LKS1111111')
        self.assertEquals(caverphone('luckhurst'), 'LKST111111')
        self.assertEquals(caverphone('ludlow'), 'LTLA111111')
        self.assertEquals(caverphone('luff'), 'LF11111111')
        self.assertEquals(caverphone('luke'), 'LK11111111')
        self.assertEquals(caverphone('lukey'), 'LKA1111111')
        self.assertEquals(caverphone('lumb'), 'LM11111111')
        self.assertEquals(caverphone('lumsden'), 'LMSTN11111')
        self.assertEquals(caverphone('lunam'), 'LNM1111111')
        self.assertEquals(caverphone('lunan'), 'LNN1111111')
        self.assertEquals(caverphone('lunardi'), 'LNTA111111')
        self.assertEquals(caverphone('lund'), 'LNT1111111')
        self.assertEquals(caverphone('lundberg'), 'LNTPK11111')
        self.assertEquals(caverphone('lundon'), 'LNTN111111')
        self.assertEquals(caverphone('lundquist'), 'LNTKST1111')
        self.assertEquals(caverphone('lungley'), 'LNKLA11111')
        self.assertEquals(caverphone('lunham'), 'LNM1111111')
        self.assertEquals(caverphone('lunn'), 'LN11111111')
        self.assertEquals(caverphone('lunnam'), 'LNM1111111')
        self.assertEquals(caverphone('luscombe'), 'LSKM111111')
        self.assertEquals(caverphone('lusher'), 'LSA1111111')
        self.assertEquals(caverphone('lusk'), 'LSK1111111')
        self.assertEquals(caverphone('luskie'), 'LSKA111111')
        self.assertEquals(caverphone('luslie'), 'LSLA111111')
        self.assertEquals(caverphone('lust'), 'LST1111111')
        self.assertEquals(caverphone('lvingstone'), 'FNKSTN1111')
        self.assertEquals(caverphone('lyall'), 'LA11111111')
        self.assertEquals(caverphone('lyddy'), 'LTA1111111')
        self.assertEquals(caverphone('lyders'), 'LTS1111111')
        self.assertEquals(caverphone('lydiate'), 'LTT1111111')
        self.assertEquals(caverphone('lye'), 'LA11111111')
        self.assertEquals(caverphone('lyeaght'), 'LT11111111')
        self.assertEquals(caverphone('lyle'), 'LA11111111')
        self.assertEquals(caverphone('lymburn'), 'LMPN111111')
        self.assertEquals(caverphone('lynch'), 'LNK1111111')
        self.assertEquals(caverphone('lyndburst'), 'LNTPST1111')
        self.assertEquals(caverphone('lyndhurst'), 'LNTST11111')
        self.assertEquals(caverphone('lyng'), 'LNK1111111')
        self.assertEquals(caverphone('lynn'), 'LN11111111')
        self.assertEquals(caverphone('lynskey'), 'LNSKA11111')
        self.assertEquals(caverphone('lyon'), 'LN11111111')
        self.assertEquals(caverphone('lyons'), 'LNS1111111')
        self.assertEquals(caverphone('lysaght'), 'LST1111111')
        self.assertEquals(caverphone('lythgoe'), 'LTKA111111')
        self.assertEquals(caverphone('lytle'), 'LTA1111111')
        self.assertEquals(caverphone('lyttle'), 'LTA1111111')
        self.assertEquals(caverphone('m orris'), 'MRS1111111')
        self.assertEquals(caverphone('mabon'), 'MPN1111111')
        self.assertEquals(caverphone('macale'), 'MKA1111111')
        self.assertEquals(caverphone('macallan'), 'MKLN111111')
        self.assertEquals(caverphone('macallum'), 'MKLM111111')
        self.assertEquals(caverphone('macan'), 'MKN1111111')
        self.assertEquals(caverphone('macandrew'), 'MKNTRA1111')
        self.assertEquals(caverphone('macarthur'), 'MKTA111111')
        self.assertEquals(caverphone('macartney'), 'MKTNA11111')
        self.assertEquals(caverphone('macaskill'), 'MKSKA11111')
        self.assertEquals(caverphone('macassey'), 'MKSA111111')
        self.assertEquals(caverphone('macaulay'), 'MKLA111111')
        self.assertEquals(caverphone('macauley'), 'MKLA111111')
        self.assertEquals(caverphone('macavoy'), 'MKFA111111')
        self.assertEquals(caverphone('macbeath'), 'MKPT111111')
        self.assertEquals(caverphone('macbeth'), 'MKPT111111')
        self.assertEquals(caverphone('macbryde'), 'MKPRT11111')
        self.assertEquals(caverphone('maccallum'), 'MKLM111111')
        self.assertEquals(caverphone('maccartie'), 'MKTA111111')
        self.assertEquals(caverphone('maccoll'), 'MKA1111111')
        self.assertEquals(caverphone('macdonald'), 'MKTNT11111')
        self.assertEquals(caverphone('macdonall'), 'MKTNA11111')
        self.assertEquals(caverphone('macdonell'), 'MKTNA11111')
        self.assertEquals(caverphone('macdonnell'), 'MKTNA11111')
        self.assertEquals(caverphone('macdougall'), 'MKTKA11111')
        self.assertEquals(caverphone('macduff'), 'MKTF111111')
        self.assertEquals(caverphone('mace'), 'MK11111111')
        self.assertEquals(caverphone('maceewan'), 'MSWN111111')
        self.assertEquals(caverphone('macer'), 'MSA1111111')
        self.assertEquals(caverphone('macewan'), 'MSWN111111')
        self.assertEquals(caverphone('macey'), 'MSA1111111')
        self.assertEquals(caverphone('macfarlane'), 'MKFLN11111')
        self.assertEquals(caverphone('macfie'), 'MKFA111111')
        self.assertEquals(caverphone('macghie'), 'MKA1111111')
        self.assertEquals(caverphone('macgibbon'), 'MKPN111111')
        self.assertEquals(caverphone('macgregor'), 'MKRKA11111')
        self.assertEquals(caverphone('macguire'), 'MKA1111111')
        self.assertEquals(caverphone('machell'), 'MKA1111111')
        self.assertEquals(caverphone('machin'), 'MKN1111111')
        self.assertEquals(caverphone('machridge'), 'MKRK111111')
        self.assertEquals(caverphone('maciean'), 'MSN1111111')
        self.assertEquals(caverphone('macildowie'), 'MSTWA11111')
        self.assertEquals(caverphone('macinnes'), 'MSNS111111')
        self.assertEquals(caverphone('macintosh'), 'MSNTS11111')
        self.assertEquals(caverphone('macintyre'), 'MSNTA11111')
        self.assertEquals(caverphone('macivor'), 'MSFA111111')
        self.assertEquals(caverphone('mack'), 'MK11111111')
        self.assertEquals(caverphone('mackay'), 'MKA1111111')
        self.assertEquals(caverphone('mackean'), 'MKN1111111')
        self.assertEquals(caverphone('mackechnic'), 'MKKNK11111')
        self.assertEquals(caverphone('mackechnie'), 'MKKNA11111')
        self.assertEquals(caverphone('mackellar'), 'MKLA111111')
        self.assertEquals(caverphone('mackenzie'), 'MKNSA11111')
        self.assertEquals(caverphone('mackersey'), 'MKSA111111')
        self.assertEquals(caverphone('mackersy'), 'MKSA111111')
        self.assertEquals(caverphone('mackey'), 'MKA1111111')
        self.assertEquals(caverphone('mackie'), 'MKA1111111')
        self.assertEquals(caverphone('mackinnon'), 'MKNN111111')
        self.assertEquals(caverphone('mackintosh'), 'MKNTS11111')
        self.assertEquals(caverphone('mackisack'), 'MKSK111111')
        self.assertEquals(caverphone('mackney'), 'MKNA111111')
        self.assertEquals(caverphone('macknight'), 'MKNT111111')
        self.assertEquals(caverphone('mackrell'), 'MKRA111111')
        self.assertEquals(caverphone('mackridge'), 'MKRK111111')
        self.assertEquals(caverphone('mackway jones'), 'MKWNS11111')
        self.assertEquals(caverphone('mackway-jones'), 'MKWNS11111')
        self.assertEquals(caverphone('mackwayjones'), 'MKWNS11111')
        self.assertEquals(caverphone('macky'), 'MKA1111111')
        self.assertEquals(caverphone('maclachlan'), 'MKLKLN1111')
        self.assertEquals(caverphone('maclaren'), 'MKLRN11111')
        self.assertEquals(caverphone('maclatchy'), 'MKLKA11111')
        self.assertEquals(caverphone('maclean'), 'MKLN111111')
        self.assertEquals(caverphone('maclellan'), 'MKLLN11111')
        self.assertEquals(caverphone('maclennan'), 'MKLNN11111')
        self.assertEquals(caverphone('macleod'), 'MKLT111111')
        self.assertEquals(caverphone('maclonald'), 'MKLNT11111')
        self.assertEquals(caverphone('macmanus'), 'MKMNS11111')
        self.assertEquals(caverphone('macmaster'), 'MKMSTA1111')
        self.assertEquals(caverphone('macmillan'), 'MKMLN11111')
        self.assertEquals(caverphone('macnee'), 'MKNA111111')
        self.assertEquals(caverphone('macnicol'), 'MKNKA11111')
        self.assertEquals(caverphone('macniven'), 'MKNFN11111')
        self.assertEquals(caverphone('macomish'), 'MKMS111111')
        self.assertEquals(caverphone('macpherson'), 'MKFSN11111')
        self.assertEquals(caverphone('macquaid'), 'MKT1111111')
        self.assertEquals(caverphone('macrae'), 'MKRA111111')
        self.assertEquals(caverphone('macswain'), 'MKSWN11111')
        self.assertEquals(caverphone('macwilliam'), 'MKWLM11111')
        self.assertEquals(caverphone('madarlane'), 'MTLN111111')
        self.assertEquals(caverphone('madden'), 'MTN1111111')
        self.assertEquals(caverphone('maddern'), 'MTN1111111')
        self.assertEquals(caverphone('maddigan'), 'MTKN111111')
        self.assertEquals(caverphone('maddox'), 'MTK1111111')
        self.assertEquals(caverphone('maddren'), 'MTRN111111')
        self.assertEquals(caverphone('madell'), 'MTA1111111')
        self.assertEquals(caverphone('maden'), 'MTN1111111')
        self.assertEquals(caverphone('madigan'), 'MTKN111111')
        self.assertEquals(caverphone('maffan'), 'MFN1111111')
        self.assertEquals(caverphone('magee'), 'MKA1111111')
        self.assertEquals(caverphone('magner'), 'MKNA111111')
        self.assertEquals(caverphone('magnus'), 'MKNS111111')
        self.assertEquals(caverphone('magorian'), 'MKRN111111')
        self.assertEquals(caverphone('maguire'), 'MKA1111111')
        self.assertEquals(caverphone('mahalm'), 'MM11111111')
        self.assertEquals(caverphone('mahan'), 'MN11111111')
        self.assertEquals(caverphone('maharey'), 'MRA1111111')
        self.assertEquals(caverphone('maher'), 'MA11111111')
        self.assertEquals(caverphone('mahon'), 'MN11111111')
        self.assertEquals(caverphone('mahoney'), 'MNA1111111')
        self.assertEquals(caverphone('mahony'), 'MNA1111111')
        self.assertEquals(caverphone('maicolm'), 'MKM1111111')
        self.assertEquals(caverphone('maills'), 'MS11111111')
        self.assertEquals(caverphone('maim'), 'MM11111111')
        self.assertEquals(caverphone('main'), 'MN11111111')
        self.assertEquals(caverphone('maine'), 'MN11111111')
        self.assertEquals(caverphone('maines'), 'MNS1111111')
        self.assertEquals(caverphone('mainland'), 'MNLNT11111')
        self.assertEquals(caverphone('mains'), 'MNS1111111')
        self.assertEquals(caverphone('mair'), 'MA11111111')
        self.assertEquals(caverphone('maitland'), 'MTLNT11111')
        self.assertEquals(caverphone('major'), 'MA11111111')
        self.assertEquals(caverphone('maker'), 'MKA1111111')
        self.assertEquals(caverphone('malcolm'), 'MKM1111111')
        self.assertEquals(caverphone('malcolmson'), 'MKMSN11111')
        self.assertEquals(caverphone('malden'), 'MTN1111111')
        self.assertEquals(caverphone('maleod'), 'MLT1111111')
        self.assertEquals(caverphone('maler'), 'MLA1111111')
        self.assertEquals(caverphone('maley'), 'MLA1111111')
        self.assertEquals(caverphone('malladew'), 'MLTA111111')
        self.assertEquals(caverphone('mallett'), 'MLT1111111')
        self.assertEquals(caverphone('malley'), 'MLA1111111')
        self.assertEquals(caverphone('malloch'), 'MLK1111111')
        self.assertEquals(caverphone('malone'), 'MLN1111111')
        self.assertEquals(caverphone('maloney'), 'MLNA111111')
        self.assertEquals(caverphone('malthus'), 'MTS1111111')
        self.assertEquals(caverphone('manallack'), 'MNLK111111')
        self.assertEquals(caverphone('manaton'), 'MNTN111111')
        self.assertEquals(caverphone('mander'), 'MNTA111111')
        self.assertEquals(caverphone('manderson'), 'MNTSN11111')
        self.assertEquals(caverphone('mangan'), 'MNKN111111')
        self.assertEquals(caverphone('mangin'), 'MNKN111111')
        self.assertEquals(caverphone('manion'), 'MNN1111111')
        self.assertEquals(caverphone('manley'), 'MNLA111111')
        self.assertEquals(caverphone('manlove'), 'MNLF111111')
        self.assertEquals(caverphone('mann'), 'MN11111111')
        self.assertEquals(caverphone('mannin'), 'MNN1111111')
        self.assertEquals(caverphone('manning'), 'MNNK111111')
        self.assertEquals(caverphone('mannix'), 'MNK1111111')
        self.assertEquals(caverphone('mansell'), 'MNSA111111')
        self.assertEquals(caverphone('mansfield'), 'MNSFT11111')
        self.assertEquals(caverphone('manson'), 'MNSN111111')
        self.assertEquals(caverphone('mantell'), 'MNTA111111')
        self.assertEquals(caverphone('maples'), 'MPLS111111')
        self.assertEquals(caverphone('marchant'), 'MKNT111111')
        self.assertEquals(caverphone('marcussen'), 'MKSN111111')
        self.assertEquals(caverphone('mardon'), 'MTN1111111')
        self.assertEquals(caverphone('marechal'), 'MRKA111111')
        self.assertEquals(caverphone('marett'), 'MRT1111111')
        self.assertEquals(caverphone('marette'), 'MRT1111111')
        self.assertEquals(caverphone('maris'), 'MRS1111111')
        self.assertEquals(caverphone('mark'), 'MK11111111')
        self.assertEquals(caverphone('markby'), 'MKPA111111')
        self.assertEquals(caverphone('markham'), 'MKM1111111')
        self.assertEquals(caverphone('markland'), 'MKLNT11111')
        self.assertEquals(caverphone('marks'), 'MKS1111111')
        self.assertEquals(caverphone('marlovv'), 'MLF1111111')
        self.assertEquals(caverphone('marlow'), 'MLA1111111')
        self.assertEquals(caverphone('marple'), 'MPA1111111')
        self.assertEquals(caverphone('marr'), 'MA11111111')
        self.assertEquals(caverphone('marrah'), 'MRA1111111')
        self.assertEquals(caverphone('marrett'), 'MRT1111111')
        self.assertEquals(caverphone('marrette'), 'MRT1111111')
        self.assertEquals(caverphone('marriage'), 'MRK1111111')
        self.assertEquals(caverphone('marriner'), 'MRNA111111')
        self.assertEquals(caverphone('marriott'), 'MRT1111111')
        self.assertEquals(caverphone('marris'), 'MRS1111111')
        self.assertEquals(caverphone('marrison'), 'MRSN111111')
        self.assertEquals(caverphone('marryatt'), 'MRT1111111')
        self.assertEquals(caverphone('marsden'), 'MSTN111111')
        self.assertEquals(caverphone('marsh'), 'MS11111111')
        self.assertEquals(caverphone('marshall'), 'MSA1111111')
        self.assertEquals(caverphone('marsllall'), 'MSLA111111')
        self.assertEquals(caverphone('marson'), 'MSN1111111')
        self.assertEquals(caverphone('marston'), 'MSTN111111')
        self.assertEquals(caverphone('martin'), 'MTN1111111')
        self.assertEquals(caverphone('marwick'), 'MWK1111111')
        self.assertEquals(caverphone('marychurch'), 'MRKK111111')
        self.assertEquals(caverphone('mashers'), 'MSS1111111')
        self.assertEquals(caverphone('maskell'), 'MSKA111111')
        self.assertEquals(caverphone('maskill'), 'MSKA111111')
        self.assertEquals(caverphone('maskrey'), 'MSKRA11111')
        self.assertEquals(caverphone('maslen'), 'MSLN111111')
        self.assertEquals(caverphone('maslin'), 'MSLN111111')
        self.assertEquals(caverphone('mason'), 'MSN1111111')
        self.assertEquals(caverphone('massetti'), 'MSTA111111')
        self.assertEquals(caverphone('massey'), 'MSA1111111')
        self.assertEquals(caverphone('masson'), 'MSN1111111')
        self.assertEquals(caverphone('masters'), 'MSTS111111')
        self.assertEquals(caverphone('masterton'), 'MSTTN11111')
        self.assertEquals(caverphone('mather'), 'MTA1111111')
        self.assertEquals(caverphone('mathers'), 'MTS1111111')
        self.assertEquals(caverphone('matheson'), 'MTSN111111')
        self.assertEquals(caverphone('mathews'), 'MTS1111111')
        self.assertEquals(caverphone('mathewson'), 'MTSN111111')
        self.assertEquals(caverphone('mathias'), 'MTS1111111')
        self.assertEquals(caverphone('mathie'), 'MTA1111111')
        self.assertEquals(caverphone('mathieson'), 'MTSN111111')
        self.assertEquals(caverphone('mathison'), 'MTSN111111')
        self.assertEquals(caverphone('matier'), 'MTA1111111')
        self.assertEquals(caverphone('matlewson'), 'MTLSN11111')
        self.assertEquals(caverphone('matravers'), 'MTRFS11111')
        self.assertEquals(caverphone('matron'), 'MTRN111111')
        self.assertEquals(caverphone('matthews'), 'MTS1111111')
        self.assertEquals(caverphone('matthewson'), 'MTSN111111')
        self.assertEquals(caverphone('mattingle'), 'MTNKA11111')
        self.assertEquals(caverphone('mattingley'), 'MTNKLA1111')
        self.assertEquals(caverphone('mattinglv'), 'MTNKF11111')
        self.assertEquals(caverphone('mattingly'), 'MTNKLA1111')
        self.assertEquals(caverphone('mattllews'), 'MTLS111111')
        self.assertEquals(caverphone('mattson'), 'MTSN111111')
        self.assertEquals(caverphone('matuschka'), 'MTSKKA1111')
        self.assertEquals(caverphone('maubon'), 'MPN1111111')
        self.assertEquals(caverphone('maude'), 'MT11111111')
        self.assertEquals(caverphone('mauger'), 'MKA1111111')
        self.assertEquals(caverphone('maunder'), 'MNTA111111')
        self.assertEquals(caverphone('maurie'), 'MRA1111111')
        self.assertEquals(caverphone('mavbee'), 'MFPA111111')
        self.assertEquals(caverphone('maving'), 'MFNK111111')
        self.assertEquals(caverphone('maw'), 'MA11111111')
        self.assertEquals(caverphone('mawer'), 'MWA1111111')
        self.assertEquals(caverphone('mawhinney'), 'MWNA111111')
        self.assertEquals(caverphone('mawson'), 'MSN1111111')
        self.assertEquals(caverphone('maxton'), 'MKTN111111')
        self.assertEquals(caverphone('maxwell'), 'MKWA111111')
        self.assertEquals(caverphone('may'), 'MA11111111')
        self.assertEquals(caverphone('mayall'), 'MA11111111')
        self.assertEquals(caverphone('maybee'), 'MPA1111111')
        self.assertEquals(caverphone('mayer'), 'MA11111111')
        self.assertEquals(caverphone('mayers'), 'MS11111111')
        self.assertEquals(caverphone('mayfield'), 'MFT1111111')
        self.assertEquals(caverphone('mayhew'), 'MA11111111')
        self.assertEquals(caverphone('mayn'), 'MN11111111')
        self.assertEquals(caverphone('maynard'), 'MNT1111111')
        self.assertEquals(caverphone('mayne'), 'MN11111111')
        self.assertEquals(caverphone('mayo'), 'MA11111111')
        self.assertEquals(caverphone('mays'), 'MS11111111')
        self.assertEquals(caverphone('mayston'), 'MSTN111111')
        self.assertEquals(caverphone('mayze'), 'MS11111111')
        self.assertEquals(caverphone('mazey'), 'MSA1111111')
        self.assertEquals(caverphone('mcadam'), 'MKTM111111')
        self.assertEquals(caverphone('mcade'), 'MKT1111111')
        self.assertEquals(caverphone('mcadie'), 'MKTA111111')
        self.assertEquals(caverphone('mcalister'), 'MKLSTA1111')
        self.assertEquals(caverphone('mcallan'), 'MKLN111111')
        self.assertEquals(caverphone('mcallen'), 'MKLN111111')
        self.assertEquals(caverphone('mcalliste'), 'MKLST11111')
        self.assertEquals(caverphone('mcallister'), 'MKLSTA1111')
        self.assertEquals(caverphone('mcalpine'), 'MKPN111111')
        self.assertEquals(caverphone('mcanally'), 'MKNLA11111')
        self.assertEquals(caverphone('mcansh'), 'MKNS111111')
        self.assertEquals(caverphone('mcanulty'), 'MKNTA11111')
        self.assertEquals(caverphone('mcara'), 'MKRA111111')
        self.assertEquals(caverphone('mcarley'), 'MKLA111111')
        self.assertEquals(caverphone('mcarthur'), 'MKTA111111')
        self.assertEquals(caverphone('mcartney'), 'MKTNA11111')
        self.assertEquals(caverphone('mcatamney'), 'MKTMNA1111')
        self.assertEquals(caverphone('mcateer'), 'MKTA111111')
        self.assertEquals(caverphone('mcaulay'), 'MKLA111111')
        self.assertEquals(caverphone('mcauley'), 'MKLA111111')
        self.assertEquals(caverphone('mcauliff'), 'MKLF111111')
        self.assertEquals(caverphone('mcauliffe'), 'MKLF111111')
        self.assertEquals(caverphone('mcauslin'), 'MKSLN11111')
        self.assertEquals(caverphone('mcbain'), 'MKPN111111')
        self.assertEquals(caverphone('mcbeath'), 'MKPT111111')
        self.assertEquals(caverphone('mcbetah'), 'MKPTA11111')
        self.assertEquals(caverphone('mcbeth'), 'MKPT111111')
        self.assertEquals(caverphone('mcbey'), 'MKPA111111')
        self.assertEquals(caverphone('mcbricle'), 'MKPRKA1111')
        self.assertEquals(caverphone('mcbride'), 'MKPRT11111')
        self.assertEquals(caverphone('mcbryde'), 'MKPRT11111')
        self.assertEquals(caverphone('mccabe'), 'MKP1111111')
        self.assertEquals(caverphone('mccafferty'), 'MKFTA11111')
        self.assertEquals(caverphone('mccaffry'), 'MKFRA11111')
        self.assertEquals(caverphone('mccaig'), 'MKK1111111')
        self.assertEquals(caverphone('mccall'), 'MKA1111111')
        self.assertEquals(caverphone('mccallion'), 'MKLN111111')
        self.assertEquals(caverphone('mccallum'), 'MKLM111111')
        self.assertEquals(caverphone('mccalman'), 'MKMN111111')
        self.assertEquals(caverphone('mccambie'), 'MKMPA11111')
        self.assertEquals(caverphone('mccammon'), 'MKMN111111')
        self.assertEquals(caverphone('mccann'), 'MKN1111111')
        self.assertEquals(caverphone('mccardell'), 'MKTA111111')
        self.assertEquals(caverphone('mccarrigan'), 'MKRKN11111')
        self.assertEquals(caverphone('mccarten'), 'MKTN111111')
        self.assertEquals(caverphone('mccarter'), 'MKTA111111')
        self.assertEquals(caverphone('mccarthy'), 'MKTA111111')
        self.assertEquals(caverphone('mccartney'), 'MKTNA11111')
        self.assertEquals(caverphone('mccarty'), 'MKTA111111')
        self.assertEquals(caverphone('mccash'), 'MKS1111111')
        self.assertEquals(caverphone('mccaskill'), 'MKSKA11111')
        self.assertEquals(caverphone('mccaughan'), 'MKKN111111')
        self.assertEquals(caverphone('mccaul'), 'MKA1111111')
        self.assertEquals(caverphone('mccauley'), 'MKLA111111')
        self.assertEquals(caverphone('mccauseland'), 'MKSLNT1111')
        self.assertEquals(caverphone('mccausland'), 'MKSLNT1111')
        self.assertEquals(caverphone('mccaw'), 'MKA1111111')
        self.assertEquals(caverphone('mccawe'), 'MKA1111111')
        self.assertEquals(caverphone('mccay'), 'MKA1111111')
        self.assertEquals(caverphone('mcchesney'), 'MKSNA11111')
        self.assertEquals(caverphone('mccielland'), 'MKSLNT1111')
        self.assertEquals(caverphone('mcciue'), 'MKSA111111')
        self.assertEquals(caverphone('mcclatchv'), 'MKLKF11111')
        self.assertEquals(caverphone('mcclatchy'), 'MKLKA11111')
        self.assertEquals(caverphone('mcclean'), 'MKLN111111')
        self.assertEquals(caverphone('mccleery'), 'MKLRA11111')
        self.assertEquals(caverphone('mcclelland'), 'MKLLNT1111')
        self.assertEquals(caverphone('mcclenaghan'), 'MKLNKN1111')
        self.assertEquals(caverphone('mcclintock'), 'MKLNTK1111')
        self.assertEquals(caverphone('mcclue'), 'MKLA111111')
        self.assertEquals(caverphone('mccluggage'), 'MKLKK11111')
        self.assertEquals(caverphone('mcclure'), 'MKLA111111')
        self.assertEquals(caverphone('mccluskey'), 'MKLSKA1111')
        self.assertEquals(caverphone('mcclusky'), 'MKLSKA1111')
        self.assertEquals(caverphone('mcclymont'), 'MKLMNT1111')
        self.assertEquals(caverphone('mccoll'), 'MKA1111111')
        self.assertEquals(caverphone('mccolloch'), 'MKLK111111')
        self.assertEquals(caverphone('mccolluch'), 'MKLK111111')
        self.assertEquals(caverphone('mccombe'), 'MKM1111111')
        self.assertEquals(caverphone('mccombie'), 'MKMPA11111')
        self.assertEquals(caverphone('mcconechy'), 'MKNKA11111')
        self.assertEquals(caverphone('mcconnachie'), 'MKNKA11111')
        self.assertEquals(caverphone('mcconnel'), 'MKNA111111')
        self.assertEquals(caverphone('mcconnell'), 'MKNA111111')
        self.assertEquals(caverphone('mcconnichie'), 'MKNKA11111')
        self.assertEquals(caverphone('mcconnochi'), 'MKNKA11111')
        self.assertEquals(caverphone('mcconnochie'), 'MKNKA11111')
        self.assertEquals(caverphone('mcconnohie'), 'MKNA111111')
        self.assertEquals(caverphone('mccord'), 'MKT1111111')
        self.assertEquals(caverphone('mccorie'), 'MKRA111111')
        self.assertEquals(caverphone('mccorkinda'), 'MKKNTA1111')
        self.assertEquals(caverphone('mccorkindale'), 'MKKNTA1111')
        self.assertEquals(caverphone('mccorkingdale'), 'MKKNKTA111')
        self.assertEquals(caverphone('mccormack'), 'MKMK111111')
        self.assertEquals(caverphone('mccormacl'), 'MKMKA11111')
        self.assertEquals(caverphone('mccormick'), 'MKMK111111')
        self.assertEquals(caverphone('mccort'), 'MKT1111111')
        self.assertEquals(caverphone('mccowan'), 'MKWN111111')
        self.assertEquals(caverphone('mccoy'), 'MKA1111111')
        self.assertEquals(caverphone('mccracken'), 'MKRKN11111')
        self.assertEquals(caverphone('mccreadie'), 'MKRTA11111')
        self.assertEquals(caverphone('mccreath'), 'MKRT111111')
        self.assertEquals(caverphone('mccrindle'), 'MKRNTA1111')
        self.assertEquals(caverphone('mccrone'), 'MKRN111111')
        self.assertEquals(caverphone('mccrorie'), 'MKRRA11111')
        self.assertEquals(caverphone('mccrory'), 'MKRRA11111')
        self.assertEquals(caverphone('mccrossan'), 'MKRSN11111')
        self.assertEquals(caverphone('mccrossin'), 'MKRSN11111')
        self.assertEquals(caverphone('mccubbin'), 'MKPN111111')
        self.assertEquals(caverphone('mcculloch'), 'MKLK111111')
        self.assertEquals(caverphone('mccullock'), 'MKLK111111')
        self.assertEquals(caverphone('mccullough'), 'MKLA111111')
        self.assertEquals(caverphone('mccune'), 'MKN1111111')
        self.assertEquals(caverphone('mccunn'), 'MKN1111111')
        self.assertEquals(caverphone('mccurdie'), 'MKTA111111')
        self.assertEquals(caverphone('mccurdy'), 'MKTA111111')
        self.assertEquals(caverphone('mccurrach'), 'MKRK111111')
        self.assertEquals(caverphone('mccurrie'), 'MKRA111111')
        self.assertEquals(caverphone('mccusker'), 'MKSKA11111')
        self.assertEquals(caverphone('mccuskey'), 'MKSKA11111')
        self.assertEquals(caverphone('mccutcheon'), 'MKKN111111')
        self.assertEquals(caverphone('mcdermid'), 'MKTMT11111')
        self.assertEquals(caverphone('mcdermitt'), 'MKTMT11111')
        self.assertEquals(caverphone('mcdermott'), 'MKTMT11111')
        self.assertEquals(caverphone('mcdevitt'), 'MKTFT11111')
        self.assertEquals(caverphone('mcdiarmid'), 'MKTMT11111')
        self.assertEquals(caverphone('mcdonald'), 'MKTNT11111')
        self.assertEquals(caverphone('mcdonall'), 'MKTNA11111')
        self.assertEquals(caverphone('mcdonell'), 'MKTNA11111')
        self.assertEquals(caverphone('mcdonnell'), 'MKTNA11111')
        self.assertEquals(caverphone('mcdouall'), 'MKTA111111')
        self.assertEquals(caverphone('mcdougall'), 'MKTKA11111')
        self.assertEquals(caverphone('mcdowall'), 'MKTWA11111')
        self.assertEquals(caverphone('mcdowell'), 'MKTWA11111')
        self.assertEquals(caverphone('mcduff'), 'MKTF111111')
        self.assertEquals(caverphone('mceachern'), 'MSKN111111')
        self.assertEquals(caverphone('mceachran'), 'MSKRN11111')
        self.assertEquals(caverphone('mceay'), 'MSA1111111')
        self.assertEquals(caverphone('mcelhenny'), 'MSNA111111')
        self.assertEquals(caverphone('mcelivee'), 'MSLFA11111')
        self.assertEquals(caverphone('mcelroy'), 'MSRA111111')
        self.assertEquals(caverphone('mceneany'), 'MSNNA11111')
        self.assertEquals(caverphone('mcentee'), 'MSNTA11111')
        self.assertEquals(caverphone('mcevoy'), 'MSFA111111')
        self.assertEquals(caverphone('mcewan'), 'MSWN111111')
        self.assertEquals(caverphone('mcewen'), 'MSWN111111')
        self.assertEquals(caverphone('mcfadden'), 'MKFTN11111')
        self.assertEquals(caverphone('mcfadgen'), 'MKFKN11111')
        self.assertEquals(caverphone('mcfadyen'), 'MKFTN11111')
        self.assertEquals(caverphone('mcfadzen'), 'MKFTSN1111')
        self.assertEquals(caverphone('mcfarlane'), 'MKFLN11111')
        self.assertEquals(caverphone('mcfaull'), 'MKFA111111')
        self.assertEquals(caverphone('mcfeeters'), 'MKFTS11111')
        self.assertEquals(caverphone('mcfelin'), 'MKFLN11111')
        self.assertEquals(caverphone('mcfetridge'), 'MKFTRK1111')
        self.assertEquals(caverphone('mcfie'), 'MKFA111111')
        self.assertEquals(caverphone('mcgahan'), 'MKN1111111')
        self.assertEquals(caverphone('mcgarrigle'), 'MKRKA11111')
        self.assertEquals(caverphone('mcgarry'), 'MKRA111111')
        self.assertEquals(caverphone('mcgavick'), 'MKFK111111')
        self.assertEquals(caverphone('mcgavin'), 'MKFN111111')
        self.assertEquals(caverphone('mcgaw'), 'MKA1111111')
        self.assertEquals(caverphone('mcgee'), 'MKA1111111')
        self.assertEquals(caverphone('mcgeorge'), 'MKK1111111')
        self.assertEquals(caverphone('mcgetrick'), 'MKTRK11111')
        self.assertEquals(caverphone('mcgettigan'), 'MKTKN11111')
        self.assertEquals(caverphone('mcghee'), 'MKA1111111')
        self.assertEquals(caverphone('mcghie'), 'MKA1111111')
        self.assertEquals(caverphone('mcgill brown'), 'MKPRN11111')
        self.assertEquals(caverphone('mcgill-bro'), 'MKPRA11111')
        self.assertEquals(caverphone('mcgill-brown'), 'MKPRN11111')
        self.assertEquals(caverphone('mcgill'), 'MKA1111111')
        self.assertEquals(caverphone('mcgillivary'), 'MKLFRA1111')
        self.assertEquals(caverphone('mcgilvary'), 'MKFRA11111')
        self.assertEquals(caverphone('mcgilvray'), 'MKFRA11111')
        self.assertEquals(caverphone('mcgimpsey'), 'MKMPSA1111')
        self.assertEquals(caverphone('mcginness'), 'MKNS111111')
        self.assertEquals(caverphone('mcginty'), 'MKNTA11111')
        self.assertEquals(caverphone('mcgirr'), 'MKA1111111')
        self.assertEquals(caverphone('mcgirt'), 'MKT1111111')
        self.assertEquals(caverphone('mcglashan'), 'MKLSN11111')
        self.assertEquals(caverphone('mcgllie'), 'MKLA111111')
        self.assertEquals(caverphone('mcgoldrick'), 'MKTRK11111')
        self.assertEquals(caverphone('mcgolligal'), 'MKLKA11111')
        self.assertEquals(caverphone('mcgonigal'), 'MKNKA11111')
        self.assertEquals(caverphone('mcgoogan'), 'MKKN111111')
        self.assertEquals(caverphone('mcgoun'), 'MKN1111111')
        self.assertEquals(caverphone('mcgoverne'), 'MKFN111111')
        self.assertEquals(caverphone('mcgowan'), 'MKWN111111')
        self.assertEquals(caverphone('mcgradie'), 'MKRTA11111')
        self.assertEquals(caverphone('mcgrath'), 'MKRT111111')
        self.assertEquals(caverphone('mcgregor'), 'MKRKA11111')
        self.assertEquals(caverphone('mcgriffiths'), 'MKRFTS1111')
        self.assertEquals(caverphone('mcguckin'), 'MKKN111111')
        self.assertEquals(caverphone('mcguffie'), 'MKFA111111')
        self.assertEquals(caverphone('mcguigan'), 'MKKN111111')
        self.assertEquals(caverphone('mcguire'), 'MKA1111111')
        self.assertEquals(caverphone('mchardy'), 'MKTA111111')
        self.assertEquals(caverphone('mcharry'), 'MKRA111111')
        self.assertEquals(caverphone('mchealy'), 'MKLA111111')
        self.assertEquals(caverphone('mchenry'), 'MKNRA11111')
        self.assertEquals(caverphone('mchoull'), 'MKA1111111')
        self.assertEquals(caverphone('mchugh'), 'MKA1111111')
        self.assertEquals(caverphone('mchutchcson'), 'MKKKSN1111')
        self.assertEquals(caverphone('mchutcheson'), 'MKKSN11111')
        self.assertEquals(caverphone('mchutchon'), 'MKKN111111')
        self.assertEquals(caverphone('mciachlan'), 'MSKLN11111')
        self.assertEquals(caverphone('mciaren'), 'MSRN111111')
        self.assertEquals(caverphone('mciean'), 'MSN1111111')
        self.assertEquals(caverphone('mcielland'), 'MSLNT11111')
        self.assertEquals(caverphone('mcieod'), 'MST1111111')
        self.assertEquals(caverphone('mciintyre'), 'MSNTA11111')
        self.assertEquals(caverphone('mcilroy'), 'MSRA111111')
        self.assertEquals(caverphone('mcindoe'), 'MSNTA11111')
        self.assertEquals(caverphone('mcinerney'), 'MSNNA11111')
        self.assertEquals(caverphone('mcinnes'), 'MSNS111111')
        self.assertEquals(caverphone('mcintosh'), 'MSNTS11111')
        self.assertEquals(caverphone('mcintosn'), 'MSNTSN1111')
        self.assertEquals(caverphone('mcintyre'), 'MSNTA11111')
        self.assertEquals(caverphone('mcisaac'), 'MSSK111111')
        self.assertEquals(caverphone('mciver'), 'MSFA111111')
        self.assertEquals(caverphone('mcivor'), 'MSFA111111')
        self.assertEquals(caverphone('mckague'), 'MKKA111111')
        self.assertEquals(caverphone('mckane'), 'MKN1111111')
        self.assertEquals(caverphone('mckay'), 'MKA1111111')
        self.assertEquals(caverphone('mckaye'), 'MKA1111111')
        self.assertEquals(caverphone('mckean'), 'MKN1111111')
        self.assertEquals(caverphone('mckeand'), 'MKNT111111')
        self.assertEquals(caverphone('mckeay'), 'MKA1111111')
        self.assertEquals(caverphone('mckechie'), 'MKKA111111')
        self.assertEquals(caverphone('mckechnie'), 'MKKNA11111')
        self.assertEquals(caverphone('mckecknie'), 'MKKNA11111')
        self.assertEquals(caverphone('mckee'), 'MKA1111111')
        self.assertEquals(caverphone('mckeefry'), 'MKFRA11111')
        self.assertEquals(caverphone('mckeeiry'), 'MKRA111111')
        self.assertEquals(caverphone('mckeeman'), 'MKMN111111')
        self.assertEquals(caverphone('mckeen'), 'MKN1111111')
        self.assertEquals(caverphone('mckeenan'), 'MKNN111111')
        self.assertEquals(caverphone('mckeich'), 'MKK1111111')
        self.assertEquals(caverphone('mckellar'), 'MKLA111111')
        self.assertEquals(caverphone('mckelvey'), 'MKFA111111')
        self.assertEquals(caverphone('mckelvie'), 'MKFA111111')
        self.assertEquals(caverphone('mckendry'), 'MKNTRA1111')
        self.assertEquals(caverphone('mckenna'), 'MKNA111111')
        self.assertEquals(caverphone('mckenney'), 'MKNA111111')
        self.assertEquals(caverphone('mckenzie'), 'MKNSA11111')
        self.assertEquals(caverphone('mckeown'), 'MKN1111111')
        self.assertEquals(caverphone('mckernan'), 'MKNN111111')
        self.assertEquals(caverphone('mckerras'), 'MKRS111111')
        self.assertEquals(caverphone('mckerrow'), 'MKRA111111')
        self.assertEquals(caverphone('mckessar'), 'MKSA111111')
        self.assertEquals(caverphone('mcketterick'), 'MKTRK11111')
        self.assertEquals(caverphone('mckewell'), 'MKWA111111')
        self.assertEquals(caverphone('mckewen'), 'MKWN111111')
        self.assertEquals(caverphone('mckey'), 'MKA1111111')
        self.assertEquals(caverphone('mckibbin'), 'MKPN111111')
        self.assertEquals(caverphone('mckie'), 'MKA1111111')
        self.assertEquals(caverphone('mckillop'), 'MKLP111111')
        self.assertEquals(caverphone('mckinlay'), 'MKNLA11111')
        self.assertEquals(caverphone('mckinley'), 'MKNLA11111')
        self.assertEquals(caverphone('mckinnel'), 'MKNA111111')
        self.assertEquals(caverphone('mckinney'), 'MKNA111111')
        self.assertEquals(caverphone('mckinnie'), 'MKNA111111')
        self.assertEquals(caverphone('mckinnon'), 'MKNN111111')
        self.assertEquals(caverphone('mckirdy'), 'MKTA111111')
        self.assertEquals(caverphone('mckissock'), 'MKSK111111')
        self.assertEquals(caverphone('mckitterick'), 'MKTRK11111')
        self.assertEquals(caverphone('mcknight'), 'MKNT111111')
        self.assertEquals(caverphone('mckone'), 'MKN1111111')
        self.assertEquals(caverphone('mclachlan'), 'MKLKLN1111')
        self.assertEquals(caverphone('mclanachan'), 'MKLNKN1111')
        self.assertEquals(caverphone('mclaren'), 'MKLRN11111')
        self.assertEquals(caverphone('mclatchie'), 'MKLKA11111')
        self.assertEquals(caverphone('mclauchan'), 'MKLKN11111')
        self.assertEquals(caverphone('mclauchlan'), 'MKLKLN1111')
        self.assertEquals(caverphone('mclauchlin'), 'MKLKLN1111')
        self.assertEquals(caverphone('mclaughlan'), 'MKLLN11111')
        self.assertEquals(caverphone('mclaughlin'), 'MKLLN11111')
        self.assertEquals(caverphone('mclav'), 'MKLF111111')
        self.assertEquals(caverphone('mclay'), 'MKLA111111')
        self.assertEquals(caverphone('mclcan'), 'MKKN111111')
        self.assertEquals(caverphone('mclean'), 'MKLN111111')
        self.assertEquals(caverphone('mclear'), 'MKLA111111')
        self.assertEquals(caverphone('mcleary'), 'MKLRA11111')
        self.assertEquals(caverphone('mcleavey'), 'MKLFA11111')
        self.assertEquals(caverphone('mcleay'), 'MKLA111111')
        self.assertEquals(caverphone('mcledd'), 'MKLT111111')
        self.assertEquals(caverphone('mcledowne'), 'MKLTN11111')
        self.assertEquals(caverphone('mcledowney'), 'MKLTNA1111')
        self.assertEquals(caverphone('mcleely'), 'MKLLA11111')
        self.assertEquals(caverphone('mclellan'), 'MKLLN11111')
        self.assertEquals(caverphone('mclelland'), 'MKLLNT1111')
        self.assertEquals(caverphone('mclenaghin'), 'MKLNKN1111')
        self.assertEquals(caverphone('mclennan'), 'MKLNN11111')
        self.assertEquals(caverphone('mcleod'), 'MKLT111111')
        self.assertEquals(caverphone('mclevie'), 'MKLFA11111')
        self.assertEquals(caverphone('mclintock'), 'MKLNTK1111')
        self.assertEquals(caverphone('mcliskey'), 'MKLSKA1111')
        self.assertEquals(caverphone('mcllroy'), 'MKRA111111')
        self.assertEquals(caverphone('mclndoe'), 'MKNTA11111')
        self.assertEquals(caverphone('mclnnes'), 'MKNS111111')
        self.assertEquals(caverphone('mclntosh'), 'MKNTS11111')
        self.assertEquals(caverphone('mclntvre'), 'MKNTFA1111')
        self.assertEquals(caverphone('mclntyre'), 'MKNTA11111')
        self.assertEquals(caverphone('mcloud'), 'MKLT111111')
        self.assertEquals(caverphone('mcloughlin'), 'MKLLN11111')
        self.assertEquals(caverphone('mclure'), 'MKLA111111')
        self.assertEquals(caverphone('mcluskey'), 'MKLSKA1111')
        self.assertEquals(caverphone('mclusky'), 'MKLSKA1111')
        self.assertEquals(caverphone('mclver'), 'MKFA111111')
        self.assertEquals(caverphone('mclvor'), 'MKFA111111')
        self.assertEquals(caverphone('mcmahon'), 'MKMN111111')
        self.assertEquals(caverphone('mcmann'), 'MKMN111111')
        self.assertEquals(caverphone('mcmannes'), 'MKMNS11111')
        self.assertEquals(caverphone('mcmanus'), 'MKMNS11111')
        self.assertEquals(caverphone('mcmaster'), 'MKMSTA1111')
        self.assertEquals(caverphone('mcmath'), 'MKMT111111')
        self.assertEquals(caverphone('mcmeeking'), 'MKMKNK1111')
        self.assertEquals(caverphone('mcmillan'), 'MKMLN11111')
        self.assertEquals(caverphone('mcmillen'), 'MKMLN11111')
        self.assertEquals(caverphone('mcminn'), 'MKMN111111')
        self.assertEquals(caverphone('mcmorran'), 'MKMRN11111')
        self.assertEquals(caverphone('mcmulen'), 'MKMLN11111')
        self.assertEquals(caverphone('mcmullan'), 'MKMLN11111')
        self.assertEquals(caverphone('mcmullen'), 'MKMLN11111')
        self.assertEquals(caverphone('mcmurray'), 'MKMRA11111')
        self.assertEquals(caverphone('mcmurtrie'), 'MKMTRA1111')
        self.assertEquals(caverphone('mcnab'), 'MKNP111111')
        self.assertEquals(caverphone('mcnair'), 'MKNA111111')
        self.assertEquals(caverphone('mcnally'), 'MKNLA11111')
        self.assertEquals(caverphone('mcnalty'), 'MKNTA11111')
        self.assertEquals(caverphone('mcnama'), 'MKNMA11111')
        self.assertEquals(caverphone('mcnamara'), 'MKNMRA1111')
        self.assertEquals(caverphone('mcnamee'), 'MKNMA11111')
        self.assertEquals(caverphone('mcnarey'), 'MKNRA11111')
        self.assertEquals(caverphone('mcnarry'), 'MKNRA11111')
        self.assertEquals(caverphone('mcnatty'), 'MKNTA11111')
        self.assertEquals(caverphone('mcnaught'), 'MKNT111111')
        self.assertEquals(caverphone('mcnaughton'), 'MKNTN11111')
        self.assertEquals(caverphone('mcnauglton'), 'MKNKTN1111')
        self.assertEquals(caverphone('mcnee'), 'MKNA111111')
        self.assertEquals(caverphone('mcneil'), 'MKNA111111')
        self.assertEquals(caverphone('mcneill'), 'MKNA111111')
        self.assertEquals(caverphone('mcneish'), 'MKNS111111')
        self.assertEquals(caverphone('mcnicol'), 'MKNKA11111')
        self.assertEquals(caverphone('mcnicoll'), 'MKNKA11111')
        self.assertEquals(caverphone('mcnie'), 'MKNA111111')
        self.assertEquals(caverphone('mcniel'), 'MKNA111111')
        self.assertEquals(caverphone('mcnish'), 'MKNS111111')
        self.assertEquals(caverphone('mcnoe'), 'MKNA111111')
        self.assertEquals(caverphone('mcnulty'), 'MKNTA11111')
        self.assertEquals(caverphone('mcnultz'), 'MKNTS11111')
        self.assertEquals(caverphone('mconie'), 'MKNA111111')
        self.assertEquals(caverphone('mcouarrie'), 'MKRA111111')
        self.assertEquals(caverphone('mcoueen'), 'MKN1111111')
        self.assertEquals(caverphone('mcowan'), 'MKWN111111')
        self.assertEquals(caverphone('mcpate'), 'MKPT111111')
        self.assertEquals(caverphone('mcpeak'), 'MKPK111111')
        self.assertEquals(caverphone('mcphail'), 'MKFA111111')
        self.assertEquals(caverphone('mcpheat'), 'MKFT111111')
        self.assertEquals(caverphone('mcphee'), 'MKFA111111')
        self.assertEquals(caverphone('mcphersoll'), 'MKFSA11111')
        self.assertEquals(caverphone('mcpherson'), 'MKFSN11111')
        self.assertEquals(caverphone('mcquaid'), 'MKT1111111')
        self.assertEquals(caverphone('mcquarrie'), 'MKRA111111')
        self.assertEquals(caverphone('mcqueen'), 'MKN1111111')
        self.assertEquals(caverphone('mcquilty'), 'MKTA111111')
        self.assertEquals(caverphone('mcrae'), 'MKRA111111')
        self.assertEquals(caverphone('mcritchie'), 'MKRKA11111')
        self.assertEquals(caverphone('mcrobie'), 'MKRPA11111')
        self.assertEquals(caverphone('mcrohie'), 'MKRA111111')
        self.assertEquals(caverphone('mcshain'), 'MKSN111111')
        self.assertEquals(caverphone('mcshaw'), 'MKSA111111')
        self.assertEquals(caverphone('mcskimming'), 'MKSKMNK111')
        self.assertEquals(caverphone('mcsoriley'), 'MKSRLA1111')
        self.assertEquals(caverphone('mcsorlay'), 'MKSLA11111')
        self.assertEquals(caverphone('mcsourley'), 'MKSLA11111')
        self.assertEquals(caverphone('mcstay'), 'MKSTA11111')
        self.assertEquals(caverphone('mcswan'), 'MKSWN11111')
        self.assertEquals(caverphone('mcsweeney'), 'MKSWNA1111')
        self.assertEquals(caverphone('mcsweeny'), 'MKSWNA1111')
        self.assertEquals(caverphone('mctaggart'), 'MKTKT11111')
        self.assertEquals(caverphone('mctagget'), 'MKTKT11111')
        self.assertEquals(caverphone('mctaggett'), 'MKTKT11111')
        self.assertEquals(caverphone('mctague'), 'MKTKA11111')
        self.assertEquals(caverphone('mctainsh'), 'MKTNS11111')
        self.assertEquals(caverphone('mctamney'), 'MKTMNA1111')
        self.assertEquals(caverphone('mctavish'), 'MKTFS11111')
        self.assertEquals(caverphone('mcternan'), 'MKTNN11111')
        self.assertEquals(caverphone('mctigue'), 'MKTKA11111')
        self.assertEquals(caverphone('mcveigh'), 'MKFA111111')
        self.assertEquals(caverphone('mcvey'), 'MKFA111111')
        self.assertEquals(caverphone('mcvicar'), 'MKFKA11111')
        self.assertEquals(caverphone('mcvickar'), 'MKFKA11111')
        self.assertEquals(caverphone('mcvicker'), 'MKFKA11111')
        self.assertEquals(caverphone('mcvie'), 'MKFA111111')
        self.assertEquals(caverphone('mcwatt'), 'MKWT111111')
        self.assertEquals(caverphone('mcwen'), 'MKWN111111')
        self.assertEquals(caverphone('mcwilliam'), 'MKWLM11111')
        self.assertEquals(caverphone('mcwillian'), 'MKWLN11111')
        self.assertEquals(caverphone('mead'), 'MT11111111')
        self.assertEquals(caverphone('meade'), 'MT11111111')
        self.assertEquals(caverphone('meadowcroft'), 'MTKRFT1111')
        self.assertEquals(caverphone('meadows'), 'MTS1111111')
        self.assertEquals(caverphone('mearns'), 'MNS1111111')
        self.assertEquals(caverphone('mears'), 'MS11111111')
        self.assertEquals(caverphone('mechaelis'), 'MKLS111111')
        self.assertEquals(caverphone('mechen'), 'MKN1111111')
        self.assertEquals(caverphone('mecracken'), 'MKRKN11111')
        self.assertEquals(caverphone('medder'), 'MTA1111111')
        self.assertEquals(caverphone('meder'), 'MTA1111111')
        self.assertEquals(caverphone('medhurst'), 'MTST111111')
        self.assertEquals(caverphone('medley'), 'MTLA111111')
        self.assertEquals(caverphone('medlicott'), 'MTLKT11111')
        self.assertEquals(caverphone('medlin'), 'MTLN111111')
        self.assertEquals(caverphone('mee'), 'MA11111111')
        self.assertEquals(caverphone('meehan'), 'MN11111111')
        self.assertEquals(caverphone('meek'), 'MK11111111')
        self.assertEquals(caverphone('meekin'), 'MKN1111111')
        self.assertEquals(caverphone('meekison'), 'MKSN111111')
        self.assertEquals(caverphone('meeks'), 'MKS1111111')
        self.assertEquals(caverphone('meenan'), 'MNN1111111')
        self.assertEquals(caverphone('meevoy'), 'MFA1111111')
        self.assertEquals(caverphone('mefarlane'), 'MFLN111111')
        self.assertEquals(caverphone('meffan'), 'MFN1111111')
        self.assertEquals(caverphone('mefie'), 'MFA1111111')
        self.assertEquals(caverphone('mehalski'), 'MSKA111111')
        self.assertEquals(caverphone('meighan'), 'MKN1111111')
        self.assertEquals(caverphone('meikle'), 'MKA1111111')
        self.assertEquals(caverphone('meiklejohn'), 'MKLN111111')
        self.assertEquals(caverphone('meiklejolm'), 'MKLM111111')
        self.assertEquals(caverphone('meikljohn'), 'MKLN111111')
        self.assertEquals(caverphone('meinung'), 'MNNK111111')
        self.assertEquals(caverphone('meivor'), 'MFA1111111')
        self.assertEquals(caverphone('mekee'), 'MKA1111111')
        self.assertEquals(caverphone('mekenzie'), 'MKNSA11111')
        self.assertEquals(caverphone('meldrum'), 'MTRM111111')
        self.assertEquals(caverphone('melean'), 'MLN1111111')
        self.assertEquals(caverphone('melhop'), 'MP11111111')
        self.assertEquals(caverphone('melitus'), 'MLTS111111')
        self.assertEquals(caverphone('melladew'), 'MLTA111111')
        self.assertEquals(caverphone('mellars'), 'MLS1111111')
        self.assertEquals(caverphone('mellett'), 'MLT1111111')
        self.assertEquals(caverphone('mellon'), 'MLN1111111')
        self.assertEquals(caverphone('mellor'), 'MLA1111111')
        self.assertEquals(caverphone('melrose'), 'MRS1111111')
        self.assertEquals(caverphone('melser'), 'MSA1111111')
        self.assertEquals(caverphone('melton'), 'MTN1111111')
        self.assertEquals(caverphone('melville'), 'MFA1111111')
        self.assertEquals(caverphone('melvin'), 'MFN1111111')
        self.assertEquals(caverphone('melvlle'), 'MFA1111111')
        self.assertEquals(caverphone('mendelsohn'), 'MNTSN11111')
        self.assertEquals(caverphone('mendoza'), 'MNTSA11111')
        self.assertEquals(caverphone('menhinick'), 'MNNK111111')
        self.assertEquals(caverphone('menlove'), 'MNLF111111')
        self.assertEquals(caverphone('menton'), 'MNTN111111')
        self.assertEquals(caverphone('menzies'), 'MNSS111111')
        self.assertEquals(caverphone('mercer'), 'MSA1111111')
        self.assertEquals(caverphone('merchant'), 'MKNT111111')
        self.assertEquals(caverphone('mercier'), 'MSA1111111')
        self.assertEquals(caverphone('meredith'), 'MRTT111111')
        self.assertEquals(caverphone('merrie'), 'MRA1111111')
        self.assertEquals(caverphone('merry'), 'MRA1111111')
        self.assertEquals(caverphone('mervyn'), 'MFN1111111')
        self.assertEquals(caverphone('messenger'), 'MSNKA11111')
        self.assertEquals(caverphone('messent'), 'MSNT111111')
        self.assertEquals(caverphone('messer'), 'MSA1111111')
        self.assertEquals(caverphone('meston'), 'MSTN111111')
        self.assertEquals(caverphone('met'), 'MT11111111')
        self.assertEquals(caverphone('metcalf'), 'MTKF111111')
        self.assertEquals(caverphone('metcalfe'), 'MTKF111111')
        self.assertEquals(caverphone('methers'), 'MTS1111111')
        self.assertEquals(caverphone('methven'), 'MTFN111111')
        self.assertEquals(caverphone('metson'), 'MTSN111111')
        self.assertEquals(caverphone('metz'), 'MTS1111111')
        self.assertEquals(caverphone('mew'), 'MA11111111')
        self.assertEquals(caverphone('mewhinney'), 'MWNA111111')
        self.assertEquals(caverphone('meyer'), 'MA11111111')
        self.assertEquals(caverphone('michael'), 'MKA1111111')
        self.assertEquals(caverphone('michaelis'), 'MKLS111111')
        self.assertEquals(caverphone('michelle'), 'MKA1111111')
        self.assertEquals(caverphone('michie'), 'MKA1111111')
        self.assertEquals(caverphone('middendorf'), 'MTNTF11111')
        self.assertEquals(caverphone('middlebrook'), 'MTLPRK1111')
        self.assertEquals(caverphone('middleditch'), 'MTLTK11111')
        self.assertEquals(caverphone('middlemass'), 'MTLMS11111')
        self.assertEquals(caverphone('middlemiss'), 'MTLMS11111')
        self.assertEquals(caverphone('middleton'), 'MTLTN11111')
        self.assertEquals(caverphone('midgley'), 'MKLA111111')
        self.assertEquals(caverphone('miils'), 'MS11111111')
        self.assertEquals(caverphone('mil1er'), 'MLA1111111')
        self.assertEquals(caverphone('milbum'), 'MPM1111111')
        self.assertEquals(caverphone('milburn'), 'MPN1111111')
        self.assertEquals(caverphone('milburne'), 'MPN1111111')
        self.assertEquals(caverphone('mildenhall'), 'MTNA111111')
        self.assertEquals(caverphone('miles'), 'MLS1111111')
        self.assertEquals(caverphone('milgrove'), 'MKRF111111')
        self.assertEquals(caverphone('milis'), 'MLS1111111')
        self.assertEquals(caverphone('mill'), 'MA11111111')
        self.assertEquals(caverphone('millar'), 'MLA1111111')
        self.assertEquals(caverphone('millard'), 'MLT1111111')
        self.assertEquals(caverphone('millca'), 'MKA1111111')
        self.assertEquals(caverphone('millea'), 'MLA1111111')
        self.assertEquals(caverphone('millen'), 'MLN1111111')
        self.assertEquals(caverphone('miller'), 'MLA1111111')
        self.assertEquals(caverphone('millet'), 'MLT1111111')
        self.assertEquals(caverphone('millian'), 'MLN1111111')
        self.assertEquals(caverphone('millie'), 'MLA1111111')
        self.assertEquals(caverphone('milligan'), 'MLKN111111')
        self.assertEquals(caverphone('milliken'), 'MLKN111111')
        self.assertEquals(caverphone('millin'), 'MLN1111111')
        self.assertEquals(caverphone('milliner'), 'MLNA111111')
        self.assertEquals(caverphone('millington'), 'MLNKTN1111')
        self.assertEquals(caverphone('millow'), 'MLA1111111')
        self.assertEquals(caverphone('mills'), 'MS11111111')
        self.assertEquals(caverphone('milne'), 'MN11111111')
        self.assertEquals(caverphone('milner'), 'MNA1111111')
        self.assertEquals(caverphone('milnes'), 'MNS1111111')
        self.assertEquals(caverphone('milsom'), 'MSM1111111')
        self.assertEquals(caverphone('milton'), 'MTN1111111')
        self.assertEquals(caverphone('milward'), 'MWT1111111')
        self.assertEquals(caverphone('mindo'), 'MNTA111111')
        self.assertEquals(caverphone('mine'), 'MN11111111')
        self.assertEquals(caverphone('minehan'), 'MNN1111111')
        self.assertEquals(caverphone('miners'), 'MNS1111111')
        self.assertEquals(caverphone('minihan'), 'MNN1111111')
        self.assertEquals(caverphone('minn'), 'MN11111111')
        self.assertEquals(caverphone('minton'), 'MNTN111111')
        self.assertEquals(caverphone('mirams'), 'MRMS111111')
        self.assertEquals(caverphone('miscall'), 'MSKA111111')
        self.assertEquals(caverphone('miskel'), 'MSKA111111')
        self.assertEquals(caverphone('missen'), 'MSN1111111')
        self.assertEquals(caverphone('mitchall'), 'MKA1111111')
        self.assertEquals(caverphone('mitchel'), 'MKA1111111')
        self.assertEquals(caverphone('mitchell'), 'MKA1111111')
        self.assertEquals(caverphone('mitehell'), 'MTA1111111')
        self.assertEquals(caverphone('mitson'), 'MTSN111111')
        self.assertEquals(caverphone('mitten'), 'MTN1111111')
        self.assertEquals(caverphone('mlburn'), 'MPN1111111')
        self.assertEquals(caverphone('mlls'), 'MS11111111')
        self.assertEquals(caverphone('mnlloy'), 'MNLA111111')
        self.assertEquals(caverphone('moar'), 'MA11111111')
        self.assertEquals(caverphone('moara'), 'MRA1111111')
        self.assertEquals(caverphone('mobbs'), 'MPS1111111')
        self.assertEquals(caverphone('mockford'), 'MKFT111111')
        self.assertEquals(caverphone('mockler'), 'MKLA111111')
        self.assertEquals(caverphone('modonald'), 'MTNT111111')
        self.assertEquals(caverphone('moen'), 'MN11111111')
        self.assertEquals(caverphone('moffat'), 'MFT1111111')
        self.assertEquals(caverphone('moffatt'), 'MFT1111111')
        self.assertEquals(caverphone('moffett'), 'MFT1111111')
        self.assertEquals(caverphone('moffitt'), 'MFT1111111')
        self.assertEquals(caverphone('mogie'), 'MKA1111111')
        self.assertEquals(caverphone('moher'), 'MA11111111')
        self.assertEquals(caverphone('moir'), 'MA11111111')
        self.assertEquals(caverphone('moirison'), 'MRSN111111')
        self.assertEquals(caverphone('mokenzie'), 'MKNSA11111')
        self.assertEquals(caverphone('moles'), 'MLS1111111')
        self.assertEquals(caverphone('moller'), 'MLA1111111')
        self.assertEquals(caverphone('mollison'), 'MLSN111111')
        self.assertEquals(caverphone('molloy'), 'MLA1111111')
        self.assertEquals(caverphone('moloney'), 'MLNA111111')
        self.assertEquals(caverphone('molonoy'), 'MLNA111111')
        self.assertEquals(caverphone('mona'), 'MNA1111111')
        self.assertEquals(caverphone('monaghan'), 'MNKN111111')
        self.assertEquals(caverphone('monagon'), 'MNKN111111')
        self.assertEquals(caverphone('monahan'), 'MNN1111111')
        self.assertEquals(caverphone('monckton'), 'MNKTN11111')
        self.assertEquals(caverphone('moncrieff'), 'MNKRF11111')
        self.assertEquals(caverphone('moncrieft'), 'MNKRFT1111')
        self.assertEquals(caverphone('moncur'), 'MNKA111111')
        self.assertEquals(caverphone('mong'), 'MNK1111111')
        self.assertEquals(caverphone('monihan'), 'MNN1111111')
        self.assertEquals(caverphone('monk'), 'MNK1111111')
        self.assertEquals(caverphone('monkman'), 'MNKMN11111')
        self.assertEquals(caverphone('monro'), 'MNRA111111')
        self.assertEquals(caverphone('monson'), 'MNSN111111')
        self.assertEquals(caverphone('montague'), 'MNTKA11111')
        self.assertEquals(caverphone('monteath'), 'MNTT111111')
        self.assertEquals(caverphone('monteith'), 'MNTT111111')
        self.assertEquals(caverphone('montgomery'), 'MNTKMRA111')
        self.assertEquals(caverphone('montgomor'), 'MNTKMA1111')
        self.assertEquals(caverphone('montgoner'), 'MNTKNA1111')
        self.assertEquals(caverphone('moodie'), 'MTA1111111')
        self.assertEquals(caverphone('moody'), 'MTA1111111')
        self.assertEquals(caverphone('moon'), 'MN11111111')
        self.assertEquals(caverphone('mooney'), 'MNA1111111')
        self.assertEquals(caverphone('moor'), 'MA11111111')
        self.assertEquals(caverphone('moore-wrig'), 'MRRK111111')
        self.assertEquals(caverphone('moore-wright'), 'MRRT111111')
        self.assertEquals(caverphone('moore'), 'MA11111111')
        self.assertEquals(caverphone('moorehead'), 'MRT1111111')
        self.assertEquals(caverphone('moores'), 'MRS1111111')
        self.assertEquals(caverphone('moorhonse'), 'MNS1111111')
        self.assertEquals(caverphone('moorhouse'), 'MS11111111')
        self.assertEquals(caverphone('mora'), 'MRA1111111')
        self.assertEquals(caverphone('moran'), 'MRN1111111')
        self.assertEquals(caverphone('more'), 'MA11111111')
        self.assertEquals(caverphone('moreland'), 'MRLNT11111')
        self.assertEquals(caverphone('morell'), 'MRA1111111')
        self.assertEquals(caverphone('moreton'), 'MRTN111111')
        self.assertEquals(caverphone('morgan roberts'), 'MKNRPTS111')
        self.assertEquals(caverphone('morgan-roberts'), 'MKNRPTS111')
        self.assertEquals(caverphone('morgan'), 'MKN1111111')
        self.assertEquals(caverphone('morgon'), 'MKN1111111')
        self.assertEquals(caverphone('moriarty'), 'MRTA111111')
        self.assertEquals(caverphone('morice'), 'MRK1111111')
        self.assertEquals(caverphone('moriee'), 'MRA1111111')
        self.assertEquals(caverphone('morison'), 'MRSN111111')
        self.assertEquals(caverphone('moritzson'), 'MRTSN11111')
        self.assertEquals(caverphone('morkane'), 'MKN1111111')
        self.assertEquals(caverphone('morland'), 'MLNT111111')
        self.assertEquals(caverphone('morley'), 'MLA1111111')
        self.assertEquals(caverphone('moro'), 'MRA1111111')
        self.assertEquals(caverphone('moroney'), 'MRNA111111')
        self.assertEquals(caverphone('morpeth'), 'MPT1111111')
        self.assertEquals(caverphone('morrall'), 'MRA1111111')
        self.assertEquals(caverphone('morrell'), 'MRA1111111')
        self.assertEquals(caverphone('morris'), 'MRS1111111')
        self.assertEquals(caverphone('morrisey'), 'MRSA111111')
        self.assertEquals(caverphone('morrison'), 'MRSN111111')
        self.assertEquals(caverphone('morriss'), 'MRS1111111')
        self.assertEquals(caverphone('morrissey'), 'MRSA111111')
        self.assertEquals(caverphone('morrow'), 'MRA1111111')
        self.assertEquals(caverphone('mortimer'), 'MTMA111111')
        self.assertEquals(caverphone('morton'), 'MTN1111111')
        self.assertEquals(caverphone('morwood'), 'MWT1111111')
        self.assertEquals(caverphone('moseley'), 'MSLA111111')
        self.assertEquals(caverphone('moses'), 'MSS1111111')
        self.assertEquals(caverphone('mosley'), 'MSLA111111')
        self.assertEquals(caverphone('moss'), 'MS11111111')
        self.assertEquals(caverphone('mothes'), 'MTS1111111')
        self.assertEquals(caverphone('motion'), 'MSN1111111')
        self.assertEquals(caverphone('mouat'), 'MT11111111')
        self.assertEquals(caverphone('moulin'), 'MLN1111111')
        self.assertEquals(caverphone('mount'), 'MNT1111111')
        self.assertEquals(caverphone('mountford'), 'MNTFT11111')
        self.assertEquals(caverphone('mountney'), 'MNTNA11111')
        self.assertEquals(caverphone('mouritsen'), 'MRTSN11111')
        self.assertEquals(caverphone('mowat'), 'MWT1111111')
        self.assertEquals(caverphone('mowatt'), 'MWT1111111')
        self.assertEquals(caverphone('mowbray'), 'MPRA111111')
        self.assertEquals(caverphone('mower'), 'MWA1111111')
        self.assertEquals(caverphone('mowhray'), 'MRA1111111')
        self.assertEquals(caverphone('moyal'), 'MA11111111')
        self.assertEquals(caverphone('moyle'), 'MA11111111')
        self.assertEquals(caverphone('moynihan'), 'MNN1111111')
        self.assertEquals(caverphone('mudge'), 'MK11111111')
        self.assertEquals(caverphone('mueller'), 'MLA1111111')
        self.assertEquals(caverphone('muiorhead'), 'MT11111111')
        self.assertEquals(caverphone('muir'), 'MA11111111')
        self.assertEquals(caverphone('muirbead'), 'MPT1111111')
        self.assertEquals(caverphone('muirhead'), 'MT11111111')
        self.assertEquals(caverphone('muithead'), 'MTT1111111')
        self.assertEquals(caverphone('mulcahy'), 'MKA1111111')
        self.assertEquals(caverphone('mulch'), 'MK11111111')
        self.assertEquals(caverphone('muldowney'), 'MTNA111111')
        self.assertEquals(caverphone('mulgrew'), 'MKRA111111')
        self.assertEquals(caverphone('mulhern'), 'MN11111111')
        self.assertEquals(caverphone('mulhollan'), 'MLN1111111')
        self.assertEquals(caverphone('mulholland'), 'MLNT111111')
        self.assertEquals(caverphone('mullally'), 'MLLA111111')
        self.assertEquals(caverphone('mullaly'), 'MLLA111111')
        self.assertEquals(caverphone('mullan'), 'MLN1111111')
        self.assertEquals(caverphone('mullay'), 'MLA1111111')
        self.assertEquals(caverphone('mullen'), 'MLN1111111')
        self.assertEquals(caverphone('mullholland'), 'MLNT111111')
        self.assertEquals(caverphone('mulligan'), 'MLKN111111')
        self.assertEquals(caverphone('mullin'), 'MLN1111111')
        self.assertEquals(caverphone('mulling'), 'MLNK111111')
        self.assertEquals(caverphone('mullins'), 'MLNS111111')
        self.assertEquals(caverphone('mulloy'), 'MLA1111111')
        self.assertEquals(caverphone('mulqueen'), 'MKN1111111')
        self.assertEquals(caverphone('mulquin'), 'MKN1111111')
        self.assertEquals(caverphone('mulrine'), 'MRN1111111')
        self.assertEquals(caverphone('mulrooney'), 'MRNA111111')
        self.assertEquals(caverphone('mulvihill'), 'MFA1111111')
        self.assertEquals(caverphone('mumford'), 'MMFT111111')
        self.assertEquals(caverphone('muncaster'), 'MNKSTA1111')
        self.assertEquals(caverphone('munday'), 'MNTA111111')
        self.assertEquals(caverphone('munden'), 'MNTN111111')
        self.assertEquals(caverphone('mundie'), 'MNTA111111')
        self.assertEquals(caverphone('mundy'), 'MNTA111111')
        self.assertEquals(caverphone('munford'), 'MNFT111111')
        self.assertEquals(caverphone('munibe'), 'MNP1111111')
        self.assertEquals(caverphone('munn'), 'MN11111111')
        self.assertEquals(caverphone('munrly'), 'MNLA111111')
        self.assertEquals(caverphone('munro'), 'MNRA111111')
        self.assertEquals(caverphone('munton'), 'MNTN111111')
        self.assertEquals(caverphone('muntz'), 'MNTS111111')
        self.assertEquals(caverphone('muray'), 'MRA1111111')
        self.assertEquals(caverphone('murch'), 'MK11111111')
        self.assertEquals(caverphone('murchison'), 'MKSN111111')
        self.assertEquals(caverphone('murchland'), 'MKLNT11111')
        self.assertEquals(caverphone('murcott'), 'MKT1111111')
        self.assertEquals(caverphone('murdie'), 'MTA1111111')
        self.assertEquals(caverphone('murdoch'), 'MTK1111111')
        self.assertEquals(caverphone('murdock'), 'MTK1111111')
        self.assertEquals(caverphone('murdoeh'), 'MTA1111111')
        self.assertEquals(caverphone('murfitt'), 'MFT1111111')
        self.assertEquals(caverphone('murie'), 'MRA1111111')
        self.assertEquals(caverphone('murison'), 'MRSN111111')
        self.assertEquals(caverphone('murly'), 'MLA1111111')
        self.assertEquals(caverphone('murphy'), 'MFA1111111')
        self.assertEquals(caverphone('murray'), 'MRA1111111')
        self.assertEquals(caverphone('murrow'), 'MRA1111111')
        self.assertEquals(caverphone('murtagh'), 'MTA1111111')
        self.assertEquals(caverphone('mussen'), 'MSN1111111')
        self.assertEquals(caverphone('mustard'), 'MSTT111111')
        self.assertEquals(caverphone('mutch'), 'MK11111111')
        self.assertEquals(caverphone('mutimer'), 'MTMA111111')
        self.assertEquals(caverphone('mutter'), 'MTA1111111')
        self.assertEquals(caverphone('mvers'), 'MFS1111111')
        self.assertEquals(caverphone('myers'), 'MS11111111')
        self.assertEquals(caverphone('myfert'), 'MFT1111111')
        self.assertEquals(caverphone('myles'), 'MLS1111111')
        self.assertEquals(caverphone('naesmith'), 'NSMT111111')
        self.assertEquals(caverphone('nairn'), 'NN11111111')
        self.assertEquals(caverphone('naismith'), 'NSMT111111')
        self.assertEquals(caverphone('nalder'), 'NTA1111111')
        self.assertEquals(caverphone('nancarrow'), 'NNKRA11111')
        self.assertEquals(caverphone('nankivell'), 'NNKFA11111')
        self.assertEquals(caverphone('nanney'), 'NNA1111111')
        self.assertEquals(caverphone('nantes'), 'NNTS111111')
        self.assertEquals(caverphone('naphtali'), 'NFTLA11111')
        self.assertEquals(caverphone('napier'), 'NPA1111111')
        self.assertEquals(caverphone('napoleon'), 'NPLN111111')
        self.assertEquals(caverphone('napper'), 'NPA1111111')
        self.assertEquals(caverphone('narracott'), 'NRKT111111')
        self.assertEquals(caverphone('nash'), 'NS11111111')
        self.assertEquals(caverphone('nasham'), 'NSM1111111')
        self.assertEquals(caverphone('nathan'), 'NTN1111111')
        self.assertEquals(caverphone('natta'), 'NTA1111111')
        self.assertEquals(caverphone('natusch'), 'NTSK111111')
        self.assertEquals(caverphone('naughton'), 'NTN1111111')
        self.assertEquals(caverphone('naumann'), 'NMN1111111')
        self.assertEquals(caverphone('naylon'), 'NLN1111111')
        self.assertEquals(caverphone('naylor'), 'NLA1111111')
        self.assertEquals(caverphone('neal'), 'NA11111111')
        self.assertEquals(caverphone('neale'), 'NA11111111')
        self.assertEquals(caverphone('neame'), 'NM11111111')
        self.assertEquals(caverphone('neason'), 'NSN1111111')
        self.assertEquals(caverphone('neave'), 'NF11111111')
        self.assertEquals(caverphone('needham'), 'NTM1111111')
        self.assertEquals(caverphone('nees'), 'NS11111111')
        self.assertEquals(caverphone('neeve'), 'NF11111111')
        self.assertEquals(caverphone('nehoff'), 'NF11111111')
        self.assertEquals(caverphone('neil'), 'NA11111111')
        self.assertEquals(caverphone('neilands'), 'NLNTS11111')
        self.assertEquals(caverphone('neill'), 'NA11111111')
        self.assertEquals(caverphone('neilson'), 'NSN1111111')
        self.assertEquals(caverphone('neiper'), 'NPA1111111')
        self.assertEquals(caverphone('neiss'), 'NS11111111')
        self.assertEquals(caverphone('neitch'), 'NK11111111')
        self.assertEquals(caverphone('nelilson'), 'NLSN111111')
        self.assertEquals(caverphone('nellson'), 'NSN1111111')
        self.assertEquals(caverphone('nelon'), 'NLN1111111')
        self.assertEquals(caverphone('nelsion'), 'NSN1111111')
        self.assertEquals(caverphone('nelslon'), 'NSLN111111')
        self.assertEquals(caverphone('nelson-thyberg'), 'NSNTPK1111')
        self.assertEquals(caverphone('nelson'), 'NSN1111111')
        self.assertEquals(caverphone('nesbett'), 'NSPT111111')
        self.assertEquals(caverphone('nesbit'), 'NSPT111111')
        self.assertEquals(caverphone('nesbitt'), 'NSPT111111')
        self.assertEquals(caverphone('ness'), 'NS11111111')
        self.assertEquals(caverphone('nester'), 'NSTA111111')
        self.assertEquals(caverphone('neumann'), 'NMN1111111')
        self.assertEquals(caverphone('nevill'), 'NFA1111111')
        self.assertEquals(caverphone('neville'), 'NFA1111111')
        self.assertEquals(caverphone('nevin'), 'NFN1111111')
        self.assertEquals(caverphone('nevison'), 'NFSN111111')
        self.assertEquals(caverphone('new'), 'NA11111111')
        self.assertEquals(caverphone('newall'), 'NWA1111111')
        self.assertEquals(caverphone('newands'), 'NWNTS11111')
        self.assertEquals(caverphone('newbold'), 'NPT1111111')
        self.assertEquals(caverphone('newbound'), 'NPNT111111')
        self.assertEquals(caverphone('newbury'), 'NPRA111111')
        self.assertEquals(caverphone('newell'), 'NWA1111111')
        self.assertEquals(caverphone('newey'), 'NWA1111111')
        self.assertEquals(caverphone('newland'), 'NLNT111111')
        self.assertEquals(caverphone('newlands'), 'NLNTS11111')
        self.assertEquals(caverphone('newman'), 'NMN1111111')
        self.assertEquals(caverphone('newmark'), 'NMK1111111')
        self.assertEquals(caverphone('newmarsh'), 'NMS1111111')
        self.assertEquals(caverphone('newsham-west'), 'NSMWST1111')
        self.assertEquals(caverphone('newsome'), 'NSM1111111')
        self.assertEquals(caverphone('newson'), 'NSN1111111')
        self.assertEquals(caverphone('newton'), 'NTN1111111')
        self.assertEquals(caverphone('neylan'), 'NLN1111111')
        self.assertEquals(caverphone('neylon'), 'NLN1111111')
        self.assertEquals(caverphone('niall'), 'NA11111111')
        self.assertEquals(caverphone('nichol'), 'NKA1111111')
        self.assertEquals(caverphone('nicholas'), 'NKLS111111')
        self.assertEquals(caverphone('nicholis'), 'NKLS111111')
        self.assertEquals(caverphone('nicholl'), 'NKA1111111')
        self.assertEquals(caverphone('nicholls'), 'NKS1111111')
        self.assertEquals(caverphone('nichols'), 'NKS1111111')
        self.assertEquals(caverphone('nicholson'), 'NKSN111111')
        self.assertEquals(caverphone('nickels'), 'NKS1111111')
        self.assertEquals(caverphone('nickoll'), 'NKA1111111')
        self.assertEquals(caverphone('nicol'), 'NKA1111111')
        self.assertEquals(caverphone('nicoll'), 'NKA1111111')
        self.assertEquals(caverphone('nicolson'), 'NKSN111111')
        self.assertEquals(caverphone('nielson'), 'NSN1111111')
        self.assertEquals(caverphone('nieper'), 'NPA1111111')
        self.assertEquals(caverphone('nightingale'), 'NTNKA11111')
        self.assertEquals(caverphone('nikander'), 'NKNTA11111')
        self.assertEquals(caverphone('nikel'), 'NKA1111111')
        self.assertEquals(caverphone('niles'), 'NLS1111111')
        self.assertEquals(caverphone('nilson'), 'NSN1111111')
        self.assertEquals(caverphone('nilsson'), 'NSN1111111')
        self.assertEquals(caverphone('nimmo'), 'NMA1111111')
        self.assertEquals(caverphone('nina'), 'NNA1111111')
        self.assertEquals(caverphone('nind'), 'NNT1111111')
        self.assertEquals(caverphone('ninian'), 'NNN1111111')
        self.assertEquals(caverphone('nisbet'), 'NSPT111111')
        self.assertEquals(caverphone('nisbitt'), 'NSPT111111')
        self.assertEquals(caverphone('nissen'), 'NSN1111111')
        self.assertEquals(caverphone('niven'), 'NFN1111111')
        self.assertEquals(caverphone('nixon'), 'NKN1111111')
        self.assertEquals(caverphone('nixson'), 'NKSN111111')
        self.assertEquals(caverphone('noble'), 'NPA1111111')
        self.assertEquals(caverphone('nohar'), 'NA11111111')
        self.assertEquals(caverphone('nolan'), 'NLN1111111')
        self.assertEquals(caverphone('noonal'), 'NNA1111111')
        self.assertEquals(caverphone('noonan'), 'NNN1111111')
        self.assertEquals(caverphone('noone'), 'NN11111111')
        self.assertEquals(caverphone('norden'), 'NTN1111111')
        self.assertEquals(caverphone('norman'), 'NMN1111111')
        self.assertEquals(caverphone('norris'), 'NRS1111111')
        self.assertEquals(caverphone('norrish'), 'NRS1111111')
        self.assertEquals(caverphone('north'), 'NT11111111')
        self.assertEquals(caverphone('northcoat'), 'NTKT111111')
        self.assertEquals(caverphone('northey'), 'NTA1111111')
        self.assertEquals(caverphone('norton taylor'), 'NTNTLA1111')
        self.assertEquals(caverphone('norton-taylor'), 'NTNTLA1111')
        self.assertEquals(caverphone('norton'), 'NTN1111111')
        self.assertEquals(caverphone('norwood'), 'NWT1111111')
        self.assertEquals(caverphone('noseda'), 'NSTA111111')
        self.assertEquals(caverphone('noster'), 'NSTA111111')
        self.assertEquals(caverphone('notlen'), 'NTLN111111')
        self.assertEquals(caverphone('notman'), 'NTMN111111')
        self.assertEquals(caverphone('nottage'), 'NTK1111111')
        self.assertEquals(caverphone('nowland'), 'NLNT111111')
        self.assertEquals(caverphone('nowlands'), 'NLNTS11111')
        self.assertEquals(caverphone('noy'), 'NA11111111')
        self.assertEquals(caverphone('ntowland'), 'NTLNT11111')
        self.assertEquals(caverphone('nugent'), 'NKNT111111')
        self.assertEquals(caverphone('nunn'), 'NN11111111')
        self.assertEquals(caverphone('nunns'), 'NNS1111111')
        self.assertEquals(caverphone('nuttall'), 'NTA1111111')
        self.assertEquals(caverphone('nutting'), 'NTNK111111')
        self.assertEquals(caverphone('nxon'), 'NKN1111111')
        self.assertEquals(caverphone('nyhon'), 'NN11111111')
        self.assertEquals(caverphone('o \'neil'), 'ANA1111111')
        self.assertEquals(caverphone('o sullivan'), 'ASLFN11111')
        self.assertEquals(caverphone('o\' kane'), 'AKN1111111')
        self.assertEquals(caverphone('o\'\'connor'), 'AKNA111111')
        self.assertEquals(caverphone('o\'beirne'), 'APN1111111')
        self.assertEquals(caverphone('o\'berg'), 'APK1111111')
        self.assertEquals(caverphone('o\'brian'), 'APRN111111')
        self.assertEquals(caverphone('o\'briean'), 'APRN111111')
        self.assertEquals(caverphone('o\'brien'), 'APRN111111')
        self.assertEquals(caverphone('o\'calaghan'), 'AKLKN11111')
        self.assertEquals(caverphone('o\'callagh'), 'AKLA111111')
        self.assertEquals(caverphone('o\'callaghan'), 'AKLKN11111')
        self.assertEquals(caverphone('o\'connell'), 'AKNA111111')
        self.assertEquals(caverphone('o\'connor'), 'AKNA111111')
        self.assertEquals(caverphone('o\'corrnan'), 'AKNN111111')
        self.assertEquals(caverphone('o\'dea'), 'ATA1111111')
        self.assertEquals(caverphone('o\'docherty'), 'ATKTA11111')
        self.assertEquals(caverphone('o\'donnell'), 'ATNA111111')
        self.assertEquals(caverphone('o\'donohue'), 'ATNA111111')
        self.assertEquals(caverphone('o\'dowd'), 'ATT1111111')
        self.assertEquals(caverphone('o\'driscoll'), 'ATRSKA1111')
        self.assertEquals(caverphone('o\'dwyer'), 'ATWA111111')
        self.assertEquals(caverphone('o\'farrell'), 'AFRA111111')
        self.assertEquals(caverphone('o\'fee'), 'AFA1111111')
        self.assertEquals(caverphone('o\'gorman'), 'AKMN111111')
        self.assertEquals(caverphone('o\'grady'), 'AKRTA11111')
        self.assertEquals(caverphone('o\'hallora'), 'ALRA111111')
        self.assertEquals(caverphone('o\'halloran'), 'ALRN111111')
        self.assertEquals(caverphone('o\'hara'), 'ARA1111111')
        self.assertEquals(caverphone('o\'hare'), 'AA11111111')
        self.assertEquals(caverphone('o\'kane'), 'AKN1111111')
        self.assertEquals(caverphone('o\'kean'), 'AKN1111111')
        self.assertEquals(caverphone('o\'keefe'), 'AKF1111111')
        self.assertEquals(caverphone('o\'keeffe'), 'AKF1111111')
        self.assertEquals(caverphone('o\'leary'), 'ALRA111111')
        self.assertEquals(caverphone('o\'loughlin'), 'ALLN111111')
        self.assertEquals(caverphone('o\'mahoney'), 'AMNA111111')
        self.assertEquals(caverphone('o\'malley'), 'AMLA111111')
        self.assertEquals(caverphone('o\'meara'), 'AMRA111111')
        self.assertEquals(caverphone('o\'neil'), 'ANA1111111')
        self.assertEquals(caverphone('o\'neill'), 'ANA1111111')
        self.assertEquals(caverphone('o\'rawe'), 'ARA1111111')
        self.assertEquals(caverphone('o\'regan'), 'ARKN111111')
        self.assertEquals(caverphone('o\'reilly'), 'ARLA111111')
        self.assertEquals(caverphone('o\'rogan'), 'ARKN111111')
        self.assertEquals(caverphone('o\'rourke'), 'ARK1111111')
        self.assertEquals(caverphone('o\'shannessy'), 'ASNSA11111')
        self.assertEquals(caverphone('o\'shaughnessy'), 'ASNSA11111')
        self.assertEquals(caverphone('o\'shea'), 'ASA1111111')
        self.assertEquals(caverphone('o\'sullivan'), 'ASLFN11111')
        self.assertEquals(caverphone('o\'toole'), 'ATA1111111')
        self.assertEquals(caverphone('o1sen'), 'ASN1111111')
        self.assertEquals(caverphone('oag'), 'AK11111111')
        self.assertEquals(caverphone('oakden'), 'AKTN111111')
        self.assertEquals(caverphone('oakes'), 'AKS1111111')
        self.assertEquals(caverphone('oare'), 'AA11111111')
        self.assertEquals(caverphone('oaten'), 'ATN1111111')
        self.assertEquals(caverphone('oates'), 'ATS1111111')
        self.assertEquals(caverphone('oben'), 'APN1111111')
        self.assertEquals(caverphone('ockwell'), 'AKWA111111')
        self.assertEquals(caverphone('ocwell'), 'AKWA111111')
        self.assertEquals(caverphone('oddie'), 'ATA1111111')
        self.assertEquals(caverphone('odham'), 'ATM1111111')
        self.assertEquals(caverphone('oenond'), 'ANNT111111')
        self.assertEquals(caverphone('oettli'), 'ATLA111111')
        self.assertEquals(caverphone('offen'), 'AFN1111111')
        self.assertEquals(caverphone('officer'), 'AFSA111111')
        self.assertEquals(caverphone('ofllen'), 'AFLN111111')
        self.assertEquals(caverphone('often'), 'AFTN111111')
        self.assertEquals(caverphone('ogborne'), 'AKPN111111')
        self.assertEquals(caverphone('ogden'), 'AKTN111111')
        self.assertEquals(caverphone('ogg'), 'AK11111111')
        self.assertEquals(caverphone('ogilvie'), 'AKFA111111')
        self.assertEquals(caverphone('ogivie'), 'AKFA111111')
        self.assertEquals(caverphone('ogston'), 'AKSTN11111')
        self.assertEquals(caverphone('old'), 'AT11111111')
        self.assertEquals(caverphone('oldenburg'), 'ATNPK11111')
        self.assertEquals(caverphone('oldham'), 'ATM1111111')
        self.assertEquals(caverphone('oldman'), 'ATMN111111')
        self.assertEquals(caverphone('olds'), 'ATS1111111')
        self.assertEquals(caverphone('oley'), 'ALA1111111')
        self.assertEquals(caverphone('oliphant'), 'ALFNT11111')
        self.assertEquals(caverphone('olive'), 'ALF1111111')
        self.assertEquals(caverphone('oliver'), 'ALFA111111')
        self.assertEquals(caverphone('ollerensh'), 'ALRNS11111')
        self.assertEquals(caverphone('ollerenshaw'), 'ALRNSA1111')
        self.assertEquals(caverphone('olliffe'), 'ALF1111111')
        self.assertEquals(caverphone('olliver'), 'ALFA111111')
        self.assertEquals(caverphone('olsen'), 'ASN1111111')
        self.assertEquals(caverphone('olsien'), 'ASN1111111')
        self.assertEquals(caverphone('olson'), 'ASN1111111')
        self.assertEquals(caverphone('olvie'), 'AFA1111111')
        self.assertEquals(caverphone('omand'), 'AMNT111111')
        self.assertEquals(caverphone('ombler'), 'AMPLA11111')
        self.assertEquals(caverphone('orange'), 'ARNK111111')
        self.assertEquals(caverphone('orbell'), 'APA1111111')
        self.assertEquals(caverphone('orchard'), 'AKT1111111')
        self.assertEquals(caverphone('orchiston'), 'AKSTN11111')
        self.assertEquals(caverphone('organ'), 'AKN1111111')
        self.assertEquals(caverphone('orlowski'), 'ALSKA11111')
        self.assertEquals(caverphone('orlowsli'), 'ALSLA11111')
        self.assertEquals(caverphone('orm'), 'AM11111111')
        self.assertEquals(caverphone('ormand'), 'AMNT111111')
        self.assertEquals(caverphone('ormond'), 'AMNT111111')
        self.assertEquals(caverphone('ormrod'), 'AMRT111111')
        self.assertEquals(caverphone('ormston'), 'AMSTN11111')
        self.assertEquals(caverphone('orpwood'), 'APWT111111')
        self.assertEquals(caverphone('orr'), 'AA11111111')
        self.assertEquals(caverphone('orton'), 'ATN1111111')
        self.assertEquals(caverphone('ory'), 'ARA1111111')
        self.assertEquals(caverphone('osborn'), 'ASPN111111')
        self.assertEquals(caverphone('osborne'), 'ASPN111111')
        self.assertEquals(caverphone('osmand'), 'ASMNT11111')
        self.assertEquals(caverphone('osmond'), 'ASMNT11111')
        self.assertEquals(caverphone('oson'), 'ASN1111111')
        self.assertEquals(caverphone('ostarasch'), 'ASTRSK1111')
        self.assertEquals(caverphone('osten'), 'ASTN111111')
        self.assertEquals(caverphone('oswald'), 'ASWT111111')
        self.assertEquals(caverphone('oswin'), 'ASWN111111')
        self.assertEquals(caverphone('otten'), 'ATN1111111')
        self.assertEquals(caverphone('otto'), 'ATA1111111')
        self.assertEquals(caverphone('ottrey'), 'ATRA111111')
        self.assertEquals(caverphone('otway'), 'ATWA111111')
        self.assertEquals(caverphone('oudaille'), 'ATA1111111')
        self.assertEquals(caverphone('ouinn'), 'AN11111111')
        self.assertEquals(caverphone('outram'), 'ATRM111111')
        self.assertEquals(caverphone('ovenden'), 'AFNTN11111')
        self.assertEquals(caverphone('overell'), 'AFRA111111')
        self.assertEquals(caverphone('overton'), 'AFTN111111')
        self.assertEquals(caverphone('overtop'), 'AFTP111111')
        self.assertEquals(caverphone('owen'), 'AWN1111111')
        self.assertEquals(caverphone('owens'), 'AWNS111111')
        self.assertEquals(caverphone('owles'), 'ALS1111111')
        self.assertEquals(caverphone('oxford'), 'AKFT111111')
        self.assertEquals(caverphone('oxiey'), 'AKA1111111')
        self.assertEquals(caverphone('ozanne'), 'ASN1111111')
        self.assertEquals(caverphone('paap'), 'PP11111111')
        self.assertEquals(caverphone('paape'), 'PP11111111')
        self.assertEquals(caverphone('paaris'), 'PRS1111111')
        self.assertEquals(caverphone('pacey'), 'PSA1111111')
        self.assertEquals(caverphone('packer'), 'PKA1111111')
        self.assertEquals(caverphone('packfr'), 'PKFA111111')
        self.assertEquals(caverphone('packman'), 'PKMN111111')
        self.assertEquals(caverphone('padget'), 'PKT1111111')
        self.assertEquals(caverphone('padgett'), 'PKT1111111')
        self.assertEquals(caverphone('paganini'), 'PKNNA11111')
        self.assertEquals(caverphone('page'), 'PK11111111')
        self.assertEquals(caverphone('pagel'), 'PKA1111111')
        self.assertEquals(caverphone('paget'), 'PKT1111111')
        self.assertEquals(caverphone('paimer'), 'PMA1111111')
        self.assertEquals(caverphone('painc'), 'PNK1111111')
        self.assertEquals(caverphone('paine'), 'PN11111111')
        self.assertEquals(caverphone('painter'), 'PNTA111111')
        self.assertEquals(caverphone('painton'), 'PNTN111111')
        self.assertEquals(caverphone('paisley'), 'PSLA111111')
        self.assertEquals(caverphone('palatchie'), 'PLKA111111')
        self.assertEquals(caverphone('palenski'), 'PLNSKA1111')
        self.assertEquals(caverphone('palleson'), 'PLSN111111')
        self.assertEquals(caverphone('pallister'), 'PLSTA11111')
        self.assertEquals(caverphone('palmer'), 'PMA1111111')
        self.assertEquals(caverphone('palser'), 'PSA1111111')
        self.assertEquals(caverphone('pank'), 'PNK1111111')
        self.assertEquals(caverphone('panting'), 'PNTNK11111')
        self.assertEquals(caverphone('panton'), 'PNTN111111')
        self.assertEquals(caverphone('paranthoiene'), 'PRNTN11111')
        self.assertEquals(caverphone('parata'), 'PRTA111111')
        self.assertEquals(caverphone('parcell'), 'PSA1111111')
        self.assertEquals(caverphone('parcells'), 'PSS1111111')
        self.assertEquals(caverphone('pargiter'), 'PKTA111111')
        self.assertEquals(caverphone('paris'), 'PRS1111111')
        self.assertEquals(caverphone('parish'), 'PRS1111111')
        self.assertEquals(caverphone('park'), 'PK11111111')
        self.assertEquals(caverphone('parke'), 'PK11111111')
        self.assertEquals(caverphone('parker'), 'PKA1111111')
        self.assertEquals(caverphone('parkes'), 'PKS1111111')
        self.assertEquals(caverphone('parkhill'), 'PKA1111111')
        self.assertEquals(caverphone('parkin'), 'PKN1111111')
        self.assertEquals(caverphone('parkinson'), 'PKNSN11111')
        self.assertEquals(caverphone('parler'), 'PLA1111111')
        self.assertEquals(caverphone('parlett'), 'PLT1111111')
        self.assertEquals(caverphone('parnell'), 'PNA1111111')
        self.assertEquals(caverphone('parr'), 'PA11111111')
        self.assertEquals(caverphone('parrish'), 'PRS1111111')
        self.assertEquals(caverphone('parry'), 'PRA1111111')
        self.assertEquals(caverphone('parslow'), 'PSLA111111')
        self.assertEquals(caverphone('parsond'), 'PSNT111111')
        self.assertEquals(caverphone('parsons'), 'PSNS111111')
        self.assertEquals(caverphone('parsonson'), 'PSNSN11111')
        self.assertEquals(caverphone('partel'), 'PTA1111111')
        self.assertEquals(caverphone('partridge'), 'PTRK111111')
        self.assertEquals(caverphone('pasco'), 'PSKA111111')
        self.assertEquals(caverphone('pascoe'), 'PSKA111111')
        self.assertEquals(caverphone('paskell'), 'PSKA111111')
        self.assertEquals(caverphone('passmore'), 'PSMA111111')
        self.assertEquals(caverphone('pastor'), 'PSTA111111')
        self.assertEquals(caverphone('pastorell'), 'PSTRA11111')
        self.assertEquals(caverphone('pastorelli'), 'PSTRLA1111')
        self.assertEquals(caverphone('patay'), 'PTA1111111')
        self.assertEquals(caverphone('patch'), 'PK11111111')
        self.assertEquals(caverphone('patchett'), 'PKT1111111')
        self.assertEquals(caverphone('patcrson'), 'PTKSN11111')
        self.assertEquals(caverphone('pate'), 'PT11111111')
        self.assertEquals(caverphone('paterson'), 'PTSN111111')
        self.assertEquals(caverphone('patey'), 'PTA1111111')
        self.assertEquals(caverphone('paton'), 'PTN1111111')
        self.assertEquals(caverphone('patorson'), 'PTSN111111')
        self.assertEquals(caverphone('patrick'), 'PTRK111111')
        self.assertEquals(caverphone('pattenden'), 'PTNTN11111')
        self.assertEquals(caverphone('patterson'), 'PTSN111111')
        self.assertEquals(caverphone('pattillo'), 'PTLA111111')
        self.assertEquals(caverphone('pattinson'), 'PTNSN11111')
        self.assertEquals(caverphone('pattison'), 'PTSN111111')
        self.assertEquals(caverphone('patton'), 'PTN1111111')
        self.assertEquals(caverphone('pattorson'), 'PTSN111111')
        self.assertEquals(caverphone('pattrick'), 'PTRK111111')
        self.assertEquals(caverphone('paul'), 'PA11111111')
        self.assertEquals(caverphone('pauley'), 'PLA1111111')
        self.assertEquals(caverphone('paulin'), 'PLN1111111')
        self.assertEquals(caverphone('paull'), 'PA11111111')
        self.assertEquals(caverphone('paviour-smith'), 'PFSMT11111')
        self.assertEquals(caverphone('pavioursmith'), 'PFSMT11111')
        self.assertEquals(caverphone('pavitt'), 'PFT1111111')
        self.assertEquals(caverphone('pavletich'), 'PFLTK11111')
        self.assertEquals(caverphone('paxton'), 'PKTN111111')
        self.assertEquals(caverphone('pay'), 'PA11111111')
        self.assertEquals(caverphone('payne'), 'PN11111111')
        self.assertEquals(caverphone('paynter'), 'PNTA111111')
        self.assertEquals(caverphone('payton'), 'PTN1111111')
        self.assertEquals(caverphone('pcrteous'), 'PKTS111111')
        self.assertEquals(caverphone('peace'), 'PK11111111')
        self.assertEquals(caverphone('peach'), 'PK11111111')
        self.assertEquals(caverphone('peacock'), 'PKK1111111')
        self.assertEquals(caverphone('peake'), 'PK11111111')
        self.assertEquals(caverphone('pearce'), 'PK11111111')
        self.assertEquals(caverphone('pearless'), 'PLS1111111')
        self.assertEquals(caverphone('pearn'), 'PN11111111')
        self.assertEquals(caverphone('pears'), 'PS11111111')
        self.assertEquals(caverphone('pearse'), 'PS11111111')
        self.assertEquals(caverphone('pearson'), 'PSN1111111')
        self.assertEquals(caverphone('peart'), 'PT11111111')
        self.assertEquals(caverphone('peat'), 'PT11111111')
        self.assertEquals(caverphone('peate'), 'PT11111111')
        self.assertEquals(caverphone('peates'), 'PTS1111111')
        self.assertEquals(caverphone('peattie'), 'PTA1111111')
        self.assertEquals(caverphone('peck'), 'PK11111111')
        self.assertEquals(caverphone('pedder'), 'PTA1111111')
        self.assertEquals(caverphone('peddie'), 'PTA1111111')
        self.assertEquals(caverphone('peden'), 'PTN1111111')
        self.assertEquals(caverphone('pedlar'), 'PTLA111111')
        self.assertEquals(caverphone('pedlow'), 'PTLA111111')
        self.assertEquals(caverphone('pedofsky'), 'PTFSKA1111')
        self.assertEquals(caverphone('peebles'), 'PPLS111111')
        self.assertEquals(caverphone('peel'), 'PA11111111')
        self.assertEquals(caverphone('pegg'), 'PK11111111')
        self.assertEquals(caverphone('peggie'), 'PKA1111111')
        self.assertEquals(caverphone('pelatchie'), 'PLKA111111')
        self.assertEquals(caverphone('pell'), 'PA11111111')
        self.assertEquals(caverphone('pellett'), 'PLT1111111')
        self.assertEquals(caverphone('pellowe'), 'PLA1111111')
        self.assertEquals(caverphone('pelvin'), 'PFN1111111')
        self.assertEquals(caverphone('pemberton'), 'PMPTN11111')
        self.assertEquals(caverphone('penfold'), 'PNFT111111')
        self.assertEquals(caverphone('penhey'), 'PNA1111111')
        self.assertEquals(caverphone('penman'), 'PNMN111111')
        self.assertEquals(caverphone('pennell'), 'PNA1111111')
        self.assertEquals(caverphone('pennington'), 'PNNKTN1111')
        self.assertEquals(caverphone('penno'), 'PNA1111111')
        self.assertEquals(caverphone('penny'), 'PNA1111111')
        self.assertEquals(caverphone('pennychuick'), 'PNKK111111')
        self.assertEquals(caverphone('pennycuick'), 'PNKK111111')
        self.assertEquals(caverphone('penpiatt'), 'PNPT111111')
        self.assertEquals(caverphone('penrose'), 'PNRS111111')
        self.assertEquals(caverphone('penson'), 'PNSN111111')
        self.assertEquals(caverphone('pentecost'), 'PNTKST1111')
        self.assertEquals(caverphone('penty'), 'PNTA111111')
        self.assertEquals(caverphone('peoples'), 'PPLS111111')
        self.assertEquals(caverphone('pepper'), 'PPA1111111')
        self.assertEquals(caverphone('pepperell'), 'PPRA111111')
        self.assertEquals(caverphone('pepperill'), 'PPRA111111')
        self.assertEquals(caverphone('peppiatt'), 'PPT1111111')
        self.assertEquals(caverphone('peppler'), 'PPLA111111')
        self.assertEquals(caverphone('percy'), 'PSA1111111')
        self.assertEquals(caverphone('pereira'), 'PRRA111111')
        self.assertEquals(caverphone('perera'), 'PRRA111111')
        self.assertEquals(caverphone('perfin'), 'PFN1111111')
        self.assertEquals(caverphone('perguson'), 'PKSN111111')
        self.assertEquals(caverphone('perkins'), 'PKNS111111')
        self.assertEquals(caverphone('perks'), 'PKS1111111')
        self.assertEquals(caverphone('pernisky'), 'PNSKA11111')
        self.assertEquals(caverphone('perrers'), 'PRS1111111')
        self.assertEquals(caverphone('perriam'), 'PRM1111111')
        self.assertEquals(caverphone('perriman'), 'PRMN111111')
        self.assertEquals(caverphone('perrin'), 'PRN1111111')
        self.assertEquals(caverphone('perriton'), 'PRTN111111')
        self.assertEquals(caverphone('perry'), 'PRA1111111')
        self.assertEquals(caverphone('peson'), 'PSN1111111')
        self.assertEquals(caverphone('peters'), 'PTS1111111')
        self.assertEquals(caverphone('petersen'), 'PTSN111111')
        self.assertEquals(caverphone('peterson'), 'PTSN111111')
        self.assertEquals(caverphone('petherick'), 'PTRK111111')
        self.assertEquals(caverphone('petre'), 'PTA1111111')
        self.assertEquals(caverphone('petrie'), 'PTRA111111')
        self.assertEquals(caverphone('petterson'), 'PTSN111111')
        self.assertEquals(caverphone('pettet'), 'PTT1111111')
        self.assertEquals(caverphone('pettigrew'), 'PTKRA11111')
        self.assertEquals(caverphone('pettit'), 'PTT1111111')
        self.assertEquals(caverphone('pettitt'), 'PTT1111111')
        self.assertEquals(caverphone('pfeifer'), 'PFFA111111')
        self.assertEquals(caverphone('phair'), 'FA11111111')
        self.assertEquals(caverphone('phaup'), 'FP11111111')
        self.assertEquals(caverphone('phelan'), 'FLN1111111')
        self.assertEquals(caverphone('philip'), 'FLP1111111')
        self.assertEquals(caverphone('philips'), 'FLPS111111')
        self.assertEquals(caverphone('phillipps'), 'FLPS111111')
        self.assertEquals(caverphone('phillips'), 'FLPS111111')
        self.assertEquals(caverphone('philp'), 'FP11111111')
        self.assertEquals(caverphone('philpott'), 'FPT1111111')
        self.assertEquals(caverphone('phimester'), 'FMSTA11111')
        self.assertEquals(caverphone('phimister'), 'FMSTA11111')
        self.assertEquals(caverphone('picard'), 'PKT1111111')
        self.assertEquals(caverphone('pice'), 'PK11111111')
        self.assertEquals(caverphone('pickard'), 'PKT1111111')
        self.assertEquals(caverphone('picken'), 'PKN1111111')
        self.assertEquals(caverphone('pickering'), 'PKRNK11111')
        self.assertEquals(caverphone('picket'), 'PKT1111111')
        self.assertEquals(caverphone('pickett'), 'PKT1111111')
        self.assertEquals(caverphone('pickford'), 'PKFT111111')
        self.assertEquals(caverphone('pickles'), 'PKLS111111')
        self.assertEquals(caverphone('picklis'), 'PKLS111111')
        self.assertEquals(caverphone('pickup'), 'PKP1111111')
        self.assertEquals(caverphone('pickworth'), 'PKWT111111')
        self.assertEquals(caverphone('picton'), 'PKTN111111')
        self.assertEquals(caverphone('piddingto'), 'PTNKTA1111')
        self.assertEquals(caverphone('piddington'), 'PTNKTN1111')
        self.assertEquals(caverphone('pidduck'), 'PTK1111111')
        self.assertEquals(caverphone('pierard'), 'PRT1111111')
        self.assertEquals(caverphone('pierce'), 'PK11111111')
        self.assertEquals(caverphone('piercy'), 'PSA1111111')
        self.assertEquals(caverphone('pigott'), 'PKT1111111')
        self.assertEquals(caverphone('pike'), 'PK11111111')
        self.assertEquals(caverphone('pilbrow'), 'PPRA111111')
        self.assertEquals(caverphone('pile'), 'PA11111111')
        self.assertEquals(caverphone('pilet'), 'PLT1111111')
        self.assertEquals(caverphone('pilkington'), 'PKNKTN1111')
        self.assertEquals(caverphone('pilling'), 'PLNK111111')
        self.assertEquals(caverphone('pimley'), 'PMLA111111')
        self.assertEquals(caverphone('pinder'), 'PNTA111111')
        self.assertEquals(caverphone('pine'), 'PN11111111')
        self.assertEquals(caverphone('pinfold'), 'PNFT111111')
        self.assertEquals(caverphone('pink'), 'PNK1111111')
        self.assertEquals(caverphone('pinkerton'), 'PNKTN11111')
        self.assertEquals(caverphone('pinkham'), 'PNKM111111')
        self.assertEquals(caverphone('pinkney'), 'PNKNA11111')
        self.assertEquals(caverphone('pinnington'), 'PNNKTN1111')
        self.assertEquals(caverphone('piper'), 'PPA1111111')
        self.assertEquals(caverphone('pirie'), 'PRA1111111')
        self.assertEquals(caverphone('pirrett'), 'PRT1111111')
        self.assertEquals(caverphone('pistor'), 'PSTA111111')
        self.assertEquals(caverphone('pitcher'), 'PKA1111111')
        self.assertEquals(caverphone('pitfield'), 'PTFT111111')
        self.assertEquals(caverphone('pithie'), 'PTA1111111')
        self.assertEquals(caverphone('pitkethley'), 'PTKTLA1111')
        self.assertEquals(caverphone('pittaway'), 'PTWA111111')
        self.assertEquals(caverphone('pitts'), 'PTS1111111')
        self.assertEquals(caverphone('pizey'), 'PSA1111111')
        self.assertEquals(caverphone('plaice'), 'PLK1111111')
        self.assertEquals(caverphone('plank'), 'PLNK111111')
        self.assertEquals(caverphone('plato'), 'PLTA111111')
        self.assertEquals(caverphone('plaw'), 'PLA1111111')
        self.assertEquals(caverphone('playter'), 'PLTA111111')
        self.assertEquals(caverphone('pleace'), 'PLK1111111')
        self.assertEquals(caverphone('pledger'), 'PLKA111111')
        self.assertEquals(caverphone('plew'), 'PLA1111111')
        self.assertEquals(caverphone('plimmer'), 'PLMA111111')
        self.assertEquals(caverphone('pluck'), 'PLK1111111')
        self.assertEquals(caverphone('plumb'), 'PLM1111111')
        self.assertEquals(caverphone('plumley'), 'PLMLA11111')
        self.assertEquals(caverphone('plumridge'), 'PLMRK11111')
        self.assertEquals(caverphone('plunket'), 'PLNKT11111')
        self.assertEquals(caverphone('plunkett'), 'PLNKT11111')
        self.assertEquals(caverphone('poat'), 'PT11111111')
        self.assertEquals(caverphone('pocklingto'), 'PKLNKTA111')
        self.assertEquals(caverphone('pocklington'), 'PKLNKTN111')
        self.assertEquals(caverphone('pockson'), 'PKSN111111')
        self.assertEquals(caverphone('poff'), 'PF11111111')
        self.assertEquals(caverphone('poilock'), 'PLK1111111')
        self.assertEquals(caverphone('pointon'), 'PNTN111111')
        self.assertEquals(caverphone('poland'), 'PLNT111111')
        self.assertEquals(caverphone('polglase'), 'PKLS111111')
        self.assertEquals(caverphone('polkinghorn'), 'PKNN111111')
        self.assertEquals(caverphone('polkinghorne'), 'PKNN111111')
        self.assertEquals(caverphone('pollard'), 'PLT1111111')
        self.assertEquals(caverphone('pollett'), 'PLT1111111')
        self.assertEquals(caverphone('pollock'), 'PLK1111111')
        self.assertEquals(caverphone('polloek'), 'PLK1111111')
        self.assertEquals(caverphone('pollon'), 'PLN1111111')
        self.assertEquals(caverphone('polson'), 'PSN1111111')
        self.assertEquals(caverphone('polwarth'), 'PWT1111111')
        self.assertEquals(caverphone('polworth'), 'PWT1111111')
        self.assertEquals(caverphone('pomeroy'), 'PMRA111111')
        self.assertEquals(caverphone('pomies'), 'PMS1111111')
        self.assertEquals(caverphone('ponsford'), 'PNSFT11111')
        self.assertEquals(caverphone('pont'), 'PNT1111111')
        self.assertEquals(caverphone('ponton'), 'PNTN111111')
        self.assertEquals(caverphone('pontor'), 'PNTA111111')
        self.assertEquals(caverphone('pool'), 'PA11111111')
        self.assertEquals(caverphone('poole'), 'PA11111111')
        self.assertEquals(caverphone('pope'), 'PP11111111')
        self.assertEquals(caverphone('popham'), 'PFM1111111')
        self.assertEquals(caverphone('poppelwell'), 'PPWA111111')
        self.assertEquals(caverphone('popperell'), 'PPRA111111')
        self.assertEquals(caverphone('popple'), 'PPA1111111')
        self.assertEquals(caverphone('poppleton'), 'PPLTN11111')
        self.assertEquals(caverphone('porrott'), 'PRT1111111')
        self.assertEquals(caverphone('port'), 'PT11111111')
        self.assertEquals(caverphone('port.eous'), 'PTS1111111')
        self.assertEquals(caverphone('porteous'), 'PTS1111111')
        self.assertEquals(caverphone('porter'), 'PTA1111111')
        self.assertEquals(caverphone('porthous'), 'PTS1111111')
        self.assertEquals(caverphone('porthouse'), 'PTS1111111')
        self.assertEquals(caverphone('portwine'), 'PTWN111111')
        self.assertEquals(caverphone('potter'), 'PTA1111111')
        self.assertEquals(caverphone('potts'), 'PTS1111111')
        self.assertEquals(caverphone('poulsen'), 'PSN1111111')
        self.assertEquals(caverphone('poulson'), 'PSN1111111')
        self.assertEquals(caverphone('poulter'), 'PTA1111111')
        self.assertEquals(caverphone('pound'), 'PNT1111111')
        self.assertEquals(caverphone('poupart'), 'PPT1111111')
        self.assertEquals(caverphone('povey'), 'PFA1111111')
        self.assertEquals(caverphone('powe'), 'PA11111111')
        self.assertEquals(caverphone('powell'), 'PWA1111111')
        self.assertEquals(caverphone('power'), 'PWA1111111')
        self.assertEquals(caverphone('powley'), 'PLA1111111')
        self.assertEquals(caverphone('poyntz'), 'PNTS111111')
        self.assertEquals(caverphone('prain'), 'PRN1111111')
        self.assertEquals(caverphone('pratchel'), 'PRKA111111')
        self.assertEquals(caverphone('pratt'), 'PRT1111111')
        self.assertEquals(caverphone('prattey'), 'PRTA111111')
        self.assertEquals(caverphone('prattley'), 'PRTLA11111')
        self.assertEquals(caverphone('pratzall'), 'PRTSA11111')
        self.assertEquals(caverphone('pratzel'), 'PRTSA11111')
        self.assertEquals(caverphone('pre'), 'PA11111111')
        self.assertEquals(caverphone('prebble'), 'PRPA111111')
        self.assertEquals(caverphone('preddy'), 'PRTA111111')
        self.assertEquals(caverphone('preece'), 'PRK1111111')
        self.assertEquals(caverphone('preen'), 'PRN1111111')
        self.assertEquals(caverphone('prendergast'), 'PRNTKST111')
        self.assertEquals(caverphone('prenderville'), 'PRNTFA1111')
        self.assertEquals(caverphone('prentice'), 'PRNTK11111')
        self.assertEquals(caverphone('presbury'), 'PRSPRA1111')
        self.assertEquals(caverphone('prescott'), 'PRSKT11111')
        self.assertEquals(caverphone('preston'), 'PRSTN11111')
        self.assertEquals(caverphone('pretty'), 'PRTA111111')
        self.assertEquals(caverphone('price'), 'PRK1111111')
        self.assertEquals(caverphone('prichard'), 'PRKT111111')
        self.assertEquals(caverphone('prictor'), 'PRKTA11111')
        self.assertEquals(caverphone('pridham'), 'PRTM111111')
        self.assertEquals(caverphone('priee'), 'PRA1111111')
        self.assertEquals(caverphone('priest'), 'PRST111111')
        self.assertEquals(caverphone('priestly'), 'PRSTLA1111')
        self.assertEquals(caverphone('prince'), 'PRNK111111')
        self.assertEquals(caverphone('pringle'), 'PRNKA11111')
        self.assertEquals(caverphone('pringle:'), 'PRNKA11111')
        self.assertEquals(caverphone('printz'), 'PRNTS11111')
        self.assertEquals(caverphone('prior'), 'PRA1111111')
        self.assertEquals(caverphone('priston'), 'PRSTN11111')
        self.assertEquals(caverphone('pritchard'), 'PRKT111111')
        self.assertEquals(caverphone('pritchett'), 'PRKT111111')
        self.assertEquals(caverphone('procter'), 'PRKTA11111')
        self.assertEquals(caverphone('proctor'), 'PRKTA11111')
        self.assertEquals(caverphone('pronse'), 'PRNS111111')
        self.assertEquals(caverphone('propsting'), 'PRPSTNK111')
        self.assertEquals(caverphone('prosser'), 'PRSA111111')
        self.assertEquals(caverphone('proud'), 'PRT1111111')
        self.assertEquals(caverphone('proudfoot'), 'PRTFT11111')
        self.assertEquals(caverphone('prouse'), 'PRS1111111')
        self.assertEquals(caverphone('prout'), 'PRT1111111')
        self.assertEquals(caverphone('provan'), 'PRFN111111')
        self.assertEquals(caverphone('proven'), 'PRFN111111')
        self.assertEquals(caverphone('provo'), 'PRFA111111')
        self.assertEquals(caverphone('prowse'), 'PRS1111111')
        self.assertEquals(caverphone('prvde'), 'PFT1111111')
        self.assertEquals(caverphone('pryde'), 'PRT1111111')
        self.assertEquals(caverphone('pryor'), 'PRA1111111')
        self.assertEquals(caverphone('pucchegud'), 'PKKT111111')
        self.assertEquals(caverphone('puddy'), 'PTA1111111')
        self.assertEquals(caverphone('pullar'), 'PLA1111111')
        self.assertEquals(caverphone('puller'), 'PLA1111111')
        self.assertEquals(caverphone('pullyn'), 'PLN1111111')
        self.assertEquals(caverphone('punch'), 'PNK1111111')
        self.assertEquals(caverphone('purcell'), 'PSA1111111')
        self.assertEquals(caverphone('purches'), 'PKS1111111')
        self.assertEquals(caverphone('purdie'), 'PTA1111111')
        self.assertEquals(caverphone('purnell'), 'PNA1111111')
        self.assertEquals(caverphone('purtill'), 'PTA1111111')
        self.assertEquals(caverphone('purton'), 'PTN1111111')
        self.assertEquals(caverphone('purves'), 'PFS1111111')
        self.assertEquals(caverphone('purvis'), 'PFS1111111')
        self.assertEquals(caverphone('pybus'), 'PPS1111111')
        self.assertEquals(caverphone('pye'), 'PA11111111')
        self.assertEquals(caverphone('pyke'), 'PK11111111')
        self.assertEquals(caverphone('pyle'), 'PA11111111')
        self.assertEquals(caverphone('pym'), 'PM11111111')
        self.assertEquals(caverphone('pyn'), 'PN11111111')
        self.assertEquals(caverphone('pyne'), 'PN11111111')
        self.assertEquals(caverphone('pynor'), 'PNA1111111')
        self.assertEquals(caverphone('pyott'), 'PT11111111')
        self.assertEquals(caverphone('pyper'), 'PPA1111111')
        self.assertEquals(caverphone('pyrke'), 'PK11111111')
        self.assertEquals(caverphone('pyster'), 'PSTA111111')
        self.assertEquals(caverphone('pywell'), 'PWA1111111')
        self.assertEquals(caverphone('q uinn'), 'KN11111111')
        self.assertEquals(caverphone('qtto'), 'KTA1111111')
        self.assertEquals(caverphone('quaid'), 'KT11111111')
        self.assertEquals(caverphone('quaife'), 'KF11111111')
        self.assertEquals(caverphone('quaile'), 'KA11111111')
        self.assertEquals(caverphone('quam'), 'KM11111111')
        self.assertEquals(caverphone('quan'), 'KN11111111')
        self.assertEquals(caverphone('quarterma'), 'KTMA111111')
        self.assertEquals(caverphone('quartermain'), 'KTMN111111')
        self.assertEquals(caverphone('quartermaln'), 'KTMN111111')
        self.assertEquals(caverphone('quarterman'), 'KTMN111111')
        self.assertEquals(caverphone('quelch'), 'KK11111111')
        self.assertEquals(caverphone('quennell'), 'KNA1111111')
        self.assertEquals(caverphone('queree'), 'KRA1111111')
        self.assertEquals(caverphone('quest'), 'KST1111111')
        self.assertEquals(caverphone('quested'), 'KSTT111111')
        self.assertEquals(caverphone('quickenden'), 'KKNTN11111')
        self.assertEquals(caverphone('quickfall'), 'KKFA111111')
        self.assertEquals(caverphone('quigg'), 'KK11111111')
        self.assertEquals(caverphone('quigley'), 'KKLA111111')
        self.assertEquals(caverphone('quill'), 'KA11111111')
        self.assertEquals(caverphone('quin'), 'KN11111111')
        self.assertEquals(caverphone('quine'), 'KN11111111')
        self.assertEquals(caverphone('quinlan'), 'KNLN111111')
        self.assertEquals(caverphone('quinn'), 'KN11111111')
        self.assertEquals(caverphone('quinton'), 'KNTN111111')
        self.assertEquals(caverphone('quirk'), 'KK11111111')
        self.assertEquals(caverphone('quirke'), 'KK11111111')
        self.assertEquals(caverphone('qvam'), 'KFM1111111')
        self.assertEquals(caverphone('rabbidge'), 'RPK1111111')
        self.assertEquals(caverphone('rabbitt'), 'RPT1111111')
        self.assertEquals(caverphone('rac1kley'), 'RKLA111111')
        self.assertEquals(caverphone('race'), 'RK11111111')
        self.assertEquals(caverphone('rackham'), 'RKM1111111')
        self.assertEquals(caverphone('rackley'), 'RKLA111111')
        self.assertEquals(caverphone('radd'), 'RT11111111')
        self.assertEquals(caverphone('radford'), 'RTFT111111')
        self.assertEquals(caverphone('rae'), 'RA11111111')
        self.assertEquals(caverphone('raffills'), 'RFS1111111')
        self.assertEquals(caverphone('raglan'), 'RKLN111111')
        self.assertEquals(caverphone('raillsford'), 'RSFT111111')
        self.assertEquals(caverphone('railton'), 'RTN1111111')
        self.assertEquals(caverphone('rainbow'), 'RNPA111111')
        self.assertEquals(caverphone('raine'), 'RN11111111')
        self.assertEquals(caverphone('raines'), 'RNS1111111')
        self.assertEquals(caverphone('rainham'), 'RNM1111111')
        self.assertEquals(caverphone('rains'), 'RNS1111111')
        self.assertEquals(caverphone('rainsay'), 'RNSA111111')
        self.assertEquals(caverphone('rainsford'), 'RNSFT11111')
        self.assertEquals(caverphone('rainton'), 'RNTN111111')
        self.assertEquals(caverphone('raitt'), 'RT11111111')
        self.assertEquals(caverphone('raler'), 'RLA1111111')
        self.assertEquals(caverphone('rallinshaw'), 'RLNSA11111')
        self.assertEquals(caverphone('ralor'), 'RLA1111111')
        self.assertEquals(caverphone('ralph'), 'RF11111111')
        self.assertEquals(caverphone('ralston'), 'RSTN111111')
        self.assertEquals(caverphone('ralusay'), 'RLSA111111')
        self.assertEquals(caverphone('ramage'), 'RMK1111111')
        self.assertEquals(caverphone('rambaum'), 'RMPM111111')
        self.assertEquals(caverphone('rampton'), 'RMPTN11111')
        self.assertEquals(caverphone('ramsay'), 'RMSA111111')
        self.assertEquals(caverphone('ramsbottom-isherwood'), 'RMSPTMSWT1')
        self.assertEquals(caverphone('ramsden'), 'RMSTN11111')
        self.assertEquals(caverphone('ramsey'), 'RMSA111111')
        self.assertEquals(caverphone('randal'), 'RNTA111111')
        self.assertEquals(caverphone('randall'), 'RNTA111111')
        self.assertEquals(caverphone('randell'), 'RNTA111111')
        self.assertEquals(caverphone('randle'), 'RNTA111111')
        self.assertEquals(caverphone('ranger'), 'RNKA111111')
        self.assertEquals(caverphone('rankin'), 'RNKN111111')
        self.assertEquals(caverphone('ransay'), 'RNSA111111')
        self.assertEquals(caverphone('ransom'), 'RNSM111111')
        self.assertEquals(caverphone('raper'), 'RPA1111111')
        self.assertEquals(caverphone('rappe'), 'RP11111111')
        self.assertEquals(caverphone('rapsom'), 'RPSM111111')
        self.assertEquals(caverphone('rapson'), 'RPSN111111')
        self.assertEquals(caverphone('rasmussen'), 'RSMSN11111')
        self.assertEquals(caverphone('rasrnussen'), 'RSNSN11111')
        self.assertEquals(caverphone('rattigan'), 'RTKN111111')
        self.assertEquals(caverphone('rattley'), 'RTLA111111')
        self.assertEquals(caverphone('rattray'), 'RTRA111111')
        self.assertEquals(caverphone('raven'), 'RFN1111111')
        self.assertEquals(caverphone('ravenscroft'), 'RFNSKRFT11')
        self.assertEquals(caverphone('ravenswood'), 'RFNSWT1111')
        self.assertEquals(caverphone('ravenvood'), 'RFNFT11111')
        self.assertEquals(caverphone('ravenwood'), 'RFNWT11111')
        self.assertEquals(caverphone('rawcliffe'), 'RKLF111111')
        self.assertEquals(caverphone('rawe'), 'RA11111111')
        self.assertEquals(caverphone('rawei'), 'RWA1111111')
        self.assertEquals(caverphone('rawlence'), 'RLNK111111')
        self.assertEquals(caverphone('rawley'), 'RLA1111111')
        self.assertEquals(caverphone('rawlings'), 'RLNKS11111')
        self.assertEquals(caverphone('rawlins'), 'RLNS111111')
        self.assertEquals(caverphone('rawlinson'), 'RLNSN11111')
        self.assertEquals(caverphone('rawnsley'), 'RNSLA11111')
        self.assertEquals(caverphone('rawon'), 'RWN1111111')
        self.assertEquals(caverphone('rawson'), 'RSN1111111')
        self.assertEquals(caverphone('rawstron'), 'RSTRN11111')
        self.assertEquals(caverphone('ray'), 'RA11111111')
        self.assertEquals(caverphone('raymond'), 'RMNT111111')
        self.assertEquals(caverphone('rayner'), 'RNA1111111')
        self.assertEquals(caverphone('rayson'), 'RSN1111111')
        self.assertEquals(caverphone('rea'), 'RA11111111')
        self.assertEquals(caverphone('read'), 'RT11111111')
        self.assertEquals(caverphone('reader'), 'RTA1111111')
        self.assertEquals(caverphone('readman'), 'RTMN111111')
        self.assertEquals(caverphone('ready'), 'RTA1111111')
        self.assertEquals(caverphone('real'), 'RA11111111')
        self.assertEquals(caverphone('reardon'), 'RTN1111111')
        self.assertEquals(caverphone('reay'), 'RA11111111')
        self.assertEquals(caverphone('reddell'), 'RTA1111111')
        self.assertEquals(caverphone('redder'), 'RTA1111111')
        self.assertEquals(caverphone('reddie'), 'RTA1111111')
        self.assertEquals(caverphone('redding'), 'RTNK111111')
        self.assertEquals(caverphone('reddington'), 'RTNKTN1111')
        self.assertEquals(caverphone('redfearn'), 'RTFN111111')
        self.assertEquals(caverphone('redidingto'), 'RTTNKTA111')
        self.assertEquals(caverphone('redman'), 'RTMN111111')
        self.assertEquals(caverphone('redmayne'), 'RTMN111111')
        self.assertEquals(caverphone('redmond'), 'RTMNT11111')
        self.assertEquals(caverphone('redwood'), 'RTWT111111')
        self.assertEquals(caverphone('reece'), 'RK11111111')
        self.assertEquals(caverphone('reed'), 'RT11111111')
        self.assertEquals(caverphone('reeder'), 'RTA1111111')
        self.assertEquals(caverphone('reekie'), 'RKA1111111')
        self.assertEquals(caverphone('rees'), 'RS11111111')
        self.assertEquals(caverphone('reeve'), 'RF11111111')
        self.assertEquals(caverphone('reeves'), 'RFS1111111')
        self.assertEquals(caverphone('reggett'), 'RKT1111111')
        self.assertEquals(caverphone('reggiardo'), 'RKTA111111')
        self.assertEquals(caverphone('regnault'), 'RKNT111111')
        self.assertEquals(caverphone('reid'), 'RT11111111')
        self.assertEquals(caverphone('reidboult'), 'RTPT111111')
        self.assertEquals(caverphone('reider'), 'RTA1111111')
        self.assertEquals(caverphone('reidle'), 'RTA1111111')
        self.assertEquals(caverphone('reidy'), 'RTA1111111')
        self.assertEquals(caverphone('reilly'), 'RLA1111111')
        self.assertEquals(caverphone('reimer'), 'RMA1111111')
        self.assertEquals(caverphone('rein'), 'RN11111111')
        self.assertEquals(caverphone('reiss'), 'RS11111111')
        self.assertEquals(caverphone('rekowski'), 'RKSKA11111')
        self.assertEquals(caverphone('remie'), 'RMA1111111')
        self.assertEquals(caverphone('remlie'), 'RMLA111111')
        self.assertEquals(caverphone('rendall'), 'RNTA111111')
        self.assertEquals(caverphone('rendel'), 'RNTA111111')
        self.assertEquals(caverphone('render'), 'RNTA111111')
        self.assertEquals(caverphone('rendle'), 'RNTA111111')
        self.assertEquals(caverphone('renfree'), 'RNFRA11111')
        self.assertEquals(caverphone('renfrew'), 'RNFRA11111')
        self.assertEquals(caverphone('renney'), 'RNA1111111')
        self.assertEquals(caverphone('rennie'), 'RNA1111111')
        self.assertEquals(caverphone('rennolds'), 'RNTS111111')
        self.assertEquals(caverphone('renton'), 'RNTN111111')
        self.assertEquals(caverphone('rentoul'), 'RNTA111111')
        self.assertEquals(caverphone('renwick'), 'RNWK111111')
        self.assertEquals(caverphone('reny'), 'RNA1111111')
        self.assertEquals(caverphone('restieaux'), 'RSTK111111')
        self.assertEquals(caverphone('rex'), 'RK11111111')
        self.assertEquals(caverphone('reynell'), 'RNA1111111')
        self.assertEquals(caverphone('reynolds'), 'RNTS111111')
        self.assertEquals(caverphone('rhind'), 'NT11111111')
        self.assertEquals(caverphone('rhodes'), 'TS11111111')
        self.assertEquals(caverphone('rhynd'), 'NT11111111')
        self.assertEquals(caverphone('riach'), 'RK11111111')
        self.assertEquals(caverphone('rice'), 'RK11111111')
        self.assertEquals(caverphone('rich'), 'RK11111111')
        self.assertEquals(caverphone('richard'), 'RKT1111111')
        self.assertEquals(caverphone('richardd'), 'RKT1111111')
        self.assertEquals(caverphone('richards'), 'RKTS111111')
        self.assertEquals(caverphone('richardso'), 'RKTSA11111')
        self.assertEquals(caverphone('richardson'), 'RKTSN11111')
        self.assertEquals(caverphone('richdale'), 'RKTA111111')
        self.assertEquals(caverphone('riches'), 'RKS1111111')
        self.assertEquals(caverphone('richmond'), 'RKMNT11111')
        self.assertEquals(caverphone('rickard'), 'RKT1111111')
        self.assertEquals(caverphone('ridd'), 'RT11111111')
        self.assertEquals(caverphone('riddell'), 'RTA1111111')
        self.assertEquals(caverphone('riddick'), 'RTK1111111')
        self.assertEquals(caverphone('ridding'), 'RTNK111111')
        self.assertEquals(caverphone('riddle'), 'RTA1111111')
        self.assertEquals(caverphone('riddoch'), 'RTK1111111')
        self.assertEquals(caverphone('riddock'), 'RTK1111111')
        self.assertEquals(caverphone('rideout'), 'RTT1111111')
        self.assertEquals(caverphone('ridgeon'), 'RKN1111111')
        self.assertEquals(caverphone('ridgewell'), 'RKWA111111')
        self.assertEquals(caverphone('ridgwell'), 'RKWA111111')
        self.assertEquals(caverphone('ridland'), 'RTLNT11111')
        self.assertEquals(caverphone('ridler'), 'RTLA111111')
        self.assertEquals(caverphone('ridley'), 'RTLA111111')
        self.assertEquals(caverphone('riederer'), 'RTRA111111')
        self.assertEquals(caverphone('riedle'), 'RTA1111111')
        self.assertEquals(caverphone('riely'), 'RLA1111111')
        self.assertEquals(caverphone('rigby'), 'RKPA111111')
        self.assertEquals(caverphone('rigger'), 'RKA1111111')
        self.assertEquals(caverphone('riggs'), 'RKS1111111')
        self.assertEquals(caverphone('riley'), 'RLA1111111')
        self.assertEquals(caverphone('rillstone'), 'RSTN111111')
        self.assertEquals(caverphone('rilly'), 'RLA1111111')
        self.assertEquals(caverphone('rimeiman'), 'RMMN111111')
        self.assertEquals(caverphone('rimmer'), 'RMA1111111')
        self.assertEquals(caverphone('rimmington'), 'RMNKTN1111')
        self.assertEquals(caverphone('ringer'), 'RNKA111111')
        self.assertEquals(caverphone('ringrose'), 'RNKRS11111')
        self.assertEquals(caverphone('riorden'), 'RTN1111111')
        self.assertEquals(caverphone('ripley'), 'RPLA111111')
        self.assertEquals(caverphone('ripp'), 'RP11111111')
        self.assertEquals(caverphone('rippin'), 'RPN1111111')
        self.assertEquals(caverphone('risk'), 'RSK1111111')
        self.assertEquals(caverphone('rissman'), 'RSMN111111')
        self.assertEquals(caverphone('ritcbie'), 'RTKPA11111')
        self.assertEquals(caverphone('ritchie'), 'RKA1111111')
        self.assertEquals(caverphone('ritchle'), 'RKA1111111')
        self.assertEquals(caverphone('rittenberg'), 'RTNPK11111')
        self.assertEquals(caverphone('rive'), 'RF11111111')
        self.assertEquals(caverphone('rivers'), 'RFS1111111')
        self.assertEquals(caverphone('rivett'), 'RFT1111111')
        self.assertEquals(caverphone('rix'), 'RK11111111')
        self.assertEquals(caverphone('rixon'), 'RKN1111111')
        self.assertEquals(caverphone('roach'), 'RK11111111')
        self.assertEquals(caverphone('roache'), 'RK11111111')
        self.assertEquals(caverphone('roan'), 'RN11111111')
        self.assertEquals(caverphone('robb'), 'RP11111111')
        self.assertEquals(caverphone('robbs'), 'RPS1111111')
        self.assertEquals(caverphone('roberston'), 'RPSTN11111')
        self.assertEquals(caverphone('robert'), 'RPT1111111')
        self.assertEquals(caverphone('roberts'), 'RPTS111111')
        self.assertEquals(caverphone('robertsan'), 'RPTSN11111')
        self.assertEquals(caverphone('robertshaw'), 'RPTSA11111')
        self.assertEquals(caverphone('robertsn'), 'RPTSN11111')
        self.assertEquals(caverphone('robertson'), 'RPTSN11111')
        self.assertEquals(caverphone('robetrson'), 'RPTSN11111')
        self.assertEquals(caverphone('robilliard'), 'RPLT111111')
        self.assertEquals(caverphone('robins'), 'RPNS111111')
        self.assertEquals(caverphone('robinson'), 'RPNSN11111')
        self.assertEquals(caverphone('robjohns'), 'RPNS111111')
        self.assertEquals(caverphone('robortson'), 'RPTSN11111')
        self.assertEquals(caverphone('robson'), 'RPSN111111')
        self.assertEquals(caverphone('rocard'), 'RKT1111111')
        self.assertEquals(caverphone('roche'), 'RK11111111')
        self.assertEquals(caverphone('rockliff'), 'RKLF111111')
        self.assertEquals(caverphone('rodden'), 'RTN1111111')
        self.assertEquals(caverphone('roddick'), 'RTK1111111')
        self.assertEquals(caverphone('roderique'), 'RTRKA11111')
        self.assertEquals(caverphone('rodger'), 'RKA1111111')
        self.assertEquals(caverphone('rodgers'), 'RKS1111111')
        self.assertEquals(caverphone('rodgerson'), 'RKSN111111')
        self.assertEquals(caverphone('rodgrer'), 'RKRA111111')
        self.assertEquals(caverphone('rodman'), 'RTMN111111')
        self.assertEquals(caverphone('roe'), 'RA11111111')
        self.assertEquals(caverphone('roebuck'), 'RPK1111111')
        self.assertEquals(caverphone('rogan'), 'RKN1111111')
        self.assertEquals(caverphone('rogen'), 'RKN1111111')
        self.assertEquals(caverphone('roger'), 'RKA1111111')
        self.assertEquals(caverphone('rogers'), 'RKS1111111')
        self.assertEquals(caverphone('rogersion'), 'RKSN111111')
        self.assertEquals(caverphone('rogerson'), 'RKSN111111')
        self.assertEquals(caverphone('roggers'), 'RKS1111111')
        self.assertEquals(caverphone('rohan'), 'RN11111111')
        self.assertEquals(caverphone('rohertson'), 'RTSN111111')
        self.assertEquals(caverphone('roland'), 'RLNT111111')
        self.assertEquals(caverphone('rolfe'), 'RF11111111')
        self.assertEquals(caverphone('rolinson'), 'RLNSN11111')
        self.assertEquals(caverphone('rolland'), 'RLNT111111')
        self.assertEquals(caverphone('rollins'), 'RLNS111111')
        self.assertEquals(caverphone('rollinson'), 'RLNSN11111')
        self.assertEquals(caverphone('rollo'), 'RLA1111111')
        self.assertEquals(caverphone('rolson'), 'RSN1111111')
        self.assertEquals(caverphone('rolton'), 'RTN1111111')
        self.assertEquals(caverphone('romeril'), 'RMRA111111')
        self.assertEquals(caverphone('ronald'), 'RNT1111111')
        self.assertEquals(caverphone('ronaldson'), 'RNTSN11111')
        self.assertEquals(caverphone('rooney'), 'RNA1111111')
        self.assertEquals(caverphone('rorley'), 'RLA1111111')
        self.assertEquals(caverphone('rosavear'), 'RSFA111111')
        self.assertEquals(caverphone('roscow'), 'RSKA111111')
        self.assertEquals(caverphone('rose'), 'RS11111111')
        self.assertEquals(caverphone('rosenbroc'), 'RSNPRK1111')
        self.assertEquals(caverphone('rosenbrock'), 'RSNPRK1111')
        self.assertEquals(caverphone('rosenbrook'), 'RSNPRK1111')
        self.assertEquals(caverphone('rosenlrock'), 'RSNRK11111')
        self.assertEquals(caverphone('rosetta'), 'RSTA111111')
        self.assertEquals(caverphone('rosevear'), 'RSFA111111')
        self.assertEquals(caverphone('roseveare'), 'RSFA111111')
        self.assertEquals(caverphone('rosewarne'), 'RSWN111111')
        self.assertEquals(caverphone('rosie'), 'RSA1111111')
        self.assertEquals(caverphone('roskilley'), 'RSKLA11111')
        self.assertEquals(caverphone('ross'), 'RS11111111')
        self.assertEquals(caverphone('rossbotham'), 'RSPTM11111')
        self.assertEquals(caverphone('rosser'), 'RSA1111111')
        self.assertEquals(caverphone('rossiter'), 'RSTA111111')
        self.assertEquals(caverphone('rosson'), 'RSN1111111')
        self.assertEquals(caverphone('rothwell'), 'RTWA111111')
        self.assertEquals(caverphone('rotting'), 'RTNK111111')
        self.assertEquals(caverphone('rough'), 'RF11111111')
        self.assertEquals(caverphone('roughan'), 'RFN1111111')
        self.assertEquals(caverphone('roulston'), 'RSTN111111')
        self.assertEquals(caverphone('round'), 'RNT1111111')
        self.assertEquals(caverphone('rourke'), 'RK11111111')
        self.assertEquals(caverphone('rousc'), 'RSK1111111')
        self.assertEquals(caverphone('rouse'), 'RS11111111')
        self.assertEquals(caverphone('rout'), 'RT11111111')
        self.assertEquals(caverphone('routledge'), 'RTLK111111')
        self.assertEquals(caverphone('routlege'), 'RTLK111111')
        self.assertEquals(caverphone('rowan'), 'RWN1111111')
        self.assertEquals(caverphone('rowden'), 'RTN1111111')
        self.assertEquals(caverphone('rowe'), 'RA11111111')
        self.assertEquals(caverphone('rowell'), 'RWA1111111')
        self.assertEquals(caverphone('rowland'), 'RLNT111111')
        self.assertEquals(caverphone('rowlands'), 'RLNTS11111')
        self.assertEquals(caverphone('rowlatt'), 'RLT1111111')
        self.assertEquals(caverphone('rowley'), 'RLA1111111')
        self.assertEquals(caverphone('rowse'), 'RS11111111')
        self.assertEquals(caverphone('roxburgh'), 'RKPA111111')
        self.assertEquals(caverphone('roy'), 'RA11111111')
        self.assertEquals(caverphone('royal'), 'RA11111111')
        self.assertEquals(caverphone('roydhouse'), 'RTS1111111')
        self.assertEquals(caverphone('rubinson'), 'RPNSN11111')
        self.assertEquals(caverphone('ruck'), 'RK11111111')
        self.assertEquals(caverphone('rudd'), 'RT11111111')
        self.assertEquals(caverphone('ruddiman'), 'RTMN111111')
        self.assertEquals(caverphone('ruddle'), 'RTA1111111')
        self.assertEquals(caverphone('ruddy'), 'RTA1111111')
        self.assertEquals(caverphone('rudhall'), 'RTA1111111')
        self.assertEquals(caverphone('rudkin'), 'RTKN111111')
        self.assertEquals(caverphone('rudland'), 'RTLNT11111')
        self.assertEquals(caverphone('ruff'), 'RF11111111')
        self.assertEquals(caverphone('ruffell'), 'RFA1111111')
        self.assertEquals(caverphone('ruhen'), 'RN11111111')
        self.assertEquals(caverphone('rule'), 'RA11111111')
        self.assertEquals(caverphone('rumble'), 'RMPA111111')
        self.assertEquals(caverphone('rumley'), 'RMLA111111')
        self.assertEquals(caverphone('rump'), 'RMP1111111')
        self.assertEquals(caverphone('rumsey'), 'RMSA111111')
        self.assertEquals(caverphone('runcie'), 'RNSA111111')
        self.assertEquals(caverphone('runciman'), 'RNSMN11111')
        self.assertEquals(caverphone('rundle'), 'RNTA111111')
        self.assertEquals(caverphone('rusbatch'), 'RSPK111111')
        self.assertEquals(caverphone('rush-munro'), 'RSMNRA1111')
        self.assertEquals(caverphone('rush'), 'RS11111111')
        self.assertEquals(caverphone('rushton'), 'RSTN111111')
        self.assertEquals(caverphone('rushworth'), 'RSWT111111')
        self.assertEquals(caverphone('russell'), 'RSA1111111')
        self.assertEquals(caverphone('rust'), 'RST1111111')
        self.assertEquals(caverphone('ruston'), 'RSTN111111')
        self.assertEquals(caverphone('ruth'), 'RT11111111')
        self.assertEquals(caverphone('rutherfor'), 'RTFA111111')
        self.assertEquals(caverphone('rutherforcl'), 'RTFKA11111')
        self.assertEquals(caverphone('rutherford'), 'RTFT111111')
        self.assertEquals(caverphone('ruthsatz'), 'RTSTS11111')
        self.assertEquals(caverphone('ruthven'), 'RTFN111111')
        self.assertEquals(caverphone('rutland'), 'RTLNT11111')
        self.assertEquals(caverphone('rutledge'), 'RTLK111111')
        self.assertEquals(caverphone('rutter'), 'RTA1111111')
        self.assertEquals(caverphone('ruttledge'), 'RTLK111111')
        self.assertEquals(caverphone('ryall'), 'RA11111111')
        self.assertEquals(caverphone('ryan'), 'RN11111111')
        self.assertEquals(caverphone('ryburn'), 'RPN1111111')
        self.assertEquals(caverphone('ryder'), 'RTA1111111')
        self.assertEquals(caverphone('rylance'), 'RLNK111111')
        self.assertEquals(caverphone('rylatt'), 'RLT1111111')
        self.assertEquals(caverphone('sabiston'), 'SPSTN11111')
        self.assertEquals(caverphone('sachtler'), 'SKTLA11111')
        self.assertEquals(caverphone('sadd'), 'ST11111111')
        self.assertEquals(caverphone('sadler'), 'STLA111111')
        self.assertEquals(caverphone('safey'), 'SFA1111111')
        self.assertEquals(caverphone('sagar'), 'SKA1111111')
        self.assertEquals(caverphone('sage'), 'SK11111111')
        self.assertEquals(caverphone('saggers'), 'SKS1111111')
        self.assertEquals(caverphone('saimond'), 'SMNT111111')
        self.assertEquals(caverphone('sainsbury'), 'SNSPRA1111')
        self.assertEquals(caverphone('salinger'), 'SLNKA11111')
        self.assertEquals(caverphone('salisbury'), 'SLSPRA1111')
        self.assertEquals(caverphone('sallderson'), 'STSN111111')
        self.assertEquals(caverphone('salmon'), 'SMN1111111')
        self.assertEquals(caverphone('salmond'), 'SMNT111111')
        self.assertEquals(caverphone('salt'), 'ST11111111')
        self.assertEquals(caverphone('salter'), 'STA1111111')
        self.assertEquals(caverphone('sampson'), 'SMPSN11111')
        self.assertEquals(caverphone('samson'), 'SMSN111111')
        self.assertEquals(caverphone('samuda'), 'SMTA111111')
        self.assertEquals(caverphone('samuel'), 'SMA1111111')
        self.assertEquals(caverphone('samuels'), 'SMS1111111')
        self.assertEquals(caverphone('sanaway'), 'SNWA111111')
        self.assertEquals(caverphone('sand'), 'SNT1111111')
        self.assertEquals(caverphone('sanders'), 'SNTS111111')
        self.assertEquals(caverphone('sanderson'), 'SNTSN11111')
        self.assertEquals(caverphone('sandes'), 'SNTS111111')
        self.assertEquals(caverphone('sandey'), 'SNTA111111')
        self.assertEquals(caverphone('sandilands'), 'SNTLNTS111')
        self.assertEquals(caverphone('sandland'), 'SNTLNT1111')
        self.assertEquals(caverphone('sandle'), 'SNTA111111')
        self.assertEquals(caverphone('sando'), 'SNTA111111')
        self.assertEquals(caverphone('sandom'), 'SNTM111111')
        self.assertEquals(caverphone('sandrey'), 'SNTRA11111')
        self.assertEquals(caverphone('sandry'), 'SNTRA11111')
        self.assertEquals(caverphone('sands'), 'SNTS111111')
        self.assertEquals(caverphone('sandys'), 'SNTS111111')
        self.assertEquals(caverphone('sangster'), 'SNKSTA1111')
        self.assertEquals(caverphone('sansom'), 'SNSM111111')
        self.assertEquals(caverphone('sanson'), 'SNSN111111')
        self.assertEquals(caverphone('sapsford'), 'SPSFT11111')
        self.assertEquals(caverphone('sapwell'), 'SPWA111111')
        self.assertEquals(caverphone('sargeant'), 'SKNT111111')
        self.assertEquals(caverphone('sarginson'), 'SKNSN11111')
        self.assertEquals(caverphone('sarkies'), 'SKS1111111')
        self.assertEquals(caverphone('satterthwaite'), 'STTWT11111')
        self.assertEquals(caverphone('saul'), 'SA11111111')
        self.assertEquals(caverphone('saunders'), 'SNTS111111')
        self.assertEquals(caverphone('saunderson'), 'SNTSN11111')
        self.assertEquals(caverphone('savage'), 'SFK1111111')
        self.assertEquals(caverphone('savigny'), 'SFKNA11111')
        self.assertEquals(caverphone('savory'), 'SFRA111111')
        self.assertEquals(caverphone('sawers'), 'SWS1111111')
        self.assertEquals(caverphone('sawyer'), 'SWA1111111')
        self.assertEquals(caverphone('saxby'), 'SKPA111111')
        self.assertEquals(caverphone('saxon'), 'SKN1111111')
        self.assertEquals(caverphone('saxton'), 'SKTN111111')
        self.assertEquals(caverphone('say'), 'SA11111111')
        self.assertEquals(caverphone('sayer'), 'SA11111111')
        self.assertEquals(caverphone('sayers'), 'SS11111111')
        self.assertEquals(caverphone('scager'), 'SKKA111111')
        self.assertEquals(caverphone('scaife'), 'SKF1111111')
        self.assertEquals(caverphone('scales'), 'SKLS111111')
        self.assertEquals(caverphone('scammell'), 'SKMA111111')
        self.assertEquals(caverphone('scandrett'), 'SKNTRT1111')
        self.assertEquals(caverphone('scanlan'), 'SKNLN11111')
        self.assertEquals(caverphone('scanlon'), 'SKNLN11111')
        self.assertEquals(caverphone('scannell'), 'SKNA111111')
        self.assertEquals(caverphone('scarfe'), 'SKF1111111')
        self.assertEquals(caverphone('schapansk'), 'SKPNSK1111')
        self.assertEquals(caverphone('schapanski'), 'SKPNSKA111')
        self.assertEquals(caverphone('schaper'), 'SKPA111111')
        self.assertEquals(caverphone('schaumann'), 'SKMN111111')
        self.assertEquals(caverphone('scherek'), 'SKRK111111')
        self.assertEquals(caverphone('schlaadt'), 'SKLT111111')
        self.assertEquals(caverphone('schluter'), 'SKLTA11111')
        self.assertEquals(caverphone('schmaltz'), 'SKMTS11111')
        self.assertEquals(caverphone('schmeltz'), 'SKMTS11111')
        self.assertEquals(caverphone('schmelz'), 'SKMS111111')
        self.assertEquals(caverphone('schmetz'), 'SKMTS11111')
        self.assertEquals(caverphone('schmidt'), 'SKMT111111')
        self.assertEquals(caverphone('schofield'), 'SKFT111111')
        self.assertEquals(caverphone('scholes'), 'SKLS111111')
        self.assertEquals(caverphone('schollar'), 'SKLA111111')
        self.assertEquals(caverphone('scholtz'), 'SKTS111111')
        self.assertEquals(caverphone('schrick'), 'SKRK111111')
        self.assertEquals(caverphone('schroeder'), 'SKRTA11111')
        self.assertEquals(caverphone('schruffer'), 'SKRFA11111')
        self.assertEquals(caverphone('schulenbe'), 'SKLNP11111')
        self.assertEquals(caverphone('schulenberg'), 'SKLNPK1111')
        self.assertEquals(caverphone('schulenbur'), 'SKLNPA1111')
        self.assertEquals(caverphone('schulenburg'), 'SKLNPK1111')
        self.assertEquals(caverphone('schultz'), 'SKTS111111')
        self.assertEquals(caverphone('schultze'), 'SKTS111111')
        self.assertEquals(caverphone('schwartfeger'), 'SKWTFKA111')
        self.assertEquals(caverphone('scobie'), 'SKPA111111')
        self.assertEquals(caverphone('scoble'), 'SKPA111111')
        self.assertEquals(caverphone('scoffeld'), 'SKFT111111')
        self.assertEquals(caverphone('scofieid'), 'SKFT111111')
        self.assertEquals(caverphone('scofield'), 'SKFT111111')
        self.assertEquals(caverphone('scohle'), 'SKA1111111')
        self.assertEquals(caverphone('scoles'), 'SKLS111111')
        self.assertEquals(caverphone('scollay'), 'SKLA111111')
        self.assertEquals(caverphone('scolon'), 'SKLN111111')
        self.assertEquals(caverphone('scoones'), 'SKNS111111')
        self.assertEquals(caverphone('scores'), 'SKRS111111')
        self.assertEquals(caverphone('scorgie'), 'SKKA111111')
        self.assertEquals(caverphone('scott'), 'SKT1111111')
        self.assertEquals(caverphone('scoular'), 'SKLA111111')
        self.assertEquals(caverphone('scouler'), 'SKLA111111')
        self.assertEquals(caverphone('scoullar'), 'SKLA111111')
        self.assertEquals(caverphone('scrivener'), 'SKRFNA1111')
        self.assertEquals(caverphone('scrymgeour'), 'SKRMKA1111')
        self.assertEquals(caverphone('scudamore'), 'SKTMA11111')
        self.assertEquals(caverphone('scully'), 'SKLA111111')
        self.assertEquals(caverphone('sculpher'), 'SKFA111111')
        self.assertEquals(caverphone('scurr'), 'SKA1111111')
        self.assertEquals(caverphone('seager'), 'SKA1111111')
        self.assertEquals(caverphone('seal'), 'SA11111111')
        self.assertEquals(caverphone('seales'), 'SLS1111111')
        self.assertEquals(caverphone('seaman'), 'SMN1111111')
        self.assertEquals(caverphone('seamer'), 'SMA1111111')
        self.assertEquals(caverphone('searchfield'), 'SKFT111111')
        self.assertEquals(caverphone('searchileld'), 'SKLT111111')
        self.assertEquals(caverphone('searl'), 'SA11111111')
        self.assertEquals(caverphone('searle'), 'SA11111111')
        self.assertEquals(caverphone('season'), 'SSN1111111')
        self.assertEquals(caverphone('seath'), 'ST11111111')
        self.assertEquals(caverphone('seaton'), 'STN1111111')
        self.assertEquals(caverphone('seatree'), 'STRA111111')
        self.assertEquals(caverphone('sedal'), 'STA1111111')
        self.assertEquals(caverphone('seddon'), 'STN1111111')
        self.assertEquals(caverphone('seed'), 'ST11111111')
        self.assertEquals(caverphone('seehof'), 'SF11111111')
        self.assertEquals(caverphone('seelen'), 'SLN1111111')
        self.assertEquals(caverphone('seguin'), 'SKN1111111')
        self.assertEquals(caverphone('seherek'), 'SRK1111111')
        self.assertEquals(caverphone('seidelin'), 'STLN111111')
        self.assertEquals(caverphone('seigle'), 'SKA1111111')
        self.assertEquals(caverphone('selby'), 'SPA1111111')
        self.assertEquals(caverphone('self'), 'SF11111111')
        self.assertEquals(caverphone('selige'), 'SLK1111111')
        self.assertEquals(caverphone('sell'), 'SA11111111')
        self.assertEquals(caverphone('sellar'), 'SLA1111111')
        self.assertEquals(caverphone('sellars'), 'SLS1111111')
        self.assertEquals(caverphone('seller'), 'SLA1111111')
        self.assertEquals(caverphone('semple'), 'SMPA111111')
        self.assertEquals(caverphone('senior'), 'SNA1111111')
        self.assertEquals(caverphone('seott'), 'ST11111111')
        self.assertEquals(caverphone('seque'), 'SKA1111111')
        self.assertEquals(caverphone('service'), 'SFK1111111')
        self.assertEquals(caverphone('setter'), 'STA1111111')
        self.assertEquals(caverphone('sevenson'), 'SFNSN11111')
        self.assertEquals(caverphone('sew hoy'), 'SWA1111111')
        self.assertEquals(caverphone('sewart'), 'SWT1111111')
        self.assertEquals(caverphone('sewell'), 'SWA1111111')
        self.assertEquals(caverphone('sewhoy'), 'SWA1111111')
        self.assertEquals(caverphone('sexton'), 'SKTN111111')
        self.assertEquals(caverphone('seymour'), 'SMA1111111')
        self.assertEquals(caverphone('shackell'), 'SKA1111111')
        self.assertEquals(caverphone('shackleton'), 'SKLTN11111')
        self.assertEquals(caverphone('shacklock'), 'SKLK111111')
        self.assertEquals(caverphone('shadbolt'), 'STPT111111')
        self.assertEquals(caverphone('shallcrass'), 'SKRS111111')
        self.assertEquals(caverphone('shallish'), 'SLS1111111')
        self.assertEquals(caverphone('shalpe'), 'SP11111111')
        self.assertEquals(caverphone('shanahan'), 'SNN1111111')
        self.assertEquals(caverphone('shand'), 'SNT1111111')
        self.assertEquals(caverphone('shankland'), 'SNKLNT1111')
        self.assertEquals(caverphone('shanks'), 'SNKS111111')
        self.assertEquals(caverphone('shann'), 'SN11111111')
        self.assertEquals(caverphone('shannahan'), 'SNN1111111')
        self.assertEquals(caverphone('shannon'), 'SNN1111111')
        self.assertEquals(caverphone('shardlow'), 'STLA111111')
        self.assertEquals(caverphone('sharkey'), 'SKA1111111')
        self.assertEquals(caverphone('sharkie'), 'SKA1111111')
        self.assertEquals(caverphone('sharp'), 'SP11111111')
        self.assertEquals(caverphone('sharpe'), 'SP11111111')
        self.assertEquals(caverphone('shaw'), 'SA11111111')
        self.assertEquals(caverphone('shea-lawlo'), 'SLLA111111')
        self.assertEquals(caverphone('shea-lawlor'), 'SLLA111111')
        self.assertEquals(caverphone('shea'), 'SA11111111')
        self.assertEquals(caverphone('shearer'), 'SRA1111111')
        self.assertEquals(caverphone('shearing'), 'SRNK111111')
        self.assertEquals(caverphone('shears'), 'SS11111111')
        self.assertEquals(caverphone('shearsby'), 'SSPA111111')
        self.assertEquals(caverphone('sheath'), 'ST11111111')
        self.assertEquals(caverphone('sheddan'), 'STN1111111')
        self.assertEquals(caverphone('sheed'), 'ST11111111')
        self.assertEquals(caverphone('sheehan'), 'SN11111111')
        self.assertEquals(caverphone('sheehy'), 'SA11111111')
        self.assertEquals(caverphone('sheen'), 'SN11111111')
        self.assertEquals(caverphone('sheenan'), 'SNN1111111')
        self.assertEquals(caverphone('sheldrake'), 'STRK111111')
        self.assertEquals(caverphone('shelton'), 'STN1111111')
        self.assertEquals(caverphone('shelverton'), 'SFTN111111')
        self.assertEquals(caverphone('shene'), 'SN11111111')
        self.assertEquals(caverphone('shenken'), 'SNKN111111')
        self.assertEquals(caverphone('shennan'), 'SNN1111111')
        self.assertEquals(caverphone('shephard'), 'SFT1111111')
        self.assertEquals(caverphone('shepherd'), 'SFT1111111')
        self.assertEquals(caverphone('shepparcl'), 'SPKA111111')
        self.assertEquals(caverphone('sheppard'), 'SPT1111111')
        self.assertEquals(caverphone('shepperd'), 'SPT1111111')
        self.assertEquals(caverphone('shepphard'), 'SPFT111111')
        self.assertEquals(caverphone('sherburd'), 'SPT1111111')
        self.assertEquals(caverphone('sherer'), 'SRA1111111')
        self.assertEquals(caverphone('sheridan'), 'SRTN111111')
        self.assertEquals(caverphone('sheridian'), 'SRTN111111')
        self.assertEquals(caverphone('sheriff'), 'SRF1111111')
        self.assertEquals(caverphone('sherlaw'), 'SLA1111111')
        self.assertEquals(caverphone('sherlock'), 'SLK1111111')
        self.assertEquals(caverphone('sherriff'), 'SRF1111111')
        self.assertEquals(caverphone('sherwill'), 'SWA1111111')
        self.assertEquals(caverphone('sherwood'), 'SWT1111111')
        self.assertEquals(caverphone('shieffelbien'), 'SFPN111111')
        self.assertEquals(caverphone('shiel'), 'SA11111111')
        self.assertEquals(caverphone('shields'), 'STS1111111')
        self.assertEquals(caverphone('shiels'), 'SS11111111')
        self.assertEquals(caverphone('shier'), 'SA11111111')
        self.assertEquals(caverphone('shierlaw'), 'SLA1111111')
        self.assertEquals(caverphone('shiffington'), 'SFNKTN1111')
        self.assertEquals(caverphone('shilcock'), 'SKK1111111')
        self.assertEquals(caverphone('shillum'), 'SLM1111111')
        self.assertEquals(caverphone('shilton'), 'STN1111111')
        self.assertEquals(caverphone('shine'), 'SN11111111')
        self.assertEquals(caverphone('shing'), 'SNK1111111')
        self.assertEquals(caverphone('shipman'), 'SPMN111111')
        self.assertEquals(caverphone('shirer'), 'SRA1111111')
        self.assertEquals(caverphone('shires'), 'SRS1111111')
        self.assertEquals(caverphone('shirley'), 'SLA1111111')
        self.assertEquals(caverphone('shirreffs'), 'SRFS111111')
        self.assertEquals(caverphone('shore'), 'SA11111111')
        self.assertEquals(caverphone('shorney'), 'SNA1111111')
        self.assertEquals(caverphone('short'), 'ST11111111')
        self.assertEquals(caverphone('shortt'), 'ST11111111')
        self.assertEquals(caverphone('shrimpton'), 'SRMPTN1111')
        self.assertEquals(caverphone('shrubsole'), 'SRPSA11111')
        self.assertEquals(caverphone('shuffill'), 'SFA1111111')
        self.assertEquals(caverphone('shugar'), 'SKA1111111')
        self.assertEquals(caverphone('shutt'), 'ST11111111')
        self.assertEquals(caverphone('sibbald'), 'SPT1111111')
        self.assertEquals(caverphone('sibley'), 'SPLA111111')
        self.assertEquals(caverphone('sickels'), 'SKS1111111')
        self.assertEquals(caverphone('sidell'), 'STA1111111')
        self.assertEquals(caverphone('sidey'), 'STA1111111')
        self.assertEquals(caverphone('sidon'), 'STN1111111')
        self.assertEquals(caverphone('sidoy'), 'STA1111111')
        self.assertEquals(caverphone('sievwright'), 'SFRT111111')
        self.assertEquals(caverphone('silk'), 'SK11111111')
        self.assertEquals(caverphone('silken'), 'SKN1111111')
        self.assertEquals(caverphone('silsby'), 'SSPA111111')
        self.assertEquals(caverphone('silva'), 'SFA1111111')
        self.assertEquals(caverphone('silver'), 'SFA1111111')
        self.assertEquals(caverphone('silverstone'), 'SFSTN11111')
        self.assertEquals(caverphone('silvertsen'), 'SFTSN11111')
        self.assertEquals(caverphone('silvester'), 'SFSTA11111')
        self.assertEquals(caverphone('silvi'), 'SFA1111111')
        self.assertEquals(caverphone('sim'), 'SM11111111')
        self.assertEquals(caverphone('sime'), 'SM11111111')
        self.assertEquals(caverphone('simeon'), 'SMN1111111')
        self.assertEquals(caverphone('simes'), 'SMS1111111')
        self.assertEquals(caverphone('simkin'), 'SMKN111111')
        self.assertEquals(caverphone('simm'), 'SM11111111')
        self.assertEquals(caverphone('simmonds'), 'SMNTS11111')
        self.assertEquals(caverphone('simmons'), 'SMNS111111')
        self.assertEquals(caverphone('simms'), 'SMS1111111')
        self.assertEquals(caverphone('simnons'), 'SMNNS11111')
        self.assertEquals(caverphone('simon'), 'SMN1111111')
        self.assertEquals(caverphone('simons'), 'SMNS111111')
        self.assertEquals(caverphone('simonsen'), 'SMNSN11111')
        self.assertEquals(caverphone('simpkins'), 'SMPKNS1111')
        self.assertEquals(caverphone('simpson'), 'SMPSN11111')
        self.assertEquals(caverphone('sims'), 'SMS1111111')
        self.assertEquals(caverphone('simson'), 'SMSN111111')
        self.assertEquals(caverphone('sinclair'), 'SNKLA11111')
        self.assertEquals(caverphone('sinclait'), 'SNKLT11111')
        self.assertEquals(caverphone('sinclar'), 'SNKLA11111')
        self.assertEquals(caverphone('sincock'), 'SNKK111111')
        self.assertEquals(caverphone('sincok'), 'SNKK111111')
        self.assertEquals(caverphone('sing'), 'SNK1111111')
        self.assertEquals(caverphone('singleton'), 'SNKLTN1111')
        self.assertEquals(caverphone('sings'), 'SNKS111111')
        self.assertEquals(caverphone('sinith'), 'SNT1111111')
        self.assertEquals(caverphone('sinnamon'), 'SNMN111111')
        self.assertEquals(caverphone('sinton'), 'SNTN111111')
        self.assertEquals(caverphone('sirnmonds'), 'SNMNTS1111')
        self.assertEquals(caverphone('sise'), 'SS11111111')
        self.assertEquals(caverphone('sitley'), 'STLA111111')
        self.assertEquals(caverphone('sitopson'), 'STPSN11111')
        self.assertEquals(caverphone('sivell'), 'SFA1111111')
        self.assertEquals(caverphone('sivertsen'), 'SFTSN11111')
        self.assertEquals(caverphone('sivewright'), 'SFRT111111')
        self.assertEquals(caverphone('sixton'), 'SKTN111111')
        self.assertEquals(caverphone('sizen'), 'SSN1111111')
        self.assertEquals(caverphone('sizer'), 'SSA1111111')
        self.assertEquals(caverphone('skeane'), 'SKN1111111')
        self.assertEquals(caverphone('skeels'), 'SKS1111111')
        self.assertEquals(caverphone('skeen'), 'SKN1111111')
        self.assertEquals(caverphone('skeene'), 'SKN1111111')
        self.assertEquals(caverphone('skeet'), 'SKT1111111')
        self.assertEquals(caverphone('skelton'), 'SKTN111111')
        self.assertEquals(caverphone('skene'), 'SKN1111111')
        self.assertEquals(caverphone('skeoch'), 'SKK1111111')
        self.assertEquals(caverphone('skerrett'), 'SKRT111111')
        self.assertEquals(caverphone('skiffington'), 'SKFNKTN111')
        self.assertEquals(caverphone('skilton'), 'SKTN111111')
        self.assertEquals(caverphone('skimer'), 'SKMA111111')
        self.assertEquals(caverphone('skinner'), 'SKNA111111')
        self.assertEquals(caverphone('skipworth'), 'SKPWT11111')
        self.assertEquals(caverphone('skirving'), 'SKFNK11111')
        self.assertEquals(caverphone('skow'), 'SKA1111111')
        self.assertEquals(caverphone('skrimpton'), 'SKRMPTN111')
        self.assertEquals(caverphone('skuse'), 'SKS1111111')
        self.assertEquals(caverphone('slack'), 'SLK1111111')
        self.assertEquals(caverphone('slade'), 'SLT1111111')
        self.assertEquals(caverphone('slater'), 'SLTA111111')
        self.assertEquals(caverphone('slatter'), 'SLTA111111')
        self.assertEquals(caverphone('slattery'), 'SLTRA11111')
        self.assertEquals(caverphone('slaughter'), 'SLTA111111')
        self.assertEquals(caverphone('slee'), 'SLA1111111')
        self.assertEquals(caverphone('sleeman'), 'SLMN111111')
        self.assertEquals(caverphone('slemint'), 'SLMNT11111')
        self.assertEquals(caverphone('slent'), 'SLNT111111')
        self.assertEquals(caverphone('slight'), 'SLT1111111')
        self.assertEquals(caverphone('sligo'), 'SLKA111111')
        self.assertEquals(caverphone('slinner'), 'SLNA111111')
        self.assertEquals(caverphone('sloan'), 'SLN1111111')
        self.assertEquals(caverphone('sloper'), 'SLPA111111')
        self.assertEquals(caverphone('slovley'), 'SLFLA11111')
        self.assertEquals(caverphone('slowey'), 'SLWA111111')
        self.assertEquals(caverphone('slowley'), 'SLLA111111')
        self.assertEquals(caverphone('slowly'), 'SLLA111111')
        self.assertEquals(caverphone('slyfield'), 'SLFT111111')
        self.assertEquals(caverphone('smail'), 'SMA1111111')
        self.assertEquals(caverphone('smaill'), 'SMA1111111')
        self.assertEquals(caverphone('smales'), 'SMLS111111')
        self.assertEquals(caverphone('small'), 'SMA1111111')
        self.assertEquals(caverphone('smalley'), 'SMLA111111')
        self.assertEquals(caverphone('smallman'), 'SMMN111111')
        self.assertEquals(caverphone('smart'), 'SMT1111111')
        self.assertEquals(caverphone('smea]'), 'SMA1111111')
        self.assertEquals(caverphone('smeal'), 'SMA1111111')
        self.assertEquals(caverphone('smear'), 'SMA1111111')
        self.assertEquals(caverphone('smeaton'), 'SMTN111111')
        self.assertEquals(caverphone('smedley'), 'SMTLA11111')
        self.assertEquals(caverphone('smellie'), 'SMLA111111')
        self.assertEquals(caverphone('smethurst'), 'SMTST11111')
        self.assertEquals(caverphone('smiley'), 'SMLA111111')
        self.assertEquals(caverphone('smitb'), 'SMTP111111')
        self.assertEquals(caverphone('smith-palmer'), 'SMTPMA1111')
        self.assertEquals(caverphone('smith'), 'SMT1111111')
        self.assertEquals(caverphone('smither'), 'SMTA111111')
        self.assertEquals(caverphone('smithpalmer'), 'SMTPMA1111')
        self.assertEquals(caverphone('smithson'), 'SMTSN11111')
        self.assertEquals(caverphone('smitl'), 'SMTA111111')
        self.assertEquals(caverphone('smolenski'), 'SMLNSKA111')
        self.assertEquals(caverphone('smyth'), 'SMT1111111')
        self.assertEquals(caverphone('smythe'), 'SMT1111111')
        self.assertEquals(caverphone('sneade'), 'SNT1111111')
        self.assertEquals(caverphone('sneddon'), 'SNTN111111')
        self.assertEquals(caverphone('snell'), 'SNA1111111')
        self.assertEquals(caverphone('snelleksz'), 'SNLKS11111')
        self.assertEquals(caverphone('snook'), 'SNK1111111')
        self.assertEquals(caverphone('snow'), 'SNA1111111')
        self.assertEquals(caverphone('snowball'), 'SNPA111111')
        self.assertEquals(caverphone('snowden'), 'SNTN111111')
        self.assertEquals(caverphone('snowdon'), 'SNTN111111')
        self.assertEquals(caverphone('soden'), 'STN1111111')
        self.assertEquals(caverphone('solomon'), 'SLMN111111')
        self.assertEquals(caverphone('somerviile'), 'SMFA111111')
        self.assertEquals(caverphone('somervill'), 'SMFA111111')
        self.assertEquals(caverphone('somerville'), 'SMFA111111')
        self.assertEquals(caverphone('somes'), 'SMS1111111')
        self.assertEquals(caverphone('sommerfield'), 'SMFT111111')
        self.assertEquals(caverphone('sommerville'), 'SMFA111111')
        self.assertEquals(caverphone('sonntag'), 'SNTK111111')
        self.assertEquals(caverphone('sontag'), 'SNTK111111')
        self.assertEquals(caverphone('soper'), 'SPA1111111')
        self.assertEquals(caverphone('sorenson'), 'SRNSN11111')
        self.assertEquals(caverphone('soulsby'), 'SSPA111111')
        self.assertEquals(caverphone('soundy'), 'SNTA111111')
        self.assertEquals(caverphone('souness'), 'SNS1111111')
        self.assertEquals(caverphone('sourdon'), 'STN1111111')
        self.assertEquals(caverphone('souter'), 'STA1111111')
        self.assertEquals(caverphone('south'), 'ST11111111')
        self.assertEquals(caverphone('southall'), 'STA1111111')
        self.assertEquals(caverphone('southam'), 'STM1111111')
        self.assertEquals(caverphone('southberg'), 'STPK111111')
        self.assertEquals(caverphone('southern'), 'STN1111111')
        self.assertEquals(caverphone('southey'), 'STA1111111')
        self.assertEquals(caverphone('southorn'), 'STN1111111')
        self.assertEquals(caverphone('soutter'), 'STA1111111')
        self.assertEquals(caverphone('spain'), 'SPN1111111')
        self.assertEquals(caverphone('spalding'), 'SPTNK11111')
        self.assertEquals(caverphone('spargo'), 'SPKA111111')
        self.assertEquals(caverphone('sparks'), 'SPKS111111')
        self.assertEquals(caverphone('sparnon'), 'SPNN111111')
        self.assertEquals(caverphone('sparrow'), 'SPRA111111')
        self.assertEquals(caverphone('spatz'), 'SPTS111111')
        self.assertEquals(caverphone('spaul'), 'SPA1111111')
        self.assertEquals(caverphone('spavin'), 'SPFN111111')
        self.assertEquals(caverphone('spear'), 'SPA1111111')
        self.assertEquals(caverphone('spedding'), 'SPTNK11111')
        self.assertEquals(caverphone('speden'), 'SPTN111111')
        self.assertEquals(caverphone('speid'), 'SPT1111111')
        self.assertEquals(caverphone('speight'), 'SPT1111111')
        self.assertEquals(caverphone('speir'), 'SPA1111111')
        self.assertEquals(caverphone('speirs'), 'SPS1111111')
        self.assertEquals(caverphone('spell'), 'SPA1111111')
        self.assertEquals(caverphone('spellman'), 'SPMN111111')
        self.assertEquals(caverphone('spence'), 'SPNK111111')
        self.assertEquals(caverphone('spencer'), 'SPNSA11111')
        self.assertEquals(caverphone('spiers'), 'SPS1111111')
        self.assertEquals(caverphone('spillane'), 'SPLN111111')
        self.assertEquals(caverphone('spinks'), 'SPNKS11111')
        self.assertEquals(caverphone('spinner'), 'SPNA111111')
        self.assertEquals(caverphone('spiro'), 'SPRA111111')
        self.assertEquals(caverphone('spong'), 'SPNK111111')
        self.assertEquals(caverphone('spooner'), 'SPNA111111')
        self.assertEquals(caverphone('spowart'), 'SPWT111111')
        self.assertEquals(caverphone('spragg'), 'SPRK111111')
        self.assertEquals(caverphone('spraggon'), 'SPRKN11111')
        self.assertEquals(caverphone('sprague'), 'SPRKA11111')
        self.assertEquals(caverphone('spratt'), 'SPRT111111')
        self.assertEquals(caverphone('spray'), 'SPRA111111')
        self.assertEquals(caverphone('spring'), 'SPRNK11111')
        self.assertEquals(caverphone('springhall'), 'SPRNA11111')
        self.assertEquals(caverphone('sproat'), 'SPRT111111')
        self.assertEquals(caverphone('sprott'), 'SPRT111111')
        self.assertEquals(caverphone('sproule'), 'SPRA111111')
        self.assertEquals(caverphone('sproull'), 'SPRA111111')
        self.assertEquals(caverphone('spurden'), 'SPTN111111')
        self.assertEquals(caverphone('sputter'), 'SPTA111111')
        self.assertEquals(caverphone('squiness'), 'SKNS111111')
        self.assertEquals(caverphone('squire'), 'SKA1111111')
        self.assertEquals(caverphone('squires'), 'SKRS111111')
        self.assertEquals(caverphone('st george'), 'STKK111111')
        self.assertEquals(caverphone('stabb'), 'STP1111111')
        self.assertEquals(caverphone('stables'), 'STPLS11111')
        self.assertEquals(caverphone('stackhouse'), 'STKS111111')
        self.assertEquals(caverphone('stade'), 'STT1111111')
        self.assertEquals(caverphone('stafford'), 'STFT111111')
        self.assertEquals(caverphone('stagpoole'), 'STKPA11111')
        self.assertEquals(caverphone('staines'), 'STNS111111')
        self.assertEquals(caverphone('stainton'), 'STNTN11111')
        self.assertEquals(caverphone('staite'), 'STT1111111')
        self.assertEquals(caverphone('stakey'), 'STKA111111')
        self.assertEquals(caverphone('stalker'), 'STKA111111')
        self.assertEquals(caverphone('stallard'), 'STLT111111')
        self.assertEquals(caverphone('stammers'), 'STMS111111')
        self.assertEquals(caverphone('stamper'), 'STMPA11111')
        self.assertEquals(caverphone('stanafield'), 'STNFT11111')
        self.assertEquals(caverphone('stanaway'), 'STNWA11111')
        self.assertEquals(caverphone('stanbrook'), 'STNPRK1111')
        self.assertEquals(caverphone('standen'), 'STNTN11111')
        self.assertEquals(caverphone('standfield'), 'STNTFT1111')
        self.assertEquals(caverphone('standring'), 'STNTRNK111')
        self.assertEquals(caverphone('stanford'), 'STNFT11111')
        self.assertEquals(caverphone('staniford'), 'STNFT11111')
        self.assertEquals(caverphone('stanley'), 'STNLA11111')
        self.assertEquals(caverphone('stannens'), 'STNNS11111')
        self.assertEquals(caverphone('stanners'), 'STNS111111')
        self.assertEquals(caverphone('stanton'), 'STNTN11111')
        self.assertEquals(caverphone('staples'), 'STPLS11111')
        self.assertEquals(caverphone('stapleton'), 'STPLTN1111')
        self.assertEquals(caverphone('starham'), 'STM1111111')
        self.assertEquals(caverphone('stark'), 'STK1111111')
        self.assertEquals(caverphone('starkey'), 'STKA111111')
        self.assertEquals(caverphone('starr'), 'STA1111111')
        self.assertEquals(caverphone('statham'), 'STTM111111')
        self.assertEquals(caverphone('staunton'), 'STNTN11111')
        self.assertEquals(caverphone('stead'), 'STT1111111')
        self.assertEquals(caverphone('steadman'), 'STTMN11111')
        self.assertEquals(caverphone('stedman'), 'STTMN11111')
        self.assertEquals(caverphone('stedward'), 'STTWT11111')
        self.assertEquals(caverphone('steedman'), 'STTMN11111')
        self.assertEquals(caverphone('steeds'), 'STTS111111')
        self.assertEquals(caverphone('steel'), 'STA1111111')
        self.assertEquals(caverphone('steele'), 'STA1111111')
        self.assertEquals(caverphone('steen'), 'STN1111111')
        self.assertEquals(caverphone('steensoll'), 'STNSA11111')
        self.assertEquals(caverphone('steenson'), 'STNSN11111')
        self.assertEquals(caverphone('steffens'), 'STFNS11111')
        self.assertEquals(caverphone('steinman'), 'STNMN11111')
        self.assertEquals(caverphone('stella'), 'STLA111111')
        self.assertEquals(caverphone('stem'), 'STM1111111')
        self.assertEquals(caverphone('stempa'), 'STMPA11111')
        self.assertEquals(caverphone('stenhouse'), 'STNS111111')
        self.assertEquals(caverphone('stennouse'), 'STNS111111')
        self.assertEquals(caverphone('stent'), 'STNT111111')
        self.assertEquals(caverphone('stentiford'), 'STNTFT1111')
        self.assertEquals(caverphone('stepbenson'), 'STPNSN1111')
        self.assertEquals(caverphone('stephen'), 'STFN111111')
        self.assertEquals(caverphone('stephens'), 'STFNS11111')
        self.assertEquals(caverphone('stephenso'), 'STFNSA1111')
        self.assertEquals(caverphone('stephenson'), 'STFNSN1111')
        self.assertEquals(caverphone('sterart'), 'STRT111111')
        self.assertEquals(caverphone('sterling'), 'STLNK11111')
        self.assertEquals(caverphone('stesvart'), 'STSFT11111')
        self.assertEquals(caverphone('stevart'), 'STFT111111')
        self.assertEquals(caverphone('steven'), 'STFN111111')
        self.assertEquals(caverphone('stevens'), 'STFNS11111')
        self.assertEquals(caverphone('stevenson'), 'STFNSN1111')
        self.assertEquals(caverphone('steward'), 'STWT111111')
        self.assertEquals(caverphone('stewart'), 'STWT111111')
        self.assertEquals(caverphone('stgeorge'), 'STKK111111')
        self.assertEquals(caverphone('stichann'), 'STKN111111')
        self.assertEquals(caverphone('stichmann'), 'STKMN11111')
        self.assertEquals(caverphone('stickman'), 'STKMN11111')
        self.assertEquals(caverphone('stiglish'), 'STKLS11111')
        self.assertEquals(caverphone('stiles'), 'STLS111111')
        self.assertEquals(caverphone('still'), 'STA1111111')
        self.assertEquals(caverphone('stinso'), 'STNSA11111')
        self.assertEquals(caverphone('stinson'), 'STNSN11111')
        self.assertEquals(caverphone('stirling'), 'STLNK11111')
        self.assertEquals(caverphone('stiven'), 'STFN111111')
        self.assertEquals(caverphone('stobie'), 'STPA111111')
        self.assertEquals(caverphone('stock'), 'STK1111111')
        self.assertEquals(caverphone('stockdale'), 'STKTA11111')
        self.assertEquals(caverphone('stocker'), 'STKA111111')
        self.assertEquals(caverphone('stoddart'), 'STTT111111')
        self.assertEquals(caverphone('stohr'), 'STA1111111')
        self.assertEquals(caverphone('stoke'), 'STK1111111')
        self.assertEquals(caverphone('stokes'), 'STKS111111')
        self.assertEquals(caverphone('stone'), 'STN1111111')
        self.assertEquals(caverphone('stonebrid'), 'STNPRT1111')
        self.assertEquals(caverphone('stonebridge'), 'STNPRK1111')
        self.assertEquals(caverphone('stoneham'), 'STNM111111')
        self.assertEquals(caverphone('stook'), 'STK1111111')
        self.assertEquals(caverphone('storer'), 'STRA111111')
        self.assertEquals(caverphone('storey'), 'STRA111111')
        self.assertEquals(caverphone('storie'), 'STRA111111')
        self.assertEquals(caverphone('storm'), 'STM1111111')
        self.assertEquals(caverphone('storrie'), 'STRA111111')
        self.assertEquals(caverphone('storry'), 'STRA111111')
        self.assertEquals(caverphone('stort'), 'STT1111111')
        self.assertEquals(caverphone('story'), 'STRA111111')
        self.assertEquals(caverphone('stothart'), 'STTT111111')
        self.assertEquals(caverphone('stott'), 'STT1111111')
        self.assertEquals(caverphone('stout'), 'STT1111111')
        self.assertEquals(caverphone('stowell'), 'STWA111111')
        self.assertEquals(caverphone('stozepanski'), 'STSPNSKA11')
        self.assertEquals(caverphone('strachan'), 'STRKN11111')
        self.assertEquals(caverphone('strack'), 'STRK111111')
        self.assertEquals(caverphone('strafford'), 'STRFT11111')
        self.assertEquals(caverphone('strain'), 'STRN111111')
        self.assertEquals(caverphone('strang'), 'STRNK11111')
        self.assertEquals(caverphone('strange'), 'STRNK11111')
        self.assertEquals(caverphone('stratford'), 'STRTFT1111')
        self.assertEquals(caverphone('strathern'), 'STRTN11111')
        self.assertEquals(caverphone('stratton'), 'STRTN11111')
        self.assertEquals(caverphone('straw'), 'STRA111111')
        self.assertEquals(caverphone('strawbridge'), 'STRPRK1111')
        self.assertEquals(caverphone('street'), 'STRT111111')
        self.assertEquals(caverphone('strickett'), 'STRKT11111')
        self.assertEquals(caverphone('stright'), 'STRT111111')
        self.assertEquals(caverphone('stringer'), 'STRNKA1111')
        self.assertEquals(caverphone('stronach'), 'STRNK11111')
        self.assertEquals(caverphone('strong'), 'STRNK11111')
        self.assertEquals(caverphone('stroud'), 'STRT111111')
        self.assertEquals(caverphone('strouts'), 'STRTS11111')
        self.assertEquals(caverphone('struckett'), 'STRKT11111')
        self.assertEquals(caverphone('struthers'), 'STRTS11111')
        self.assertEquals(caverphone('stuart-miller'), 'STTMLA1111')
        self.assertEquals(caverphone('stuart'), 'STT1111111')
        self.assertEquals(caverphone('stubbs'), 'STPS111111')
        self.assertEquals(caverphone('stubley'), 'STPLA11111')
        self.assertEquals(caverphone('stuckey'), 'STKA111111')
        self.assertEquals(caverphone('stumbles'), 'STMPLS1111')
        self.assertEquals(caverphone('sturgeon'), 'STKN111111')
        self.assertEquals(caverphone('sturtevan'), 'STTFN11111')
        self.assertEquals(caverphone('styche'), 'STK1111111')
        self.assertEquals(caverphone('styles'), 'STLS111111')
        self.assertEquals(caverphone('sudden'), 'STN1111111')
        self.assertEquals(caverphone('suddens'), 'STNS111111')
        self.assertEquals(caverphone('sugden'), 'SKTN111111')
        self.assertEquals(caverphone('suilivan'), 'SLFN111111')
        self.assertEquals(caverphone('sullivan'), 'SLFN111111')
        self.assertEquals(caverphone('sullivar'), 'SLFA111111')
        self.assertEquals(caverphone('summerell'), 'SMRA111111')
        self.assertEquals(caverphone('summerfield'), 'SMFT111111')
        self.assertEquals(caverphone('summers'), 'SMS1111111')
        self.assertEquals(caverphone('sumner'), 'SMNA111111')
        self.assertEquals(caverphone('sunderland'), 'SNTLNT1111')
        self.assertEquals(caverphone('sutcliffe'), 'STKLF11111')
        self.assertEquals(caverphone('suter'), 'STA1111111')
        self.assertEquals(caverphone('suters'), 'STS1111111')
        self.assertEquals(caverphone('sutherlan'), 'STLN111111')
        self.assertEquals(caverphone('sutherland'), 'STLNT11111')
        self.assertEquals(caverphone('sutherlard'), 'STLT111111')
        self.assertEquals(caverphone('sutton'), 'STN1111111')
        self.assertEquals(caverphone('swale'), 'SWA1111111')
        self.assertEquals(caverphone('swan'), 'SWN1111111')
        self.assertEquals(caverphone('swanerton'), 'SWNTN11111')
        self.assertEquals(caverphone('swanger'), 'SWNKA11111')
        self.assertEquals(caverphone('swann'), 'SWN1111111')
        self.assertEquals(caverphone('swanson'), 'SWNSN11111')
        self.assertEquals(caverphone('swanston'), 'SWNSTN1111')
        self.assertEquals(caverphone('swanwick'), 'SWNWK11111')
        self.assertEquals(caverphone('sweeney'), 'SWNA111111')
        self.assertEquals(caverphone('sweetman'), 'SWTMN11111')
        self.assertEquals(caverphone('sweetnam'), 'SWTNM11111')
        self.assertEquals(caverphone('swell'), 'SWA1111111')
        self.assertEquals(caverphone('swete'), 'SWT1111111')
        self.assertEquals(caverphone('swift'), 'SWFT111111')
        self.assertEquals(caverphone('swinburne'), 'SWNPN11111')
        self.assertEquals(caverphone('swindley'), 'SWNTLA1111')
        self.assertEquals(caverphone('swinley'), 'SWNLA11111')
        self.assertEquals(caverphone('swinney'), 'SWNA111111')
        self.assertEquals(caverphone('swinton'), 'SWNTN11111')
        self.assertEquals(caverphone('switalla'), 'SWTLA11111')
        self.assertEquals(caverphone('switalli'), 'SWTLA11111')
        self.assertEquals(caverphone('switzer'), 'SWTSA11111')
        self.assertEquals(caverphone('syder'), 'STA1111111')
        self.assertEquals(caverphone('sydney'), 'STNA111111')
        self.assertEquals(caverphone('sykes'), 'SKS1111111')
        self.assertEquals(caverphone('syme'), 'SM11111111')
        self.assertEquals(caverphone('symes'), 'SMS1111111')
        self.assertEquals(caverphone('symington'), 'SMNKTN1111')
        self.assertEquals(caverphone('symon'), 'SMN1111111')
        self.assertEquals(caverphone('symonds'), 'SMNTS11111')
        self.assertEquals(caverphone('syndercombe'), 'SNTKM11111')
        self.assertEquals(caverphone('sythes'), 'STS1111111')
        self.assertEquals(caverphone('tabor'), 'TPA1111111')
        self.assertEquals(caverphone('tackson'), 'TKSN111111')
        self.assertEquals(caverphone('taggart'), 'TKT1111111')
        self.assertEquals(caverphone('taine'), 'TN11111111')
        self.assertEquals(caverphone('tait'), 'TT11111111')
        self.assertEquals(caverphone('talbot'), 'TPT1111111')
        self.assertEquals(caverphone('talboys'), 'TPS1111111')
        self.assertEquals(caverphone('tall'), 'TA11111111')
        self.assertEquals(caverphone('tallant'), 'TLNT111111')
        self.assertEquals(caverphone('tamblyn'), 'TMPLN11111')
        self.assertEquals(caverphone('tanner'), 'TNA1111111')
        self.assertEquals(caverphone('tansey'), 'TNSA111111')
        self.assertEquals(caverphone('tansleiy'), 'TNSLA11111')
        self.assertEquals(caverphone('tansley'), 'TNSLA11111')
        self.assertEquals(caverphone('tapley'), 'TPLA111111')
        self.assertEquals(caverphone('taplin'), 'TPLN111111')
        self.assertEquals(caverphone('tapper'), 'TPA1111111')
        self.assertEquals(caverphone('tapson'), 'TPSN111111')
        self.assertEquals(caverphone('tarbutt'), 'TPT1111111')
        self.assertEquals(caverphone('tarleton'), 'TLTN111111')
        self.assertEquals(caverphone('tarlton'), 'TTN1111111')
        self.assertEquals(caverphone('tarrant'), 'TRNT111111')
        self.assertEquals(caverphone('tartakover'), 'TTKFA11111')
        self.assertEquals(caverphone('tarves'), 'TFS1111111')
        self.assertEquals(caverphone('tasker'), 'TSKA111111')
        self.assertEquals(caverphone('tate'), 'TT11111111')
        self.assertEquals(caverphone('tattersal'), 'TTSA111111')
        self.assertEquals(caverphone('tattersall'), 'TTSA111111')
        self.assertEquals(caverphone('tattersfield'), 'TTSFT11111')
        self.assertEquals(caverphone('taunt'), 'TNT1111111')
        self.assertEquals(caverphone('tavendale'), 'TFNTA11111')
        self.assertEquals(caverphone('taverner'), 'TFNA111111')
        self.assertEquals(caverphone('tavlor'), 'TFLA111111')
        self.assertEquals(caverphone('tayior'), 'TA11111111')
        self.assertEquals(caverphone('tayler'), 'TLA1111111')
        self.assertEquals(caverphone('tayles'), 'TLS1111111')
        self.assertEquals(caverphone('taylor'), 'TLA1111111')
        self.assertEquals(caverphone('teague'), 'TKA1111111')
        self.assertEquals(caverphone('teale'), 'TA11111111')
        self.assertEquals(caverphone('tearle'), 'TA11111111')
        self.assertEquals(caverphone('teasdale'), 'TSTA111111')
        self.assertEquals(caverphone('tebbett'), 'TPT1111111')
        self.assertEquals(caverphone('teer'), 'TA11111111')
        self.assertEquals(caverphone('teesdale'), 'TSTA111111')
        self.assertEquals(caverphone('tegg'), 'TK11111111')
        self.assertEquals(caverphone('telfer'), 'TFA1111111')
        self.assertEquals(caverphone('telford'), 'TFT1111111')
        self.assertEquals(caverphone('teller'), 'TLA1111111')
        self.assertEquals(caverphone('tempero'), 'TMPRA11111')
        self.assertEquals(caverphone('temperton'), 'TMPTN11111')
        self.assertEquals(caverphone('templcton'), 'TMPKTN1111')
        self.assertEquals(caverphone('temple'), 'TMPA111111')
        self.assertEquals(caverphone('templeton'), 'TMPLTN1111')
        self.assertEquals(caverphone('tenbeth'), 'TNPT111111')
        self.assertEquals(caverphone('tennant'), 'TNNT111111')
        self.assertEquals(caverphone('tennent'), 'TNNT111111')
        self.assertEquals(caverphone('tennet'), 'TNT1111111')
        self.assertEquals(caverphone('tepene'), 'TPN1111111')
        self.assertEquals(caverphone('terry'), 'TRA1111111')
        self.assertEquals(caverphone('teschner'), 'TSKNA11111')
        self.assertEquals(caverphone('teviotdale'), 'TFTA111111')
        self.assertEquals(caverphone('thackwel'), 'TKWA111111')
        self.assertEquals(caverphone('thiele'), 'TA11111111')
        self.assertEquals(caverphone('thin'), 'TN11111111')
        self.assertEquals(caverphone('thinn'), 'TN11111111')
        self.assertEquals(caverphone('third'), 'TT11111111')
        self.assertEquals(caverphone('thom'), 'TM11111111')
        self.assertEquals(caverphone('thomas'), 'TMS1111111')
        self.assertEquals(caverphone('thomason'), 'TMSN111111')
        self.assertEquals(caverphone('thomlinson'), 'TMLNSN1111')
        self.assertEquals(caverphone('thompson'), 'TMPSN11111')
        self.assertEquals(caverphone('thomson'), 'TMSN111111')
        self.assertEquals(caverphone('thonas'), 'TNS1111111')
        self.assertEquals(caverphone('thora'), 'TRA1111111')
        self.assertEquals(caverphone('thorapson'), 'TRPSN11111')
        self.assertEquals(caverphone('thorburn'), 'TPN1111111')
        self.assertEquals(caverphone('thorley'), 'TLA1111111')
        self.assertEquals(caverphone('thorn'), 'TN11111111')
        self.assertEquals(caverphone('thornburg'), 'TNPK111111')
        self.assertEquals(caverphone('thornburgh'), 'TNPA111111')
        self.assertEquals(caverphone('thornhill'), 'TNA1111111')
        self.assertEquals(caverphone('thornicroft'), 'TNKRFT1111')
        self.assertEquals(caverphone('thornley'), 'TNLA111111')
        self.assertEquals(caverphone('thornton'), 'TNTN111111')
        self.assertEquals(caverphone('thorp'), 'TP11111111')
        self.assertEquals(caverphone('thotnpson'), 'TTNPSN1111')
        self.assertEquals(caverphone('thow'), 'TA11111111')
        self.assertEquals(caverphone('throp'), 'TRP1111111')
        self.assertEquals(caverphone('thurlow'), 'TLA1111111')
        self.assertEquals(caverphone('thurston'), 'TSTN111111')
        self.assertEquals(caverphone('thwaites'), 'TWTS111111')
        self.assertEquals(caverphone('tibbles'), 'TPLS111111')
        self.assertEquals(caverphone('tibbs'), 'TPS1111111')
        self.assertEquals(caverphone('tidey'), 'TTA1111111')
        self.assertEquals(caverphone('tierney'), 'TNA1111111')
        self.assertEquals(caverphone('tighe umbers'), 'TKMPS11111')
        self.assertEquals(caverphone('tighe-umbers'), 'TKMPS11111')
        self.assertEquals(caverphone('tighe'), 'TA11111111')
        self.assertEquals(caverphone('tigheumbers'), 'TKMPS11111')
        self.assertEquals(caverphone('tilburn'), 'TPN1111111')
        self.assertEquals(caverphone('tilbury'), 'TPRA111111')
        self.assertEquals(caverphone('tilley'), 'TLA1111111')
        self.assertEquals(caverphone('tilleyshor'), 'TLSA111111')
        self.assertEquals(caverphone('tilleyshort'), 'TLST111111')
        self.assertEquals(caverphone('tillie'), 'TLA1111111')
        self.assertEquals(caverphone('tillyshort'), 'TLST111111')
        self.assertEquals(caverphone('tilson'), 'TSN1111111')
        self.assertEquals(caverphone('tiltman'), 'TTMN111111')
        self.assertEquals(caverphone('tily'), 'TLA1111111')
        self.assertEquals(caverphone('timlin'), 'TMLN111111')
        self.assertEquals(caverphone('timmings'), 'TMNKS11111')
        self.assertEquals(caverphone('timmins'), 'TMNS111111')
        self.assertEquals(caverphone('timms'), 'TMS1111111')
        self.assertEquals(caverphone('tims'), 'TMS1111111')
        self.assertEquals(caverphone('tinnock'), 'TNK1111111')
        self.assertEquals(caverphone('tinson'), 'TNSN111111')
        self.assertEquals(caverphone('tipa'), 'TPA1111111')
        self.assertEquals(caverphone('tippet'), 'TPT1111111')
        self.assertEquals(caverphone('tippett'), 'TPT1111111')
        self.assertEquals(caverphone('tisdall'), 'TSTA111111')
        self.assertEquals(caverphone('titchener'), 'TKNA111111')
        self.assertEquals(caverphone('titchner'), 'TKNA111111')
        self.assertEquals(caverphone('titclhener'), 'TTKNA11111')
        self.assertEquals(caverphone('tither'), 'TTA1111111')
        self.assertEquals(caverphone('titohener'), 'TTNA111111')
        self.assertEquals(caverphone('tiverner'), 'TFNA111111')
        self.assertEquals(caverphone('tizard'), 'TST1111111')
        self.assertEquals(caverphone('tlimlin'), 'TLMLN11111')
        self.assertEquals(caverphone('tlomson'), 'TLMSN11111')
        self.assertEquals(caverphone('tnlley'), 'TNLA111111')
        self.assertEquals(caverphone('toal'), 'TA11111111')
        self.assertEquals(caverphone('toase'), 'TS11111111')
        self.assertEquals(caverphone('tobin'), 'TPN1111111')
        self.assertEquals(caverphone('tod'), 'TT11111111')
        self.assertEquals(caverphone('toda'), 'TTA1111111')
        self.assertEquals(caverphone('todd'), 'TT11111111')
        self.assertEquals(caverphone('tofield'), 'TFT1111111')
        self.assertEquals(caverphone('tohill'), 'TA11111111')
        self.assertEquals(caverphone('tointon'), 'TNTN111111')
        self.assertEquals(caverphone('tolley'), 'TLA1111111')
        self.assertEquals(caverphone('tolmie'), 'TMA1111111')
        self.assertEquals(caverphone('tombs'), 'TMPS111111')
        self.assertEquals(caverphone('tomkins'), 'TMKNS11111')
        self.assertEquals(caverphone('tomkinson'), 'TMKNSN1111')
        self.assertEquals(caverphone('tomlinson'), 'TMLNSN1111')
        self.assertEquals(caverphone('tompkins'), 'TMPKNS1111')
        self.assertEquals(caverphone('toms'), 'TMS1111111')
        self.assertEquals(caverphone('tonar'), 'TNA1111111')
        self.assertEquals(caverphone('toner'), 'TNA1111111')
        self.assertEquals(caverphone('tones'), 'TNS1111111')
        self.assertEquals(caverphone('toneycliffe'), 'TNKLF11111')
        self.assertEquals(caverphone('tonkin'), 'TNKN111111')
        self.assertEquals(caverphone('tonkinson'), 'TNKNSN1111')
        self.assertEquals(caverphone('tonner'), 'TNA1111111')
        self.assertEquals(caverphone('tonnor'), 'TNA1111111')
        self.assertEquals(caverphone('toohey'), 'TA11111111')
        self.assertEquals(caverphone('toohill'), 'TA11111111')
        self.assertEquals(caverphone('toohoy'), 'TA11111111')
        self.assertEquals(caverphone('tooman'), 'TMN1111111')
        self.assertEquals(caverphone('toomer'), 'TMA1111111')
        self.assertEquals(caverphone('toomey'), 'TMA1111111')
        self.assertEquals(caverphone('tooner'), 'TNA1111111')
        self.assertEquals(caverphone('tootell'), 'TTA1111111')
        self.assertEquals(caverphone('topp'), 'TP11111111')
        self.assertEquals(caverphone('torpey'), 'TPA1111111')
        self.assertEquals(caverphone('torrance'), 'TRNK111111')
        self.assertEquals(caverphone('torrie'), 'TRA1111111')
        self.assertEquals(caverphone('tosh'), 'TS11111111')
        self.assertEquals(caverphone('toshack'), 'TSK1111111')
        self.assertEquals(caverphone('tosswill'), 'TSWA111111')
        self.assertEquals(caverphone('tough'), 'TF11111111')
        self.assertEquals(caverphone('tourell'), 'TRA1111111')
        self.assertEquals(caverphone('tout'), 'TT11111111')
        self.assertEquals(caverphone('towart'), 'TWT1111111')
        self.assertEquals(caverphone('towle'), 'TA11111111')
        self.assertEquals(caverphone('towler'), 'TLA1111111')
        self.assertEquals(caverphone('town'), 'TN11111111')
        self.assertEquals(caverphone('towniey'), 'TNA1111111')
        self.assertEquals(caverphone('townley'), 'TNLA111111')
        self.assertEquals(caverphone('townrow'), 'TNRA111111')
        self.assertEquals(caverphone('townsend'), 'TNSNT11111')
        self.assertEquals(caverphone('townshend'), 'TNSNT11111')
        self.assertEquals(caverphone('towsey'), 'TSA1111111')
        self.assertEquals(caverphone('towson'), 'TSN1111111')
        self.assertEquals(caverphone('toy'), 'TA11111111')
        self.assertEquals(caverphone('toye'), 'TA11111111')
        self.assertEquals(caverphone('tracey'), 'TRSA111111')
        self.assertEquals(caverphone('tracy'), 'TRSA111111')
        self.assertEquals(caverphone('traherne'), 'TRN1111111')
        self.assertEquals(caverphone('trail'), 'TRA1111111')
        self.assertEquals(caverphone('traill'), 'TRA1111111')
        self.assertEquals(caverphone('trainor'), 'TRNA111111')
        self.assertEquals(caverphone('tranter'), 'TRNTA11111')
        self.assertEquals(caverphone('trapski'), 'TRPSKA1111')
        self.assertEquals(caverphone('travena'), 'TRFNA11111')
        self.assertEquals(caverphone('traves'), 'TRFS111111')
        self.assertEquals(caverphone('travis'), 'TRFS111111')
        self.assertEquals(caverphone('traynor'), 'TRNA111111')
        self.assertEquals(caverphone('treacy'), 'TRSA111111')
        self.assertEquals(caverphone('treadwell'), 'TRTWA11111')
        self.assertEquals(caverphone('trebilcock'), 'TRPKK11111')
        self.assertEquals(caverphone('tree'), 'TRA1111111')
        self.assertEquals(caverphone('treeweek'), 'TRWK111111')
        self.assertEquals(caverphone('tregea'), 'TRKA111111')
        self.assertEquals(caverphone('tregear'), 'TRKA111111')
        self.assertEquals(caverphone('tregilgus'), 'TRKKS11111')
        self.assertEquals(caverphone('tregoning'), 'TRKNNK1111')
        self.assertEquals(caverphone('tregonning'), 'TRKNNK1111')
        self.assertEquals(caverphone('treleaven'), 'TRLFN11111')
        self.assertEquals(caverphone('treloar'), 'TRLA111111')
        self.assertEquals(caverphone('tremaine'), 'TRMN111111')
        self.assertEquals(caverphone('trench'), 'TRNK111111')
        self.assertEquals(caverphone('trencll'), 'TRNKA11111')
        self.assertEquals(caverphone('trengrove'), 'TRNKRF1111')
        self.assertEquals(caverphone('trenwith'), 'TRNWT11111')
        self.assertEquals(caverphone('trerise'), 'TRRS111111')
        self.assertEquals(caverphone('tressider'), 'TRSTA11111')
        self.assertEquals(caverphone('tressler'), 'TRSLA11111')
        self.assertEquals(caverphone('trestrail'), 'TRSTRA1111')
        self.assertEquals(caverphone('tretheway'), 'TRTWA11111')
        self.assertEquals(caverphone('trevarthan'), 'TRFTN11111')
        self.assertEquals(caverphone('trevathan'), 'TRFTN11111')
        self.assertEquals(caverphone('trevena'), 'TRFNA11111')
        self.assertEquals(caverphone('trevenna'), 'TRFNA11111')
        self.assertEquals(caverphone('treves'), 'TRFS111111')
        self.assertEquals(caverphone('treweek'), 'TRWK111111')
        self.assertEquals(caverphone('trewera'), 'TRWRA11111')
        self.assertEquals(caverphone('trewern'), 'TRWN111111')
        self.assertEquals(caverphone('trewhellar'), 'TRWLA11111')
        self.assertEquals(caverphone('trewick'), 'TRWK111111')
        self.assertEquals(caverphone('trezise'), 'TRSS111111')
        self.assertEquals(caverphone('triggs'), 'TRKS111111')
        self.assertEquals(caverphone('trim'), 'TRM1111111')
        self.assertEquals(caverphone('trimble'), 'TRMPA11111')
        self.assertEquals(caverphone('trimnell'), 'TRMNA11111')
        self.assertEquals(caverphone('trinder'), 'TRNTA11111')
        self.assertEquals(caverphone('tripp'), 'TRP1111111')
        self.assertEquals(caverphone('trnbull'), 'TNPA111111')
        self.assertEquals(caverphone('troadic'), 'TRTK111111')
        self.assertEquals(caverphone('troomer'), 'TRMA111111')
        self.assertEquals(caverphone('troon'), 'TRN1111111')
        self.assertEquals(caverphone('trotman'), 'TRTMN11111')
        self.assertEquals(caverphone('trott'), 'TRT1111111')
        self.assertEquals(caverphone('trotter'), 'TRTA111111')
        self.assertEquals(caverphone('trounce'), 'TRNK111111')
        self.assertEquals(caverphone('troup'), 'TRP1111111')
        self.assertEquals(caverphone('trow'), 'TRA1111111')
        self.assertEquals(caverphone('trower'), 'TRWA111111')
        self.assertEquals(caverphone('truesdale'), 'TRSTA11111')
        self.assertEquals(caverphone('truscott'), 'TRSKT11111')
        self.assertEquals(caverphone('try'), 'TRA1111111')
        self.assertEquals(caverphone('trythall'), 'TRTA111111')
        self.assertEquals(caverphone('tubman'), 'TPMN111111')
        self.assertEquals(caverphone('tubmar'), 'TPMA111111')
        self.assertEquals(caverphone('tuck'), 'TK11111111')
        self.assertEquals(caverphone('tucker'), 'TKA1111111')
        self.assertEquals(caverphone('tuckey'), 'TKA1111111')
        self.assertEquals(caverphone('tudor'), 'TTA1111111')
        self.assertEquals(caverphone('tuite'), 'TT11111111')
        self.assertEquals(caverphone('tull'), 'TA11111111')
        self.assertEquals(caverphone('tulley'), 'TLA1111111')
        self.assertEquals(caverphone('tulloch'), 'TLK1111111')
        self.assertEquals(caverphone('tully'), 'TLA1111111')
        self.assertEquals(caverphone('tunam'), 'TNM1111111')
        self.assertEquals(caverphone('tunnell'), 'TNA1111111')
        self.assertEquals(caverphone('tunnicliffe'), 'TNKLF11111')
        self.assertEquals(caverphone('tunzelman'), 'TNSMN11111')
        self.assertEquals(caverphone('tuohy'), 'TA11111111')
        self.assertEquals(caverphone('turley'), 'TLA1111111')
        self.assertEquals(caverphone('turlington'), 'TLNKTN1111')
        self.assertEquals(caverphone('turllbull'), 'TPA1111111')
        self.assertEquals(caverphone('turnbull'), 'TNPA111111')
        self.assertEquals(caverphone('turner'), 'TNA1111111')
        self.assertEquals(caverphone('turpin'), 'TPN1111111')
        self.assertEquals(caverphone('turton'), 'TTN1111111')
        self.assertEquals(caverphone('turvey'), 'TFA1111111')
        self.assertEquals(caverphone('tustain'), 'TSTN111111')
        self.assertEquals(caverphone('tutty'), 'TTA1111111')
        self.assertEquals(caverphone('tuxford'), 'TKFT111111')
        self.assertEquals(caverphone('tvlee'), 'TFLA111111')
        self.assertEquals(caverphone('twaddell'), 'TWTA111111')
        self.assertEquals(caverphone('twaddle'), 'TWTA111111')
        self.assertEquals(caverphone('tweed'), 'TWT1111111')
        self.assertEquals(caverphone('tweedale'), 'TWTA111111')
        self.assertEquals(caverphone('tweedie'), 'TWTA111111')
        self.assertEquals(caverphone('tweedle'), 'TWTA111111')
        self.assertEquals(caverphone('tweedy'), 'TWTA111111')
        self.assertEquals(caverphone('twelftree'), 'TWFTRA1111')
        self.assertEquals(caverphone('twemlow'), 'TWMLA11111')
        self.assertEquals(caverphone('twhigg'), 'TWK1111111')
        self.assertEquals(caverphone('twining'), 'TWNNK11111')
        self.assertEquals(caverphone('twist'), 'TWST111111')
        self.assertEquals(caverphone('twose'), 'TWS1111111')
        self.assertEquals(caverphone('tye'), 'TA11111111')
        self.assertEquals(caverphone('tylee'), 'TLA1111111')
        self.assertEquals(caverphone('tyler'), 'TLA1111111')
        self.assertEquals(caverphone('tynan'), 'TNN1111111')
        self.assertEquals(caverphone('tyre'), 'TA11111111')
        self.assertEquals(caverphone('tyree'), 'TRA1111111')
        self.assertEquals(caverphone('tyrie'), 'TRA1111111')
        self.assertEquals(caverphone('tyrrell-baxter'), 'TRPKTA1111')
        self.assertEquals(caverphone('tyrrell'), 'TRA1111111')
        self.assertEquals(caverphone('tysoll'), 'TSA1111111')
        self.assertEquals(caverphone('tyson'), 'TSN1111111')
        self.assertEquals(caverphone('udy'), 'ATA1111111')
        self.assertEquals(caverphone('ufton'), 'AFTN111111')
        self.assertEquals(caverphone('umbers'), 'AMPS111111')
        self.assertEquals(caverphone('underwood'), 'ANTWT11111')
        self.assertEquals(caverphone('unwin'), 'ANWN111111')
        self.assertEquals(caverphone('uphill'), 'AFA1111111')
        self.assertEquals(caverphone('upson'), 'APSN111111')
        self.assertEquals(caverphone('ure'), 'AA11111111')
        self.assertEquals(caverphone('uren'), 'ARN1111111')
        self.assertEquals(caverphone('urquhart'), 'AKT1111111')
        self.assertEquals(caverphone('usher'), 'ASA1111111')
        self.assertEquals(caverphone('usherwood'), 'ASWT111111')
        self.assertEquals(caverphone('ussher'), 'ASA1111111')
        self.assertEquals(caverphone('ussherwood'), 'ASWT111111')
        self.assertEquals(caverphone('utteridge'), 'ATRK111111')
        self.assertEquals(caverphone('uttley'), 'ATLA111111')
        self.assertEquals(caverphone('vaidya'), 'FTA1111111')
        self.assertEquals(caverphone('vaile'), 'FA11111111')
        self.assertEquals(caverphone('valentine'), 'FLNTN11111')
        self.assertEquals(caverphone('valli'), 'FLA1111111')
        self.assertEquals(caverphone('valpy'), 'FPA1111111')
        self.assertEquals(caverphone('vance'), 'FNK1111111')
        self.assertEquals(caverphone('vanes'), 'FNS1111111')
        self.assertEquals(caverphone('vann'), 'FN11111111')
        self.assertEquals(caverphone('varcoe'), 'FKA1111111')
        self.assertEquals(caverphone('varian'), 'FRN1111111')
        self.assertEquals(caverphone('varney'), 'FNA1111111')
        self.assertEquals(caverphone('vartha'), 'FTA1111111')
        self.assertEquals(caverphone('vaughan'), 'FKN1111111')
        self.assertEquals(caverphone('veal'), 'FA11111111')
        self.assertEquals(caverphone('vedder'), 'FTA1111111')
        self.assertEquals(caverphone('veint'), 'FNT1111111')
        self.assertEquals(caverphone('veitch'), 'FK11111111')
        self.assertEquals(caverphone('ven our'), 'FNA1111111')
        self.assertEquals(caverphone('venn'), 'FN11111111')
        self.assertEquals(caverphone('venning'), 'FNNK111111')
        self.assertEquals(caverphone('venour'), 'FNA1111111')
        self.assertEquals(caverphone('vercoe'), 'FKA1111111')
        self.assertEquals(caverphone('vere'), 'FA11111111')
        self.assertEquals(caverphone('verey'), 'FRA1111111')
        self.assertEquals(caverphone('verity'), 'FRTA111111')
        self.assertEquals(caverphone('verngreen'), 'FNKRN11111')
        self.assertEquals(caverphone('vernon'), 'FNN1111111')
        self.assertEquals(caverphone('vette'), 'FT11111111')
        self.assertEquals(caverphone('vezey'), 'FSA1111111')
        self.assertEquals(caverphone('vial'), 'FA11111111')
        self.assertEquals(caverphone('vickers'), 'FKS1111111')
        self.assertEquals(caverphone('vickery'), 'FKRA111111')
        self.assertEquals(caverphone('vik'), 'FK11111111')
        self.assertEquals(caverphone('vile'), 'FA11111111')
        self.assertEquals(caverphone('vince'), 'FNK1111111')
        self.assertEquals(caverphone('vincent'), 'FNSNT11111')
        self.assertEquals(caverphone('vine'), 'FN11111111')
        self.assertEquals(caverphone('viney'), 'FNA1111111')
        self.assertEquals(caverphone('vintiner'), 'FNTNA11111')
        self.assertEquals(caverphone('vintinner'), 'FNTNA11111')
        self.assertEquals(caverphone('vintinuer'), 'FNTNA11111')
        self.assertEquals(caverphone('virtue'), 'FTA1111111')
        self.assertEquals(caverphone('vitharson'), 'FTSN111111')
        self.assertEquals(caverphone('vivian'), 'FFN1111111')
        self.assertEquals(caverphone('vlietstra'), 'FLTSTRA111')
        self.assertEquals(caverphone('voight'), 'FT11111111')
        self.assertEquals(caverphone('voigt'), 'FKT1111111')
        self.assertEquals(caverphone('voiler'), 'FLA1111111')
        self.assertEquals(caverphone('voisey'), 'FSA1111111')
        self.assertEquals(caverphone('voller'), 'FLA1111111')
        self.assertEquals(caverphone('vosper'), 'FSPA111111')
        self.assertEquals(caverphone('voyce'), 'FK11111111')
        self.assertEquals(caverphone('voysey'), 'FSA1111111')
        self.assertEquals(caverphone('vyner'), 'FNA1111111')
        self.assertEquals(caverphone('waby'), 'WPA1111111')
        self.assertEquals(caverphone('wacher'), 'WKA1111111')
        self.assertEquals(caverphone('wackeldin'), 'WKTN111111')
        self.assertEquals(caverphone('wackeldine'), 'WKTN111111')
        self.assertEquals(caverphone('wackier'), 'WKA1111111')
        self.assertEquals(caverphone('wackilden'), 'WKTN111111')
        self.assertEquals(caverphone('wackildene'), 'WKTN111111')
        self.assertEquals(caverphone('waddel'), 'WTA1111111')
        self.assertEquals(caverphone('waddell'), 'WTA1111111')
        self.assertEquals(caverphone('waddle'), 'WTA1111111')
        self.assertEquals(caverphone('wade'), 'WT11111111')
        self.assertEquals(caverphone('wadie'), 'WTA1111111')
        self.assertEquals(caverphone('wadsworth'), 'WTSWT11111')
        self.assertEquals(caverphone('waghorn'), 'WKN1111111')
        self.assertEquals(caverphone('waghorne'), 'WKN1111111')
        self.assertEquals(caverphone('waghornee'), 'WKNA111111')
        self.assertEquals(caverphone('wagner'), 'WKNA111111')
        self.assertEquals(caverphone('wah'), 'WA11111111')
        self.assertEquals(caverphone('wahren'), 'WRN1111111')
        self.assertEquals(caverphone('wahrlich'), 'WLK1111111')
        self.assertEquals(caverphone('waide'), 'WT11111111')
        self.assertEquals(caverphone('waigth'), 'WKT1111111')
        self.assertEquals(caverphone('wain'), 'WN11111111')
        self.assertEquals(caverphone('wainhouse'), 'WNS1111111')
        self.assertEquals(caverphone('waite'), 'WT11111111')
        self.assertEquals(caverphone('wakefield'), 'WKFT111111')
        self.assertEquals(caverphone('wakelin'), 'WKLN111111')
        self.assertEquals(caverphone('wakeling'), 'WKLNK11111')
        self.assertEquals(caverphone('walden'), 'WTN1111111')
        self.assertEquals(caverphone('waldie'), 'WTA1111111')
        self.assertEquals(caverphone('waldren'), 'WTRN111111')
        self.assertEquals(caverphone('waldron'), 'WTRN111111')
        self.assertEquals(caverphone('wales'), 'WLS1111111')
        self.assertEquals(caverphone('wali'), 'WLA1111111')
        self.assertEquals(caverphone('walkem'), 'WKM1111111')
        self.assertEquals(caverphone('walker'), 'WKA1111111')
        self.assertEquals(caverphone('walkern'), 'WKN1111111')
        self.assertEquals(caverphone('walkinshaw'), 'WKNSA11111')
        self.assertEquals(caverphone('walks'), 'WKS1111111')
        self.assertEquals(caverphone('wall'), 'WA11111111')
        self.assertEquals(caverphone('wallace'), 'WLK1111111')
        self.assertEquals(caverphone('wallen'), 'WLN1111111')
        self.assertEquals(caverphone('waller'), 'WLA1111111')
        self.assertEquals(caverphone('wallin'), 'WLN1111111')
        self.assertEquals(caverphone('walling-jones'), 'WLNKNS1111')
        self.assertEquals(caverphone('wallinger'), 'WLNKA11111')
        self.assertEquals(caverphone('wallis'), 'WLS1111111')
        self.assertEquals(caverphone('walls'), 'WS11111111')
        self.assertEquals(caverphone('walmeley'), 'WMLA111111')
        self.assertEquals(caverphone('walmsey'), 'WMSA111111')
        self.assertEquals(caverphone('walmsley'), 'WMSLA11111')
        self.assertEquals(caverphone('walmslsey'), 'WMSSA11111')
        self.assertEquals(caverphone('walquest'), 'WKST111111')
        self.assertEquals(caverphone('walquist'), 'WKST111111')
        self.assertEquals(caverphone('walscott'), 'WSKT111111')
        self.assertEquals(caverphone('walsh'), 'WS11111111')
        self.assertEquals(caverphone('walter'), 'WTA1111111')
        self.assertEquals(caverphone('walters'), 'WTS1111111')
        self.assertEquals(caverphone('walton'), 'WTN1111111')
        self.assertEquals(caverphone('ward'), 'WT11111111')
        self.assertEquals(caverphone('warden'), 'WTN1111111')
        self.assertEquals(caverphone('wardrop'), 'WTRP111111')
        self.assertEquals(caverphone('wards'), 'WTS1111111')
        self.assertEquals(caverphone('ware'), 'WA11111111')
        self.assertEquals(caverphone('wares'), 'WRS1111111')
        self.assertEquals(caverphone('wark'), 'WK11111111')
        self.assertEquals(caverphone('warne'), 'WN11111111')
        self.assertEquals(caverphone('warner'), 'WNA1111111')
        self.assertEquals(caverphone('warnock'), 'WNK1111111')
        self.assertEquals(caverphone('warreil'), 'WRA1111111')
        self.assertEquals(caverphone('warrell'), 'WRA1111111')
        self.assertEquals(caverphone('warren'), 'WRN1111111')
        self.assertEquals(caverphone('warrington'), 'WRNKTN1111')
        self.assertEquals(caverphone('warwick'), 'WWK1111111')
        self.assertEquals(caverphone('warwood'), 'WWT1111111')
        self.assertEquals(caverphone('washer'), 'WSA1111111')
        self.assertEquals(caverphone('wason'), 'WSN1111111')
        self.assertEquals(caverphone('wassell'), 'WSA1111111')
        self.assertEquals(caverphone('waterfield'), 'WTFT111111')
        self.assertEquals(caverphone('waterhous'), 'WTS1111111')
        self.assertEquals(caverphone('waters'), 'WTS1111111')
        self.assertEquals(caverphone('waterson'), 'WTSN111111')
        self.assertEquals(caverphone('waterston'), 'WTSTN11111')
        self.assertEquals(caverphone('wates'), 'WTS1111111')
        self.assertEquals(caverphone('watkins'), 'WTKNS11111')
        self.assertEquals(caverphone('watler'), 'WTLA111111')
        self.assertEquals(caverphone('watling'), 'WTLNK11111')
        self.assertEquals(caverphone('watmough'), 'WTMA111111')
        self.assertEquals(caverphone('watsan'), 'WTSN111111')
        self.assertEquals(caverphone('watsol1'), 'WTSA111111')
        self.assertEquals(caverphone('watson'), 'WTSN111111')
        self.assertEquals(caverphone('watt'), 'WT11111111')
        self.assertEquals(caverphone('watters'), 'WTS1111111')
        self.assertEquals(caverphone('watterson'), 'WTSN111111')
        self.assertEquals(caverphone('watts'), 'WTS1111111')
        self.assertEquals(caverphone('wattson'), 'WTSN111111')
        self.assertEquals(caverphone('waugh'), 'WA11111111')
        self.assertEquals(caverphone('way'), 'WA11111111')
        self.assertEquals(caverphone('wcatherston'), 'KTSTN11111')
        self.assertEquals(caverphone('weaherburn'), 'WPN1111111')
        self.assertEquals(caverphone('wealherston'), 'WSTN111111')
        self.assertEquals(caverphone('weatherall'), 'WTRA111111')
        self.assertEquals(caverphone('weatherbur'), 'WTPA111111')
        self.assertEquals(caverphone('weatherburn'), 'WTPN111111')
        self.assertEquals(caverphone('weatherell'), 'WTRA111111')
        self.assertEquals(caverphone('weatheret'), 'WTRT111111')
        self.assertEquals(caverphone('weatherst'), 'WTST111111')
        self.assertEquals(caverphone('weathersto'), 'WTSTA11111')
        self.assertEquals(caverphone('weatherston'), 'WTSTN11111')
        self.assertEquals(caverphone('weatherstone'), 'WTSTN11111')
        self.assertEquals(caverphone('weaver'), 'WFA1111111')
        self.assertEquals(caverphone('weavers'), 'WFS1111111')
        self.assertEquals(caverphone('webb'), 'WP11111111')
        self.assertEquals(caverphone('webber'), 'WPA1111111')
        self.assertEquals(caverphone('webh'), 'WP11111111')
        self.assertEquals(caverphone('webling'), 'WPLNK11111')
        self.assertEquals(caverphone('webster'), 'WPSTA11111')
        self.assertEquals(caverphone('weddell'), 'WTA1111111')
        self.assertEquals(caverphone('wedderspo'), 'WTSPA11111')
        self.assertEquals(caverphone('wedderspoo'), 'WTSPA11111')
        self.assertEquals(caverphone('wedderspoon'), 'WTSPN11111')
        self.assertEquals(caverphone('wedgwood'), 'WKWT111111')
        self.assertEquals(caverphone('wedlake'), 'WTLK111111')
        self.assertEquals(caverphone('wedlock'), 'WTLK111111')
        self.assertEquals(caverphone('weedon'), 'WTN1111111')
        self.assertEquals(caverphone('weight'), 'WT11111111')
        self.assertEquals(caverphone('weightman'), 'WTMN111111')
        self.assertEquals(caverphone('weir'), 'WA11111111')
        self.assertEquals(caverphone('welbourn'), 'WPN1111111')
        self.assertEquals(caverphone('welch'), 'WK11111111')
        self.assertEquals(caverphone('weldon'), 'WTN1111111')
        self.assertEquals(caverphone('welham'), 'WM11111111')
        self.assertEquals(caverphone('wellard'), 'WLT1111111')
        self.assertEquals(caverphone('wellbourn'), 'WPN1111111')
        self.assertEquals(caverphone('wellbrock'), 'WPRK111111')
        self.assertEquals(caverphone('wellburn'), 'WPN1111111')
        self.assertEquals(caverphone('weller'), 'WLA1111111')
        self.assertEquals(caverphone('wellesley'), 'WLSLA11111')
        self.assertEquals(caverphone('wellington'), 'WLNKTN1111')
        self.assertEquals(caverphone('wellman'), 'WMN1111111')
        self.assertEquals(caverphone('wells'), 'WS11111111')
        self.assertEquals(caverphone('wellsted'), 'WSTT111111')
        self.assertEquals(caverphone('welnoski'), 'WNSKA11111')
        self.assertEquals(caverphone('welply'), 'WPLA111111')
        self.assertEquals(caverphone('welsford'), 'WSFT111111')
        self.assertEquals(caverphone('welsh'), 'WS11111111')
        self.assertEquals(caverphone('welstead'), 'WSTT111111')
        self.assertEquals(caverphone('wenborn'), 'WNPN111111')
        self.assertEquals(caverphone('wendelken'), 'WNTKN11111')
        self.assertEquals(caverphone('wenlock'), 'WNLK111111')
        self.assertEquals(caverphone('wenthersto'), 'WNTSTA1111')
        self.assertEquals(caverphone('wentworth'), 'WNTWT11111')
        self.assertEquals(caverphone('werner'), 'WNA1111111')
        self.assertEquals(caverphone('wesney'), 'WSNA111111')
        self.assertEquals(caverphone('wessman'), 'WSMN111111')
        self.assertEquals(caverphone('west'), 'WST1111111')
        self.assertEquals(caverphone('westake'), 'WSTK111111')
        self.assertEquals(caverphone('westbrook'), 'WSTPRK1111')
        self.assertEquals(caverphone('westcott'), 'WSTKT11111')
        self.assertEquals(caverphone('western'), 'WSTN111111')
        self.assertEquals(caverphone('westfield'), 'WSTFT11111')
        self.assertEquals(caverphone('westfold'), 'WSTFT11111')
        self.assertEquals(caverphone('westlake'), 'WSTLK11111')
        self.assertEquals(caverphone('westland'), 'WSTLNT1111')
        self.assertEquals(caverphone('weston'), 'WSTN111111')
        self.assertEquals(caverphone('westwood'), 'WSTWT11111')
        self.assertEquals(caverphone('wetherilt'), 'WTRT111111')
        self.assertEquals(caverphone('wethersto'), 'WTSTA11111')
        self.assertEquals(caverphone('wetherstone'), 'WTSTN11111')
        self.assertEquals(caverphone('wethey'), 'WTA1111111')
        self.assertEquals(caverphone('wetney'), 'WTNA111111')
        self.assertEquals(caverphone('weyland'), 'WLNT111111')
        self.assertEquals(caverphone('weymouth'), 'WMT1111111')
        self.assertEquals(caverphone('whaley'), 'WLA1111111')
        self.assertEquals(caverphone('wharin'), 'WRN1111111')
        self.assertEquals(caverphone('wheatley'), 'WTLA111111')
        self.assertEquals(caverphone('wheeier'), 'WA11111111')
        self.assertEquals(caverphone('wheelan'), 'WLN1111111')
        self.assertEquals(caverphone('wheelel'), 'WLA1111111')
        self.assertEquals(caverphone('wheeler'), 'WLA1111111')
        self.assertEquals(caverphone('wheeley'), 'WLA1111111')
        self.assertEquals(caverphone('wheelwright'), 'WRT1111111')
        self.assertEquals(caverphone('whelan'), 'WLN1111111')
        self.assertEquals(caverphone('whetter'), 'WTA1111111')
        self.assertEquals(caverphone('whibe'), 'WP11111111')
        self.assertEquals(caverphone('whileley'), 'WLLA111111')
        self.assertEquals(caverphone('whineray'), 'WNRA111111')
        self.assertEquals(caverphone('whinray'), 'WNRA111111')
        self.assertEquals(caverphone('whipp'), 'WP11111111')
        self.assertEquals(caverphone('whiston'), 'WSTN111111')
        self.assertEquals(caverphone('whitaker'), 'WTKA111111')
        self.assertEquals(caverphone('whitburn'), 'WTPN111111')
        self.assertEquals(caverphone('whitcombe'), 'WTKM111111')
        self.assertEquals(caverphone('white-pars'), 'WTPS111111')
        self.assertEquals(caverphone('white-parsons'), 'WTPSNS1111')
        self.assertEquals(caverphone('white'), 'WT11111111')
        self.assertEquals(caverphone('whitefield'), 'WTFT111111')
        self.assertEquals(caverphone('whitehead'), 'WTT1111111')
        self.assertEquals(caverphone('whitehorl'), 'WTA1111111')
        self.assertEquals(caverphone('whitehorn'), 'WTN1111111')
        self.assertEquals(caverphone('whiteley'), 'WTLA111111')
        self.assertEquals(caverphone('whiteside'), 'WTST111111')
        self.assertEquals(caverphone('whitfield'), 'WTFT111111')
        self.assertEquals(caverphone('whiting'), 'WTNK111111')
        self.assertEquals(caverphone('whitley'), 'WTLA111111')
        self.assertEquals(caverphone('whitlow'), 'WTLA111111')
        self.assertEquals(caverphone('whitney'), 'WTNA111111')
        self.assertEquals(caverphone('whito'), 'WTA1111111')
        self.assertEquals(caverphone('whitson'), 'WTSN111111')
        self.assertEquals(caverphone('whittaker'), 'WTKA111111')
        self.assertEquals(caverphone('whittall'), 'WTA1111111')
        self.assertEquals(caverphone('whittet'), 'WTT1111111')
        self.assertEquals(caverphone('whitticase'), 'WTKS111111')
        self.assertEquals(caverphone('whittington'), 'WTNKTN1111')
        self.assertEquals(caverphone('whittleston'), 'WTLSTN1111')
        self.assertEquals(caverphone('whittlestone'), 'WTLSTN1111')
        self.assertEquals(caverphone('whitton'), 'WTN1111111')
        self.assertEquals(caverphone('whitty'), 'WTA1111111')
        self.assertEquals(caverphone('whvte'), 'FT11111111')
        self.assertEquals(caverphone('whyman'), 'WMN1111111')
        self.assertEquals(caverphone('whyte'), 'WT11111111')
        self.assertEquals(caverphone('wiberg'), 'WPK1111111')
        self.assertEquals(caverphone('wicks'), 'WKS1111111')
        self.assertEquals(caverphone('wicksteed'), 'WKSTT11111')
        self.assertEquals(caverphone('widdowson'), 'WTSN111111')
        self.assertEquals(caverphone('wide'), 'WT11111111')
        self.assertEquals(caverphone('widhart'), 'WTT1111111')
        self.assertEquals(caverphone('wigg'), 'WK11111111')
        self.assertEquals(caverphone('wiggins'), 'WKNS111111')
        self.assertEquals(caverphone('wight'), 'WT11111111')
        self.assertEquals(caverphone('wightman'), 'WTMN111111')
        self.assertEquals(caverphone('wiikinson'), 'WKNSN11111')
        self.assertEquals(caverphone('wikland'), 'WKLNT11111')
        self.assertEquals(caverphone('wilberfoss'), 'WPFS111111')
        self.assertEquals(caverphone('wilby'), 'WPA1111111')
        self.assertEquals(caverphone('wilcox'), 'WKK1111111')
        self.assertEquals(caverphone('wilde'), 'WT11111111')
        self.assertEquals(caverphone('wilden'), 'WTN1111111')
        self.assertEquals(caverphone('wilder'), 'WTA1111111')
        self.assertEquals(caverphone('wildey'), 'WTA1111111')
        self.assertEquals(caverphone('wildgoose'), 'WKS1111111')
        self.assertEquals(caverphone('wildie'), 'WTA1111111')
        self.assertEquals(caverphone('wilding'), 'WTNK111111')
        self.assertEquals(caverphone('wildoy'), 'WTA1111111')
        self.assertEquals(caverphone('wiles'), 'WLS1111111')
        self.assertEquals(caverphone('wiley'), 'WLA1111111')
        self.assertEquals(caverphone('wilhelmsen'), 'WMSN111111')
        self.assertEquals(caverphone('wilhelmson'), 'WMSN111111')
        self.assertEquals(caverphone('wilkeison'), 'WKSN111111')
        self.assertEquals(caverphone('wilkerson'), 'WKSN111111')
        self.assertEquals(caverphone('wilkie'), 'WKA1111111')
        self.assertEquals(caverphone('wilkin'), 'WKN1111111')
        self.assertEquals(caverphone('wilkinon'), 'WKNN111111')
        self.assertEquals(caverphone('wilkins'), 'WKNS111111')
        self.assertEquals(caverphone('wilkinson'), 'WKNSN11111')
        self.assertEquals(caverphone('will'), 'WA11111111')
        self.assertEquals(caverphone('willcocks'), 'WKKS111111')
        self.assertEquals(caverphone('willers'), 'WLS1111111')
        self.assertEquals(caverphone('willett'), 'WLT1111111')
        self.assertEquals(caverphone('william'), 'WLM1111111')
        self.assertEquals(caverphone('williame'), 'WLM1111111')
        self.assertEquals(caverphone('williams'), 'WLMS111111')
        self.assertEquals(caverphone('williamso'), 'WLMSA11111')
        self.assertEquals(caverphone('williamson'), 'WLMSN11111')
        self.assertEquals(caverphone('willianson'), 'WLNSN11111')
        self.assertEquals(caverphone('williarns'), 'WLNS111111')
        self.assertEquals(caverphone('williden'), 'WLTN111111')
        self.assertEquals(caverphone('willis'), 'WLS1111111')
        self.assertEquals(caverphone('willocks'), 'WLKS111111')
        self.assertEquals(caverphone('willon'), 'WLN1111111')
        self.assertEquals(caverphone('willox'), 'WLK1111111')
        self.assertEquals(caverphone('wills'), 'WS11111111')
        self.assertEquals(caverphone('willson'), 'WSN1111111')
        self.assertEquals(caverphone('wilmot'), 'WMT1111111')
        self.assertEquals(caverphone('wiloy'), 'WLA1111111')
        self.assertEquals(caverphone('wilson-brown'), 'WSNPRN1111')
        self.assertEquals(caverphone('wilson-pyne'), 'WSNPN11111')
        self.assertEquals(caverphone('wilson'), 'WSN1111111')
        self.assertEquals(caverphone('wilton'), 'WTN1111111')
        self.assertEquals(caverphone('wimpellny'), 'WMPNA11111')
        self.assertEquals(caverphone('wimpenny'), 'WMPNA11111')
        self.assertEquals(caverphone('winchester'), 'WNKSTA1111')
        self.assertEquals(caverphone('winchestor'), 'WNKSTA1111')
        self.assertEquals(caverphone('windelburn'), 'WNTPN11111')
        self.assertEquals(caverphone('windeler'), 'WNTLA11111')
        self.assertEquals(caverphone('winder'), 'WNTA111111')
        self.assertEquals(caverphone('winders'), 'WNTS111111')
        self.assertEquals(caverphone('windsor'), 'WNTSA11111')
        self.assertEquals(caverphone('windus'), 'WNTS111111')
        self.assertEquals(caverphone('wine'), 'WN11111111')
        self.assertEquals(caverphone('winefield'), 'WNFT111111')
        self.assertEquals(caverphone('winepress'), 'WNPRS11111')
        self.assertEquals(caverphone('wing'), 'WNK1111111')
        self.assertEquals(caverphone('wingfield'), 'WNKFT11111')
        self.assertEquals(caverphone('wingham'), 'WNM1111111')
        self.assertEquals(caverphone('winkfield'), 'WNKFT11111')
        self.assertEquals(caverphone('winn'), 'WN11111111')
        self.assertEquals(caverphone('winslade'), 'WNSLT11111')
        self.assertEquals(caverphone('winter'), 'WNTA111111')
        self.assertEquals(caverphone('winterr'), 'WNTA111111')
        self.assertEquals(caverphone('winton'), 'WNTN111111')
        self.assertEquals(caverphone('wintrup'), 'WNTRP11111')
        self.assertEquals(caverphone('wise'), 'WS11111111')
        self.assertEquals(caverphone('wisely'), 'WSLA111111')
        self.assertEquals(caverphone('wiseman'), 'WSMN111111')
        self.assertEquals(caverphone('wishart'), 'WST1111111')
        self.assertEquals(caverphone('wisnesky'), 'WSNSKA1111')
        self.assertEquals(caverphone('witchall'), 'WKA1111111')
        self.assertEquals(caverphone('witchalls'), 'WKS1111111')
        self.assertEquals(caverphone('withecomb'), 'WTKM111111')
        self.assertEquals(caverphone('withecombe'), 'WTKM111111')
        self.assertEquals(caverphone('witheford'), 'WTFT111111')
        self.assertEquals(caverphone('withell'), 'WTA1111111')
        self.assertEquals(caverphone('withelmsen'), 'WTMSN11111')
        self.assertEquals(caverphone('witherford'), 'WTFT111111')
        self.assertEquals(caverphone('withers'), 'WTS1111111')
        self.assertEquals(caverphone('withey'), 'WTA1111111')
        self.assertEquals(caverphone('withington'), 'WTNKTN1111')
        self.assertEquals(caverphone('withnell'), 'WTNA111111')
        self.assertEquals(caverphone('withy'), 'WTA1111111')
        self.assertEquals(caverphone('witley'), 'WTLA111111')
        self.assertEquals(caverphone('witt'), 'WT11111111')
        self.assertEquals(caverphone('wix'), 'WK11111111')
        self.assertEquals(caverphone('wkitty'), 'KTA1111111')
        self.assertEquals(caverphone('wlight'), 'LT11111111')
        self.assertEquals(caverphone('wlitticase'), 'LTKS111111')
        self.assertEquals(caverphone('woadhead'), 'WTT1111111')
        self.assertEquals(caverphone('wohlers'), 'WLS1111111')
        self.assertEquals(caverphone('wohlmann'), 'WMN1111111')
        self.assertEquals(caverphone('wolf'), 'WF11111111')
        self.assertEquals(caverphone('wolfe'), 'WF11111111')
        self.assertEquals(caverphone('wolfenden'), 'WFNTN11111')
        self.assertEquals(caverphone('wolfinden'), 'WFNTN11111')
        self.assertEquals(caverphone('wolgast'), 'WKST111111')
        self.assertEquals(caverphone('wolstenhol'), 'WSTNA11111')
        self.assertEquals(caverphone('wolstenholme'), 'WSTNM11111')
        self.assertEquals(caverphone('wood'), 'WT11111111')
        self.assertEquals(caverphone('woodberry'), 'WTPRA11111')
        self.assertEquals(caverphone('woodbury'), 'WTPRA11111')
        self.assertEquals(caverphone('woodfield'), 'WTFT111111')
        self.assertEquals(caverphone('woodford'), 'WTFT111111')
        self.assertEquals(caverphone('woodger'), 'WKA1111111')
        self.assertEquals(caverphone('woodham'), 'WTM1111111')
        self.assertEquals(caverphone('woodhead'), 'WTT1111111')
        self.assertEquals(caverphone('woodhill'), 'WTA1111111')
        self.assertEquals(caverphone('woodhouse'), 'WTS1111111')
        self.assertEquals(caverphone('woodifiel'), 'WTFA111111')
        self.assertEquals(caverphone('woodifield'), 'WTFT111111')
        self.assertEquals(caverphone('wooding'), 'WTNK111111')
        self.assertEquals(caverphone('woodley'), 'WTLA111111')
        self.assertEquals(caverphone('woodrow'), 'WTRA111111')
        self.assertEquals(caverphone('woods'), 'WTS1111111')
        self.assertEquals(caverphone('woodside'), 'WTST111111')
        self.assertEquals(caverphone('woodward'), 'WTWT111111')
        self.assertEquals(caverphone('wooldridge'), 'WTRK111111')
        self.assertEquals(caverphone('woolf'), 'WF11111111')
        self.assertEquals(caverphone('woolland'), 'WLNT111111')
        self.assertEquals(caverphone('woolley'), 'WLA1111111')
        self.assertEquals(caverphone('woolliams'), 'WLMS111111')
        self.assertEquals(caverphone('woolnough'), 'WNA1111111')
        self.assertEquals(caverphone('wooster'), 'WSTA111111')
        self.assertEquals(caverphone('wooton'), 'WTN1111111')
        self.assertEquals(caverphone('wootten'), 'WTN1111111')
        self.assertEquals(caverphone('wootton'), 'WTN1111111')
        self.assertEquals(caverphone('worger'), 'WKA1111111')
        self.assertEquals(caverphone('work'), 'WK11111111')
        self.assertEquals(caverphone('workman'), 'WKMN111111')
        self.assertEquals(caverphone('workn1an'), 'WKNN111111')
        self.assertEquals(caverphone('worrall'), 'WRA1111111')
        self.assertEquals(caverphone('worsdell'), 'WSTA111111')
        self.assertEquals(caverphone('worth'), 'WT11111111')
        self.assertEquals(caverphone('worthingt'), 'WTNKT11111')
        self.assertEquals(caverphone('worthingto'), 'WTNKTA1111')
        self.assertEquals(caverphone('worthington'), 'WTNKTN1111')
        self.assertEquals(caverphone('wortley'), 'WTLA111111')
        self.assertEquals(caverphone('wotherspoon'), 'WTSPN11111')
        self.assertEquals(caverphone('wragge'), 'RK11111111')
        self.assertEquals(caverphone('wraggo'), 'RKA1111111')
        self.assertEquals(caverphone('wraight'), 'RT11111111')
        self.assertEquals(caverphone('wrathall'), 'RTA1111111')
        self.assertEquals(caverphone('wrather'), 'RTA1111111')
        self.assertEquals(caverphone('wray'), 'RA11111111')
        self.assertEquals(caverphone('wreathall'), 'RTA1111111')
        self.assertEquals(caverphone('wregglesworth'), 'RKLSWT1111')
        self.assertEquals(caverphone('wren'), 'RN11111111')
        self.assertEquals(caverphone('wrenn'), 'RN11111111')
        self.assertEquals(caverphone('wrght'), 'T111111111')
        self.assertEquals(caverphone('wrigglesworth'), 'RKLSWT1111')
        self.assertEquals(caverphone('wright'), 'RT11111111')
        self.assertEquals(caverphone('wrightson'), 'RTSN111111')
        self.assertEquals(caverphone('wrignt'), 'RKNT111111')
        self.assertEquals(caverphone('wroblenski'), 'RPLNSKA111')
        self.assertEquals(caverphone('wward'), 'WT11111111')
        self.assertEquals(caverphone('wyatt'), 'WT11111111')
        self.assertEquals(caverphone('wyber'), 'WPA1111111')
        self.assertEquals(caverphone('wyborn'), 'WPN1111111')
        self.assertEquals(caverphone('wycherley'), 'WKLA111111')
        self.assertEquals(caverphone('wyinks'), 'WNKS111111')
        self.assertEquals(caverphone('wylie'), 'WLA1111111')
        self.assertEquals(caverphone('wyllie'), 'WLA1111111')
        self.assertEquals(caverphone('wyman'), 'WMN1111111')
        self.assertEquals(caverphone('wyness'), 'WNS1111111')
        self.assertEquals(caverphone('wynks'), 'WNKS111111')
        self.assertEquals(caverphone('wynn'), 'WN11111111')
        self.assertEquals(caverphone('wynne'), 'WN11111111')
        self.assertEquals(caverphone('wyse'), 'WS11111111')
        self.assertEquals(caverphone('yamm'), 'YM11111111')
        self.assertEquals(caverphone('yardley'), 'YTLA111111')
        self.assertEquals(caverphone('yarlett'), 'YLT1111111')
        self.assertEquals(caverphone('yates'), 'YTS1111111')
        self.assertEquals(caverphone('yelds'), 'YTS1111111')
        self.assertEquals(caverphone('yelland'), 'YLNT111111')
        self.assertEquals(caverphone('yemm'), 'YM11111111')
        self.assertEquals(caverphone('yeoman'), 'YMN1111111')
        self.assertEquals(caverphone('yerex'), 'YRK1111111')
        self.assertEquals(caverphone('yet'), 'YT11111111')
        self.assertEquals(caverphone('yip'), 'YP11111111')
        self.assertEquals(caverphone('york'), 'YK11111111')
        self.assertEquals(caverphone('yorstan'), 'YSTN111111')
        self.assertEquals(caverphone('yorston'), 'YSTN111111')
        self.assertEquals(caverphone('youds'), 'YTS1111111')
        self.assertEquals(caverphone('young kwong'), 'YNKWNK1111')
        self.assertEquals(caverphone('young'), 'YNK1111111')
        self.assertEquals(caverphone('youngman'), 'YNKMN11111')
        self.assertEquals(caverphone('youngson'), 'YNKSN11111')
        self.assertEquals(caverphone('yuill'), 'YA11111111')
        self.assertEquals(caverphone('zelland'), 'SLNT111111')
        self.assertEquals(caverphone('zeller'), 'SLA1111111')
        self.assertEquals(caverphone('zimmerman'), 'SMMN111111')
        self.assertEquals(caverphone('zouch'), 'SK11111111')
        self.assertEquals(caverphone('zwimpfer'), 'SWMPFA1111')

    def test_caverphone2_caversham_testset(self):
        # caversham.otago.ac.nz/files/variantNames.csv
        self.assertEquals(caverphone('abernathy'), 'APNTA11111')
        self.assertEquals(caverphone('abernethie'), 'APNTA11111')
        self.assertEquals(caverphone('abernethy'), 'APNTA11111')
        self.assertEquals(caverphone('ailen'), 'ALN1111111')
        self.assertEquals(caverphone('aldridge'), 'ATRK111111')
        self.assertEquals(caverphone('allan'), 'ALN1111111')
        self.assertEquals(caverphone('allen'), 'ALN1111111')
        self.assertEquals(caverphone('andersen'), 'ANTSN11111')
        self.assertEquals(caverphone('anderson'), 'ANTSN11111')
        self.assertEquals(caverphone('andorson'), 'ANTSN11111')
        self.assertEquals(caverphone('applegart'), 'APLKT11111')
        self.assertEquals(caverphone('applegarth'), 'APLKT11111')
        self.assertEquals(caverphone('arnal'), 'ANA1111111')
        self.assertEquals(caverphone('arnel'), 'ANA1111111')
        self.assertEquals(caverphone('bailer'), 'PLA1111111')
        self.assertEquals(caverphone('bailey'), 'PLA1111111')
        self.assertEquals(caverphone('bail'), 'PA11111111')
        self.assertEquals(caverphone('bain'), 'PN11111111')
        self.assertEquals(caverphone('baley'), 'PLA1111111')
        self.assertEquals(caverphone('ball'), 'PA11111111')
        self.assertEquals(caverphone('barclay'), 'PKLA111111')
        self.assertEquals(caverphone('barkla'), 'PKLA111111')
        self.assertEquals(caverphone('barlthrop'), 'PTRP111111')
        self.assertEquals(caverphone('barltrop'), 'PTRP111111')
        self.assertEquals(caverphone('barnett'), 'PNT1111111')
        self.assertEquals(caverphone('barratt'), 'PRT1111111')
        self.assertEquals(caverphone('barrett'), 'PRT1111111')
        self.assertEquals(caverphone('barrie'), 'PRA1111111')
        self.assertEquals(caverphone('barwick'), 'PWK1111111')
        self.assertEquals(caverphone('baylee'), 'PLA1111111')
        self.assertEquals(caverphone('bellet'), 'PLT1111111')
        self.assertEquals(caverphone('bellett'), 'PLT1111111')
        self.assertEquals(caverphone('bell'), 'PA11111111')
        self.assertEquals(caverphone('bennet'), 'PNT1111111')
        self.assertEquals(caverphone('bennett'), 'PNT1111111')
        self.assertEquals(caverphone('bennie'), 'PNA1111111')
        self.assertEquals(caverphone('bernie'), 'PNA1111111')
        self.assertEquals(caverphone('berry'), 'PRA1111111')
        self.assertEquals(caverphone('berwick'), 'PWK1111111')
        self.assertEquals(caverphone('beven'), 'PFN1111111')
        self.assertEquals(caverphone('bevin'), 'PFN1111111')
        self.assertEquals(caverphone('binnie'), 'PNA1111111')
        self.assertEquals(caverphone('birrell'), 'PRA1111111')
        self.assertEquals(caverphone('black'), 'PLK1111111')
        self.assertEquals(caverphone('blakeley'), 'PLKLA11111')
        self.assertEquals(caverphone('blakely'), 'PLKLA11111')
        self.assertEquals(caverphone('blake'), 'PLK1111111')
        self.assertEquals(caverphone('bouchor'), 'PKA1111111')
        self.assertEquals(caverphone('boutcher'), 'PKA1111111')
        self.assertEquals(caverphone('brand'), 'PRNT111111')
        self.assertEquals(caverphone('brandt'), 'PRNT111111')
        self.assertEquals(caverphone('brockie'), 'PRKA111111')
        self.assertEquals(caverphone('brock'), 'PRK1111111')
        self.assertEquals(caverphone('brooke'), 'PRK1111111')
        self.assertEquals(caverphone('brook'), 'PRK1111111')
        self.assertEquals(caverphone('browne'), 'PRN1111111')
        self.assertEquals(caverphone('brown'), 'PRN1111111')
        self.assertEquals(caverphone('bruten'), 'PRTN111111')
        self.assertEquals(caverphone('bruton'), 'PRTN111111')
        self.assertEquals(caverphone('bulger'), 'PKA1111111')
        self.assertEquals(caverphone('bull'), 'PA11111111')
        self.assertEquals(caverphone('burger'), 'PKA1111111')
        self.assertEquals(caverphone('burgess'), 'PKS1111111')
        self.assertEquals(caverphone('burnett'), 'PNT1111111')
        self.assertEquals(caverphone('buttermore'), 'PTMA111111')
        self.assertEquals(caverphone('buttimore'), 'PTMA111111')
        self.assertEquals(caverphone('calder'), 'KTA1111111')
        self.assertEquals(caverphone('caley'), 'KLA1111111')
        self.assertEquals(caverphone('callaghan'), 'KLKN111111')
        self.assertEquals(caverphone('callander'), 'KLNTA11111')
        self.assertEquals(caverphone('callender'), 'KLNTA11111')
        self.assertEquals(caverphone('callighan'), 'KLKN111111')
        self.assertEquals(caverphone('carder'), 'KTA1111111')
        self.assertEquals(caverphone('carley'), 'KLA1111111')
        self.assertEquals(caverphone('carruthers'), 'KRTS111111')
        self.assertEquals(caverphone('carside'), 'KST1111111')
        self.assertEquals(caverphone('caruthers'), 'KRTS111111')
        self.assertEquals(caverphone('case'), 'KS11111111')
        self.assertEquals(caverphone('casey'), 'KSA1111111')
        self.assertEquals(caverphone('cassells'), 'KSS1111111')
        self.assertEquals(caverphone('cassels'), 'KSS1111111')
        self.assertEquals(caverphone('cassidy'), 'KSTA111111')
        self.assertEquals(caverphone('chaplain'), 'KPLN111111')
        self.assertEquals(caverphone('chaplin'), 'KPLN111111')
        self.assertEquals(caverphone('chrisp'), 'KRSP111111')
        self.assertEquals(caverphone('chronican'), 'KRNKN11111')
        self.assertEquals(caverphone('chronichan'), 'KRNKN11111')
        self.assertEquals(caverphone('clarke'), 'KLK1111111')
        self.assertEquals(caverphone('clark'), 'KLK1111111')
        self.assertEquals(caverphone('clent'), 'KLNT111111')
        self.assertEquals(caverphone('clint'), 'KLNT111111')
        self.assertEquals(caverphone('coates'), 'KTS1111111')
        self.assertEquals(caverphone('coats'), 'KTS1111111')
        self.assertEquals(caverphone('conheady'), 'KNTA111111')
        self.assertEquals(caverphone('connell'), 'KNA1111111')
        self.assertEquals(caverphone('connolly'), 'KNLA111111')
        self.assertEquals(caverphone('conolly'), 'KNLA111111')
        self.assertEquals(caverphone('cooke'), 'KK11111111')
        self.assertEquals(caverphone('cook'), 'KK11111111')
        self.assertEquals(caverphone('corcoran'), 'KKRN111111')
        self.assertEquals(caverphone('corkran'), 'KKRN111111')
        self.assertEquals(caverphone('cornell'), 'KNA1111111')
        self.assertEquals(caverphone('cosegrove'), 'KSKRF11111')
        self.assertEquals(caverphone('cosgrove'), 'KSKRF11111')
        self.assertEquals(caverphone('coulter'), 'KTA1111111')
        self.assertEquals(caverphone('coupar'), 'KPA1111111')
        self.assertEquals(caverphone('couper'), 'KPA1111111')
        self.assertEquals(caverphone('courter'), 'KTA1111111')
        self.assertEquals(caverphone('craig'), 'KRK1111111')
        self.assertEquals(caverphone('craik'), 'KRK1111111')
        self.assertEquals(caverphone('crammond'), 'KRMNT11111')
        self.assertEquals(caverphone('cramond'), 'KRMNT11111')
        self.assertEquals(caverphone('crawford'), 'KRFT111111')
        self.assertEquals(caverphone('crawfurd'), 'KRFT111111')
        self.assertEquals(caverphone('cress'), 'KRS1111111')
        self.assertEquals(caverphone('crisp'), 'KRSP111111')
        self.assertEquals(caverphone('crosbie'), 'KRSPA11111')
        self.assertEquals(caverphone('crosby'), 'KRSPA11111')
        self.assertEquals(caverphone('crossan'), 'KRSN111111')
        self.assertEquals(caverphone('crossian'), 'KRSN111111')
        self.assertEquals(caverphone('cruse'), 'KRS1111111')
        self.assertEquals(caverphone('cubbins'), 'KPNS111111')
        self.assertEquals(caverphone('culsey'), 'KSA1111111')
        self.assertEquals(caverphone('cunhingham'), 'KNNM111111')
        self.assertEquals(caverphone('cunningham'), 'KNNM111111')
        self.assertEquals(caverphone('curran'), 'KRN1111111')
        self.assertEquals(caverphone('curren'), 'KRN1111111')
        self.assertEquals(caverphone('cursey'), 'KSA1111111')
        self.assertEquals(caverphone('daly'), 'TLA1111111')
        self.assertEquals(caverphone('davany'), 'TFNA111111')
        self.assertEquals(caverphone('daveis'), 'TFS1111111')
        self.assertEquals(caverphone('davies'), 'TFS1111111')
        self.assertEquals(caverphone('davis'), 'TFS1111111')
        self.assertEquals(caverphone('davys'), 'TFS1111111')
        self.assertEquals(caverphone('delaney'), 'TLNA111111')
        self.assertEquals(caverphone('delany'), 'TLNA111111')
        self.assertEquals(caverphone('delargey'), 'TLKA111111')
        self.assertEquals(caverphone('delargy'), 'TLKA111111')
        self.assertEquals(caverphone('dely'), 'TLA1111111')
        self.assertEquals(caverphone('denfold'), 'TNFT111111')
        self.assertEquals(caverphone('denford'), 'TNFT111111')
        self.assertEquals(caverphone('devaney'), 'TFNA111111')
        self.assertEquals(caverphone('dickison'), 'TKSN111111')
        self.assertEquals(caverphone('dickson'), 'TKSN111111')
        self.assertEquals(caverphone('dillan'), 'TLN1111111')
        self.assertEquals(caverphone('dillon'), 'TLN1111111')
        self.assertEquals(caverphone('dockworth'), 'TKWT111111')
        self.assertEquals(caverphone('dodd'), 'TT11111111')
        self.assertEquals(caverphone('donne'), 'TN11111111')
        self.assertEquals(caverphone('dougall'), 'TKA1111111')
        self.assertEquals(caverphone('dougal'), 'TKA1111111')
        self.assertEquals(caverphone('douglass'), 'TKLS111111')
        self.assertEquals(caverphone('douglas'), 'TKLS111111')
        self.assertEquals(caverphone('dreaver'), 'TRFA111111')
        self.assertEquals(caverphone('dreavor'), 'TRFA111111')
        self.assertEquals(caverphone('droaver'), 'TRFA111111')
        self.assertEquals(caverphone('duckworth'), 'TKWT111111')
        self.assertEquals(caverphone('dunne'), 'TN11111111')
        self.assertEquals(caverphone('dunn'), 'TN11111111')
        self.assertEquals(caverphone('eagan'), 'AKN1111111')
        self.assertEquals(caverphone('eagar'), 'AKA1111111')
        self.assertEquals(caverphone('eager'), 'AKA1111111')
        self.assertEquals(caverphone('easson'), 'ASN1111111')
        self.assertEquals(caverphone('egan'), 'AKN1111111')
        self.assertEquals(caverphone('eldridge'), 'ATRK111111')
        self.assertEquals(caverphone('elliis'), 'ALS1111111')
        self.assertEquals(caverphone('ellis'), 'ALS1111111')
        self.assertEquals(caverphone('emerson'), 'AMSN111111')
        self.assertEquals(caverphone('emmerson'), 'AMSN111111')
        self.assertEquals(caverphone('essson'), 'ASN1111111')
        self.assertEquals(caverphone('fahey'), 'FA11111111')
        self.assertEquals(caverphone('fahy'), 'FA11111111')
        self.assertEquals(caverphone('fail'), 'FA11111111')
        self.assertEquals(caverphone('fairbairn'), 'FPN1111111')
        self.assertEquals(caverphone('fairburn'), 'FPN1111111')
        self.assertEquals(caverphone('faithful'), 'FTFA111111')
        self.assertEquals(caverphone('faithfull'), 'FTFA111111')
        self.assertEquals(caverphone('fall'), 'FA11111111')
        self.assertEquals(caverphone('farminger'), 'FMNKA11111')
        self.assertEquals(caverphone('farry'), 'FRA1111111')
        self.assertEquals(caverphone('feil'), 'FA11111111')
        self.assertEquals(caverphone('fell'), 'FA11111111')
        self.assertEquals(caverphone('fennessey'), 'FNSA111111')
        self.assertEquals(caverphone('fennessy'), 'FNSA111111')
        self.assertEquals(caverphone('ferry'), 'FRA1111111')
        self.assertEquals(caverphone('fiddes'), 'FTS1111111')
        self.assertEquals(caverphone('fiddis'), 'FTS1111111')
        self.assertEquals(caverphone('fielden'), 'FTN1111111')
        self.assertEquals(caverphone('fielder'), 'FTA1111111')
        self.assertEquals(caverphone('findlay'), 'FNTLA11111')
        self.assertEquals(caverphone('findley'), 'FNTLA11111')
        self.assertEquals(caverphone('fitzpatric'), 'FTSPTRK111')
        self.assertEquals(caverphone('fitzpatrick'), 'FTSPTRK111')
        self.assertEquals(caverphone('fraer'), 'FRA1111111')
        self.assertEquals(caverphone('fraher'), 'FRA1111111')
        self.assertEquals(caverphone('fullarton'), 'FLTN111111')
        self.assertEquals(caverphone('fullerton'), 'FLTN111111')
        self.assertEquals(caverphone('furminger'), 'FMNKA11111')
        self.assertEquals(caverphone('gailichan'), 'KLKN111111')
        self.assertEquals(caverphone('galbraith'), 'KPRT111111')
        self.assertEquals(caverphone('gallanders'), 'KLNTS11111')
        self.assertEquals(caverphone('gallaway'), 'KLWA111111')
        self.assertEquals(caverphone('gallbraith'), 'KPRT111111')
        self.assertEquals(caverphone('gallichan'), 'KLKN111111')
        self.assertEquals(caverphone('galloway'), 'KLWA111111')
        self.assertEquals(caverphone('garcho'), 'KKA1111111')
        self.assertEquals(caverphone('garchow'), 'KKA1111111')
        self.assertEquals(caverphone('garret'), 'KRT1111111')
        self.assertEquals(caverphone('garrett'), 'KRT1111111')
        self.assertEquals(caverphone('garside'), 'KST1111111')
        self.assertEquals(caverphone('geddes'), 'KTS1111111')
        self.assertEquals(caverphone('geddis'), 'KTS1111111')
        self.assertEquals(caverphone('georgeison'), 'KKSN111111')
        self.assertEquals(caverphone('george'), 'KK11111111')
        self.assertEquals(caverphone('georgeson'), 'KKSN111111')
        self.assertEquals(caverphone('gillanders'), 'KLNTS11111')
        self.assertEquals(caverphone('gillespie'), 'KLSPA11111')
        self.assertEquals(caverphone('gillispie'), 'KLSPA11111')
        self.assertEquals(caverphone('gilmore'), 'KMA1111111')
        self.assertEquals(caverphone('gilmour'), 'KMA1111111')
        self.assertEquals(caverphone('glendining'), 'KLNTNNK111')
        self.assertEquals(caverphone('glendinning'), 'KLNTNNK111')
        self.assertEquals(caverphone('glendinnin'), 'KLNTNN1111')
        self.assertEquals(caverphone('gorge'), 'KK11111111')
        self.assertEquals(caverphone('graig'), 'KRK1111111')
        self.assertEquals(caverphone('gray'), 'KRA1111111')
        self.assertEquals(caverphone('greeves'), 'KRFS111111')
        self.assertEquals(caverphone('greig'), 'KRK1111111')
        self.assertEquals(caverphone('greves'), 'KRFS111111')
        self.assertEquals(caverphone('grey'), 'KRA1111111')
        self.assertEquals(caverphone('griffiths'), 'KRFTS11111')
        self.assertEquals(caverphone('griffths'), 'KRFTS11111')
        self.assertEquals(caverphone('grigg'), 'KRK1111111')
        self.assertEquals(caverphone('grig'), 'KRK1111111')
        self.assertEquals(caverphone('gubbins'), 'KPNS111111')
        self.assertEquals(caverphone('gulbins'), 'KPNS111111')
        self.assertEquals(caverphone('haddon'), 'ATN1111111')
        self.assertEquals(caverphone('hal'), 'AA11111111')
        self.assertEquals(caverphone('hall'), 'AA11111111')
        self.assertEquals(caverphone('hanley'), 'ANLA111111')
        self.assertEquals(caverphone('hanly'), 'ANLA111111')
        self.assertEquals(caverphone('hannagan'), 'ANKN111111')
        self.assertEquals(caverphone('hannan'), 'ANN1111111')
        self.assertEquals(caverphone('hannigan'), 'ANKN111111')
        self.assertEquals(caverphone('hanon'), 'ANN1111111')
        self.assertEquals(caverphone('harman'), 'AMN1111111')
        self.assertEquals(caverphone('hart'), 'AT11111111')
        self.assertEquals(caverphone('harty'), 'ATA1111111')
        self.assertEquals(caverphone('hatton'), 'ATN1111111')
        self.assertEquals(caverphone('hay'), 'AA11111111')
        self.assertEquals(caverphone('hayden'), 'ATN1111111')
        self.assertEquals(caverphone('healey'), 'ALA1111111')
        self.assertEquals(caverphone('healy'), 'ALA1111111')
        self.assertEquals(caverphone('helleyer'), 'ALA1111111')
        self.assertEquals(caverphone('hellyer'), 'ALA1111111')
        self.assertEquals(caverphone('henaghan'), 'ANKN111111')
        self.assertEquals(caverphone('heneghan'), 'ANKN111111')
        self.assertEquals(caverphone('herman'), 'AMN1111111')
        self.assertEquals(caverphone('hey'), 'AA11111111')
        self.assertEquals(caverphone('hill'), 'AA11111111')
        self.assertEquals(caverphone('hinde'), 'ANT1111111')
        self.assertEquals(caverphone('hobcraft'), 'APKRFT1111')
        self.assertEquals(caverphone('hobcroft'), 'APKRFT1111')
        self.assertEquals(caverphone('hocking'), 'AKNK111111')
        self.assertEquals(caverphone('hoeking'), 'AKNK111111')
        self.assertEquals(caverphone('holander'), 'ALNTA11111')
        self.assertEquals(caverphone('holdgate'), 'AKT1111111')
        self.assertEquals(caverphone('holgate'), 'AKT1111111')
        self.assertEquals(caverphone('hollander'), 'ALNTA11111')
        self.assertEquals(caverphone('home'), 'AM11111111')
        self.assertEquals(caverphone('horn'), 'AN11111111')
        self.assertEquals(caverphone('horne'), 'AN11111111')
        self.assertEquals(caverphone('howarth'), 'AWT1111111')
        self.assertEquals(caverphone('howe'), 'AA11111111')
        self.assertEquals(caverphone('howie'), 'AWA1111111')
        self.assertEquals(caverphone('howorth'), 'AWT1111111')
        self.assertEquals(caverphone('hoy'), 'AA11111111')
        self.assertEquals(caverphone('huddleston'), 'ATLSTN1111')
        self.assertEquals(caverphone('huddlestone'), 'ATLSTN1111')
        self.assertEquals(caverphone('hugget'), 'AKT1111111')
        self.assertEquals(caverphone('huggett'), 'AKT1111111')
        self.assertEquals(caverphone('hume'), 'AM11111111')
        self.assertEquals(caverphone('hunt'), 'ANT1111111')
        self.assertEquals(caverphone('hurt'), 'AT11111111')
        self.assertEquals(caverphone('hutcheson'), 'AKSN111111')
        self.assertEquals(caverphone('hutchison'), 'AKSN111111')
        self.assertEquals(caverphone('hutt'), 'AT11111111')
        self.assertEquals(caverphone('hutton'), 'ATN1111111')
        self.assertEquals(caverphone('jacobsen'), 'YKPSN11111')
        self.assertEquals(caverphone('jacobson'), 'YKPSN11111')
        self.assertEquals(caverphone('jacobs'), 'YKPS111111')
        self.assertEquals(caverphone('jaicobs'), 'YKPS111111')
        self.assertEquals(caverphone('jamieson'), 'YMSN111111')
        self.assertEquals(caverphone('jamison'), 'YMSN111111')
        self.assertEquals(caverphone('jansen'), 'YNSN111111')
        self.assertEquals(caverphone('janson'), 'YNSN111111')
        self.assertEquals(caverphone('jardine'), 'YTN1111111')
        self.assertEquals(caverphone('jeannings'), 'YNNKS11111')
        self.assertEquals(caverphone('jeffery'), 'YFRA111111')
        self.assertEquals(caverphone('jeffrey'), 'YFRA111111')
        self.assertEquals(caverphone('jelly'), 'YLA1111111')
        self.assertEquals(caverphone('jennings'), 'YNNKS11111')
        self.assertEquals(caverphone('johnstone'), 'YNSTN11111')
        self.assertEquals(caverphone('johnston'), 'YNSTN11111')
        self.assertEquals(caverphone('johns'), 'YNS1111111')
        self.assertEquals(caverphone('jolly'), 'YLA1111111')
        self.assertEquals(caverphone('jones'), 'YNS1111111')
        self.assertEquals(caverphone('jurdine'), 'YTN1111111')
        self.assertEquals(caverphone('kean'), 'KN11111111')
        self.assertEquals(caverphone('keen'), 'KN11111111')
        self.assertEquals(caverphone('keennelly'), 'KNLA111111')
        self.assertEquals(caverphone('kellan'), 'KLN1111111')
        self.assertEquals(caverphone('kennard'), 'KNT1111111')
        self.assertEquals(caverphone('kennealy'), 'KNLA111111')
        self.assertEquals(caverphone('kennedy'), 'KNTA111111')
        self.assertEquals(caverphone('kenn'), 'KN11111111')
        self.assertEquals(caverphone('killin'), 'KLN1111111')
        self.assertEquals(caverphone('kirkaldie'), 'KKTA111111')
        self.assertEquals(caverphone('kirkcaldie'), 'KKTA111111')
        self.assertEquals(caverphone('kirke'), 'KK11111111')
        self.assertEquals(caverphone('kirk'), 'KK11111111')
        self.assertEquals(caverphone('kitchen'), 'KKN1111111')
        self.assertEquals(caverphone('kitchin'), 'KKN1111111')
        self.assertEquals(caverphone('krause'), 'KRS1111111')
        self.assertEquals(caverphone('kraus'), 'KRS1111111')
        self.assertEquals(caverphone('langham'), 'LNM1111111')
        self.assertEquals(caverphone('lanham'), 'LNM1111111')
        self.assertEquals(caverphone('larson'), 'LSN1111111')
        self.assertEquals(caverphone('laughlin'), 'LLN1111111')
        self.assertEquals(caverphone('laurie'), 'LRA1111111')
        self.assertEquals(caverphone('lawrie'), 'LRA1111111')
        self.assertEquals(caverphone('lawson'), 'LSN1111111')
        self.assertEquals(caverphone('leary'), 'LRA1111111')
        self.assertEquals(caverphone('leech'), 'LK11111111')
        self.assertEquals(caverphone('leery'), 'LRA1111111')
        self.assertEquals(caverphone('leitch'), 'LK11111111')
        self.assertEquals(caverphone('lemin'), 'LMN1111111')
        self.assertEquals(caverphone('lemon'), 'LMN1111111')
        self.assertEquals(caverphone('lenihan'), 'LNN1111111')
        self.assertEquals(caverphone('lennon'), 'LNN1111111')
        self.assertEquals(caverphone('leyden'), 'LTN1111111')
        self.assertEquals(caverphone('leydon'), 'LTN1111111')
        self.assertEquals(caverphone('lister'), 'LSTA111111')
        self.assertEquals(caverphone('list'), 'LST1111111')
        self.assertEquals(caverphone('livingstone'), 'LFNKSTN111')
        self.assertEquals(caverphone('livingston'), 'LFNKSTN111')
        self.assertEquals(caverphone('lochhead'), 'LKT1111111')
        self.assertEquals(caverphone('lockhead'), 'LKT1111111')
        self.assertEquals(caverphone('loughlin'), 'LLN1111111')
        self.assertEquals(caverphone('macallum'), 'MKLM111111')
        self.assertEquals(caverphone('macaskill'), 'MKSKA11111')
        self.assertEquals(caverphone('macaulay'), 'MKLA111111')
        self.assertEquals(caverphone('macauley'), 'MKLA111111')
        self.assertEquals(caverphone('macbeath'), 'MKPT111111')
        self.assertEquals(caverphone('macdonald'), 'MKTNT11111')
        self.assertEquals(caverphone('maceewan'), 'MSWN111111')
        self.assertEquals(caverphone('macewan'), 'MSWN111111')
        self.assertEquals(caverphone('macfarlane'), 'MKFLN11111')
        self.assertEquals(caverphone('macintosh'), 'MSNTS11111')
        self.assertEquals(caverphone('mackechnie'), 'MKKNA11111')
        self.assertEquals(caverphone('mackenzie'), 'MKNSA11111')
        self.assertEquals(caverphone('mackersey'), 'MKSA111111')
        self.assertEquals(caverphone('mackersy'), 'MKSA111111')
        self.assertEquals(caverphone('maclean'), 'MKLN111111')
        self.assertEquals(caverphone('macnee'), 'MKNA111111')
        self.assertEquals(caverphone('macpherson'), 'MKFSN11111')
        self.assertEquals(caverphone('main'), 'MN11111111')
        self.assertEquals(caverphone('maley'), 'MLA1111111')
        self.assertEquals(caverphone('malladew'), 'MLTA111111')
        self.assertEquals(caverphone('maloney'), 'MLNA111111')
        self.assertEquals(caverphone('mann'), 'MN11111111')
        self.assertEquals(caverphone('marchant'), 'MKNT111111')
        self.assertEquals(caverphone('marett'), 'MRT1111111')
        self.assertEquals(caverphone('marrett'), 'MRT1111111')
        self.assertEquals(caverphone('mason'), 'MSN1111111')
        self.assertEquals(caverphone('matheson'), 'MTSN111111')
        self.assertEquals(caverphone('mathieson'), 'MTSN111111')
        self.assertEquals(caverphone('mattingle'), 'MTNKA11111')
        self.assertEquals(caverphone('mattingly'), 'MTNKLA1111')
        self.assertEquals(caverphone('mawson'), 'MSN1111111')
        self.assertEquals(caverphone('mcaulay'), 'MKLA111111')
        self.assertEquals(caverphone('mcauley'), 'MKLA111111')
        self.assertEquals(caverphone('mcauliffe'), 'MKLF111111')
        self.assertEquals(caverphone('mcauliff'), 'MKLF111111')
        self.assertEquals(caverphone('mcbeath'), 'MKPT111111')
        self.assertEquals(caverphone('mccallum'), 'MKLM111111')
        self.assertEquals(caverphone('mccarthy'), 'MKTA111111')
        self.assertEquals(caverphone('mccarty'), 'MKTA111111')
        self.assertEquals(caverphone('mccaskill'), 'MKSKA11111')
        self.assertEquals(caverphone('mccay'), 'MKA1111111')
        self.assertEquals(caverphone('mcclintock'), 'MKLNTK1111')
        self.assertEquals(caverphone('mccluskey'), 'MKLSKA1111')
        self.assertEquals(caverphone('mcclusky'), 'MKLSKA1111')
        self.assertEquals(caverphone('mccormack'), 'MKMK111111')
        self.assertEquals(caverphone('mccormacl'), 'MKMKA11111')
        self.assertEquals(caverphone('mccrorie'), 'MKRRA11111')
        self.assertEquals(caverphone('mccrory'), 'MKRRA11111')
        self.assertEquals(caverphone('mccrossan'), 'MKRSN11111')
        self.assertEquals(caverphone('mccrossin'), 'MKRSN11111')
        self.assertEquals(caverphone('mcdermott'), 'MKTMT11111')
        self.assertEquals(caverphone('mcdiarmid'), 'MKTMT11111')
        self.assertEquals(caverphone('mcdonald'), 'MKTNT11111')
        self.assertEquals(caverphone('mcdonell'), 'MKTNA11111')
        self.assertEquals(caverphone('mcdonnell'), 'MKTNA11111')
        self.assertEquals(caverphone('mcdowall'), 'MKTWA11111')
        self.assertEquals(caverphone('mcdowell'), 'MKTWA11111')
        self.assertEquals(caverphone('mcewan'), 'MSWN111111')
        self.assertEquals(caverphone('mcewen'), 'MSWN111111')
        self.assertEquals(caverphone('mcfarlane'), 'MKFLN11111')
        self.assertEquals(caverphone('mcfaull'), 'MKFA111111')
        self.assertEquals(caverphone('mcgill'), 'MKA1111111')
        self.assertEquals(caverphone('mciintyre'), 'MSNTA11111')
        self.assertEquals(caverphone('mcintosh'), 'MSNTS11111')
        self.assertEquals(caverphone('mcintyre'), 'MSNTA11111')
        self.assertEquals(caverphone('mciver'), 'MSFA111111')
        self.assertEquals(caverphone('mcivor'), 'MSFA111111')
        self.assertEquals(caverphone('mckay'), 'MKA1111111')
        self.assertEquals(caverphone('mckechnie'), 'MKKNA11111')
        self.assertEquals(caverphone('mckecknie'), 'MKKNA11111')
        self.assertEquals(caverphone('mckellar'), 'MKLA111111')
        self.assertEquals(caverphone('mckenzie'), 'MKNSA11111')
        self.assertEquals(caverphone('mcketterick'), 'MKTRK11111')
        self.assertEquals(caverphone('mckey'), 'MKA1111111')
        self.assertEquals(caverphone('mckinlay'), 'MKNLA11111')
        self.assertEquals(caverphone('mckinley'), 'MKNLA11111')
        self.assertEquals(caverphone('mckitterick'), 'MKTRK11111')
        self.assertEquals(caverphone('mclachlan'), 'MKLKLN1111')
        self.assertEquals(caverphone('mclauchlan'), 'MKLKLN1111')
        self.assertEquals(caverphone('mclauchlin'), 'MKLKLN1111')
        self.assertEquals(caverphone('mclaughlan'), 'MKLLN11111')
        self.assertEquals(caverphone('mclaughlin'), 'MKLLN11111')
        self.assertEquals(caverphone('mclean'), 'MKLN111111')
        self.assertEquals(caverphone('mcledd'), 'MKLT111111')
        self.assertEquals(caverphone('mcledowne'), 'MKLTN11111')
        self.assertEquals(caverphone('mcledowney'), 'MKLTNA1111')
        self.assertEquals(caverphone('mclellan'), 'MKLLN11111')
        self.assertEquals(caverphone('mcleod'), 'MKLT111111')
        self.assertEquals(caverphone('mclintock'), 'MKLNTK1111')
        self.assertEquals(caverphone('mcloud'), 'MKLT111111')
        self.assertEquals(caverphone('mcloughlin'), 'MKLLN11111')
        self.assertEquals(caverphone('mcmillan'), 'MKMLN11111')
        self.assertEquals(caverphone('mcmullan'), 'MKMLN11111')
        self.assertEquals(caverphone('mcmullen'), 'MKMLN11111')
        self.assertEquals(caverphone('mcnair'), 'MKNA111111')
        self.assertEquals(caverphone('mcnalty'), 'MKNTA11111')
        self.assertEquals(caverphone('mcnatty'), 'MKNTA11111')
        self.assertEquals(caverphone('mcnee'), 'MKNA111111')
        self.assertEquals(caverphone('mcneill'), 'MKNA111111')
        self.assertEquals(caverphone('mcneil'), 'MKNA111111')
        self.assertEquals(caverphone('mcnicoll'), 'MKNKA11111')
        self.assertEquals(caverphone('mcnicol'), 'MKNKA11111')
        self.assertEquals(caverphone('mcnie'), 'MKNA111111')
        self.assertEquals(caverphone('mcphail'), 'MKFA111111')
        self.assertEquals(caverphone('mcphee'), 'MKFA111111')
        self.assertEquals(caverphone('mcpherson'), 'MKFSN11111')
        self.assertEquals(caverphone('mcsweeney'), 'MKSWNA1111')
        self.assertEquals(caverphone('mcsweeny'), 'MKSWNA1111')
        self.assertEquals(caverphone('mctague'), 'MKTKA11111')
        self.assertEquals(caverphone('mctigue'), 'MKTKA11111')
        self.assertEquals(caverphone('mcvicar'), 'MKFKA11111')
        self.assertEquals(caverphone('mcvickar'), 'MKFKA11111')
        self.assertEquals(caverphone('mcvie'), 'MKFA111111')
        self.assertEquals(caverphone('meade'), 'MT11111111')
        self.assertEquals(caverphone('mead'), 'MT11111111')
        self.assertEquals(caverphone('meder'), 'MTA1111111')
        self.assertEquals(caverphone('meekin'), 'MKN1111111')
        self.assertEquals(caverphone('meighan'), 'MKN1111111')
        self.assertEquals(caverphone('melladew'), 'MLTA111111')
        self.assertEquals(caverphone('merchant'), 'MKNT111111')
        self.assertEquals(caverphone('metcalfe'), 'MTKF111111')
        self.assertEquals(caverphone('metcalf'), 'MTKF111111')
        self.assertEquals(caverphone('millar'), 'MLA1111111')
        self.assertEquals(caverphone('millea'), 'MLA1111111')
        self.assertEquals(caverphone('miller'), 'MLA1111111')
        self.assertEquals(caverphone('millie'), 'MLA1111111')
        self.assertEquals(caverphone('moffat'), 'MFT1111111')
        self.assertEquals(caverphone('moffitt'), 'MFT1111111')
        self.assertEquals(caverphone('moirison'), 'MRSN111111')
        self.assertEquals(caverphone('mokenzie'), 'MKNSA11111')
        self.assertEquals(caverphone('moloney'), 'MLNA111111')
        self.assertEquals(caverphone('molonoy'), 'MLNA111111')
        self.assertEquals(caverphone('monaghan'), 'MNKN111111')
        self.assertEquals(caverphone('monagon'), 'MNKN111111')
        self.assertEquals(caverphone('moodie'), 'MTA1111111')
        self.assertEquals(caverphone('moody'), 'MTA1111111')
        self.assertEquals(caverphone('morell'), 'MRA1111111')
        self.assertEquals(caverphone('morice'), 'MRK1111111')
        self.assertEquals(caverphone('morrell'), 'MRA1111111')
        self.assertEquals(caverphone('morrisey'), 'MRSA111111')
        self.assertEquals(caverphone('morris'), 'MRS1111111')
        self.assertEquals(caverphone('morrison'), 'MRSN111111')
        self.assertEquals(caverphone('morrissey'), 'MRSA111111')
        self.assertEquals(caverphone('muiorhead'), 'MT11111111')
        self.assertEquals(caverphone('muirhead'), 'MT11111111')
        self.assertEquals(caverphone('mulch'), 'MK11111111')
        self.assertEquals(caverphone('mulholland'), 'MLNT111111')
        self.assertEquals(caverphone('mullay'), 'MLA1111111')
        self.assertEquals(caverphone('mullholland'), 'MLNT111111')
        self.assertEquals(caverphone('mulloy'), 'MLA1111111')
        self.assertEquals(caverphone('mulqueen'), 'MKN1111111')
        self.assertEquals(caverphone('mulquin'), 'MKN1111111')
        self.assertEquals(caverphone('murdoch'), 'MTK1111111')
        self.assertEquals(caverphone('murdock'), 'MTK1111111')
        self.assertEquals(caverphone('mutch'), 'MK11111111')
        self.assertEquals(caverphone('naughton'), 'NTN1111111')
        self.assertEquals(caverphone('naumann'), 'NMN1111111')
        self.assertEquals(caverphone('neason'), 'NSN1111111')
        self.assertEquals(caverphone('nelsion'), 'NSN1111111')
        self.assertEquals(caverphone('nelson'), 'NSN1111111')
        self.assertEquals(caverphone('nesbitt'), 'NSPT111111')
        self.assertEquals(caverphone('neumann'), 'NMN1111111')
        self.assertEquals(caverphone('newall'), 'NWA1111111')
        self.assertEquals(caverphone('newell'), 'NWA1111111')
        self.assertEquals(caverphone('newlands'), 'NLNTS11111')
        self.assertEquals(caverphone('neylan'), 'NLN1111111')
        self.assertEquals(caverphone('neylon'), 'NLN1111111')
        self.assertEquals(caverphone('nichol'), 'NKA1111111')
        self.assertEquals(caverphone('nicoll'), 'NKA1111111')
        self.assertEquals(caverphone('nicol'), 'NKA1111111')
        self.assertEquals(caverphone('nisbet'), 'NSPT111111')
        self.assertEquals(caverphone('norton'), 'NTN1111111')
        self.assertEquals(caverphone('nowlands'), 'NLNTS11111')
        self.assertEquals(caverphone('o\'brian'), 'APRN111111')
        self.assertEquals(caverphone('o\'brien'), 'APRN111111')
        self.assertEquals(caverphone('ockwell'), 'AKWA111111')
        self.assertEquals(caverphone('o\'connell'), 'AKNA111111')
        self.assertEquals(caverphone('o\'connor'), 'AKNA111111')
        self.assertEquals(caverphone('ocwell'), 'AKWA111111')
        self.assertEquals(caverphone('odham'), 'ATM1111111')
        self.assertEquals(caverphone('ogilvie'), 'AKFA111111')
        self.assertEquals(caverphone('ogivie'), 'AKFA111111')
        self.assertEquals(caverphone('o\'keefe'), 'AKF1111111')
        self.assertEquals(caverphone('o\'keeffe'), 'AKF1111111')
        self.assertEquals(caverphone('oldham'), 'ATM1111111')
        self.assertEquals(caverphone('olsen'), 'ASN1111111')
        self.assertEquals(caverphone('olsien'), 'ASN1111111')
        self.assertEquals(caverphone('osmand'), 'ASMNT11111')
        self.assertEquals(caverphone('osmond'), 'ASMNT11111')
        self.assertEquals(caverphone('page'), 'PK11111111')
        self.assertEquals(caverphone('paine'), 'PN11111111')
        self.assertEquals(caverphone('pascoe'), 'PSKA111111')
        self.assertEquals(caverphone('pasco'), 'PSKA111111')
        self.assertEquals(caverphone('paterson'), 'PTSN111111')
        self.assertEquals(caverphone('patrick'), 'PTRK111111')
        self.assertEquals(caverphone('patterson'), 'PTSN111111')
        self.assertEquals(caverphone('pattison'), 'PTSN111111')
        self.assertEquals(caverphone('pattrick'), 'PTRK111111')
        self.assertEquals(caverphone('payne'), 'PN11111111')
        self.assertEquals(caverphone('peace'), 'PK11111111')
        self.assertEquals(caverphone('pearce'), 'PK11111111')
        self.assertEquals(caverphone('peebles'), 'PPLS111111')
        self.assertEquals(caverphone('pegg'), 'PK11111111')
        self.assertEquals(caverphone('peoples'), 'PPLS111111')
        self.assertEquals(caverphone('pepperell'), 'PPRA111111')
        self.assertEquals(caverphone('pepperill'), 'PPRA111111')
        self.assertEquals(caverphone('perry'), 'PRA1111111')
        self.assertEquals(caverphone('petersen'), 'PTSN111111')
        self.assertEquals(caverphone('peterson'), 'PTSN111111')
        self.assertEquals(caverphone('phimester'), 'FMSTA11111')
        self.assertEquals(caverphone('phimister'), 'FMSTA11111')
        self.assertEquals(caverphone('picket'), 'PKT1111111')
        self.assertEquals(caverphone('pickett'), 'PKT1111111')
        self.assertEquals(caverphone('pickles'), 'PKLS111111')
        self.assertEquals(caverphone('picklis'), 'PKLS111111')
        self.assertEquals(caverphone('pollock'), 'PLK1111111')
        self.assertEquals(caverphone('polloek'), 'PLK1111111')
        self.assertEquals(caverphone('polwarth'), 'PWT1111111')
        self.assertEquals(caverphone('polworth'), 'PWT1111111')
        self.assertEquals(caverphone('popperell'), 'PPRA111111')
        self.assertEquals(caverphone('powell'), 'PWA1111111')
        self.assertEquals(caverphone('power'), 'PWA1111111')
        self.assertEquals(caverphone('preston'), 'PRSTN11111')
        self.assertEquals(caverphone('priston'), 'PRSTN11111')
        self.assertEquals(caverphone('procter'), 'PRKTA11111')
        self.assertEquals(caverphone('proctor'), 'PRKTA11111')
        self.assertEquals(caverphone('pullar'), 'PLA1111111')
        self.assertEquals(caverphone('puller'), 'PLA1111111')
        self.assertEquals(caverphone('purches'), 'PKS1111111')
        self.assertEquals(caverphone('rae'), 'RA11111111')
        self.assertEquals(caverphone('ramsay'), 'RMSA111111')
        self.assertEquals(caverphone('ramsey'), 'RMSA111111')
        self.assertEquals(caverphone('ray'), 'RA11111111')
        self.assertEquals(caverphone('redder'), 'RTA1111111')
        self.assertEquals(caverphone('reed'), 'RT11111111')
        self.assertEquals(caverphone('reider'), 'RTA1111111')
        self.assertEquals(caverphone('reidle'), 'RTA1111111')
        self.assertEquals(caverphone('reid'), 'RT11111111')
        self.assertEquals(caverphone('rendel'), 'RNTA111111')
        self.assertEquals(caverphone('render'), 'RNTA111111')
        self.assertEquals(caverphone('renfree'), 'RNFRA11111')
        self.assertEquals(caverphone('renfrew'), 'RNFRA11111')
        self.assertEquals(caverphone('riddoch'), 'RTK1111111')
        self.assertEquals(caverphone('riddock'), 'RTK1111111')
        self.assertEquals(caverphone('riedle'), 'RTA1111111')
        self.assertEquals(caverphone('riley'), 'RLA1111111')
        self.assertEquals(caverphone('rilly'), 'RLA1111111')
        self.assertEquals(caverphone('robertsan'), 'RPTSN11111')
        self.assertEquals(caverphone('robertson'), 'RPTSN11111')
        self.assertEquals(caverphone('rodgerson'), 'RKSN111111')
        self.assertEquals(caverphone('rodgers'), 'RKS1111111')
        self.assertEquals(caverphone('rogerson'), 'RKSN111111')
        self.assertEquals(caverphone('rogers'), 'RKS1111111')
        self.assertEquals(caverphone('rorley'), 'RLA1111111')
        self.assertEquals(caverphone('rosenbrock'), 'RSNPRK1111')
        self.assertEquals(caverphone('rosenbrook'), 'RSNPRK1111')
        self.assertEquals(caverphone('rose'), 'RS11111111')
        self.assertEquals(caverphone('ross'), 'RS11111111')
        self.assertEquals(caverphone('routledge'), 'RTLK111111')
        self.assertEquals(caverphone('routlege'), 'RTLK111111')
        self.assertEquals(caverphone('rowley'), 'RLA1111111')
        self.assertEquals(caverphone('russell'), 'RSA1111111')
        self.assertEquals(caverphone('sanders'), 'SNTS111111')
        self.assertEquals(caverphone('sandes'), 'SNTS111111')
        self.assertEquals(caverphone('sandrey'), 'SNTRA11111')
        self.assertEquals(caverphone('sandry'), 'SNTRA11111')
        self.assertEquals(caverphone('saunders'), 'SNTS111111')
        self.assertEquals(caverphone('saxton'), 'SKTN111111')
        self.assertEquals(caverphone('scaife'), 'SKF1111111')
        self.assertEquals(caverphone('scanlan'), 'SKNLN11111')
        self.assertEquals(caverphone('scanlon'), 'SKNLN11111')
        self.assertEquals(caverphone('scarfe'), 'SKF1111111')
        self.assertEquals(caverphone('scoffeld'), 'SKFT111111')
        self.assertEquals(caverphone('scofield'), 'SKFT111111')
        self.assertEquals(caverphone('seamer'), 'SMA1111111')
        self.assertEquals(caverphone('sellar'), 'SLA1111111')
        self.assertEquals(caverphone('seller'), 'SLA1111111')
        self.assertEquals(caverphone('sexton'), 'SKTN111111')
        self.assertEquals(caverphone('seymour'), 'SMA1111111')
        self.assertEquals(caverphone('sharpe'), 'SP11111111')
        self.assertEquals(caverphone('sharp'), 'SP11111111')
        self.assertEquals(caverphone('shaw'), 'SA11111111')
        self.assertEquals(caverphone('shea'), 'SA11111111')
        self.assertEquals(caverphone('shephard'), 'SFT1111111')
        self.assertEquals(caverphone('shepherd'), 'SFT1111111')
        self.assertEquals(caverphone('sheppard'), 'SPT1111111')
        self.assertEquals(caverphone('shepperd'), 'SPT1111111')
        self.assertEquals(caverphone('sheriff'), 'SRF1111111')
        self.assertEquals(caverphone('sherriff'), 'SRF1111111')
        self.assertEquals(caverphone('sidey'), 'STA1111111')
        self.assertEquals(caverphone('sidoy'), 'STA1111111')
        self.assertEquals(caverphone('silvertsen'), 'SFTSN11111')
        self.assertEquals(caverphone('sincock'), 'SNKK111111')
        self.assertEquals(caverphone('sincok'), 'SNKK111111')
        self.assertEquals(caverphone('sivertsen'), 'SFTSN11111')
        self.assertEquals(caverphone('skeene'), 'SKN1111111')
        self.assertEquals(caverphone('skene'), 'SKN1111111')
        self.assertEquals(caverphone('slowley'), 'SLLA111111')
        self.assertEquals(caverphone('slowly'), 'SLLA111111')
        self.assertEquals(caverphone('smith'), 'SMT1111111')
        self.assertEquals(caverphone('smythe'), 'SMT1111111')
        self.assertEquals(caverphone('smyth'), 'SMT1111111')
        self.assertEquals(caverphone('spencer'), 'SPNSA11111')
        self.assertEquals(caverphone('spence'), 'SPNK111111')
        self.assertEquals(caverphone('steadman'), 'STTMN11111')
        self.assertEquals(caverphone('stedman'), 'STTMN11111')
        self.assertEquals(caverphone('stenhouse'), 'STNS111111')
        self.assertEquals(caverphone('stennouse'), 'STNS111111')
        self.assertEquals(caverphone('stephenson'), 'STFNSN1111')
        self.assertEquals(caverphone('stevenson'), 'STFNSN1111')
        self.assertEquals(caverphone('stichmann'), 'STKMN11111')
        self.assertEquals(caverphone('stickman'), 'STKMN11111')
        self.assertEquals(caverphone('stock'), 'STK1111111')
        self.assertEquals(caverphone('stook'), 'STK1111111')
        self.assertEquals(caverphone('strang'), 'STRNK11111')
        self.assertEquals(caverphone('strong'), 'STRNK11111')
        self.assertEquals(caverphone('summerell'), 'SMRA111111')
        self.assertEquals(caverphone('taverner'), 'TFNA111111')
        self.assertEquals(caverphone('tillie'), 'TLA1111111')
        self.assertEquals(caverphone('tiverner'), 'TFNA111111')
        self.assertEquals(caverphone('todd'), 'TT11111111')
        self.assertEquals(caverphone('tonar'), 'TNA1111111')
        self.assertEquals(caverphone('toner'), 'TNA1111111')
        self.assertEquals(caverphone('tonner'), 'TNA1111111')
        self.assertEquals(caverphone('tonnor'), 'TNA1111111')
        self.assertEquals(caverphone('townsend'), 'TNSNT11111')
        self.assertEquals(caverphone('townshend'), 'TNSNT11111')
        self.assertEquals(caverphone('treeweek'), 'TRWK111111')
        self.assertEquals(caverphone('tregoning'), 'TRKNNK1111')
        self.assertEquals(caverphone('tregonning'), 'TRKNNK1111')
        self.assertEquals(caverphone('trevena'), 'TRFNA11111')
        self.assertEquals(caverphone('trevenna'), 'TRFNA11111')
        self.assertEquals(caverphone('trewick'), 'TRWK111111')
        self.assertEquals(caverphone('turley'), 'TLA1111111')
        self.assertEquals(caverphone('vial'), 'FA11111111')
        self.assertEquals(caverphone('vintinner'), 'FNTNA11111')
        self.assertEquals(caverphone('vintinuer'), 'FNTNA11111')
        self.assertEquals(caverphone('wackeldine'), 'WKTN111111')
        self.assertEquals(caverphone('wackildene'), 'WKTN111111')
        self.assertEquals(caverphone('wackilden'), 'WKTN111111')
        self.assertEquals(caverphone('waghornee'), 'WKNA111111')
        self.assertEquals(caverphone('waghorne'), 'WKN1111111')
        self.assertEquals(caverphone('wallace'), 'WLK1111111')
        self.assertEquals(caverphone('wallin'), 'WLN1111111')
        self.assertEquals(caverphone('walquest'), 'WKST111111')
        self.assertEquals(caverphone('walquist'), 'WKST111111')
        self.assertEquals(caverphone('walsh'), 'WS11111111')
        self.assertEquals(caverphone('warreil'), 'WRA1111111')
        self.assertEquals(caverphone('warrell'), 'WRA1111111')
        self.assertEquals(caverphone('watsan'), 'WTSN111111')
        self.assertEquals(caverphone('watson'), 'WTSN111111')
        self.assertEquals(caverphone('welbourn'), 'WPN1111111')
        self.assertEquals(caverphone('weldon'), 'WTN1111111')
        self.assertEquals(caverphone('wellbourn'), 'WPN1111111')
        self.assertEquals(caverphone('wells'), 'WS11111111')
        self.assertEquals(caverphone('welsh'), 'WS11111111')
        self.assertEquals(caverphone('wheelan'), 'WLN1111111')
        self.assertEquals(caverphone('wheeler'), 'WLA1111111')
        self.assertEquals(caverphone('whelan'), 'WLN1111111')
        self.assertEquals(caverphone('white'), 'WT11111111')
        self.assertEquals(caverphone('whyte'), 'WT11111111')
        self.assertEquals(caverphone('wilden'), 'WTN1111111')
        self.assertEquals(caverphone('wildey'), 'WTA1111111')
        self.assertEquals(caverphone('wildoy'), 'WTA1111111')
        self.assertEquals(caverphone('willis'), 'WLS1111111')
        self.assertEquals(caverphone('willon'), 'WLN1111111')
        self.assertEquals(caverphone('willson'), 'WSN1111111')
        self.assertEquals(caverphone('wills'), 'WS11111111')
        self.assertEquals(caverphone('wilson'), 'WSN1111111')
        self.assertEquals(caverphone('wilton'), 'WTN1111111')
        self.assertEquals(caverphone('winders'), 'WNTS111111')
        self.assertEquals(caverphone('windus'), 'WNTS111111')
        self.assertEquals(caverphone('wine'), 'WN11111111')
        self.assertEquals(caverphone('winn'), 'WN11111111')
        self.assertEquals(caverphone('wooton'), 'WTN1111111')
        self.assertEquals(caverphone('wootten'), 'WTN1111111')
        self.assertEquals(caverphone('wootton'), 'WTN1111111')
        self.assertEquals(caverphone('wraight'), 'RT11111111')
        self.assertEquals(caverphone('wright'), 'RT11111111')

    def test_caverphone1(self):
        self.assertEquals(caverphone('', 1), '111111')
        self.assertEquals(caverphone('', version=1), '111111')

        # http://caversham.otago.ac.nz/files/working/ctp060902.pdf
        self.assertEquals(caverphone('David', version=1), 'TFT111')
        self.assertEquals(caverphone('Whittle', version=1), 'WTL111')


if __name__ == '__main__':
    unittest.main()
