# -*- coding: utf-8 -*-
"""abydos.phones

The phones module implements ...


Copyright 2014 by Christopher C. Little.
This file is part of Abydos.

Abydos is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Abydos is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Abydos. If not, see <http://www.gnu.org/licenses/>.
"""

from __future__ import unicode_literals
from ._compat import _unicode, _range
import unicodedata


PHONETIC_FEATURES = {'t': 0b0110101011010110101111111110111010101010101010,
                     'd': 0b0110101011010110101111111110110110101010101010,
                     's': 0b0110101011010110101111111110111010100101101010,
                     'z': 0b0110101011010110101111111110110110100101101010,
                     'ɬ': 0b0110101011010110101111111110111001100110011010,
                     'ɮ': 0b0110101011010110101111111110110110100110011010,
                     'θ': 0b0110101011010110101111111110111010100110101010,
                     'ð': 0b0110101011010110101111111110110110100110101010,
                     'ʃ': 0b0110101011011001101111111110111010100101101010,
                     'ʃʲ': 0b0110101011011001101111111110111010100101101010,
                     'ʒ': 0b0110101011011001101111111110110110100101101010,
                     'ʒʲ': 0b0110101011011001101111111110110110100101101010,
                     'c': 0b0110101011011001010110101010111010101010101010,
                     'ɟ': 0b0110101011011001010110101010110110101010101010,
                     'ç': 0b0110101011011001010110101010111010100110101010,
                     'ʝ': 0b0110101011011001010110101010110110100110101010,
                     'p': 0b0110100110101111101111111110111010101010101010,
                     'b': 0b0110100110101111101111111110110110101010101010,
                     'f': 0b0110100110101111101111111110111010100110101010,
                     'v': 0b0110100110101111101111111110110110100110101010,
                     'ɸ': 0b0110100110101111101111111110111010100110101010,
                     'β': 0b0110100110101111101111111110110110100110101010,
                     'k': 0b0110101011101111010110011010111010101010101010,
                     'ɡ': 0b0110101011101111010110011010110110101010101010,
                     'x': 0b0110101011101111010110011010111010100110101010,
                     'ɣ': 0b0110101011101111010110011010110110100110101010,
                     'q': 0b0110101011101111011010011010111010101010101010,
                     'ɢ': 0b0110101011101111011010011010110110101010101010,
                     'χ': 0b0110101011101111011010011010111010100110101010,
                     'ʁ': 0b0110101011101111011010011010110110100110101010,
                     'ʁ̝': 0b0110101011101111011010011010110110100110101010,
                     'ħ': 0b0110101011101111101111111101101010100110101010,
                     'ʕ': 0b0110101011101111101111111101101010100110101010,
                     'ʕ̝': 0b0110101011101111101111111101101010100110101010,
                     'h': 0b1010101011101111101111111110111001100110101010,
                     'ɦ': 0b1010101011101111101111111110110101100110101010,
                     'ʔ': 0b1010101011101111101111111110111010011010101010,
                     'tʃ': 0b0110101011011001010110101010111010101001100110,
                     'ʧ': 0b0110101011011001010110101010111010101001100110,
                     't͡ʃ': 0b0110101011011001010110101010111010101001100110,
                     't͜ʃ': 0b0110101011011001010110101010111010101001100110,
                     't̠ʲʃ': 0b0110101011011001010110101010111010101001100110,
                     'dʒ': 0b0110101011011001010110101010110110101001100110,
                     'ʤ': 0b0110101011011001010110101010110110101001100110,
                     'd͡ʒ': 0b0110101011011001010110101010110110101001100110,
                     'd͜ʒ': 0b0110101011011001010110101010110110101001100110,
                     'd̠ʲʒ': 0b0110101011011001010110101010110110101001100110,
                     'ts': 0b0110101011010110101111111110111010101001100110,
                     'ʦ': 0b0110101011010110101111111110111010101001100110,
                     't͡s': 0b0110101011010110101111111110111010101001100110,
                     't͜s': 0b0110101011010110101111111110111010101001100110,
                     'dz': 0b0110101011010110101111111110110110101001100110,
                     'ʣ': 0b0110101011010110101111111110110110101001100110,
                     'd͡z': 0b0110101011010110101111111110110110101001100110,
                     'd͜z': 0b0110101011010110101111111110110110101001100110,
                     'kx': 0b0110101011101111010110011010111010101010100110,
                     'k͡x': 0b0110101011101111010110011010111010101010100110,
                     'ɡɣ': 0b0110101011101111010110011010110110101010100110,
                     'g͡ɣ': 0b0110101011101111010110011010110110101010100110,
                     'ɡ͡ɣ': 0b0110101011101111010110011010110110101010100110,
                     'gɣ': 0b0110101011101111010110011010110110101010100110,
                     'pf': 0b0110100110101111101111111110111010101001100110,
                     'm': 0b0101100110101111101111111110110110101010101001,
                     'n': 0b0101101011010110101111111110110110101010101001,
                     'ŋ': 0b0101101011101111010110011010110110101010101001,
                     'ɳ': 0b0101101011011010011010101010110110101010101001,
                     'ɲ': 0b0101101011101111010110101010110110101010101001,
                     'ɴ': 0b0101101011101111011010011010110110101010101001,
                     'l': 0b0101101011010110101111111110110110100110011010,
                     'ʎ': 0b0101101011101111010110101010110110100110011010,
                     'r': 0b0101101011010110101111111110110110100110101010,
                     'ɹ': 0b0101101011010110101111111110110110100110101010,
                     'ð̠˕': 0b0101101011010110101111111110110110100110101010,
                     'ʀ': 0b0101101011101111011010011010110110100110101010,
                     'j': 0b1001100110101111010110101010110110100110101010,
                     'i̯': 0b1001100110101111010110101010110110100110101010,
                     'w': 0b1001100101101111010110011010110110100110101010,
                     'u̯': 0b1001100101101111010110011010110110100110101010,
                     'ɥ': 0b1001100101101111010110101010110110100110101010,
                     'jʷ': 0b1001100101101111010110101010110110100110101010,
                     'ɰ': 0b1001100110101111010110011010110110100110101010,
                     'ɣ̞': 0b1001100110101111010110011010110110100110101010,
                     'i': 0b1001010110101111010110100101010110100110101010,
                     'ɪ': 0b1001010110101111010110101001100110100110101010,
                     'u': 0b1001010101101111010110010101010110100110101010,
                     'ʊ': 0b1001010101101111010110011001100110100110101010,
                     'ɷ': 0b1001010101101111010110011001100110100110101010,
                     'e': 0b1001010110101111011010100101010110100110101010,
                     'ɛ': 0b1001010110101111011010101001100110100110101010,
                     'o': 0b1001010101101111011010010101010110100110101010,
                     'ɔ': 0b1001010101101111011010011001100110100110101010,
                     'a': 0b1001010110101111011001101001100110100110101010,
                     'a̟': 0b1001010110101111011001101001100110100110101010,
                     'æ̞': 0b1001010110101111011001101001100110100110101010,
                     'æ': 0b1001010110101111011001100101100110100110101010,
                     'y': 0b1001010101101111010110100101010110100110101010,
                     'ʏ': 0b1001010101101111010110101001100110100110101010,
                     'ø': 0b1001010101101111011010100101010110100110101010,
                     'œ': 0b1001010110101111011010101001100110100110101010,
                     'ə': 0b1001010101101111011010011001100110100110101010,
                     'ɯ': 0b1001010101101111010110010101100110100110101010,
                     'kw': 0b0110100101101111010110011010111010101010101010,
                     'gw': 0b0110100101101111010110011010110110101010101010}


FEATURE_MASK = {'consonantal': 0b1100000000000000000000000000000000000000000000,
                'sonorant': 0b0011000000000000000000000000000000000000000000,
                'syllabic': 0b0000110000000000000000000000000000000000000000,
                'labial': 0b0000001100000000000000000000000000000000000000,
                'round': 0b0000000011000000000000000000000000000000000000,
                'coronal': 0b0000000000110000000000000000000000000000000000,
                'anterior': 0b0000000000001100000000000000000000000000000000,
                'distributed': 0b0000000000000011000000000000000000000000000000,
                'dorsal': 0b0000000000000000110000000000000000000000000000,
                'high': 0b0000000000000000001100000000000000000000000000,
                'low': 0b0000000000000000000011000000000000000000000000,
                'back': 0b0000000000000000000000110000000000000000000000,
                'tense': 0b0000000000000000000000001100000000000000000000,
                'pharyngeal': 0b0000000000000000000000000011000000000000000000,
                'ATR': 0b0000000000000000000000000000110000000000000000,
                'voice': 0b0000000000000000000000000000001100000000000000,
                'spread_glottis':
                0b0000000000000000000000000000000011000000000000,
                'constricted_glottis':
                0b0000000000000000000000000000000000110000000000,
                'continuant': 0b0000000000000000000000000000000000001100000000,
                'strident': 0b0000000000000000000000000000000000000011000000,
                'lateral': 0b0000000000000000000000000000000000000000110000,
                'delayed_release':
                0b0000000000000000000000000000000000000000001100,
                'nasal': 0b0000000000000000000000000000000000000000000011}


def ipa_to_features(ipa):
    """Return the feature representation (as a list of ints) of one or more
    phones

    Arguments:
    ipa -- the IPA representation of a phone or series of phones
    """
    features = []
    pos = 0
    ipa = unicodedata.normalize('NFC', _unicode(ipa.lower()))

    maxsymlen = max([len(_) for _ in PHONETIC_FEATURES.keys()])

    while pos < len(ipa):
        found_match = False
        for i in _range(maxsymlen, 0, -1):
            if pos+i-1 <= len(ipa) and ipa[pos:pos+i] in PHONETIC_FEATURES:
                features.append(PHONETIC_FEATURES[ipa[pos:pos+i]])
                pos += i
                found_match = True

        if not found_match:
            features.append(-1)
            pos += 1

    return features


def has_feature(vector, feature, binary=False):
    """Returns a list of ints representing presents/absence/neutrality with
    respect to a particular phonetic feature

    Arguments:
    vector -- a tuple or list of ints representing the phonetic features of a
        phone (such as is returned by the ipa_to_features function
    feature -- a feature name from the set:
        'consonantal', 'sonorant', 'syllabic', 'labial', 'round', 'coronal',
        'anterior', 'distributed', 'dorsal', 'high', 'low', 'back', 'tense',
        'pharyngeal', 'ATR', 'voice', 'spread_glottis', 'constricted_glottis',
        'continuant', 'strident', 'lateral', 'delayed_release', 'nasal'
    binary -- if False, -1, 0, & 1 represent -, 0, & +
              if True, only binary oppositions are allowed:
              0 & 1 represent - & + and 0s are mapped to -
    """
    if feature not in FEATURE_MASK:
        raise AttributeError("feature must be one of: 'consonantal', \
'sonorant', 'syllabic', 'labial', 'round', 'coronal', 'anterior', \
'distributed', 'dorsal', 'high', 'low', 'back', 'tense', 'pharyngeal', 'ATR', \
'voice', 'spread_glottis', 'constricted_glottis', 'continuant', 'strident', \
'lateral', 'delayed_release', 'nasal'")

    # each feature mask contains two bits, one each for - and +
    mask = FEATURE_MASK[feature]
    # the lower bit represents +
    pos_mask = mask >> 1
    retvec = []
    for char in vector:
        if char < 0:
            retvec.append(float('NaN'))
        else:
            masked = char & mask
            if masked == mask:
                retvec.append(0) # 0
            elif masked & pos_mask:
                retvec.append(1) # +
            elif binary:
                retvec.append(0) # -
            else:
                retvec.append(-1) # -

    return retvec
